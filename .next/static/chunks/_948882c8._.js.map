{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/license-rules.ts"],"sourcesContent":["// Patterns derived from Microsoft Purview (2024-08-19) + ICBC 8-digit update.\n// https://learn.microsoft.com/en-us/purview/sit-defn-canada-drivers-license-number\n// https://www.icbc.com/about-icbc/newsroom/2023-feb06-DLnumbers\ntype Rule = {\n  // Replace typed letters/digits with mask (we add hyphens/spaces)\n  format: (raw: string) => string;\n  // Acceptable normalized pattern (strip hyphens/spaces before testing)\n  test: (normalized: string) => boolean;\n};\n\nfunction onlyAZ09(s: string) {\n  return s.toUpperCase().replace(/[^A-Z0-9]/g, \"\");\n}\nfunction stripSep(s: string) {\n  return s.replace(/[\\s-]/g, \"\");\n}\n// chunk helper was used in previous rules; removed after MB rule update\n\nexport const caRules: Record<string, Rule> = {\n  // Alberta: 6 digits - 3 digits OR 5-9 digits (Purview). We'll normalize to 9 digits or 6-3 display.\n  \"CA-AB\": {\n    format: (raw) => {\n      const s = raw.replace(/\\D/g, \"\").slice(0, 9);\n      return s.length > 6 ? `${s.slice(0, 6)}-${s.slice(6)}` : s;\n    },\n    test: (n) => /^\\d{9}$/.test(n) || /^\\d{5,9}$/.test(n),\n  },\n  // BC: historically 7 digits; since 2023, 8 digits permitted.\n  \"CA-BC\": {\n    format: (raw) => raw.replace(/\\D/g, \"\").slice(0, 8),\n    test: (n) => /^\\d{7,8}$/.test(n),\n  },\n  // CA-MB: display as 2-2-2-6 (e.g., DA-GG-UV-S057NT), store alnum only (12 chars typical).\n  \"CA-MB\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw).slice(0, 12);\n      // group 2-2-2-6\n      if (!s) return \"\";\n      const a = s.slice(0, 2),\n        b = s.slice(2, 4),\n        c = s.slice(4, 6),\n        d = s.slice(6);\n      return [a, b, c, d].filter(Boolean).join(\"-\");\n    },\n    // Canonical 12 alphanumerics\n    test: (n) => /^[A-Z0-9]{12}$/.test(n),\n  },\n  // New Brunswick: 5–7 digits\n  \"CA-NB\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 7), test: (n) => /^\\d{5,7}$/.test(n) },\n  // Newfoundland & Labrador: 1 letter + 9 digits\n  \"CA-NL\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw);\n      return (s.slice(0, 1) + s.slice(1, 10)).toUpperCase();\n    },\n    test: (n) => /^[A-Z]\\d{9}$/.test(n),\n  },\n  // Nova Scotia: Purview shows letter-heavy pattern; accept 14-char mixed alnum.\n  \"CA-NS\": {\n    format: (raw) => onlyAZ09(raw).slice(0, 14),\n    test: (n) => /^[A-Z0-9]{6,14}$/.test(n),\n  },\n  // Ontario: letter + 4 digits + 5 digits + 5 digits (display with hyphens)\n  \"CA-ON\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw).slice(0, 14); // A#### ##### #####\n      const a = s.slice(0, 1),\n        b = s.slice(1, 5),\n        c = s.slice(5, 10),\n        d = s.slice(10, 15);\n      return [a + b, c, d].filter(Boolean).join(\"-\");\n    },\n    test: (n) => /^[A-Z]\\d{14}$/.test(n),\n  },\n  // Prince Edward Island: 5–6 digits\n  \"CA-PE\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 6), test: (n) => /^\\d{5,6}$/.test(n) },\n  // Quebec: 1 letter + 12 digits\n  \"CA-QC\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw);\n      return (s.slice(0, 1) + s.slice(1, 13)).toUpperCase();\n    },\n    test: (n) => /^[A-Z]\\d{12}$/.test(n),\n  },\n  // Saskatchewan: 8 digits\n  \"CA-SK\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 8), test: (n) => /^\\d{8}$/.test(n) },\n  // Territories & others (fallback): allow 5–15 alphanumerics\n  \"CA-DEFAULT\": { format: (r) => onlyAZ09(r).slice(0, 15), test: (n) => /^[A-Z0-9]{5,15}$/.test(n) },\n};\n\nexport function formatLicence(jurisdiction: string, input: string) {\n  const fallback = caRules[\"CA-DEFAULT\"] as Rule;\n  const rule = (caRules[jurisdiction] ?? fallback) as Rule;\n  return rule.format(input);\n}\nexport function isValidLicence(jurisdiction: string, input: string) {\n  const fallback = caRules[\"CA-DEFAULT\"] as Rule;\n  const rule = (caRules[jurisdiction] ?? fallback) as Rule;\n  return rule.test(stripSep(input.toUpperCase()));\n}\nexport function normalizedLicence(input: string) {\n  return stripSep(input.toUpperCase());\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/postal.ts"],"sourcesContent":["export function detectCA(postalRaw: string): { ok: boolean; normalized?: string; province?: string } {\n  const s = postalRaw.toUpperCase().replace(/\\s+/g, \"\");\n  const re = /^[ABCEGHJ-NPRSTVXY]\\d[A-Z]\\d[A-Z]\\d$/; // Canada Post\n  if (!re.test(s)) return { ok: false };\n  const norm = `${s.slice(0, 3)} ${s.slice(3)}`;\n  const first = s.charAt(0);\n  const PROV: Record<string, string> = {\n    A: \"NL\",\n    B: \"NS\",\n    C: \"PE\",\n    E: \"NB\",\n    G: \"QC\",\n    H: \"QC\",\n    J: \"QC\",\n    K: \"ON\",\n    L: \"ON\",\n    M: \"ON\",\n    N: \"ON\",\n    P: \"ON\",\n    R: \"MB\",\n    S: \"SK\",\n    T: \"AB\",\n    V: \"BC\",\n    Y: \"YT\",\n    X: \"NT\", // Note: NU also uses X\n  };\n  const province = PROV[first] ?? undefined;\n  return { ok: true, normalized: norm, province };\n}\n\nexport function isUSZip(raw: string) {\n  return /^\\d{5}(-\\d{4})?$/.test(raw.trim());\n}\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,SAAS,SAAiB;IACxC,MAAM,IAAI,UAAU,WAAW,GAAG,OAAO,CAAC,QAAQ;IAClD,MAAM,KAAK,wCAAwC,cAAc;IACjE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO;QAAE,IAAI;IAAM;IACpC,MAAM,OAAO,AAAC,GAAmB,OAAjB,EAAE,KAAK,CAAC,GAAG,IAAG,KAAc,OAAX,EAAE,KAAK,CAAC;IACzC,MAAM,QAAQ,EAAE,MAAM,CAAC;IACvB,MAAM,OAA+B;QACnC,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACL;QACiB;IAAjB,MAAM,WAAW,CAAA,cAAA,IAAI,CAAC,MAAM,cAAX,yBAAA,cAAe;IAChC,OAAO;QAAE,IAAI;QAAM,YAAY;QAAM;IAAS;AAChD;AAEO,SAAS,QAAQ,GAAW;IACjC,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI;AACzC","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/phone-format.ts"],"sourcesContent":["import { AsYouType, parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nexport function formatPhoneForDisplay(input: string, defaultCountry?: \"CA\" | \"US\") {\n  const ayt = new AsYouType(defaultCountry);\n  return ayt.input(input);\n}\nexport function toE164(input: string, defaultCountry?: \"CA\" | \"US\") {\n  const p = parsePhoneNumberFromString(input, defaultCountry);\n  return p?.isValid() ? p.number : null; // E.164 or null\n}\n\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAEO,SAAS,sBAAsB,KAAa,EAAE,cAA4B;IAC/E,MAAM,MAAM,IAAI,sPAAS,CAAC;IAC1B,OAAO,IAAI,KAAK,CAAC;AACnB;AACO,SAAS,OAAO,KAAa,EAAE,cAA4B;IAChE,MAAM,IAAI,IAAA,gVAA0B,EAAC,OAAO;IAC5C,OAAO,CAAA,cAAA,wBAAA,EAAG,OAAO,MAAK,EAAE,MAAM,GAAG,MAAM,gBAAgB;AACzD","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/license-classes.ts"],"sourcesContent":["export const CA_CLASSES: Record<string, string[]> = {\n  \"CA-MB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-ON\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"M\"],\n  \"CA-BC\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\n  \"CA-AB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-SK\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-QC\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-NB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-NL\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-NS\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-PE\": [\"1\", \"2\", \"3\", \"4\", \"5\"],\n};\n\nexport function classesFor(jurisdiction: string): string[] {\n  return CA_CLASSES[jurisdiction] ?? [];\n}\n\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,aAAuC;IAClD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACjD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACjD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;KAAI;AACpC;AAEO,SAAS,WAAW,YAAoB;QACtC;IAAP,OAAO,CAAA,2BAAA,UAAU,CAAC,aAAa,cAAxB,sCAAA,2BAA4B,EAAE;AACvC","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/passport/patterns.ts"],"sourcesContent":["export type PassportPattern = {\n  re: RegExp;\n  maxLen?: number;\n  minLen?: number;\n  hint: string;\n};\n\n// Canonical normalizer: uppercase and strip spaces/hyphens/dots\nexport function canon(s: string): string {\n  return (s || \"\").toUpperCase().replace(/[\\s\\-.]/g, \"\");\n}\n\n// Country-specific patterns (initial coverage + expand as needed)\nexport const PASSPORT: Record<string, PassportPattern> = {\n  CA: { re: /^[A-Z]{2}\\d{6}$/, minLen: 8, maxLen: 8, hint: \"AA123456\" },\n  US: { re: /^([A-Z]\\d{8}|\\d{9})$/, minLen: 9, maxLen: 9, hint: \"A12345678 or 123456789\" },\n  IN: { re: /^[A-Z]\\d{7}$/, minLen: 8, maxLen: 8, hint: \"A1234567\" },\n  PH: { re: /^([A-Z]\\d{6}|[A-Z]{2}\\d{6,7}|[A-Z]\\d{7}[A-Z])$/, minLen: 7, maxLen: 9, hint: \"P1234567 / AB123456 / AB1234567\" },\n  GB: { re: /^\\d{9}$/, minLen: 9, maxLen: 9, hint: \"123456789\" },\n  PK: { re: /^[A-Z]{2}\\d{7}$/, minLen: 9, maxLen: 9, hint: \"AB1234567\" },\n  BD: { re: /^[A-Z]\\d{7}$/, minLen: 8, maxLen: 8, hint: \"A1234567\" },\n  NG: { re: /^[A-Z]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"A12345678\" },\n  CN: { re: /^[EGDSP]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"E12345678\" },\n  MX: { re: /^[A-Z]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"A12345678\" },\n};\n\n// Fallback for countries without a specific rule: 6–10 alphanumerics\nexport const FALLBACK: PassportPattern = {\n  re: /^[A-Z0-9]{6,10}$/,\n  minLen: 6,\n  maxLen: 10,\n  hint: \"6–10 letters/digits\",\n};\n\n"],"names":[],"mappings":";;;;;;;;AAQO,SAAS,MAAM,CAAS;IAC7B,OAAO,CAAC,KAAK,EAAE,EAAE,WAAW,GAAG,OAAO,CAAC,YAAY;AACrD;AAGO,MAAM,WAA4C;IACvD,IAAI;QAAE,IAAI;QAAmB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACpE,IAAI;QAAE,IAAI;QAAwB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAyB;IACvF,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACjE,IAAI;QAAE,IAAI;QAAkD,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAkC;IAC1H,IAAI;QAAE,IAAI;QAAW,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IAC7D,IAAI;QAAE,IAAI;QAAmB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IACrE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACjE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IAClE,IAAI;QAAE,IAAI;QAAkB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IACpE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;AACpE;AAGO,MAAM,WAA4B;IACvC,IAAI;IACJ,QAAQ;IACR,QAAQ;IACR,MAAM;AACR","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/countries.ts"],"sourcesContent":["import countries from \"i18n-iso-countries\";\nimport en from \"i18n-iso-countries/langs/en.json\";\n\n// i18n-iso-countries locale JSON typing workaround\ntype LocaleData = { locale: string; countries: Record<string, string> };\ncountries.registerLocale(en as unknown as LocaleData);\n\nexport type Country = { code: string; name: string };\n\nexport function allCountries(): Country[] {\n  const names = countries.getNames(\"en\", { select: \"official\" }) as Record<string, string>;\n  return Object.entries(names)\n    .map(([code, name]) => ({ code, name }))\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n\nexport function isCountry(code?: string): boolean {\n  if (!code) return false;\n  try {\n    return Boolean(countries.alpha2ToNumeric(code.toUpperCase()))\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAIA,qOAAS,CAAC,cAAc,CAAC,gNAAE;AAIpB,SAAS;IACd,MAAM,QAAQ,qOAAS,CAAC,QAAQ,CAAC,MAAM;QAAE,QAAQ;IAAW;IAC5D,OAAO,OAAO,OAAO,CAAC,OACnB,GAAG,CAAC;YAAC,CAAC,MAAM,KAAK;eAAM;YAAE;YAAM;QAAK;OACpC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;AAC/C;AAEO,SAAS,UAAU,IAAa;IACrC,IAAI,CAAC,MAAM,OAAO;IAClB,IAAI;QACF,OAAO,QAAQ,qOAAS,CAAC,eAAe,CAAC,KAAK,WAAW;IAC3D,EAAE,UAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/passport/validate.ts"],"sourcesContent":["import { canon, PASSPORT, FALLBACK, type PassportPattern } from \"./patterns\";\nimport { isCountry } from \"@/lib/countries\";\n\nexport function passportPatternFor(country?: string): PassportPattern {\n  const code = (country || \"\").toUpperCase();\n  if (!isCountry(code)) return FALLBACK;\n  return PASSPORT[code] ?? FALLBACK;\n}\n\nexport function isValidPassport(country: string | undefined, value: string): boolean {\n  const pat = passportPatternFor(country);\n  return pat.re.test(canon(value));\n}\n\nexport function normalizePassport(value: string): string {\n  return canon(value);\n}\n\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAEO,SAAS,mBAAmB,OAAgB;IACjD,MAAM,OAAO,CAAC,WAAW,EAAE,EAAE,WAAW;IACxC,IAAI,CAAC,IAAA,gIAAS,EAAC,OAAO,OAAO,0IAAQ;QAC9B;IAAP,OAAO,CAAA,iBAAA,0IAAQ,CAAC,KAAK,cAAd,4BAAA,iBAAkB,0IAAQ;AACnC;AAEO,SAAS,gBAAgB,OAA2B,EAAE,KAAa;IACxE,MAAM,MAAM,mBAAmB;IAC/B,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,IAAA,uIAAK,EAAC;AAC3B;AAEO,SAAS,kBAAkB,KAAa;IAC7C,OAAO,IAAA,uIAAK,EAAC;AACf","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/register-schemas.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { isValidLicence, normalizedLicence } from \"@/lib/license-rules\";\nimport { detectCA, isUSZip } from \"@/lib/postal\";\nimport { toE164 } from \"@/lib/phone-format\";\nimport { classesFor } from \"@/lib/license-classes\";\nimport { passportPatternFor, isValidPassport, normalizePassport } from \"@/lib/passport/validate\";\nimport { isCountry } from \"@/lib/countries\";\n\nconst dateISO = z.string().refine((v) => /^\\d{4}-\\d{2}-\\d{2}$/.test(v), \"Use YYYY-MM-DD\");\n\nexport const RegisterSchema = z\n  .object({\n    // Names (required)\n    givenName: z.string().min(1, \"Enter given name\").max(60),\n    surname: z.string().min(1, \"Enter surname\").max(60),\n    middleName: z.string().optional(),\n    givenNameKey: z.string().optional(),\n    surnameKey: z.string().optional(),\n\n    // Jurisdiction & licence (required)\n    jurisdiction: z.enum(\n      [\"CA-AB\", \"CA-BC\", \"CA-MB\", \"CA-NB\", \"CA-NL\", \"CA-NS\", \"CA-ON\", \"CA-PE\", \"CA-QC\", \"CA-SK\"],\n      { message: \"Select issuing authority\" },\n    ),\n    licenseNo: z.string().min(3, \"Enter licence number\"),\n    licenseClass: z.string().min(1, \"Enter class\").max(5),\n    airBrake: z.boolean().optional(),\n\n    licenseExpiry: dateISO,\n    dob: dateISO,\n    gender: z.enum([\"Male\", \"Female\", \"Non-binary\", \"Prefer not to say\"]).optional(),\n\n    // Contact\n    email: z.string().email(),\n    phone: z.string().min(7),\n    phoneCountry: z.enum([\"CA\", \"US\"]).default(\"CA\"),\n\n    // Address (postal required; others optional)\n    address1: z.string().optional(),\n    address2: z.string().optional(),\n    city: z.string().optional(),\n    region: z.string().optional(),\n    postal: z.string().min(3, \"Enter postal/ZIP\"),\n    country: z.string().optional(),\n\n    // Status wizard\n    citizenship: z.enum([\"CA\", \"US\", \"Other\"]).default(\"CA\"),\n    residencyCA: z.enum([\"Citizen\", \"PR\", \"Work Permit\", \"Study Permit\", \"Visitor\"]).default(\"Citizen\"),\n    prNumber: z.string().optional(),\n    prExpiry: dateISO.optional(),\n    permitType: z.string().optional(),\n    permitExpiry: dateISO.optional(),\n    uci: z.string().optional(),\n    passportCountry: z.string().optional(),\n    passportNumber: z.string().optional(),\n    passportExpiry: dateISO.optional(),\n\n    englishLevel: z.enum([\"Basic\", \"Conversational\", \"Fluent\", \"Native\"]),\n    otherLanguages: z\n      .array(\n        z.object({\n          lang: z.string().min(2),\n          level: z.enum([\"Basic\", \"Conversational\", \"Fluent\", \"Native\"]),\n        }),\n      )\n      .max(10)\n      .optional(),\n\n    work: z\n      .array(\n        z.object({\n          company: z.string().optional(),\n          role: z.string().optional(),\n          start: dateISO.optional(),\n          end: dateISO.optional(),\n        }),\n      )\n      .max(10)\n      .optional(),\n\n    consentAbstract: z.boolean().refine((v) => v === true, { message: \"Consent is required\" }),\n    consentName: z.string().min(2, \"Type your name to sign\"),\n    consentDate: dateISO,\n    certifyAccurate: z.boolean().refine((v) => v === true, { message: \"You must certify accuracy\" }),\n\n    // Documents\n    docLicenseFront: z.instanceof(File).optional(),\n    docLicenseBack: z.instanceof(File).optional(),\n    docPassport: z.instanceof(File).optional(),\n    docPR: z.instanceof(File).optional(),\n    docPermit: z.instanceof(File).optional(),\n  })\n  .superRefine((v, ctx) => {\n    // Age >= 16, expiry >= today\n    const today = new Date();\n    const yyyy = today.getFullYear();\n    const mm = today.getMonth();\n    const dd = today.getDate();\n    const minDob = new Date(yyyy - 16, mm, dd);\n    const dob = new Date(v.dob);\n    const exp = new Date(v.licenseExpiry);\n    if (isNaN(dob.getTime()) || dob > minDob)\n      ctx.addIssue({ code: \"custom\", path: [\"dob\"], message: \"Driver must be at least 16 years old\" });\n    if (isNaN(exp.getTime()) || exp < new Date(yyyy, mm, dd))\n      ctx.addIssue({ code: \"custom\", path: [\"licenseExpiry\"], message: \"Expiry must be in the future\" });\n\n    // Licence mask by jurisdiction\n    if (!isValidLicence(v.jurisdiction, v.licenseNo)) {\n      ctx.addIssue({ code: \"custom\", path: [\"licenseNo\"], message: \"Number doesn’t match jurisdiction format\" });\n    }\n    // Licence class allowed for jurisdiction\n    const allowed = classesFor(v.jurisdiction);\n    if (allowed.length > 0 && !allowed.includes(v.licenseClass)) {\n      ctx.addIssue({ code: \"custom\", path: [\"licenseClass\"], message: `Select a valid class for ${v.jurisdiction}` });\n    }\n\n    // Phone → must parse to E.164\n    if (!toE164(v.phone, v.phoneCountry)) {\n      ctx.addIssue({ code: \"custom\", path: [\"phone\"], message: \"Enter a valid phone number\" });\n    }\n\n    // Postal logic\n    const ca = detectCA(v.postal);\n    if (ca.ok) {\n      // ok\n    } else if (!isUSZip(v.postal)) {\n      ctx.addIssue({ code: \"custom\", path: [\"postal\"], message: \"Enter a valid Canadian postal code or US ZIP\" });\n    }\n\n    // Status wizard rules\n    if (v.citizenship === \"CA\") {\n      if (v.residencyCA !== \"Citizen\") {\n        ctx.addIssue({ code: \"custom\", path: [\"residencyCA\"], message: \"Canadian citizens must select Citizen\" });\n      }\n    } else {\n      // Non-Canadian → passport required for all residencies\n      (\"passportCountry,passportNumber,passportExpiry\".split(\",\") as string[]).forEach((k) => {\n        const rec = v as unknown as Record<string, unknown>;\n        const val = rec[k];\n        if (!val || (typeof val === \"string\" && !val.trim())) ctx.addIssue({ code: \"custom\", path: [k], message: \"Required\" });\n      });\n      if (v.passportCountry && !isCountry(v.passportCountry)) {\n        ctx.addIssue({ code: \"custom\", path: [\"passportCountry\"], message: \"Select a valid country\" });\n      }\n      if (v.passportCountry && v.passportNumber && !isValidPassport(v.passportCountry, v.passportNumber)) {\n        const pat = passportPatternFor(v.passportCountry);\n        ctx.addIssue({ code: \"custom\", path: [\"passportNumber\"], message: `Format doesn’t match (${pat.hint})` });\n      }\n      // Permits need extra fields\n      if ([\"Work Permit\", \"Study Permit\"].includes(v.residencyCA)) {\n        (\"permitType,permitExpiry\".split(\",\") as string[]).forEach((k) => {\n          const rec = v as unknown as Record<string, unknown>;\n          const val = rec[k];\n          if (!val || (typeof val === \"string\" && !val.trim())) ctx.addIssue({ code: \"custom\", path: [k], message: \"Required\" });\n        });\n      }\n    }\n\n    // PR path → PR number exactly 10 digits\n    if (v.residencyCA === \"PR\") {\n      const pr = (v.prNumber ?? \"\").replace(/\\D/g, \"\");\n      if (pr.length !== 10) {\n        ctx.addIssue({ code: \"custom\", path: [\"prNumber\"], message: \"PR card number must be exactly 10 digits\" });\n      }\n      if (!v.prExpiry?.trim()) ctx.addIssue({ code: \"custom\", path: [\"prExpiry\"], message: \"PR expiry required\" });\n    }\n\n    // Work/Study → UCI required with 8 or 10 digits (hyphens allowed)\n    if ([\"Work Permit\", \"Study Permit\"].includes(v.residencyCA)) {\n      const uci = (v.uci ?? \"\").replace(/\\D/g, \"\");\n      if (!(uci.length === 8 || uci.length === 10)) {\n        ctx.addIssue({ code: \"custom\", path: [\"uci\"], message: \"UCI must be 8 or 10 digits (hyphens allowed)\" });\n      }\n    }\n\n    // Documents: validate size/type and conditional requiredness\n    const need = {\n      licenseFront: true,\n      licenseBack: false,\n      pr: v.residencyCA === \"PR\",\n      passport: v.citizenship !== \"CA\",\n      permit: [\"Work Permit\", \"Study Permit\"].includes(v.residencyCA),\n    } as const;\n    (\"docLicenseFront,docLicenseBack,docPassport,docPR,docPermit\".split(\",\") as string[]).forEach((k) => {\n      const rec = v as unknown as Record<string, unknown>;\n      const f = rec[k] as File | undefined;\n      if (f && (![\"image/jpeg\", \"image/png\"].includes(f.type) || f.size > 4 * 1024 * 1024)) {\n        ctx.addIssue({ code: \"custom\", path: [k], message: \"Upload JPG/PNG ≤ 4MB\" });\n      }\n    });\n    function req(path: string, file: File | undefined, label: string) {\n      if (!file) ctx.addIssue({ code: \"custom\", path: [path], message: `${label} is required` });\n    }\n    if (need.licenseFront) req(\"docLicenseFront\", v.docLicenseFront as File | undefined, \"Licence (front)\");\n    if (need.licenseBack) req(\"docLicenseBack\", v.docLicenseBack as File | undefined, \"Licence (back)\");\n    if (need.pr) req(\"docPR\", v.docPR as File | undefined, \"PR card image\");\n    if (need.passport) req(\"docPassport\", v.docPassport as File | undefined, \"Passport image\");\n    if (need.permit) req(\"docPermit\", v.docPermit as File | undefined, \"Permit document image\");\n  });\n\nexport type RegisterValues = z.infer<typeof RegisterSchema>;\n\n// Helpers you can use at submit time\nexport function normalizeForStorage<T extends { licenseNo: string; passportCountry?: string; passportNumber?: string; prNumber?: string; uci?: string }>(\n  values: T,\n): T {\n  return {\n    ...values,\n    licenseNo: normalizedLicence(values.licenseNo),\n    passportNumber: values.passportCountry ? normalizePassport(values.passportNumber ?? \"\") : undefined,\n    prNumber: values.prNumber ? values.prNumber.replace(/\\D/g, \"\") : undefined,\n    uci: values.uci ? values.uci.replace(/\\D/g, \"\") : undefined,\n  } as T;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 823, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/driver/DocUploadField.tsx"],"sourcesContent":["\"use client\";\nimport { useId, useState } from \"react\";\n\nconst ACCEPT = [\"image/jpeg\", \"image/png\"]; // JPG/PNG only\nconst MAX = 4 * 1024 * 1024; // 4 MB\n\nexport default function DocUploadField({\n  label,\n  hint,\n  value,\n  onChange,\n  id,\n  required = false,\n}: {\n  label: string;\n  hint?: string;\n  value?: File | null;\n  onChange: (f: File | null) => void;\n  id?: string;\n  required?: boolean;\n}) {\n  const generatedId = useId();\n  const inputId = id ?? generatedId;\n  const [err, setErr] = useState<string | null>(null);\n\n  function handle(e: React.ChangeEvent<HTMLInputElement>) {\n    const f = e.target.files?.[0];\n    if (!f) return;\n    if (!ACCEPT.includes(f.type)) {\n      setErr(\"Only JPG or PNG accepted\");\n      return;\n    }\n    if (f.size > MAX) {\n      setErr(\"File must be ≤ 4 MB\");\n      return;\n    }\n    setErr(null);\n    onChange(f);\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <label htmlFor={inputId} className=\"block text-sm font-medium text-slate-700\">\n        {label} {required && <span className=\"text-rose-600\">*</span>}\n      </label>\n      <div className=\"flex items-center gap-3\">\n        <input\n          id={inputId}\n          type=\"file\"\n          accept={ACCEPT.join(\",\")}\n          className=\"block w-full text-sm file:mr-4 file:rounded file:border-0 file:bg-slate-900 file:px-3 file:py-2 file:text-white hover:file:bg-slate-800\"\n          onChange={handle}\n        />\n      </div>\n      {hint && <p className=\"text-xs text-slate-500\">{hint}</p>}\n      {err && (\n        <p className=\"text-xs text-rose-600\" aria-live=\"polite\">\n          {err}\n        </p>\n      )}\n      {value && (\n        <div className=\"flex items-center gap-3 rounded border border-slate-200 p-2 text-xs text-slate-600\">\n          {value.name} • {(value.size / 1024 / 1024).toFixed(1)} MB\n          <button type=\"button\" className=\"ml-auto text-xs underline\" onClick={() => onChange(null)}>\n            Remove\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAGA,MAAM,SAAS;IAAC;IAAc;CAAY,EAAE,eAAe;AAC3D,MAAM,MAAM,IAAI,OAAO,MAAM,OAAO;AAErB,SAAS,eAAe,KActC;QAdsC,EACrC,KAAK,EACL,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,EAAE,EACF,WAAW,KAAK,EAQjB,GAdsC;;IAerC,MAAM,cAAc,IAAA,qSAAK;IACzB,MAAM,UAAU,eAAA,gBAAA,KAAM;IACtB,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,wSAAQ,EAAgB;IAE9C,SAAS,OAAO,CAAsC;YAC1C;QAAV,MAAM,KAAI,kBAAA,EAAE,MAAM,CAAC,KAAK,cAAd,sCAAA,eAAgB,CAAC,EAAE;QAC7B,IAAI,CAAC,GAAG;QACR,IAAI,CAAC,OAAO,QAAQ,CAAC,EAAE,IAAI,GAAG;YAC5B,OAAO;YACP;QACF;QACA,IAAI,EAAE,IAAI,GAAG,KAAK;YAChB,OAAO;YACP;QACF;QACA,OAAO;QACP,SAAS;IACX;IAEA,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,SAAS;gBAAS,WAAU;;oBAChC;oBAAM;oBAAE,0BAAY,4TAAC;wBAAK,WAAU;kCAAgB;;;;;;;;;;;;0BAEvD,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC;oBACC,IAAI;oBACJ,MAAK;oBACL,QAAQ,OAAO,IAAI,CAAC;oBACpB,WAAU;oBACV,UAAU;;;;;;;;;;;YAGb,sBAAQ,4TAAC;gBAAE,WAAU;0BAA0B;;;;;;YAC/C,qBACC,4TAAC;gBAAE,WAAU;gBAAwB,aAAU;0BAC5C;;;;;;YAGJ,uBACC,4TAAC;gBAAI,WAAU;;oBACZ,MAAM,IAAI;oBAAC;oBAAI,CAAC,MAAM,IAAI,GAAG,OAAO,IAAI,EAAE,OAAO,CAAC;oBAAG;kCACtD,4TAAC;wBAAO,MAAK;wBAAS,WAAU;wBAA4B,SAAS,IAAM,SAAS;kCAAO;;;;;;;;;;;;;;;;;;AAOrG;GAhEwB;;QAeF,qSAAK;;;KAfH","debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/pdf/DriverCardPDF.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\n\"use client\";\nimport { Document, Page, View, Text, Image, StyleSheet } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  page: { padding: 20, fontSize: 10, color: \"#0A0F1F\" },\n  card: { borderWidth: 1, borderColor: \"#e5e7eb\", padding: 12, borderRadius: 6 },\n  row: { flexDirection: \"row\", gap: 10 },\n  col: { flexGrow: 1 },\n  title: { fontSize: 14, marginBottom: 6 },\n  label: { color: \"#6b7280\" },\n});\n\nexport default function DriverCardPDF({\n  name,\n  qrPng,\n}: {\n  name: string;\n  qrPng: string;\n}) {\n  return (\n    <Document>\n      <Page size=\"A6\" style={styles.page}>\n        <View style={styles.card}>\n          <Text style={styles.title}>Driver Identity Card</Text>\n          <View style={styles.row}>\n            <View style={styles.col}>\n              <Text>\n                <Text style={styles.label}>Name: </Text>{name}\n              </Text>\n            </View>\n            <Image src={qrPng} style={{ width: 120, height: 120 }} />\n          </View>\n          <Text style={{ marginTop: 8, color: \"#6b7280\" }}>\n            Scan for live verification. QR encodes only a random ID; no personal details.\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n}\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAEpC;AAAA;AADA;;;AAGA,MAAM,SAAS,0SAAU,CAAC,MAAM,CAAC;IAC/B,MAAM;QAAE,SAAS;QAAI,UAAU;QAAI,OAAO;IAAU;IACpD,MAAM;QAAE,aAAa;QAAG,aAAa;QAAW,SAAS;QAAI,cAAc;IAAE;IAC7E,KAAK;QAAE,eAAe;QAAO,KAAK;IAAG;IACrC,KAAK;QAAE,UAAU;IAAE;IACnB,OAAO;QAAE,UAAU;QAAI,cAAc;IAAE;IACvC,OAAO;QAAE,OAAO;IAAU;AAC5B;AAEe,SAAS,cAAc,KAMrC;QANqC,EACpC,IAAI,EACJ,KAAK,EAIN,GANqC;IAOpC,qBACE,4TAAC,oPAAQ;kBACP,cAAA,4TAAC,gPAAI;YAAC,MAAK;YAAK,OAAO,OAAO,IAAI;sBAChC,cAAA,4TAAC,gPAAI;gBAAC,OAAO,OAAO,IAAI;;kCACtB,4TAAC,gPAAI;wBAAC,OAAO,OAAO,KAAK;kCAAE;;;;;;kCAC3B,4TAAC,gPAAI;wBAAC,OAAO,OAAO,GAAG;;0CACrB,4TAAC,gPAAI;gCAAC,OAAO,OAAO,GAAG;0CACrB,cAAA,4TAAC,gPAAI;;sDACH,4TAAC,gPAAI;4CAAC,OAAO,OAAO,KAAK;sDAAE;;;;;;wCAAc;;;;;;;;;;;;0CAG7C,4TAAC,iPAAK;gCAAC,KAAK;gCAAO,OAAO;oCAAE,OAAO;oCAAK,QAAQ;gCAAI;;;;;;;;;;;;kCAEtD,4TAAC,gPAAI;wBAAC,OAAO;4BAAE,WAAW;4BAAG,OAAO;wBAAU;kCAAG;;;;;;;;;;;;;;;;;;;;;;AAO3D;KA3BwB","debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/qr.ts"],"sourcesContent":["import QRCode from \"qrcode\";\n\n// Now the QR encodes only a version + a URL with a random qrid.\n// No licence, no jurisdiction, no PII.\nexport function buildQrPayload(input: { qrid: string; origin?: string }) {\n  const origin =\n    input.origin ?? (typeof window !== \"undefined\" ? window.location.origin : \"https://example.org\");\n  return {\n    v: 1,\n    url: `${origin}/v/${input.qrid}`,\n  };\n}\n\nexport async function makeQrPng(payload: object) {\n  return QRCode.toDataURL(JSON.stringify(payload), {\n    errorCorrectionLevel: \"M\",\n    margin: 1,\n    scale: 6,\n  });\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,SAAS,eAAe,KAAwC;QAEnE;IADF,MAAM,SACJ,CAAA,gBAAA,MAAM,MAAM,cAAZ,2BAAA,gBAAiB,uCAAgC,OAAO,QAAQ,CAAC,MAAM,GAAG;IAC5E,OAAO;QACL,GAAG;QACH,KAAK,AAAC,GAAc,OAAZ,QAAO,OAAgB,OAAX,MAAM,IAAI;IAChC;AACF;AAEO,eAAe,UAAU,OAAe;IAC7C,OAAO,yMAAM,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC,UAAU;QAC/C,sBAAsB;QACtB,QAAQ;QACR,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/demo-store-remote.ts"],"sourcesContent":["export type DriverSnapshot = {\n  qrid: string;\n  name: string;\n  jurisdiction: string;\n  licenseNo: string;\n  licenseClass: string;\n  licenseExpiry: string;\n  issuedAt: string; // ISO\n};\n\nexport async function saveSnapshotRemote(s: DriverSnapshot): Promise<void> {\n  const res = await fetch(\"/api/demo/snapshots\", {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(s),\n    cache: \"no-store\",\n  });\n  if (!res.ok) {\n    const j: unknown = await res.json().catch(() => null as unknown);\n    const msg = getErrorMessage(j) ?? `Failed to save snapshot (${res.status})`;\n    throw new Error(msg);\n  }\n}\n\nexport async function loadSnapshotRemote(qrid: string): Promise<DriverSnapshot | null> {\n  const res = await fetch(`/api/demo/snapshots/${encodeURIComponent(qrid)}`, {\n    method: \"GET\",\n    cache: \"no-store\",\n  });\n  if (res.status === 404) return null;\n  if (!res.ok) throw new Error(`Fetch failed (${res.status})`);\n  return (await res.json()) as DriverSnapshot;\n}\n\nfunction getErrorMessage(x: unknown): string | null {\n  if (!x || typeof x !== \"object\") return null;\n  const rec = x as Record<string, unknown>;\n  const e = rec[\"error\"];\n  return typeof e === \"string\" ? e : null;\n}\n"],"names":[],"mappings":";;;;;;AAUO,eAAe,mBAAmB,CAAiB;IACxD,MAAM,MAAM,MAAM,MAAM,uBAAuB;QAC7C,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;QACrB,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAa,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;YACpC;QAAZ,MAAM,MAAM,CAAA,mBAAA,gBAAgB,gBAAhB,8BAAA,mBAAsB,AAAC,4BAAsC,OAAX,IAAI,MAAM,EAAC;QACzE,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,mBAAmB,IAAY;IACnD,MAAM,MAAM,MAAM,MAAM,AAAC,uBAA+C,OAAzB,mBAAmB,QAAS;QACzE,QAAQ;QACR,OAAO;IACT;IACA,IAAI,IAAI,MAAM,KAAK,KAAK,OAAO;IAC/B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,AAAC,iBAA2B,OAAX,IAAI,MAAM,EAAC;IACzD,OAAQ,MAAM,IAAI,IAAI;AACxB;AAEA,SAAS,gBAAgB,CAAU;IACjC,IAAI,CAAC,KAAK,OAAO,MAAM,UAAU,OAAO;IACxC,MAAM,MAAM;IACZ,MAAM,IAAI,GAAG,CAAC,QAAQ;IACtB,OAAO,OAAO,MAAM,WAAW,IAAI;AACrC","debugId":null}},
    {"offset": {"line": 1172, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/uuid.ts"],"sourcesContent":["// RFC4122 v4 UUID with fallbacks for older browsers / non-secure contexts.\nexport function uuidv4(): string {\n  // Modern browsers with Crypto.randomUUID\n  if (typeof crypto !== \"undefined\") {\n    const c = crypto as Crypto & { randomUUID?: () => string };\n    if (typeof c.randomUUID === \"function\") {\n      return c.randomUUID();\n    }\n    // Web Crypto fallback\n    if (typeof c.getRandomValues === \"function\") {\n      const bytes = new Uint8Array(16);\n      c.getRandomValues(bytes);\n      // Per RFC4122 section 4.4\n      const b6 = bytes[6] ?? 0;\n      bytes[6] = (b6 & 0x0f) | 0x40; // version 4\n      const b8 = bytes[8] ?? 0;\n      bytes[8] = (b8 & 0x3f) | 0x80; // variant 10\n      const hex = Array.from(bytes, (b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n      return `${hex.slice(0, 8)}-${hex.slice(8, 12)}-${hex.slice(12, 16)}-${hex.slice(16, 20)}-${hex.slice(20)}`;\n    }\n  }\n  // Last-resort (not cryptographically strong)\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;;AACpE,SAAS;IACd,yCAAyC;IACzC,IAAI,OAAO,WAAW,aAAa;QACjC,MAAM,IAAI;QACV,IAAI,OAAO,EAAE,UAAU,KAAK,YAAY;YACtC,OAAO,EAAE,UAAU;QACrB;QACA,sBAAsB;QACtB,IAAI,OAAO,EAAE,eAAe,KAAK,YAAY;YAC3C,MAAM,QAAQ,IAAI,WAAW;YAC7B,EAAE,eAAe,CAAC;gBAEP;YADX,0BAA0B;YAC1B,MAAM,KAAK,CAAA,UAAA,KAAK,CAAC,EAAE,cAAR,qBAAA,UAAY;YACvB,KAAK,CAAC,EAAE,GAAG,AAAC,KAAK,OAAQ,MAAM,YAAY;gBAChC;YAAX,MAAM,KAAK,CAAA,WAAA,KAAK,CAAC,EAAE,cAAR,sBAAA,WAAY;YACvB,KAAK,CAAC,EAAE,GAAG,AAAC,KAAK,OAAQ,MAAM,aAAa;YAC5C,MAAM,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC;YAC3E,OAAO,AAAC,GAAqB,OAAnB,IAAI,KAAK,CAAC,GAAG,IAAG,KAAuB,OAApB,IAAI,KAAK,CAAC,GAAG,KAAI,KAAwB,OAArB,IAAI,KAAK,CAAC,IAAI,KAAI,KAAwB,OAArB,IAAI,KAAK,CAAC,IAAI,KAAI,KAAiB,OAAd,IAAI,KAAK,CAAC;QACvG;IACF;IACA,6CAA6C;IAC7C,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF","debugId":null}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/names.ts"],"sourcesContent":["export function titleCaseName(s: string) {\n  return s\n    .trim()\n    .toLowerCase()\n    .replace(/\\b[\\p{L}\\p{M}]+/gu, (w) => (w[0]?.toUpperCase() ?? \"\") + w.slice(1));\n}\nexport function canonicalKey(s: string) {\n  // Uppercase, strip diacritics, collapse spaces\n  return s\n    .normalize(\"NFD\")\n    .replace(/\\p{Diacritic}/gu, \"\")\n    .toUpperCase()\n    .replace(/\\s+/g, \" \")\n    .trim();\n}\n\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,cAAc,CAAS;IACrC,OAAO,EACJ,IAAI,GACJ,WAAW,GACX,OAAO,CAAC,oCAAqB,CAAC;YAAO;YAAA;eAAD,CAAC,CAAA,mBAAA,MAAA,CAAC,CAAC,EAAE,cAAJ,0BAAA,IAAM,WAAW,gBAAjB,6BAAA,kBAAuB,EAAE,IAAI,EAAE,KAAK,CAAC;;AAC/E;AACO,SAAS,aAAa,CAAS;IACpC,+CAA+C;IAC/C,OAAO,EACJ,SAAS,CAAC,OACV,OAAO,CAAC,gCAAmB,IAC3B,WAAW,GACX,OAAO,CAAC,QAAQ,KAChB,IAAI;AACT","debugId":null}},
    {"offset": {"line": 1237, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/NameFields.tsx"],"sourcesContent":["\"use client\";\nimport { titleCaseName, canonicalKey } from \"@/lib/names\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function NameFields({\n  register,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  return (\n    <div className=\"grid gap-4 sm:grid-cols-3\">\n      <Field label=\"Given name\" err={errors.givenName?.message as string | undefined}>\n        <input\n          {...register(\"givenName\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          onBlur={(e) => {\n            const t = titleCaseName(e.target.value);\n            setValue(\"givenName\", t, { shouldValidate: true });\n            setValue(\"givenNameKey\", canonicalKey(t));\n          }}\n        />\n      </Field>\n      <Field label=\"Middle (optional)\" err={errors.middleName?.message as string | undefined}>\n        <input\n          {...register(\"middleName\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          onBlur={(e) => {\n            const t = titleCaseName(e.target.value);\n            setValue(\"middleName\", t);\n          }}\n        />\n      </Field>\n      <Field label=\"Surname\" err={errors.surname?.message as string | undefined}>\n        <input\n          {...register(\"surname\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          onBlur={(e) => {\n            const t = titleCaseName(e.target.value);\n            setValue(\"surname\", t, { shouldValidate: true });\n            setValue(\"surnameKey\", canonicalKey(t));\n          }}\n        />\n      </Field>\n    </div>\n  );\n}\n\nfunction Field({ label, err, children }: { label: string; err?: string; children: React.ReactNode }) {\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      {children}\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKe,SAAS,WAAW,KAQlC;QARkC,EACjC,QAAQ,EACR,QAAQ,EACR,MAAM,EAKP,GARkC;QAWE,mBAWO,oBAUV;IAvBhC,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,OAAM;gBAAa,GAAG,GAAE,oBAAA,OAAO,SAAS,cAAhB,wCAAA,kBAAkB,OAAO;0BACtD,cAAA,4TAAC;oBACE,GAAG,SAAS,YAAY;oBACzB,WAAU;oBACV,QAAQ,CAAC;wBACP,MAAM,IAAI,IAAA,gIAAa,EAAC,EAAE,MAAM,CAAC,KAAK;wBACtC,SAAS,aAAa,GAAG;4BAAE,gBAAgB;wBAAK;wBAChD,SAAS,gBAAgB,IAAA,+HAAY,EAAC;oBACxC;;;;;;;;;;;0BAGJ,4TAAC;gBAAM,OAAM;gBAAoB,GAAG,GAAE,qBAAA,OAAO,UAAU,cAAjB,yCAAA,mBAAmB,OAAO;0BAC9D,cAAA,4TAAC;oBACE,GAAG,SAAS,aAAa;oBAC1B,WAAU;oBACV,QAAQ,CAAC;wBACP,MAAM,IAAI,IAAA,gIAAa,EAAC,EAAE,MAAM,CAAC,KAAK;wBACtC,SAAS,cAAc;oBACzB;;;;;;;;;;;0BAGJ,4TAAC;gBAAM,OAAM;gBAAU,GAAG,GAAE,kBAAA,OAAO,OAAO,cAAd,sCAAA,gBAAgB,OAAO;0BACjD,cAAA,4TAAC;oBACE,GAAG,SAAS,UAAU;oBACvB,WAAU;oBACV,QAAQ,CAAC;wBACP,MAAM,IAAI,IAAA,gIAAa,EAAC,EAAE,MAAM,CAAC,KAAK;wBACtC,SAAS,WAAW,GAAG;4BAAE,gBAAgB;wBAAK;wBAC9C,SAAS,cAAc,IAAA,+HAAY,EAAC;oBACtC;;;;;;;;;;;;;;;;;AAKV;KA7CwB;AA+CxB,SAAS,MAAM,KAAoF;QAApF,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAA8D,GAApF;IACb,qBACE,4TAAC;QAAM,WAAU;;0BACf,4TAAC;gBAAK,WAAU;0BAAgC;;;;;;YAC/C;YACA,qBAAO,4TAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAGpD;MARS","debugId":null}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PhoneInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PhoneInput({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const [display, setDisplay] = useState(\"\");\n  const phoneCountry = watch(\"phoneCountry\") as \"CA\" | \"US\" | undefined;\n\n  return (\n    <div className=\"grid gap-3 sm:grid-cols-[8rem_1fr]\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Country</span>\n        <select\n          {...register(\"phoneCountry\")}\n          defaultValue=\"CA\"\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        >\n          <option value=\"CA\">Canada (+1)</option>\n          {/* United States intentionally removed as per requirement */}\n        </select>\n      </label>\n\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Phone</span>\n        <input\n          {...register(\"phone\")}\n          value={display}\n          onChange={(e) => {\n            // Keep only digits\n            const digits = e.target.value.replace(/\\D/g, \"\");\n            // Max length: 10 digits for Canadian numbers\n            const truncated = digits.slice(0, 10);\n            setDisplay(truncated);\n            setValue(\"phone\", truncated, { shouldValidate: true });\n          }}\n          inputMode=\"numeric\"\n          pattern=\"\\d{10}\"\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          placeholder=\"2045551234\"\n        />\n        {errors.phone?.message && (\n          <p className=\"text-xs text-rose-600\">\n            {errors.phone.message as string}\n          </p>\n        )}\n      </label>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAWe,SAAS,WAAW,KAUlC;QAVkC,EACjC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP,GAVkC;QA8C1B;;IAnCP,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,wSAAQ,EAAC;IACvC,MAAM,eAAe,MAAM;IAE3B,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,WAAU;;kCACf,4TAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,4TAAC;wBACE,GAAG,SAAS,eAAe;wBAC5B,cAAa;wBACb,WAAU;kCAEV,cAAA,4TAAC;4BAAO,OAAM;sCAAK;;;;;;;;;;;;;;;;;0BAKvB,4TAAC;gBAAM,WAAU;;kCACf,4TAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,4TAAC;wBACE,GAAG,SAAS,QAAQ;wBACrB,OAAO;wBACP,UAAU,CAAC;4BACT,mBAAmB;4BACnB,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;4BAC7C,6CAA6C;4BAC7C,MAAM,YAAY,OAAO,KAAK,CAAC,GAAG;4BAClC,WAAW;4BACX,SAAS,SAAS,WAAW;gCAAE,gBAAgB;4BAAK;wBACtD;wBACA,WAAU;wBACV,SAAQ;wBACR,WAAU;wBACV,aAAY;;;;;;oBAEb,EAAA,gBAAA,OAAO,KAAK,cAAZ,oCAAA,cAAc,OAAO,mBACpB,4TAAC;wBAAE,WAAU;kCACV,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;;;;;;;AAMjC;GAtDwB;KAAA","debugId":null}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PostalInput.tsx"],"sourcesContent":["\"use client\";\nimport { detectCA, isUSZip } from \"@/lib/postal\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PostalInput({\n  register,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">Postal/ZIP</span>\n      <input\n        {...register(\"postal\")}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        placeholder=\"A1A 1A1 or 90210\"\n        onInput={(e) => {\n          const t = e.target as HTMLInputElement;\n          // Auto uppercase + single space after 3 for Canada pattern\n          let v = t.value.toUpperCase();\n          v = v.replace(/[^A-Z0-9\\s-]/g, \"\");\n          if (/^[ABCEGHJ-NPRSTVXY]\\d[A-Z]/.test(v.replace(/\\s/g, \"\"))) {\n            const s = v.replace(/\\s+/g, \"\").slice(0, 6);\n            t.value = s.length > 3 ? `${s.slice(0, 3)} ${s.slice(3)}` : s;\n          }\n        }}\n        onBlur={(e) => {\n          const raw = (e.target as HTMLInputElement).value;\n          const ca = detectCA(raw);\n          if (ca.ok) {\n            if (ca.normalized) setValue(\"postal\", ca.normalized);\n            setValue(\"country\", \"CA\");\n            if (ca.province) setValue(\"region\", ca.province);\n            return;\n          }\n          if (isUSZip(raw)) {\n            setValue(\"country\", \"US\");\n          }\n        }}\n      />\n      {errors.postal?.message && <p className=\"text-xs text-rose-600\">{errors.postal.message as string}</p>}\n    </label>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKe,SAAS,YAAY,KAQnC;QARmC,EAClC,QAAQ,EACR,QAAQ,EACR,MAAM,EAKP,GARmC;QAwC7B;IA/BL,qBACE,4TAAC;QAAM,WAAU;;0BACf,4TAAC;gBAAK,WAAU;0BAA+B;;;;;;0BAC/C,4TAAC;gBACE,GAAG,SAAS,SAAS;gBACtB,WAAU;gBACV,aAAY;gBACZ,SAAS,CAAC;oBACR,MAAM,IAAI,EAAE,MAAM;oBAClB,2DAA2D;oBAC3D,IAAI,IAAI,EAAE,KAAK,CAAC,WAAW;oBAC3B,IAAI,EAAE,OAAO,CAAC,iBAAiB;oBAC/B,IAAI,6BAA6B,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,MAAM;wBAC3D,MAAM,IAAI,EAAE,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG;wBACzC,EAAE,KAAK,GAAG,EAAE,MAAM,GAAG,IAAI,AAAC,GAAmB,OAAjB,EAAE,KAAK,CAAC,GAAG,IAAG,KAAc,OAAX,EAAE,KAAK,CAAC,MAAO;oBAC9D;gBACF;gBACA,QAAQ,CAAC;oBACP,MAAM,MAAM,AAAC,EAAE,MAAM,CAAsB,KAAK;oBAChD,MAAM,KAAK,IAAA,4HAAQ,EAAC;oBACpB,IAAI,GAAG,EAAE,EAAE;wBACT,IAAI,GAAG,UAAU,EAAE,SAAS,UAAU,GAAG,UAAU;wBACnD,SAAS,WAAW;wBACpB,IAAI,GAAG,QAAQ,EAAE,SAAS,UAAU,GAAG,QAAQ;wBAC/C;oBACF;oBACA,IAAI,IAAA,2HAAO,EAAC,MAAM;wBAChB,SAAS,WAAW;oBACtB;gBACF;;;;;;YAED,EAAA,iBAAA,OAAO,MAAM,cAAb,qCAAA,eAAe,OAAO,mBAAI,4TAAC;gBAAE,WAAU;0BAAyB,OAAO,MAAM,CAAC,OAAO;;;;;;;;;;;;AAG5F;KA3CwB","debugId":null}},
    {"offset": {"line": 1564, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/LicenceInput.tsx"],"sourcesContent":["\"use client\";\nimport { formatLicence } from \"@/lib/license-rules\";\nimport type { UseFormRegister, UseFormSetValue, UseFormWatch, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function LicenceInput({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const jurisdiction = watch(\"jurisdiction\") as string;\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">Licence number</span>\n      <input\n        {...register(\"licenseNo\")}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2 font-mono\"\n        placeholder={maskHint(jurisdiction)}\n        onInput={(e) => {\n          const t = e.target as HTMLInputElement;\n          const newVal = formatLicence(jurisdiction, t.value);\n          t.value = newVal;\n          setValue(\"licenseNo\", newVal, { shouldValidate: false });\n        }}\n      />\n      {errors.licenseNo?.message && <p className=\"text-xs text-rose-600\">{errors.licenseNo.message as string}</p>}\n      <p className=\"mt-1 text-xs text-slate-500\">Type letters/numbers only—formatting is automatic.</p>\n    </label>\n  );\n}\nfunction maskHint(j: string) {\n  switch (j) {\n    case \"CA-ON\":\n      return \"A####-#####-#####\";\n    case \"CA-BC\":\n      return \"####### or ########\";\n    case \"CA-AB\":\n      return \"######-### or 5–9 digits\";\n    case \"CA-SK\":\n      return \"########\";\n    case \"CA-QC\":\n      return \"A############\";\n    case \"CA-NL\":\n      return \"A#########\";\n    default:\n      return \"Up to 15 letters/digits\";\n  }\n}\n\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKe,SAAS,aAAa,KAUpC;QAVoC,EACnC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP,GAVoC;QA0B9B;IAfL,MAAM,eAAe,MAAM;IAC3B,qBACE,4TAAC;QAAM,WAAU;;0BACf,4TAAC;gBAAK,WAAU;0BAA+B;;;;;;0BAC/C,4TAAC;gBACE,GAAG,SAAS,YAAY;gBACzB,WAAU;gBACV,aAAa,SAAS;gBACtB,SAAS,CAAC;oBACR,MAAM,IAAI,EAAE,MAAM;oBAClB,MAAM,SAAS,IAAA,2IAAa,EAAC,cAAc,EAAE,KAAK;oBAClD,EAAE,KAAK,GAAG;oBACV,SAAS,aAAa,QAAQ;wBAAE,gBAAgB;oBAAM;gBACxD;;;;;;YAED,EAAA,oBAAA,OAAO,SAAS,cAAhB,wCAAA,kBAAkB,OAAO,mBAAI,4TAAC;gBAAE,WAAU;0BAAyB,OAAO,SAAS,CAAC,OAAO;;;;;;0BAC5F,4TAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAGjD;KA9BwB;AA+BxB,SAAS,SAAS,CAAS;IACzB,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 1656, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/StatusWizard.tsx"],"sourcesContent":["\"use client\";\n\nimport type {\n  FieldErrors,\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function StatusWizard({\n  register,\n  watch,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const citizenship = (watch(\"citizenship\") ?? \"CA\") as RegisterValues[\"citizenship\"];\n  const residency = (watch(\"residencyCA\") ?? \"Citizen\") as RegisterValues[\"residencyCA\"];\n  const showPermitType = residency === \"Work Permit\"; // hidden for Study Permit\n\n  // Reset dependent fields on category changes to avoid stale values\n  function onCitizenshipChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const val = e.target.value as RegisterValues[\"citizenship\"];\n    setValue(\"citizenship\", val, { shouldValidate: true });\n    if (val === \"CA\") {\n      setValue(\"passportCountry\", undefined, { shouldValidate: true });\n      setValue(\"passportNumber\", undefined, { shouldValidate: true });\n      setValue(\"docPassport\", undefined, { shouldValidate: true });\n    }\n  }\n\n  function onResidencyChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const val = e.target.value as RegisterValues[\"residencyCA\"];\n    setValue(\"residencyCA\", val, { shouldValidate: true });\n\n    // Clear PR/Permit-specific fields when switching\n    if (val !== \"PR\") setValue(\"prNumber\", undefined, { shouldValidate: true });\n    if (val !== \"Work Permit\" && val !== \"Study Permit\") {\n      setValue(\"permitType\", undefined, { shouldValidate: true });\n      setValue(\"docPermit\", undefined, { shouldValidate: true });\n    }\n  }\n\n  return (\n    <section className=\"space-y-4\">\n      <h2 className=\"text-lg font-medium\">Status in Canada</h2>\n      <div className=\"grid gap-4 sm:grid-cols-3\">\n        {/* Citizenship */}\n        <label className=\"block\">\n          <span className=\"block text-sm text-slate-700\">Citizenship</span>\n          <select\n            {...register(\"citizenship\")}\n            defaultValue={citizenship}\n            onChange={onCitizenshipChange}\n            className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          >\n            <option value=\"CA\">Canada</option>\n            {/* United States intentionally removed */}\n            <option value=\"Other\">Other</option>\n          </select>\n          {errors.citizenship?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.citizenship.message)}</p>\n          )}\n        </label>\n\n        {/* Residency in Canada */}\n        <label className=\"block\">\n          <span className=\"block text-sm text-slate-700\">Residency</span>\n          <select\n            {...register(\"residencyCA\")}\n            defaultValue={residency}\n            onChange={onResidencyChange}\n            className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          >\n            <option value=\"Citizen\">Citizen</option>\n            <option value=\"PR\">Permanent Resident</option>\n            <option value=\"Work Permit\">Work Permit</option>\n            <option value=\"Study Permit\">Study Permit</option>\n            {/* Visitor removed */}\n          </select>\n          {errors.residencyCA?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.residencyCA.message)}</p>\n          )}\n        </label>\n\n        {/* Permit type — only for Work Permit */}\n        {showPermitType ? (\n          <label className=\"block\">\n            <span className=\"block text-sm text-slate-700\">Permit type</span>\n            <select\n              {...register(\"permitType\")}\n              className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled>\n                Select type\n              </option>\n              <option value=\"Closed (employer-specific)\">Closed (employer-specific)</option>\n              <option value=\"Open work permit\">Open work permit</option>\n              <option value=\"PGWP\">Post-Graduation Work Permit (PGWP)</option>\n              <option value=\"IEC\">IEC (Working Holiday, YP, Co-op)</option>\n              <option value=\"Other\">Other</option>\n            </select>\n            {errors.permitType?.message && (\n              <p className=\"text-xs text-rose-600\">{String(errors.permitType.message)}</p>\n            )}\n          </label>\n        ) : (\n          <div />\n        )}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1955, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/LicenseClassSelect.tsx"],"sourcesContent":["\"use client\";\nimport { classesFor } from \"@/lib/license-classes\";\nimport type { UseFormRegister, UseFormSetValue, UseFormWatch, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nconst AIR_BRAKE_LABEL: Record<string, string> = {\n  \"CA-ON\": \"Air brake (Z)\",\n  \"CA-MB\": \"Air brake (A)\",\n  \"CA-AB\": \"Air brake (Q/endorsement)\",\n  \"CA-SK\": \"Air brake\",\n  \"CA-BC\": \"Air brake\",\n  \"CA-QC\": \"Air brake (F endorsement)\",\n  \"CA-NB\": \"Air brake\",\n  \"CA-NL\": \"Air brake\",\n  \"CA-NS\": \"Air brake\",\n  \"CA-PE\": \"Air brake\",\n};\n\nexport default function LicenseClassSelect({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const jurisdiction = watch(\"jurisdiction\") as string | undefined;\n  const allowed = jurisdiction ? classesFor(jurisdiction) : [];\n  const label = AIR_BRAKE_LABEL[jurisdiction ?? \"\"] ?? \"Air brake\";\n\n  return (\n    <div className=\"grid gap-4 sm:grid-cols-2\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Licence class</span>\n        <select\n          {...register(\"licenseClass\")}\n          disabled={!jurisdiction}\n          onChange={(e) => setValue(\"licenseClass\", e.target.value)}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        >\n          {!jurisdiction && <option value=\"\">Select jurisdiction first</option>}\n          {jurisdiction && allowed.length === 0 && <option value=\"\">No classes found</option>}\n          {allowed.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n        {errors?.licenseClass?.message && (\n          <p className=\"text-xs text-rose-600\">{String(errors.licenseClass.message)}</p>\n        )}\n      </label>\n\n      <label className=\"mt-6 inline-flex items-center gap-2\">\n        <input type=\"checkbox\" {...register(\"airBrake\")} className=\"h-4 w-4\" />\n        <span className=\"text-sm text-slate-700\">{label}</span>\n      </label>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKA,MAAM,kBAA0C;IAC9C,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;AACX;AAEe,SAAS,mBAAmB,KAU1C;QAV0C,EACzC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP,GAV0C;QAiClC;IAtBP,MAAM,eAAe,MAAM;IAC3B,MAAM,UAAU,eAAe,IAAA,0IAAU,EAAC,gBAAgB,EAAE;QAC9C;IAAd,MAAM,QAAQ,CAAA,oBAAA,eAAe,CAAC,yBAAA,0BAAA,eAAgB,GAAG,cAAnC,+BAAA,oBAAuC;IAErD,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,WAAU;;kCACf,4TAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,4TAAC;wBACE,GAAG,SAAS,eAAe;wBAC5B,UAAU,CAAC;wBACX,UAAU,CAAC,IAAM,SAAS,gBAAgB,EAAE,MAAM,CAAC,KAAK;wBACxD,WAAU;;4BAET,CAAC,8BAAgB,4TAAC;gCAAO,OAAM;0CAAG;;;;;;4BAClC,gBAAgB,QAAQ,MAAM,KAAK,mBAAK,4TAAC;gCAAO,OAAM;0CAAG;;;;;;4BACzD,QAAQ,GAAG,CAAC,CAAC,kBACZ,4TAAC;oCAAe,OAAO;8CACpB;mCADU;;;;;;;;;;;oBAKhB,CAAA,mBAAA,8BAAA,uBAAA,OAAQ,YAAY,cAApB,2CAAA,qBAAsB,OAAO,mBAC5B,4TAAC;wBAAE,WAAU;kCAAyB,OAAO,OAAO,YAAY,CAAC,OAAO;;;;;;;;;;;;0BAI5E,4TAAC;gBAAM,WAAU;;kCACf,4TAAC;wBAAM,MAAK;wBAAY,GAAG,SAAS,WAAW;wBAAE,WAAU;;;;;;kCAC3D,4TAAC;wBAAK,WAAU;kCAA0B;;;;;;;;;;;;;;;;;;AAIlD;KA5CwB","debugId":null}},
    {"offset": {"line": 2090, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/CountrySelect.tsx"],"sourcesContent":["\"use client\";\nimport { useMemo, useState } from \"react\";\nimport { allCountries } from \"@/lib/countries\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors, Path } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\ntype Props = {\n  name: Path<RegisterValues>;\n  label?: string;\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors?: FieldErrors<RegisterValues>;\n  defaultCode?: string;\n};\n\nconst COUNTRIES = allCountries();\n\nexport default function CountrySelect({ name, label = \"Country\", register, setValue, errors, defaultCode }: Props) {\n  const [q, setQ] = useState(\"\");\n  const filtered = useMemo(() => {\n    const s = q.trim().toLowerCase();\n    if (!s) return COUNTRIES;\n    return COUNTRIES.filter((c) => c.name.toLowerCase().includes(s) || c.code.toLowerCase().includes(s));\n  }, [q]);\n\n  function errorOf() {\n    const e = errors?.[name as keyof typeof errors];\n    const msg = (e as unknown as { message?: string } | undefined)?.message;\n    return typeof msg === \"string\" ? msg : undefined;\n  }\n\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">{label}</span>\n      </label>\n      <div className=\"grid gap-2 sm:grid-cols-[1fr_18rem]\">\n        <input\n          value={q}\n          onChange={(e) => setQ(e.target.value)}\n          className=\"rounded border border-slate-300 p-2\"\n          placeholder=\"Search country…\"\n        />\n        <select\n          {...register(name)}\n          defaultValue={defaultCode ?? \"\"}\n          onChange={(e)=>setValue(name, e.target.value, { shouldValidate: true, shouldDirty: true })}\n          className=\"rounded border border-slate-300 p-2\"\n        >\n          <option value=\"\" disabled>\n            Select country\n          </option>\n          {filtered.map((c) => (\n            <option key={c.code} value={c.code}>\n              {c.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      {errorOf() && <p className=\"text-xs text-rose-600\">{errorOf()}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;AAeA,MAAM,YAAY,IAAA,mIAAY;AAEf,SAAS,cAAc,KAA2E;QAA3E,EAAE,IAAI,EAAE,QAAQ,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAS,GAA3E;;IACpC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,wSAAQ,EAAC;IAC3B,MAAM,WAAW,IAAA,uSAAO;2CAAC;YACvB,MAAM,IAAI,EAAE,IAAI,GAAG,WAAW;YAC9B,IAAI,CAAC,GAAG,OAAO;YACf,OAAO,UAAU,MAAM;mDAAC,CAAC,IAAM,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;;QACnG;0CAAG;QAAC;KAAE;IAEN,SAAS;YAEK;QADZ,MAAM,IAAI,mBAAA,6BAAA,MAAQ,CAAC,KAA4B;QAC/C,MAAM,OAAM,QAAC,eAAD,4BAAA,MAAoD,OAAO;QACvE,OAAO,OAAO,QAAQ,WAAW,MAAM;IACzC;IAEA,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,WAAU;0BACf,cAAA,4TAAC;oBAAK,WAAU;8BAAgC;;;;;;;;;;;0BAElD,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,KAAK,EAAE,MAAM,CAAC,KAAK;wBACpC,WAAU;wBACV,aAAY;;;;;;kCAEd,4TAAC;wBACE,GAAG,SAAS,KAAK;wBAClB,cAAc,wBAAA,yBAAA,cAAe;wBAC7B,UAAU,CAAC,IAAI,SAAS,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE;gCAAE,gBAAgB;gCAAM,aAAa;4BAAK;wBACxF,WAAU;;0CAEV,4TAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,SAAS,GAAG,CAAC,CAAC,kBACb,4TAAC;oCAAoB,OAAO,EAAE,IAAI;8CAC/B,EAAE,IAAI;mCADI,EAAE,IAAI;;;;;;;;;;;;;;;;;YAMxB,2BAAa,4TAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAG1D;GA7CwB;KAAA","debugId":null}},
    {"offset": {"line": 2219, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PassportInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { passportPatternFor, normalizePassport } from \"@/lib/passport/validate\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PassportInput({\n  countryCode,\n  register,\n  setValue,\n  errors,\n}: {\n  countryCode?: string;\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors?: FieldErrors<RegisterValues>;\n}) {\n  const [v, setV] = useState(\"\");\n  const pat = useMemo(() => passportPatternFor(countryCode), [countryCode]);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // When country changes, clip to max length and re-validate\n  useEffect(() => {\n    if (!inputRef.current) return;\n    if (pat.maxLen && v.length > pat.maxLen) {\n      const clipped = v.slice(0, pat.maxLen);\n      setV(clipped);\n      setValue(\"passportNumber\", clipped, { shouldValidate: true });\n    } else {\n      // trigger validation when country changes even if length is ok\n      setValue(\"passportNumber\", v, { shouldValidate: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [countryCode]);\n\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Passport number</span>\n      </label>\n      <input\n        {...(() => {\n          const r = register(\"passportNumber\");\n          return r;\n        })()}\n        ref={(el) => {\n          const r = register(\"passportNumber\");\n          if (typeof r.ref === \"function\") r.ref(el);\n          else if (r.ref) (r.ref as React.MutableRefObject<HTMLInputElement | null>).current = el;\n          (inputRef as React.MutableRefObject<HTMLInputElement | null>).current = el;\n        }}\n        value={v}\n        onChange={(e) => {\n          // Uppercase A–Z, digits only; hard limit by country pattern\n          let s = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, \"\");\n          if (pat.maxLen) s = s.slice(0, pat.maxLen);\n          setV(s);\n          setValue(\"passportNumber\", s, { shouldValidate: true });\n        }}\n        onBlur={(e) => {\n          const canon = normalizePassport(e.target.value);\n          setV(canon);\n          setValue(\"passportNumber\", canon, { shouldValidate: true });\n        }}\n        inputMode=\"text\"\n        autoCapitalize=\"characters\"\n        className=\"mt-1 w-full rounded border border-slate-300 p-2 font-mono tracking-wider\"\n        placeholder={pat.hint || \"e.g., K1234567\"}\n        aria-describedby=\"passport-hint\"\n      />\n      <p id=\"passport-hint\" className=\"text-xs text-slate-500\">\n        {countryCode ? `Expected format for ${countryCode.toUpperCase()}: ` : \"Expected format: \"}\n        {pat.hint || \"6–10 letters/digits\"}\n      </p>\n      {errors?.passportNumber?.message && (\n        <p className=\"text-xs text-rose-600\">{String(errors.passportNumber.message)}</p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAOe,SAAS,cAAc,KAUrC;QAVqC,EACpC,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,MAAM,EAMP,GAVqC;QAoE/B;;IAzDL,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,wSAAQ,EAAC;IAC3B,MAAM,MAAM,IAAA,uSAAO;sCAAC,IAAM,IAAA,oJAAkB,EAAC;qCAAc;QAAC;KAAY;IACxE,MAAM,WAAW,IAAA,sSAAM,EAAmB;IAE1C,2DAA2D;IAC3D,IAAA,ySAAS;mCAAC;YACR,IAAI,CAAC,SAAS,OAAO,EAAE;YACvB,IAAI,IAAI,MAAM,IAAI,EAAE,MAAM,GAAG,IAAI,MAAM,EAAE;gBACvC,MAAM,UAAU,EAAE,KAAK,CAAC,GAAG,IAAI,MAAM;gBACrC,KAAK;gBACL,SAAS,kBAAkB,SAAS;oBAAE,gBAAgB;gBAAK;YAC7D,OAAO;gBACL,+DAA+D;gBAC/D,SAAS,kBAAkB,GAAG;oBAAE,gBAAgB;gBAAK;YACvD;QACA,uDAAuD;QACzD;kCAAG;QAAC;KAAY;IAEhB,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,WAAU;0BACf,cAAA,4TAAC;oBAAK,WAAU;8BAA+B;;;;;;;;;;;0BAEjD,4TAAC;gBACE,GAAG,CAAC;oBACH,MAAM,IAAI,SAAS;oBACnB,OAAO;gBACT,CAAC,GAAG;gBACJ,KAAK,CAAC;oBACJ,MAAM,IAAI,SAAS;oBACnB,IAAI,OAAO,EAAE,GAAG,KAAK,YAAY,EAAE,GAAG,CAAC;yBAClC,IAAI,EAAE,GAAG,EAAE,AAAC,EAAE,GAAG,CAAqD,OAAO,GAAG;oBACpF,SAA6D,OAAO,GAAG;gBAC1E;gBACA,OAAO;gBACP,UAAU,CAAC;oBACT,4DAA4D;oBAC5D,IAAI,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc;oBAC3D,IAAI,IAAI,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,MAAM;oBACzC,KAAK;oBACL,SAAS,kBAAkB,GAAG;wBAAE,gBAAgB;oBAAK;gBACvD;gBACA,QAAQ,CAAC;oBACP,MAAM,QAAQ,IAAA,mJAAiB,EAAC,EAAE,MAAM,CAAC,KAAK;oBAC9C,KAAK;oBACL,SAAS,kBAAkB,OAAO;wBAAE,gBAAgB;oBAAK;gBAC3D;gBACA,WAAU;gBACV,gBAAe;gBACf,WAAU;gBACV,aAAa,IAAI,IAAI,IAAI;gBACzB,oBAAiB;;;;;;0BAEnB,4TAAC;gBAAE,IAAG;gBAAgB,WAAU;;oBAC7B,cAAc,AAAC,uBAAgD,OAA1B,YAAY,WAAW,IAAG,QAAM;oBACrE,IAAI,IAAI,IAAI;;;;;;;YAEd,CAAA,mBAAA,8BAAA,yBAAA,OAAQ,cAAc,cAAtB,6CAAA,uBAAwB,OAAO,mBAC9B,4TAAC;gBAAE,WAAU;0BAAyB,OAAO,OAAO,cAAc,CAAC,OAAO;;;;;;;;;;;;AAIlF;GAzEwB;KAAA","debugId":null}},
    {"offset": {"line": 2357, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/app/driver/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm, useFieldArray, type Resolver } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport {\n  RegisterSchema,\n  type RegisterValues,\n  normalizeForStorage,\n} from \"@/lib/register-schemas\";\nimport DocUploadField from \"@/components/driver/DocUploadField\";\nimport DriverCardPDF from \"@/components/pdf/DriverCardPDF\";\nimport { buildQrPayload, makeQrPng } from \"@/lib/qr\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport Image from \"next/image\";\nimport {\n  saveSnapshotRemote,\n  type DriverSnapshot,\n} from \"@/lib/demo-store-remote\";\nimport { uuidv4 } from \"@/lib/uuid\";\nimport NameFields from \"@/components/inputs/NameFields\";\nimport PhoneInput from \"@/components/inputs/PhoneInput\";\nimport PostalInput from \"@/components/inputs/PostalInput\";\nimport LicenceInput from \"@/components/inputs/LicenceInput\";\nimport StatusWizard from \"@/components/inputs/StatusWizard\";\nimport LicenseClassSelect from \"@/components/inputs/LicenseClassSelect\";\nimport CountrySelect from \"@/components/inputs/CountrySelect\";\nimport PassportInput from \"@/components/inputs/PassportInput\";\n\nexport default function RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    watch,\n    setValue,\n  } = useForm<RegisterValues>({\n    resolver: zodResolver(RegisterSchema) as unknown as Resolver<RegisterValues>,\n    defaultValues: {\n      englishLevel: undefined,\n      phoneCountry: \"CA\",\n      citizenship: \"CA\",\n      residencyCA: \"Citizen\",\n      consentDate: new Date().toISOString().slice(0, 10),\n      certifyAccurate: false,\n      otherLanguages: [],\n    },\n  });\n\n  const { fields: work, append: addWork, remove: removeWork } = useFieldArray({\n    control,\n    name: \"work\",\n  });\n\n  const [submitting, setSubmitting] = useState(false);\n  const [qrPng, setQrPng] = useState<string | null>(null);\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n  const [qrid, setQrid] = useState<string | null>(null);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [errorSummary, setErrorSummary] = useState<string[] | null>(null);\n  const citizenship = watch(\"citizenship\");\n  const residency = watch(\"residencyCA\");\n  const passportCountry = watch(\"passportCountry\");\n  const needPassport = citizenship !== \"CA\";\n  const needPermit = residency === \"Work Permit\" || residency === \"Study Permit\";\n  const needPR = residency === \"PR\";\n\n  const fullName = [watch(\"givenName\") || \"\", watch(\"middleName\") || \"\", watch(\"surname\") || \"\"]\n    .filter(Boolean)\n    .join(\" \");\n\n  async function onSubmit(values: RegisterValues) {\n    setSubmitting(true);\n    try {\n      setSubmitError(null);\n      setErrorSummary(null);\n      const storeReady = normalizeForStorage(values);\n\n      const id = uuidv4();\n      setQrid(id);\n\n      const payload = buildQrPayload({ qrid: id, origin: window.location.origin });\n      const png = await makeQrPng(payload);\n      setQrPng(png);\n\n      const snap: DriverSnapshot = {\n        qrid: id,\n        name: [storeReady.givenName, storeReady.middleName, storeReady.surname]\n          .filter(Boolean)\n          .join(\" \"),\n        jurisdiction: storeReady.jurisdiction,\n        licenseNo: storeReady.licenseNo,\n        licenseClass: storeReady.licenseClass,\n        licenseExpiry: storeReady.licenseExpiry,\n        issuedAt: new Date().toISOString(),\n      };\n      await saveSnapshotRemote(snap);\n\n      const doc = <DriverCardPDF name={snap.name} qrPng={png} />;\n      const blob = await pdf(doc).toBlob();\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    } catch (e) {\n      const msg = e instanceof Error ? e.message : String(e);\n      setSubmitError(msg);\n      if (typeof window !== \"undefined\")\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  function onInvalid(errs: import(\"react-hook-form\").FieldErrors<RegisterValues>) {\n    const msgs: string[] = [];\n    const pushMsg = (v: unknown) => {\n      if (!v) return;\n      if (typeof v === \"string\") msgs.push(v);\n    };\n    const order: Array<keyof RegisterValues> = [\n      \"givenName\",\"surname\",\"jurisdiction\",\"licenseNo\",\"licenseClass\",\"licenseExpiry\",\"dob\",\"email\",\"phone\",\"postal\",\"citizenship\",\"residencyCA\",\"prNumber\",\"permitType\",\"uci\",\"passportCountry\",\"passportNumber\",\"docLicenseFront\",\"docLicenseBack\",\"docHealthCard\",\"docPR\",\"docPassport\",\"docPermit\",\"consentName\",\"consentDate\",\"consentAbstract\",\"certifyAccurate\",\n    ];\n    for (const k of order) {\n      const issue = (errs as Record<string, any>)[k]?.message as string | undefined;\n      if (issue) pushMsg(issue);\n    }\n    setErrorSummary(msgs.length ? msgs : [\"Please review the highlighted fields.\"]);\n    const firstKey = order.find((k) => Boolean((errs as Record<string, unknown>)[k]));\n    if (firstKey) {\n      const el = document.querySelector(`[name=\"${String(firstKey)}\"]`) as HTMLElement | null;\n      if (el && typeof el.scrollIntoView === \"function\")\n        el.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      if (el && typeof el.focus === \"function\") el.focus();\n    }\n  }\n\n  function safeFileName(base: string) {\n    return base.replace(/[^a-z0-9-_]+/gi, \"_\").slice(0, 40) || \"card\";\n  }\n\n  function setFile<K extends keyof RegisterValues>(key: K, f: File | null) {\n    setValue(key, f ?? undefined, { shouldValidate: true });\n  }\n\n  return (\n    <main className=\"mx-auto max-w-3xl px-4 py-8\">\n      <div className=\"mb-6 rounded border border-emerald-200 bg-emerald-50 px-3 py-2 text-sm text-emerald-900\">\n        Secure submission • QR contains only a random ID • Minimal non-PII metadata is stored temporarily for the verification demo\n      </div>\n\n      <h1 className=\"mb-4 text-2xl font-semibold text-slate-900\">Driver Registration</h1>\n\n      {submitError && (\n        <div className=\"mb-4 rounded border border-amber-300 bg-amber-50 px-3 py-2 text-sm text-amber-900\">\n          {submitError}\n        </div>\n      )}\n      {errorSummary && (\n        <div className=\"mb-4 rounded border border-rose-300 bg-rose-50 px-3 py-2 text-sm text-rose-900\">\n          <p className=\"font-medium\">Please fix the following:</p>\n          <ul className=\"list-inside list-disc\">\n            {errorSummary.slice(0, 6).map((m, i) => (\n              <li key={i}>{m}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <form onSubmit={handleSubmit(onSubmit, onInvalid)} className=\"space-y-10\">\n        {/* Identity & Licence */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Identity & Licence</h2>\n          <NameFields register={register} setValue={setValue} errors={errors} />\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Field label=\"Issuing jurisdiction\" err={errors.jurisdiction?.message}>\n              <select\n                {...register(\"jurisdiction\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              >\n                <option value=\"\">Select</option>\n                <option>CA-MB</option>\n                <option>CA-ON</option>\n                <option>CA-AB</option>\n                <option>CA-BC</option>\n                <option>CA-SK</option>\n                <option>CA-QC</option>\n                <option>CA-NB</option>\n                <option>CA-NL</option>\n                <option>CA-NS</option>\n                <option>CA-PE</option>\n                <option>CA-YT</option>\n                <option>CA-NT</option>\n                <option>CA-NU</option>\n              </select>\n            </Field>\n            <LicenseClassSelect\n              register={register}\n              setValue={setValue}\n              watch={watch}\n              errors={errors}\n            />\n            <Field label=\"Licence expiry\" err={errors.licenseExpiry?.message}>\n              <input\n                type=\"date\"\n                {...register(\"licenseExpiry\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                min={new Date().toISOString().slice(0, 10)}\n                max=\"2099-12-31\"\n              />\n            </Field>\n            <Field label=\"Date of birth\" err={errors.dob?.message}>\n              <input\n                type=\"date\"\n                {...register(\"dob\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                max={new Date(new Date().setFullYear(new Date().getFullYear() - 16))\n                  .toISOString()\n                  .slice(0, 10)}\n              />\n            </Field>\n          </div>\n          <LicenceInput\n            register={register}\n            setValue={setValue}\n            watch={watch}\n            errors={errors}\n          />\n        </section>\n\n        {/* Contact */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Contact</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Field label=\"Email\" err={errors.email?.message}>\n              <input\n                type=\"email\"\n                {...register(\"email\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n            <PhoneInput\n              register={register}\n              setValue={setValue}\n              watch={watch}\n              errors={errors}\n            />\n          </div>\n        </section>\n\n        {/* Address */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Address</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <PostalInput register={register} setValue={setValue} errors={errors} />\n            <Field label=\"Region/Province/State (auto for CA)\">\n              <input {...register(\"region\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n            <Field label=\"Country code (auto for CA/US)\">\n              <input {...register(\"country\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" placeholder=\"CA or US\" />\n            </Field>\n            <Field label=\"City\">\n              <input {...register(\"city\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n            <Field label=\"Address line 1\">\n              <input {...register(\"address1\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n            <Field label=\"Address line 2\">\n              <input {...register(\"address2\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n          </div>\n        </section>\n        <StatusWizard\n          register={register}\n          watch={watch}\n          setValue={setValue}\n          errors={errors}\n        />\n\n        {/* PR card number */}\n        {needPR && (\n          <section className=\"space-y-3\">\n            <h3 className=\"font-medium\">Permanent Resident</h3>\n            <div className=\"grid gap-4 sm:grid-cols-2\">\n              <Field\n                label=\"PR card number (Document No.)\"\n                err={errors.prNumber?.message}\n              >\n                <input\n                  {...register(\"prNumber\")}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2 tracking-wider\"\n                  placeholder=\"AB12345678\"\n                />\n              </Field>\n            </div>\n          </section>\n        )}\n\n        {/* Passport (non-CA citizens) */}\n        {needPassport && (\n          <section className=\"space-y-3\">\n            <h3 className=\"font-medium\">Passport</h3>\n            <div className=\"grid gap-4 sm:grid-cols-2\">\n              <CountrySelect\n                name=\"passportCountry\"\n                label=\"Passport country\"\n                register={register}\n                setValue={setValue}\n                errors={errors}\n              />\n              <PassportInput\n                countryCode={passportCountry}\n                register={register}\n                setValue={setValue}\n                errors={errors}\n              />\n            </div>\n          </section>\n        )}\n\n        {/* Languages */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Languages</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2 items-end\">\n            <div>\n              <span className=\"block text-sm text-slate-700\">English</span>\n              <input\n                value=\"English\"\n                readOnly\n                className=\"mt-1 w-full rounded border border-slate-200 bg-slate-50 p-2 text-slate-700\"\n              />\n            </div>\n            <Field label=\"Level (required)\" err={errors.englishLevel?.message}>\n              <select\n                {...register(\"englishLevel\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>\n                  Fluency\n                </option>\n                <option>Basic</option>\n                <option>Conversational</option>\n                <option>Fluent</option>\n                <option>Native</option>\n              </select>\n            </Field>\n          </div>\n          <OtherLanguagesRows\n            value={watch(\"otherLanguages\") || []}\n            onChange={(rows) =>\n              setValue(\"otherLanguages\", rows as any, { shouldValidate: true })\n            }\n          />\n        </section>\n\n        {/* Work Experience */}\n        <section className=\"space-y-3\">\n          <h2 className=\"text-lg font-medium\">Work Experience (last 3 years)</h2>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-slate-700\">Add up to 10 entries</span>\n            <button\n              type=\"button\"\n              onClick={() => addWork({})}\n              className=\"text-sm underline\"\n            >\n              Add\n            </button>\n          </div>\n          {work.map((w, idx) => (\n            <div key={w.id} className=\"grid gap-2 sm:grid-cols-4\">\n              <Field\n                label=\"Company\"\n                err={(errors.work?.[idx] as any)?.company?.message}\n              >\n                <input\n                  {...register(`work.${idx}.company` as const)}\n                  className=\"mt-1 rounded border border-slate-300 p-2\"\n                />\n              </Field>\n              <Field\n                label=\"Role\"\n                err={(errors.work?.[idx] as any)?.role?.message}\n              >\n                <input\n                  {...register(`work.${idx}.role` as const)}\n                  className=\"mt-1 rounded border border-slate-300 p-2\"\n                />\n              </Field>\n              <Field\n                label=\"From\"\n                err={(errors.work?.[idx] as any)?.start?.message}\n              >\n                <input\n                  type=\"date\"\n                  {...register(`work.${idx}.start` as const)}\n                  className=\"mt-1 rounded border border-slate-300 p-2\"\n                />\n              </Field>\n              <Field\n                label=\"To\"\n                err={(errors.work?.[idx] as any)?.end?.message}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"date\"\n                    {...register(`work.${idx}.end` as const)}\n                    className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"text-sm underline\"\n                    onClick={() => removeWork(idx)}\n                  >\n                    Remove\n                  </button>\n                </div>\n              </Field>\n            </div>\n          ))}\n        </section>\n\n        {/* Documents */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Documents</h2>\n          <DocUploadField\n            label=\"Licence - front\"\n            required\n            value={(watch(\"docLicenseFront\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docLicenseFront\", f)}\n          />\n          <DocUploadField\n            label=\"Licence - back\"\n            required\n            value={(watch(\"docLicenseBack\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docLicenseBack\", f)}\n          />\n          <DocUploadField\n            label=\"Health card\"\n            required\n            value={(watch(\"docHealthCard\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docHealthCard\", f)}\n          />\n          {needPR && (\n            <DocUploadField\n              label=\"PR Card\"\n              required\n              value={(watch(\"docPR\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPR\", f)}\n            />\n          )}\n          {needPassport && (\n            <DocUploadField\n              label=\"Passport\"\n              required\n              value={(watch(\"docPassport\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPassport\", f)}\n            />\n          )}\n          {needPermit && (\n            <DocUploadField\n              label=\"Work/Study Permit\"\n              required\n              value={(watch(\"docPermit\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPermit\", f)}\n            />\n          )}\n          <p className=\"text-xs text-slate-500\">\n            Accepted: JPG/PNG • Max 4 MB each.\n          </p>\n        </section>\n\n        {/* Consent */}\n        <section className=\"space-y-2\">\n          <h2 className=\"text-lg font-medium\">Consent</h2>\n          <label className=\"flex items-start gap-2 text-sm text-slate-800\">\n            <input type=\"checkbox\" {...register(\"consentAbstract\")} className=\"mt-1\" />\n            I authorise [ORG] to request my driver abstract from the issuing authority.\n          </label>\n          <div className=\"grid gap-4 sm:grid-cols-3\">\n            <Field label=\"Type your name to sign\" err={errors.consentName?.message}>\n              <input\n                {...register(\"consentName\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n            <Field label=\"Date\" err={errors.consentDate?.message}>\n              <input\n                type=\"date\"\n                {...register(\"consentDate\")}\n                defaultValue={new Date().toISOString().slice(0, 10)}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n          </div>\n          <label className=\"flex items-start gap-2 text-sm text-slate-800\">\n            <input type=\"checkbox\" {...register(\"certifyAccurate\")} className=\"mt-1\" />\n            I certify the information provided is accurate.\n          </label>\n          {errors.consentAbstract?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.consentAbstract.message)}</p>\n          )}\n          {errors.certifyAccurate?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.certifyAccurate.message)}</p>\n          )}\n        </section>\n\n        {/* Submit */}\n        <div className=\"flex items-center gap-3 pt-2\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-emerald-600 px-4 py-2 text-white hover:bg-emerald-700 disabled:opacity-50\"\n            disabled={submitting}\n          >\n            {submitting ? \"Generating…\" : \"Submit & Generate QR\"}\n          </button>\n          <span className=\"text-sm text-slate-500\">\n            Data stays on your device for this demo. No upload occurs.\n          </span>\n        </div>\n      </form>\n\n      {/* Result */}\n      {qrPng && pdfUrl && (\n        <section className=\"mt-10 rounded border border-slate-200 p-4\">\n          <h3 className=\"mb-2 text-base font-medium\">Your QR & Card</h3>\n          <div className=\"flex items-center gap-6\">\n            <Image\n              src={qrPng}\n              alt=\"QR code\"\n              width={160}\n              height={160}\n              className=\"h-40 w-40 border border-slate-200\"\n            />\n            <div className=\"space-y-2\">\n              <a\n                href={pdfUrl}\n                download={`driver-card-${safeFileName(fullName || (qrid?.slice(0, 8) ?? \"card\"))}.pdf`}\n                className=\"inline-flex rounded bg-slate-900 px-4 py-2 text-white hover:bg-slate-800\"\n              >\n                Download Card (PDF)\n              </a>\n              <p className=\"text-sm text-slate-600\">\n                Card shows only your name and this QR. The QR contains only a random ID (no personal data). \n                A minimal non-PII snapshot is stored temporarily to enable verification.\n              </p>\n            </div>\n          </div>\n        </section>\n      )}\n    </main>\n  );\n}\n\nfunction Field({ label, err, children }: { label: string; err?: string; children: React.ReactNode }) {\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      {children}\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n\nfunction OtherLanguagesRows({\n  value,\n  onChange,\n}: {\n  value: Array<{ language: string; level: \"Basic\" | \"Conversational\" | \"Fluent\" | \"Native\" }>;\n  onChange: (rows: Array<{ language: string; level: \"Basic\" | \"Conversational\" | \"Fluent\" | \"Native\" }>) => void;\n}) {\n  const rows = value ?? [];\n  function add() {\n    onChange([...(rows || []), { language: \"\", level: \"Conversational\" }]);\n  }\n  function remove(idx: number) {\n    const next = [...rows];\n    next.splice(idx, 1);\n    onChange(next);\n  }\n  function setRow(idx: number, patch: Partial<{ language: string; level: any }>) {\n    const next = [...rows];\n    next[idx] = { ...next[idx], ...patch };\n    onChange(next);\n  }\n  return (\n    <div className=\"space-y-2\">\n      {rows.map((row, idx) => (\n        <div key={idx} className=\"grid gap-3 sm:grid-cols-3 items-end\">\n          <Field label=\"Other language\">\n            <input\n              list=\"all-languages\"\n              value={row.language}\n              onChange={(e) => setRow(idx, { language: e.target.value })}\n              className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              placeholder=\"Select language\"\n            />\n          </Field>\n          <Field label=\"Level\">\n            <select\n              value={row.level}\n              onChange={(e) => setRow(idx, { level: e.target.value })}\n              className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n            >\n              <option>Basic</option>\n              <option>Conversational</option>\n              <option>Fluent</option>\n              <option>Native</option>\n            </select>\n          </Field>\n          <div className=\"flex items-end\">\n            <button\n              type=\"button\"\n              onClick={() => remove(idx)}\n              className=\"ml-auto rounded border px-3 py-2 text-sm hover:bg-slate-50\"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      ))}\n      <div className=\"flex\">\n        <button\n          type=\"button\"\n          onClick={add}\n          className=\"ml-auto inline-flex items-center gap-2 rounded bg-slate-900 px-3 py-2 text-sm text-white hover:bg-slate-800\"\n          title=\"Add another language\"\n        >\n          <span>+ Add language</span>\n        </button>\n      </div>\n      <datalist id=\"all-languages\">\n        {[\n          \"Arabic\",\"Bengali\",\"Chinese (Cantonese)\",\"Chinese (Mandarin)\",\"Dutch\",\"English\",\"Farsi\",\"French\",\"German\",\n          \"Gujarati\",\"Hebrew\",\"Hindi\",\"Italian\",\"Japanese\",\"Korean\",\"Malay\",\"Marathi\",\"Panjabi (Punjabi)\",\"Polish\",\n          \"Portuguese\",\"Punjabi\",\"Russian\",\"Spanish\",\"Tagalog\",\"Tamil\",\"Telugu\",\"Thai\",\"Turkish\",\"Ukrainian\",\"Urdu\",\"Vietnamese\",\n        ].map((l) => (\n          <option key={l} value={l} />\n        ))}\n      </datalist>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}