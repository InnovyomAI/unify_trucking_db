module.exports=[39457,a=>{"use strict";a.s(["appendErrors",()=>t,"get",()=>k,"set",()=>l,"useFieldArray",()=>af,"useForm",()=>ag]);var b=a.i(39059),c=a=>a instanceof Date,d=a=>null==a,e=a=>!d(a)&&!Array.isArray(a)&&"object"==typeof a&&!c(a);function f(a){let b,c=Array.isArray(a);if("undefined"!=typeof FileList&&FileList,a instanceof Date)b=new Date(a);else if(!(c||e(a)))return a;else if(b=c?[]:Object.create(Object.getPrototypeOf(a)),c||(a=>{let b=a.constructor&&a.constructor.prototype;return e(b)&&b.hasOwnProperty("isPrototypeOf")})(a))for(let c in a)a.hasOwnProperty(c)&&(b[c]=f(a[c]));else b=a;return b}var g=a=>/^\w*$/.test(a),h=a=>void 0===a,i=a=>Array.isArray(a)?a.filter(Boolean):[],j=a=>i(a.replace(/["|']|\]/g,"").split(/\.|\[/)),k=(a,b,c)=>{if(!b||!e(a))return c;let f=(g(b)?[b]:j(b)).reduce((a,b)=>d(a)?a:a[b],a);return h(f)||f===a?h(a[b])?c:a[b]:f},l=(a,b,c)=>{let d=-1,f=g(b)?[b]:j(b),h=f.length,i=h-1;for(;++d<h;){let b=f[d],g=c;if(d!==i){let c=a[b];g=e(c)||Array.isArray(c)?c:isNaN(+f[d+1])?{}:[]}if("__proto__"===b||"constructor"===b||"prototype"===b)return;a[b]=g,a=a[b]}};let m={BLUR:"blur",FOCUS_OUT:"focusout"},n={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},o={max:"max",min:"min",maxLength:"maxLength",minLength:"minLength",pattern:"pattern",required:"required",validate:"validate"},p=b.default.createContext(null);p.displayName="HookFormContext";let q=b.default.useEffect;var r=a=>d(a)||"object"!=typeof a;function s(a,b,d=new WeakSet){if(r(a)||r(b))return a===b;if(c(a)&&c(b))return a.getTime()===b.getTime();let f=Object.keys(a),g=Object.keys(b);if(f.length!==g.length)return!1;if(d.has(a)||d.has(b))return!0;for(let h of(d.add(a),d.add(b),f)){let f=a[h];if(!g.includes(h))return!1;if("ref"!==h){let a=b[h];if(c(f)&&c(a)||e(f)&&e(a)||Array.isArray(f)&&Array.isArray(a)?!s(f,a,d):f!==a)return!1}}return!0}var t=(a,b,c,d,e)=>b?{...c[a],types:{...c[a]&&c[a].types?c[a].types:{},[d]:e||!0}}:{},u=a=>Array.isArray(a)?a:[a],v=()=>{let a=[];return{get observers(){return a},next:b=>{for(let c of a)c.next&&c.next(b)},subscribe:b=>(a.push(b),{unsubscribe:()=>{a=a.filter(a=>a!==b)}}),unsubscribe:()=>{a=[]}}},w=a=>e(a)&&!Object.keys(a).length,x=a=>"function"==typeof a,y=a=>!1;function z(a,b){let c=Array.isArray(b)?b:g(b)?[b]:j(b),d=1===c.length?a:function(a,b){let c=b.slice(0,-1).length,d=0;for(;d<c;)a=h(a)?d++:a[b[d++]];return a}(a,c),f=c.length-1,i=c[f];return d&&delete d[i],0!==f&&(e(d)&&w(d)||Array.isArray(d)&&function(a){for(let b in a)if(a.hasOwnProperty(b)&&!h(a[b]))return!1;return!0}(d))&&z(a,c.slice(0,-1)),a}var A=a=>{for(let b in a)if(x(a[b]))return!0;return!1};function B(a,b={}){let c=Array.isArray(a);if(e(a)||c)for(let c in a)Array.isArray(a[c])||e(a[c])&&!A(a[c])?(b[c]=Array.isArray(a[c])?[]:{},B(a[c],b[c])):d(a[c])||(b[c]=!0);return b}var C=(a,b)=>(function a(b,c,f){let g=Array.isArray(b);if(e(b)||g)for(let g in b)Array.isArray(b[g])||e(b[g])&&!A(b[g])?h(c)||r(f[g])?f[g]=Array.isArray(b[g])?B(b[g],[]):{...B(b[g])}:a(b[g],d(c)?{}:c[g],f[g]):f[g]=!s(b[g],c[g]);return f})(a,b,B(b));let D={value:!1,isValid:!1},E={value:!0,isValid:!0};var F=a=>{if(Array.isArray(a)){if(a.length>1){let b=a.filter(a=>a&&a.checked&&!a.disabled).map(a=>a.value);return{value:b,isValid:!!b.length}}return a[0].checked&&!a[0].disabled?a[0].attributes&&!h(a[0].attributes.value)?h(a[0].value)||""===a[0].value?E:{value:a[0].value,isValid:!0}:E:D}return D},G=(a,{valueAsNumber:b,valueAsDate:c,setValueAs:d})=>h(a)?a:b?""===a?NaN:a?+a:a:c&&"string"==typeof a?new Date(a):d?d(a):a;let H={isValid:!1,value:null};var I=a=>Array.isArray(a)?a.reduce((a,b)=>b&&b.checked&&!b.disabled?{isValid:!0,value:b.value}:a,H):H;function J(a){let b=a.ref;return"file"===b.type?b.files:"radio"===b.type?I(a.refs).value:"select-multiple"===b.type?[...b.selectedOptions].map(({value:a})=>a):"checkbox"===b.type?F(a.refs).value:G(h(b.value)?a.ref.value:b.value,a)}var K=a=>h(a)?a:a instanceof RegExp?a.source:e(a)?a.value instanceof RegExp?a.value.source:a.value:a,L=a=>({isOnSubmit:!a||a===n.onSubmit,isOnBlur:a===n.onBlur,isOnChange:a===n.onChange,isOnAll:a===n.all,isOnTouch:a===n.onTouched});let M="AsyncFunction";var N=a=>!!a&&!!a.validate&&!!(x(a.validate)&&a.validate.constructor.name===M||e(a.validate)&&Object.values(a.validate).find(a=>a.constructor.name===M)),O=(a,b,c)=>!c&&(b.watchAll||b.watch.has(a)||[...b.watch].some(b=>a.startsWith(b)&&/^\.\w+/.test(a.slice(b.length))));let P=(a,b,c,d)=>{for(let f of c||Object.keys(a)){let c=k(a,f);if(c){let{_f:a,...g}=c;if(a){if(a.refs&&a.refs[0]&&b(a.refs[0],f)&&!d)return!0;else if(a.ref&&b(a.ref,a.name)&&!d)return!0;else if(P(g,b))break}else if(e(g)&&P(g,b))break}}};function Q(a,b,c){let d=k(a,c);if(d||g(c))return{error:d,name:c};let e=c.split(".");for(;e.length;){let d=e.join("."),f=k(b,d),g=k(a,d);if(f&&!Array.isArray(f)&&c!==d)break;if(g&&g.type)return{name:d,error:g};if(g&&g.root&&g.root.type)return{name:`${d}.root`,error:g.root};e.pop()}return{name:c}}var R=(a,b,c)=>{let d=u(k(a,c));return l(d,"root",b[c]),l(a,c,d),a},S=a=>"string"==typeof a;function T(a,b,c="validate"){if(S(a)||Array.isArray(a)&&a.every(S)||"boolean"==typeof a&&!a)return{type:c,message:S(a)?a:"",ref:b}}var U=a=>!e(a)||a instanceof RegExp?{value:a,message:""}:a,V=async(a,b,c,f,g,i)=>{let{ref:j,refs:l,required:m,maxLength:n,minLength:p,min:q,max:r,pattern:s,validate:u,name:v,valueAsNumber:y,mount:z}=a._f,A=k(c,v);if(!z||b.has(v))return{};let B=l?l[0]:j,C=a=>{g&&B.reportValidity&&(B.setCustomValidity("boolean"==typeof a?"":a||""),B.reportValidity())},D={},E="radio"===j.type,G="checkbox"===j.type,H=(y||"file"===j.type)&&h(j.value)&&h(A)||""===A||Array.isArray(A)&&!A.length,J=t.bind(null,v,f,D),K=(a,b,c,d=o.maxLength,e=o.minLength)=>{let f=a?b:c;D[v]={type:a?d:e,message:f,ref:j,...J(a?d:e,f)}};if(i?!Array.isArray(A)||!A.length:m&&(!(E||G)&&(H||d(A))||"boolean"==typeof A&&!A||G&&!F(l).isValid||E&&!I(l).isValid)){let{value:a,message:b}=S(m)?{value:!!m,message:m}:U(m);if(a&&(D[v]={type:o.required,message:b,ref:B,...J(o.required,b)},!f))return C(b),D}if(!H&&(!d(q)||!d(r))){let a,b,c=U(r),e=U(q);if(d(A)||isNaN(A)){let d=j.valueAsDate||new Date(A),f=a=>new Date(new Date().toDateString()+" "+a),g="time"==j.type,h="week"==j.type;"string"==typeof c.value&&A&&(a=g?f(A)>f(c.value):h?A>c.value:d>new Date(c.value)),"string"==typeof e.value&&A&&(b=g?f(A)<f(e.value):h?A<e.value:d<new Date(e.value))}else{let f=j.valueAsNumber||(A?+A:A);d(c.value)||(a=f>c.value),d(e.value)||(b=f<e.value)}if((a||b)&&(K(!!a,c.message,e.message,o.max,o.min),!f))return C(D[v].message),D}if((n||p)&&!H&&("string"==typeof A||i&&Array.isArray(A))){let a=U(n),b=U(p),c=!d(a.value)&&A.length>+a.value,e=!d(b.value)&&A.length<+b.value;if((c||e)&&(K(c,a.message,b.message),!f))return C(D[v].message),D}if(s&&!H&&"string"==typeof A){let{value:a,message:b}=U(s);if(a instanceof RegExp&&!A.match(a)&&(D[v]={type:o.pattern,message:b,ref:j,...J(o.pattern,b)},!f))return C(b),D}if(u){if(x(u)){let a=T(await u(A,c),B);if(a&&(D[v]={...a,...J(o.validate,a.message)},!f))return C(a.message),D}else if(e(u)){let a={};for(let b in u){if(!w(a)&&!f)break;let d=T(await u[b](A,c),B,b);d&&(a={...d,...J(b,d.message)},C(d.message),f&&(D[v]=a))}if(!w(a)&&(D[v]={ref:B,...a},!f))return D}}return C(!0),D};let W={mode:n.onSubmit,reValidateMode:n.onChange,shouldFocusError:!0};var X=()=>{if("undefined"!=typeof crypto&&crypto.randomUUID)return crypto.randomUUID();let a="undefined"==typeof performance?Date.now():1e3*performance.now();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,b=>{let c=(16*Math.random()+a)%16|0;return("x"==b?c:3&c|8).toString(16)})},Y=(a,b,c={})=>c.shouldFocus||h(c.shouldFocus)?c.focusName||`${a}.${h(c.focusIndex)?b:c.focusIndex}.`:"",Z=(a,b)=>[...a,...u(b)],$=a=>Array.isArray(a)?a.map(()=>void 0):void 0;function _(a,b,c){return[...a.slice(0,b),...u(c),...a.slice(b)]}var aa=(a,b,c)=>Array.isArray(a)?(h(a[c])&&(a[c]=void 0),a.splice(c,0,a.splice(b,1)[0]),a):[],ab=(a,b)=>[...u(b),...u(a)],ac=(a,b)=>h(b)?[]:function(a,b){let c=0,d=[...a];for(let a of b)d.splice(a-c,1),c++;return i(d).length?d:[]}(a,u(b).sort((a,b)=>a-b)),ad=(a,b,c)=>{[a[b],a[c]]=[a[c],a[b]]},ae=(a,b,c)=>(a[b]=c,a);function af(a){let c=b.default.useContext(p),{control:d=c.control,name:e,keyName:g="id",shouldUnregister:h,rules:i}=a,[j,m]=b.default.useState(d._getFieldArray(e)),o=b.default.useRef(d._getFieldArray(e).map(X)),r=b.default.useRef(j),s=b.default.useRef(!1);r.current=j,d._names.array.add(e),b.default.useMemo(()=>i&&d.register(e,i),[d,i,e]),q(()=>d._subjects.array.subscribe({next:({values:a,name:b})=>{if(b===e||!b){let b=k(a,e);Array.isArray(b)&&(m(b),o.current=b.map(X))}}}).unsubscribe,[d,e]);let t=b.default.useCallback(a=>{s.current=!0,d._setFieldArray(e,a)},[d,e]);return b.default.useEffect(()=>{if(d._state.action=!1,O(e,d._names)&&d._subjects.state.next({...d._formState}),s.current&&(!L(d._options.mode).isOnSubmit||d._formState.isSubmitted)&&!L(d._options.reValidateMode).isOnSubmit)if(d._options.resolver)d._runSchema([e]).then(a=>{let b=k(a.errors,e),c=k(d._formState.errors,e);(c?!b&&c.type||b&&(c.type!==b.type||c.message!==b.message):b&&b.type)&&(b?l(d._formState.errors,e,b):z(d._formState.errors,e),d._subjects.state.next({errors:d._formState.errors}))});else{let a=k(d._fields,e);a&&a._f&&!(L(d._options.reValidateMode).isOnSubmit&&L(d._options.mode).isOnSubmit)&&V(a,d._names.disabled,d._formValues,d._options.criteriaMode===n.all,d._options.shouldUseNativeValidation,!0).then(a=>!w(a)&&d._subjects.state.next({errors:R(d._formState.errors,a,e)}))}d._subjects.state.next({name:e,values:f(d._formValues)}),d._names.focus&&P(d._fields,(a,b)=>{if(d._names.focus&&b.startsWith(d._names.focus)&&a.focus)return a.focus(),1}),d._names.focus="",d._setValid(),s.current=!1},[j,e,d]),b.default.useEffect(()=>(k(d._formValues,e)||d._setFieldArray(e),()=>{d._options.shouldUnregister||h?d.unregister(e):((a,b)=>{let c=k(d._fields,a);c&&c._f&&(c._f.mount=b)})(e,!1)}),[e,d,g,h]),{swap:b.default.useCallback((a,b)=>{let c=d._getFieldArray(e);ad(c,a,b),ad(o.current,a,b),t(c),m(c),d._setFieldArray(e,c,ad,{argA:a,argB:b},!1)},[t,e,d]),move:b.default.useCallback((a,b)=>{let c=d._getFieldArray(e);aa(c,a,b),aa(o.current,a,b),t(c),m(c),d._setFieldArray(e,c,aa,{argA:a,argB:b},!1)},[t,e,d]),prepend:b.default.useCallback((a,b)=>{let c=u(f(a)),g=ab(d._getFieldArray(e),c);d._names.focus=Y(e,0,b),o.current=ab(o.current,c.map(X)),t(g),m(g),d._setFieldArray(e,g,ab,{argA:$(a)})},[t,e,d]),append:b.default.useCallback((a,b)=>{let c=u(f(a)),g=Z(d._getFieldArray(e),c);d._names.focus=Y(e,g.length-1,b),o.current=Z(o.current,c.map(X)),t(g),m(g),d._setFieldArray(e,g,Z,{argA:$(a)})},[t,e,d]),remove:b.default.useCallback(a=>{let b=ac(d._getFieldArray(e),a);o.current=ac(o.current,a),t(b),m(b),Array.isArray(k(d._fields,e))||l(d._fields,e,void 0),d._setFieldArray(e,b,ac,{argA:a})},[t,e,d]),insert:b.default.useCallback((a,b,c)=>{let g=u(f(b)),h=_(d._getFieldArray(e),a,g);d._names.focus=Y(e,a,c),o.current=_(o.current,a,g.map(X)),t(h),m(h),d._setFieldArray(e,h,_,{argA:a,argB:$(b)})},[t,e,d]),update:b.default.useCallback((a,b)=>{let c=f(b),g=ae(d._getFieldArray(e),a,c);o.current=[...g].map((b,c)=>b&&c!==a?o.current[c]:X()),t(g),m([...g]),d._setFieldArray(e,g,ae,{argA:a,argB:c},!0,!1)},[t,e,d]),replace:b.default.useCallback(a=>{let b=u(f(a));o.current=b.map(X),t([...b]),m([...b]),d._setFieldArray(e,[...b],a=>a,{},!0,!1)},[t,e,d]),fields:b.default.useMemo(()=>j.map((a,b)=>({...a,[g]:o.current[b]||X()})),[j,g])}}function ag(a={}){let g=b.default.useRef(void 0),j=b.default.useRef(void 0),[o,p]=b.default.useState({isDirty:!1,isValidating:!1,isLoading:x(a.defaultValues),isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},validatingFields:{},errors:a.errors||{},disabled:a.disabled||!1,isReady:!1,defaultValues:x(a.defaultValues)?void 0:a.defaultValues});if(!g.current)if(a.formControl)g.current={...a.formControl,formState:o},a.defaultValues&&!x(a.defaultValues)&&a.formControl.reset(a.defaultValues,a.resetOptions);else{let{formControl:b,...j}=function(a={}){let b,g={...W,...a},j={submitCount:0,isDirty:!1,isReady:!1,isLoading:x(g.defaultValues),isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},validatingFields:{},errors:g.errors||{},disabled:g.disabled||!1},o={},p=(e(g.defaultValues)||e(g.values))&&f(g.defaultValues||g.values)||{},q=g.shouldUnregister?{}:f(p),r={action:!1,mount:!1,watch:!1},t={mount:new Set,disabled:new Set,unMount:new Set,array:new Set,watch:new Set},A=0,B={isDirty:!1,dirtyFields:!1,validatingFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},D={...B},E={array:v(),state:v()},F=g.criteriaMode===n.all,H=async a=>{if(!g.disabled&&(B.isValid||D.isValid||a)){let a=g.resolver?w((await T()).errors):await X(o,!0);a!==j.isValid&&E.state.next({isValid:a})}},I=(a,b)=>{!g.disabled&&(B.isValidating||B.validatingFields||D.isValidating||D.validatingFields)&&((a||Array.from(t.mount)).forEach(a=>{a&&(b?l(j.validatingFields,a,b):z(j.validatingFields,a))}),E.state.next({validatingFields:j.validatingFields,isValidating:!w(j.validatingFields)}))},M=(a,b,c,d)=>{let e=k(o,a);if(e){let f=k(q,a,h(c)?k(p,a):c);h(f)||d&&d.defaultChecked||b?l(q,a,b?f:J(e._f)):$(a,f),r.mount&&H()}},S=(a,b,c,d,e)=>{let f=!1,h=!1,i={name:a};if(!g.disabled){if(!c||d){(B.isDirty||D.isDirty)&&(h=j.isDirty,j.isDirty=i.isDirty=Y(),f=h!==i.isDirty);let c=s(k(p,a),b);h=!!k(j.dirtyFields,a),c?z(j.dirtyFields,a):l(j.dirtyFields,a,!0),i.dirtyFields=j.dirtyFields,f=f||(B.dirtyFields||D.dirtyFields)&&!c!==h}if(c){let b=k(j.touchedFields,a);b||(l(j.touchedFields,a,c),i.touchedFields=j.touchedFields,f=f||(B.touchedFields||D.touchedFields)&&b!==c)}f&&e&&E.state.next(i)}return f?i:{}},T=async a=>{I(a,!0);let b=await g.resolver(q,g.context,((a,b,c,d)=>{let e={};for(let c of a){let a=k(b,c);a&&l(e,c,a._f)}return{criteriaMode:c,names:[...a],fields:e,shouldUseNativeValidation:d}})(a||t.mount,o,g.criteriaMode,g.shouldUseNativeValidation));return I(a),b},U=async a=>{let{errors:b}=await T(a);if(a)for(let c of a){let a=k(b,c);a?l(j.errors,c,a):z(j.errors,c)}else j.errors=b;return b},X=async(a,b,c={valid:!0})=>{for(let d in a){let e=a[d];if(e){let{_f:a,...f}=e;if(a){let f=t.array.has(a.name),h=e._f&&N(e._f);h&&B.validatingFields&&I([d],!0);let i=await V(e,t.disabled,q,F,g.shouldUseNativeValidation&&!b,f);if(h&&B.validatingFields&&I([d]),i[a.name]&&(c.valid=!1,b))break;b||(k(i,a.name)?f?R(j.errors,i,a.name):l(j.errors,a.name,i[a.name]):z(j.errors,a.name))}w(f)||await X(f,b,c)}}return c.valid},Y=(a,b)=>!g.disabled&&(a&&b&&l(q,a,b),!s(ae(),p)),Z=(a,b,c)=>{let d,e,f,g,i;return d=a,e=t,f={...r.mount?q:h(b)?p:"string"==typeof a?{[a]:b}:b},g=c,i=b,"string"==typeof d?(g&&e.watch.add(d),k(f,d,i)):Array.isArray(d)?d.map(a=>(g&&e.watch.add(a),k(f,a))):(g&&(e.watchAll=!0),f)},$=(a,b,c={})=>{let d=k(o,a),e=b;if(d){let c=d._f;c&&(c.disabled||l(q,a,G(b,c)),c.ref,e=b,"select-multiple"===c.ref.type?[...c.ref.options].forEach(a=>a.selected=e.includes(a.value)):c.refs?"checkbox"===c.ref.type?c.refs.forEach(a=>{a.defaultChecked&&a.disabled||(Array.isArray(e)?a.checked=!!e.find(b=>b===a.value):a.checked=e===a.value||!!e)}):c.refs.forEach(a=>a.checked=a.value===e):"file"===c.ref.type?c.ref.value="":(c.ref.value=e,c.ref.type||E.state.next({name:a,values:f(q)})))}(c.shouldDirty||c.shouldTouch)&&S(a,e,c.shouldTouch,c.shouldDirty,!0),c.shouldValidate&&ad(a)},_=(a,b,d)=>{for(let f in b){if(!b.hasOwnProperty(f))return;let g=b[f],h=a+"."+f,i=k(o,h);(t.array.has(a)||e(g)||i&&!i._f)&&!c(g)?_(h,g,d):$(h,g,d)}},aa=(a,b,c={})=>{let e=k(o,a),g=t.array.has(a),h=f(b);l(q,a,h),g?(E.array.next({name:a,values:f(q)}),(B.isDirty||B.dirtyFields||D.isDirty||D.dirtyFields)&&c.shouldDirty&&E.state.next({name:a,dirtyFields:C(p,q),isDirty:Y(a,h)})):!e||e._f||d(h)?$(a,h,c):_(a,h,c),O(a,t)&&E.state.next({...j,name:a}),E.state.next({name:r.mount?a:void 0,values:f(q)})},ab=async a=>{r.mount=!0;let d=a.target,h=d.name,i=!0,n=k(o,h),p=a=>{i=Number.isNaN(a)||c(a)&&isNaN(a.getTime())||s(a,k(q,h,a))},u=L(g.mode),v=L(g.reValidateMode);if(n){let c,r,L,R,U=d.type?J(n._f):e(R=a)&&R.target?"checkbox"===R.target.type?R.target.checked:R.target.value:R,W=a.type===m.BLUR||a.type===m.FOCUS_OUT,Y=!((L=n._f).mount&&(L.required||L.min||L.max||L.maxLength||L.minLength||L.pattern||L.validate))&&!g.resolver&&!k(j.errors,h)&&!n._f.deps||(x=W,y=k(j.touchedFields,h),C=j.isSubmitted,G=v,!(K=u).isOnAll&&(!C&&K.isOnTouch?!(y||x):(C?G.isOnBlur:K.isOnBlur)?!x:(C?!G.isOnChange:!K.isOnChange)||x)),Z=O(h,t,W);l(q,h,U),W?d&&d.readOnly||(n._f.onBlur&&n._f.onBlur(a),b&&b(0)):n._f.onChange&&n._f.onChange(a);let $=S(h,U,W),_=!w($)||Z;if(W||E.state.next({name:h,type:a.type,values:f(q)}),Y)return(B.isValid||D.isValid)&&("onBlur"===g.mode?W&&H():W||H()),_&&E.state.next({name:h,...Z?{}:$});if(!W&&Z&&E.state.next({...j}),g.resolver){let{errors:a}=await T([h]);if(p(U),i){let b=Q(j.errors,o,h),d=Q(a,o,b.name||h);c=d.error,h=d.name,r=w(a)}}else I([h],!0),c=(await V(n,t.disabled,q,F,g.shouldUseNativeValidation))[h],I([h]),p(U),i&&(c?r=!1:(B.isValid||D.isValid)&&(r=await X(o,!0)));if(i){n._f.deps&&ad(n._f.deps);var x,y,C,G,K,M=h,N=r,P=c;let a=k(j.errors,M),d=(B.isValid||D.isValid)&&"boolean"==typeof N&&j.isValid!==N;if(g.delayError&&P){let a;a=()=>{l(j.errors,M,P),E.state.next({errors:j.errors})},(b=b=>{clearTimeout(A),A=setTimeout(a,b)})(g.delayError)}else clearTimeout(A),b=null,P?l(j.errors,M,P):z(j.errors,M);if((P?!s(a,P):a)||!w($)||d){let a={...$,...d&&"boolean"==typeof N?{isValid:N}:{},errors:j.errors,name:M};j={...j,...a},E.state.next(a)}}}},ac=(a,b)=>{if(k(j.errors,b)&&a.focus)return a.focus(),1},ad=async(a,b={})=>{let c,d,e=u(a);if(g.resolver){let b=await U(h(a)?a:e);c=w(b),d=a?!e.some(a=>k(b,a)):c}else a?((d=(await Promise.all(e.map(async a=>{let b=k(o,a);return await X(b&&b._f?{[a]:b}:b)}))).every(Boolean))||j.isValid)&&H():d=c=await X(o);return E.state.next({..."string"!=typeof a||(B.isValid||D.isValid)&&c!==j.isValid?{}:{name:a},...g.resolver||!a?{isValid:c}:{},errors:j.errors}),b.shouldFocus&&!d&&P(o,ac,a?e:t.mount),d},ae=a=>{let b={...r.mount?q:p};return h(a)?b:"string"==typeof a?k(b,a):a.map(a=>k(b,a))},af=(a,b)=>({invalid:!!k((b||j).errors,a),isDirty:!!k((b||j).dirtyFields,a),error:k((b||j).errors,a),isValidating:!!k(j.validatingFields,a),isTouched:!!k((b||j).touchedFields,a)}),ag=(a,b,c)=>{let d=(k(o,a,{_f:{}})._f||{}).ref,{ref:e,message:f,type:g,...h}=k(j.errors,a)||{};l(j.errors,a,{...h,...b,ref:d}),E.state.next({name:a,errors:j.errors,isValid:!1}),c&&c.shouldFocus&&d&&d.focus&&d.focus()},ah=a=>E.state.subscribe({next:b=>{let c,d,e;c=a.name,d=b.name,e=a.exact,(!c||!d||c===d||u(c).some(a=>a&&(e?a===d:a.startsWith(d)||d.startsWith(a))))&&((a,b,c,d)=>{c(a);let{name:e,...f}=a;return w(f)||Object.keys(f).length>=Object.keys(b).length||Object.keys(f).find(a=>b[a]===(!d||n.all))})(b,a.formState||B,ap,a.reRenderRoot)&&a.callback({values:{...q},...j,...b,defaultValues:p})}}).unsubscribe,ai=(a,b={})=>{for(let c of a?u(a):t.mount)t.mount.delete(c),t.array.delete(c),b.keepValue||(z(o,c),z(q,c)),b.keepError||z(j.errors,c),b.keepDirty||z(j.dirtyFields,c),b.keepTouched||z(j.touchedFields,c),b.keepIsValidating||z(j.validatingFields,c),g.shouldUnregister||b.keepDefaultValue||z(p,c);E.state.next({values:f(q)}),E.state.next({...j,...!b.keepDirty?{}:{isDirty:Y()}}),b.keepIsValid||H()},aj=({disabled:a,name:b})=>{("boolean"==typeof a&&r.mount||a||t.disabled.has(b))&&(a?t.disabled.add(b):t.disabled.delete(b))},ak=(a,b={})=>{let c=k(o,a),d="boolean"==typeof b.disabled||"boolean"==typeof g.disabled;return(l(o,a,{...c||{},_f:{...c&&c._f?c._f:{ref:{name:a}},name:a,mount:!0,...b}}),t.mount.add(a),c)?aj({disabled:"boolean"==typeof b.disabled?b.disabled:g.disabled,name:a}):M(a,!0,b.value),{...d?{disabled:b.disabled||g.disabled}:{},...g.progressive?{required:!!b.required,min:K(b.min),max:K(b.max),minLength:K(b.minLength),maxLength:K(b.maxLength),pattern:K(b.pattern)}:{},name:a,onChange:ab,onBlur:ab,ref:d=>{if(d){let e;ak(a,b),c=k(o,a);let f=h(d.value)&&d.querySelectorAll&&d.querySelectorAll("input,select,textarea")[0]||d,g="radio"===(e=f).type||"checkbox"===e.type,i=c._f.refs||[];(g?i.find(a=>a===f):f===c._f.ref)||(l(o,a,{_f:{...c._f,...g?{refs:[...i.filter(y),f,...Array.isArray(k(p,a))?[{}]:[]],ref:{type:f.type,name:a}}:{ref:f}}}),M(a,!1,void 0,f))}else{let d;(c=k(o,a,{}))._f&&(c._f.mount=!1),(g.shouldUnregister||b.shouldUnregister)&&(d=t.array,!d.has(a.substring(0,a.search(/\.\d+(\.|$)/))||a)||!r.action)&&t.unMount.add(a)}}}},al=()=>g.shouldFocusError&&P(o,ac,t.mount),am=(a,b)=>async c=>{let d;c&&(c.preventDefault&&c.preventDefault(),c.persist&&c.persist());let e=f(q);if(E.state.next({isSubmitting:!0}),g.resolver){let{errors:a,values:b}=await T();j.errors=a,e=f(b)}else await X(o);if(t.disabled.size)for(let a of t.disabled)z(e,a);if(z(j.errors,"root"),w(j.errors)){E.state.next({errors:{}});try{await a(e,c)}catch(a){d=a}}else b&&await b({...j.errors},c),al(),setTimeout(al);if(E.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:w(j.errors)&&!d,submitCount:j.submitCount+1,errors:j.errors}),d)throw d},an=(a,b={})=>{let c=a?f(a):p,d=f(c),e=w(a),h=e?p:d;if(b.keepDefaultValues||(p=c),!b.keepValues){if(b.keepDirtyValues)for(let a of Array.from(new Set([...t.mount,...Object.keys(C(p,q))])))k(j.dirtyFields,a)?l(h,a,k(q,a)):aa(a,k(h,a));else if(b.keepFieldsRef)for(let a of t.mount)aa(a,k(h,a));else o={};q=g.shouldUnregister?b.keepDefaultValues?f(p):{}:f(h),E.array.next({values:{...h}}),E.state.next({values:{...h}})}t={mount:b.keepDirtyValues?t.mount:new Set,unMount:new Set,array:new Set,disabled:new Set,watch:new Set,watchAll:!1,focus:""},r.mount=!B.isValid||!!b.keepIsValid||!!b.keepDirtyValues,r.watch=!!g.shouldUnregister,E.state.next({submitCount:b.keepSubmitCount?j.submitCount:0,isDirty:!e&&(b.keepDirty?j.isDirty:!!(b.keepDefaultValues&&!s(a,p))),isSubmitted:!!b.keepIsSubmitted&&j.isSubmitted,dirtyFields:e?{}:b.keepDirtyValues?b.keepDefaultValues&&q?C(p,q):j.dirtyFields:b.keepDefaultValues&&a?C(p,a):b.keepDirty?j.dirtyFields:{},touchedFields:b.keepTouched?j.touchedFields:{},errors:b.keepErrors?j.errors:{},isSubmitSuccessful:!!b.keepIsSubmitSuccessful&&j.isSubmitSuccessful,isSubmitting:!1,defaultValues:p})},ao=(a,b)=>an(x(a)?a(q):a,b),ap=a=>{j={...j,...a}},aq={control:{register:ak,unregister:ai,getFieldState:af,handleSubmit:am,setError:ag,_subscribe:ah,_runSchema:T,_focusError:al,_getWatch:Z,_getDirty:Y,_setValid:H,_setFieldArray:(a,b=[],c,d,e=!0,f=!0)=>{if(d&&c&&!g.disabled){if(r.action=!0,f&&Array.isArray(k(o,a))){let b=c(k(o,a),d.argA,d.argB);e&&l(o,a,b)}if(f&&Array.isArray(k(j.errors,a))){let b,f=c(k(j.errors,a),d.argA,d.argB);e&&l(j.errors,a,f),i(k(b=j.errors,a)).length||z(b,a)}if((B.touchedFields||D.touchedFields)&&f&&Array.isArray(k(j.touchedFields,a))){let b=c(k(j.touchedFields,a),d.argA,d.argB);e&&l(j.touchedFields,a,b)}(B.dirtyFields||D.dirtyFields)&&(j.dirtyFields=C(p,q)),E.state.next({name:a,isDirty:Y(a,b),dirtyFields:j.dirtyFields,errors:j.errors,isValid:j.isValid})}else l(q,a,b)},_setDisabledField:aj,_setErrors:a=>{j.errors=a,E.state.next({errors:j.errors,isValid:!1})},_getFieldArray:a=>i(k(r.mount?q:p,a,g.shouldUnregister?k(p,a,[]):[])),_reset:an,_resetDefaultValues:()=>x(g.defaultValues)&&g.defaultValues().then(a=>{ao(a,g.resetOptions),E.state.next({isLoading:!1})}),_removeUnmounted:()=>{for(let a of t.unMount){let b=k(o,a);b&&(b._f.refs?b._f.refs.every(a=>!y(a)):!y(b._f.ref))&&ai(a)}t.unMount=new Set},_disableForm:a=>{"boolean"==typeof a&&(E.state.next({disabled:a}),P(o,(b,c)=>{let d=k(o,c);d&&(b.disabled=d._f.disabled||a,Array.isArray(d._f.refs)&&d._f.refs.forEach(b=>{b.disabled=d._f.disabled||a}))},0,!1))},_subjects:E,_proxyFormState:B,get _fields(){return o},get _formValues(){return q},get _state(){return r},set _state(value){r=value},get _defaultValues(){return p},get _names(){return t},set _names(value){t=value},get _formState(){return j},get _options(){return g},set _options(value){g={...g,...value}}},subscribe:a=>(r.mount=!0,D={...D,...a.formState},ah({...a,formState:D})),trigger:ad,register:ak,handleSubmit:am,watch:(a,b)=>x(a)?E.state.subscribe({next:c=>"values"in c&&a(Z(void 0,b),c)}):Z(a,b,!0),setValue:aa,getValues:ae,reset:ao,resetField:(a,b={})=>{k(o,a)&&(h(b.defaultValue)?aa(a,f(k(p,a))):(aa(a,b.defaultValue),l(p,a,f(b.defaultValue))),b.keepTouched||z(j.touchedFields,a),b.keepDirty||(z(j.dirtyFields,a),j.isDirty=b.defaultValue?Y(a,f(k(p,a))):Y()),!b.keepError&&(z(j.errors,a),B.isValid&&H()),E.state.next({...j}))},clearErrors:a=>{a&&u(a).forEach(a=>z(j.errors,a)),E.state.next({errors:a?j.errors:{}})},unregister:ai,setError:ag,setFocus:(a,b={})=>{let c=k(o,a),d=c&&c._f;if(d){let a=d.refs?d.refs[0]:d.ref;a.focus&&(a.focus(),b.shouldSelect&&x(a.select)&&a.select())}},getFieldState:af};return{...aq,formControl:aq}}(a);g.current={...j,formState:o}}let r=g.current.control;return r._options=a,q(()=>{let a=r._subscribe({formState:r._proxyFormState,callback:()=>p({...r._formState}),reRenderRoot:!0});return p(a=>({...a,isReady:!0})),r._formState.isReady=!0,a},[r]),b.default.useEffect(()=>r._disableForm(a.disabled),[r,a.disabled]),b.default.useEffect(()=>{a.mode&&(r._options.mode=a.mode),a.reValidateMode&&(r._options.reValidateMode=a.reValidateMode)},[r,a.mode,a.reValidateMode]),b.default.useEffect(()=>{a.errors&&(r._setErrors(a.errors),r._focusError())},[r,a.errors]),b.default.useEffect(()=>{a.shouldUnregister&&r._subjects.state.next({values:r._getWatch()})},[r,a.shouldUnregister]),b.default.useEffect(()=>{if(r._proxyFormState.isDirty){let a=r._getDirty();a!==o.isDirty&&r._subjects.state.next({isDirty:a})}},[r,o.isDirty]),b.default.useEffect(()=>{a.values&&!s(a.values,j.current)?(r._reset(a.values,{keepFieldsRef:!0,...r._options.resetOptions}),j.current=a.values,p(a=>({...a}))):r._resetDefaultValues()},[r,a.values]),b.default.useEffect(()=>{r._state.mount||(r._setValid(),r._state.mount=!0),r._state.watch&&(r._state.watch=!1,r._subjects.state.next({...r._formState})),r._removeUnmounted()}),g.current.formState=((a,b,c,d=!0)=>{let e={defaultValues:b._defaultValues};for(let f in a)Object.defineProperty(e,f,{get:()=>(b._proxyFormState[f]!==n.all&&(b._proxyFormState[f]=!d||n.all),c&&(c[f]=!0),a[f])});return e})(o,r),g.current}},22657,86978,67924,23387,81573,58005,31227,58697,67032,80818,72920,81880,61158,46352,40114,71004,77803,92933,68795,58294,9354,20903,88422,18985,85473,99822,96227,85654,94867,92874,48409,49988,38505,78397,28902,65312,60843,56182,12326,43307,7637,99916,85444,22838,24487,82431,23453,29828,6045,92925,91936,41875,46169,80637,10773,17363,96981,8173,61130,28185,94941,a=>{"use strict";a.s([],22657),a.s(["$ZodAsyncError",()=>e,"$ZodEncodeError",()=>f,"$brand",()=>d,"$constructor",()=>c,"NEVER",()=>b,"config",()=>h,"globalConfig",()=>g],86978);let b=Object.freeze({status:"aborted"});function c(a,b,c){function d(c,d){var e;for(let f in Object.defineProperty(c,"_zod",{value:c._zod??{},enumerable:!1}),(e=c._zod).traits??(e.traits=new Set),c._zod.traits.add(a),b(c,d),g.prototype)f in c||Object.defineProperty(c,f,{value:g.prototype[f].bind(c)});c._zod.constr=g,c._zod.def=d}let e=c?.Parent??Object;class f extends e{}function g(a){var b;let e=c?.Parent?new f:this;for(let c of(d(e,a),(b=e._zod).deferred??(b.deferred=[]),e._zod.deferred))c();return e}return Object.defineProperty(f,"name",{value:a}),Object.defineProperty(g,"init",{value:d}),Object.defineProperty(g,Symbol.hasInstance,{value:b=>!!c?.Parent&&b instanceof c.Parent||b?._zod?.traits?.has(a)}),Object.defineProperty(g,"name",{value:a}),g}let d=Symbol("zod_brand");class e extends Error{constructor(){super("Encountered Promise during synchronous parse. Use .parseAsync() instead.")}}class f extends Error{constructor(a){super(`Encountered unidirectional transform during encode: ${a}`),this.name="ZodEncodeError"}}let g={};function h(a){return a&&Object.assign(g,a),g}function i(a){return a}function j(a){return a}function k(a){}function l(a){throw Error()}function m(a){}function n(a){let b=Object.values(a).filter(a=>"number"==typeof a);return Object.entries(a).filter(([a,c])=>-1===b.indexOf(+a)).map(([a,b])=>b)}function o(a,b="|"){return a.map(a=>R(a)).join(b)}function p(a,b){return"bigint"==typeof b?b.toString():b}function q(a){return{get value(){{let b=a();return Object.defineProperty(this,"value",{value:b}),b}}}}function r(a){return null==a}function s(a){let b=+!!a.startsWith("^"),c=a.endsWith("$")?a.length-1:a.length;return a.slice(b,c)}function t(a,b){let c=(a.toString().split(".")[1]||"").length,d=b.toString(),e=(d.split(".")[1]||"").length;if(0===e&&/\d?e-\d?/.test(d)){let a=d.match(/\d?e-(\d?)/);a?.[1]&&(e=Number.parseInt(a[1]))}let f=c>e?c:e;return Number.parseInt(a.toFixed(f).replace(".",""))%Number.parseInt(b.toFixed(f).replace(".",""))/10**f}a.s(["_decode",()=>aH,"_decodeAsync",()=>aL,"_encode",()=>aF,"_encodeAsync",()=>aJ,"_parse",()=>ax,"_parseAsync",()=>az,"_safeDecode",()=>aP,"_safeDecodeAsync",()=>aT,"_safeEncode",()=>aN,"_safeEncodeAsync",()=>aR,"_safeParse",()=>aB,"_safeParseAsync",()=>aD,"decode",()=>aI,"decodeAsync",()=>aM,"encode",()=>aG,"encodeAsync",()=>aK,"parse",()=>ay,"parseAsync",()=>aA,"safeDecode",()=>aQ,"safeDecodeAsync",()=>aU,"safeEncode",()=>aO,"safeEncodeAsync",()=>aS,"safeParse",()=>aC,"safeParseAsync",()=>aE],81573),a.s(["$ZodError",()=>aq,"$ZodRealError",()=>ar,"flattenError",()=>as,"formatError",()=>at,"prettifyError",()=>aw,"toDotPath",()=>av,"treeifyError",()=>au],23387),a.s(["BIGINT_FORMAT_RANGES",()=>U,"Class",()=>ao,"NUMBER_FORMAT_RANGES",()=>T,"aborted",()=>aa,"allowsEval",()=>G,"assert",()=>m,"assertEqual",()=>i,"assertIs",()=>k,"assertNever",()=>l,"assertNotEqual",()=>j,"assignProp",()=>x,"base64ToUint8Array",()=>ai,"base64urlToUint8Array",()=>ak,"cached",()=>q,"captureStackTrace",()=>E,"cleanEnum",()=>ah,"cleanRegex",()=>s,"clone",()=>O,"cloneDef",()=>z,"createTransparentProxy",()=>Q,"defineLazy",()=>v,"esc",()=>D,"escapeRegex",()=>N,"extend",()=>X,"finalizeIssue",()=>ad,"floatSafeRemainder",()=>t,"getElementAtPath",()=>A,"getEnumValues",()=>n,"getLengthableOrigin",()=>af,"getParsedType",()=>K,"getSizableOrigin",()=>ae,"hexToUint8Array",()=>am,"isObject",()=>F,"isPlainObject",()=>H,"issue",()=>ag,"joinValues",()=>o,"jsonStringifyReplacer",()=>p,"merge",()=>Z,"mergeDefs",()=>y,"normalizeParams",()=>P,"nullish",()=>r,"numKeys",()=>J,"objectClone",()=>w,"omit",()=>W,"optionalKeys",()=>S,"partial",()=>$,"pick",()=>V,"prefixIssues",()=>ab,"primitiveTypes",()=>M,"promiseAllObject",()=>B,"propertyKeyTypes",()=>L,"randomString",()=>C,"required",()=>_,"safeExtend",()=>Y,"shallowClone",()=>I,"stringifyPrimitive",()=>R,"uint8ArrayToBase64",()=>aj,"uint8ArrayToBase64url",()=>al,"uint8ArrayToHex",()=>an,"unwrapMessage",()=>ac],67924);let u=Symbol("evaluating");function v(a,b,c){let d;Object.defineProperty(a,b,{get(){if(d!==u)return void 0===d&&(d=u,d=c()),d},set(c){Object.defineProperty(a,b,{value:c})},configurable:!0})}function w(a){return Object.create(Object.getPrototypeOf(a),Object.getOwnPropertyDescriptors(a))}function x(a,b,c){Object.defineProperty(a,b,{value:c,writable:!0,enumerable:!0,configurable:!0})}function y(...a){let b={};for(let c of a)Object.assign(b,Object.getOwnPropertyDescriptors(c));return Object.defineProperties({},b)}function z(a){return y(a._zod.def)}function A(a,b){return b?b.reduce((a,b)=>a?.[b],a):a}function B(a){let b=Object.keys(a);return Promise.all(b.map(b=>a[b])).then(a=>{let c={};for(let d=0;d<b.length;d++)c[b[d]]=a[d];return c})}function C(a=10){let b="abcdefghijklmnopqrstuvwxyz",c="";for(let d=0;d<a;d++)c+=b[Math.floor(Math.random()*b.length)];return c}function D(a){return JSON.stringify(a)}let E="captureStackTrace"in Error?Error.captureStackTrace:(...a)=>{};function F(a){return"object"==typeof a&&null!==a&&!Array.isArray(a)}let G=q(()=>{if("undefined"!=typeof navigator&&navigator?.userAgent?.includes("Cloudflare"))return!1;try{return Function(""),!0}catch(a){return!1}});function H(a){if(!1===F(a))return!1;let b=a.constructor;if(void 0===b)return!0;let c=b.prototype;return!1!==F(c)&&!1!==Object.prototype.hasOwnProperty.call(c,"isPrototypeOf")}function I(a){return H(a)?{...a}:Array.isArray(a)?[...a]:a}function J(a){let b=0;for(let c in a)Object.prototype.hasOwnProperty.call(a,c)&&b++;return b}let K=a=>{let b=typeof a;switch(b){case"undefined":return"undefined";case"string":return"string";case"number":return Number.isNaN(a)?"nan":"number";case"boolean":return"boolean";case"function":return"function";case"bigint":return"bigint";case"symbol":return"symbol";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(a.then&&"function"==typeof a.then&&a.catch&&"function"==typeof a.catch)return"promise";if("undefined"!=typeof Map&&a instanceof Map)return"map";if("undefined"!=typeof Set&&a instanceof Set)return"set";if("undefined"!=typeof Date&&a instanceof Date)return"date";if("undefined"!=typeof File&&a instanceof File)return"file";return"object";default:throw Error(`Unknown data type: ${b}`)}},L=new Set(["string","number","symbol"]),M=new Set(["string","number","bigint","boolean","symbol","undefined"]);function N(a){return a.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function O(a,b,c){let d=new a._zod.constr(b??a._zod.def);return(!b||c?.parent)&&(d._zod.parent=a),d}function P(a){if(!a)return{};if("string"==typeof a)return{error:()=>a};if(a?.message!==void 0){if(a?.error!==void 0)throw Error("Cannot specify both `message` and `error` params");a.error=a.message}return(delete a.message,"string"==typeof a.error)?{...a,error:()=>a.error}:a}function Q(a){let b;return new Proxy({},{get:(c,d,e)=>(b??(b=a()),Reflect.get(b,d,e)),set:(c,d,e,f)=>(b??(b=a()),Reflect.set(b,d,e,f)),has:(c,d)=>(b??(b=a()),Reflect.has(b,d)),deleteProperty:(c,d)=>(b??(b=a()),Reflect.deleteProperty(b,d)),ownKeys:c=>(b??(b=a()),Reflect.ownKeys(b)),getOwnPropertyDescriptor:(c,d)=>(b??(b=a()),Reflect.getOwnPropertyDescriptor(b,d)),defineProperty:(c,d,e)=>(b??(b=a()),Reflect.defineProperty(b,d,e))})}function R(a){return"bigint"==typeof a?a.toString()+"n":"string"==typeof a?`"${a}"`:`${a}`}function S(a){return Object.keys(a).filter(b=>"optional"===a[b]._zod.optin&&"optional"===a[b]._zod.optout)}let T={safeint:[Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER],int32:[-0x80000000,0x7fffffff],uint32:[0,0xffffffff],float32:[-34028234663852886e22,34028234663852886e22],float64:[-Number.MAX_VALUE,Number.MAX_VALUE]},U={int64:[BigInt("-9223372036854775808"),BigInt("9223372036854775807")],uint64:[BigInt(0),BigInt("18446744073709551615")]};function V(a,b){let c=a._zod.def,d=y(a._zod.def,{get shape(){let a={};for(let d in b){if(!(d in c.shape))throw Error(`Unrecognized key: "${d}"`);b[d]&&(a[d]=c.shape[d])}return x(this,"shape",a),a},checks:[]});return O(a,d)}function W(a,b){let c=a._zod.def,d=y(a._zod.def,{get shape(){let d={...a._zod.def.shape};for(let a in b){if(!(a in c.shape))throw Error(`Unrecognized key: "${a}"`);b[a]&&delete d[a]}return x(this,"shape",d),d},checks:[]});return O(a,d)}function X(a,b){if(!H(b))throw Error("Invalid input to extend: expected a plain object");let c=a._zod.def.checks;if(c&&c.length>0)throw Error("Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.");let d=y(a._zod.def,{get shape(){let c={...a._zod.def.shape,...b};return x(this,"shape",c),c},checks:[]});return O(a,d)}function Y(a,b){if(!H(b))throw Error("Invalid input to safeExtend: expected a plain object");let c={...a._zod.def,get shape(){let c={...a._zod.def.shape,...b};return x(this,"shape",c),c},checks:a._zod.def.checks};return O(a,c)}function Z(a,b){let c=y(a._zod.def,{get shape(){let c={...a._zod.def.shape,...b._zod.def.shape};return x(this,"shape",c),c},get catchall(){return b._zod.def.catchall},checks:[]});return O(a,c)}function $(a,b,c){let d=y(b._zod.def,{get shape(){let d=b._zod.def.shape,e={...d};if(c)for(let b in c){if(!(b in d))throw Error(`Unrecognized key: "${b}"`);c[b]&&(e[b]=a?new a({type:"optional",innerType:d[b]}):d[b])}else for(let b in d)e[b]=a?new a({type:"optional",innerType:d[b]}):d[b];return x(this,"shape",e),e},checks:[]});return O(b,d)}function _(a,b,c){let d=y(b._zod.def,{get shape(){let d=b._zod.def.shape,e={...d};if(c)for(let b in c){if(!(b in e))throw Error(`Unrecognized key: "${b}"`);c[b]&&(e[b]=new a({type:"nonoptional",innerType:d[b]}))}else for(let b in d)e[b]=new a({type:"nonoptional",innerType:d[b]});return x(this,"shape",e),e},checks:[]});return O(b,d)}function aa(a,b=0){if(!0===a.aborted)return!0;for(let c=b;c<a.issues.length;c++)if(a.issues[c]?.continue!==!0)return!0;return!1}function ab(a,b){return b.map(b=>(b.path??(b.path=[]),b.path.unshift(a),b))}function ac(a){return"string"==typeof a?a:a?.message}function ad(a,b,c){let d={...a,path:a.path??[]};return a.message||(d.message=ac(a.inst?._zod.def?.error?.(a))??ac(b?.error?.(a))??ac(c.customError?.(a))??ac(c.localeError?.(a))??"Invalid input"),delete d.inst,delete d.continue,b?.reportInput||delete d.input,d}function ae(a){return a instanceof Set?"set":a instanceof Map?"map":a instanceof File?"file":"unknown"}function af(a){return Array.isArray(a)?"array":"string"==typeof a?"string":"unknown"}function ag(...a){let[b,c,d]=a;return"string"==typeof b?{message:b,code:"custom",input:c,inst:d}:{...b}}function ah(a){return Object.entries(a).filter(([a,b])=>Number.isNaN(Number.parseInt(a,10))).map(a=>a[1])}function ai(a){let b=atob(a),c=new Uint8Array(b.length);for(let a=0;a<b.length;a++)c[a]=b.charCodeAt(a);return c}function aj(a){let b="";for(let c=0;c<a.length;c++)b+=String.fromCharCode(a[c]);return btoa(b)}function ak(a){let b=a.replace(/-/g,"+").replace(/_/g,"/"),c="=".repeat((4-b.length%4)%4);return ai(b+c)}function al(a){return aj(a).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function am(a){let b=a.replace(/^0x/,"");if(b.length%2!=0)throw Error("Invalid hex string length");let c=new Uint8Array(b.length/2);for(let a=0;a<b.length;a+=2)c[a/2]=Number.parseInt(b.slice(a,a+2),16);return c}function an(a){return Array.from(a).map(a=>a.toString(16).padStart(2,"0")).join("")}class ao{constructor(...a){}}let ap=(a,b)=>{a.name="$ZodError",Object.defineProperty(a,"_zod",{value:a._zod,enumerable:!1}),Object.defineProperty(a,"issues",{value:b,enumerable:!1}),a.message=JSON.stringify(b,p,2),Object.defineProperty(a,"toString",{value:()=>a.message,enumerable:!1})},aq=c("$ZodError",ap),ar=c("$ZodError",ap,{Parent:Error});function as(a,b=a=>a.message){let c={},d=[];for(let e of a.issues)e.path.length>0?(c[e.path[0]]=c[e.path[0]]||[],c[e.path[0]].push(b(e))):d.push(b(e));return{formErrors:d,fieldErrors:c}}function at(a,b){let c=b||function(a){return a.message},d={_errors:[]},e=a=>{for(let b of a.issues)if("invalid_union"===b.code&&b.errors.length)b.errors.map(a=>e({issues:a}));else if("invalid_key"===b.code)e({issues:b.issues});else if("invalid_element"===b.code)e({issues:b.issues});else if(0===b.path.length)d._errors.push(c(b));else{let a=d,e=0;for(;e<b.path.length;){let d=b.path[e];e===b.path.length-1?(a[d]=a[d]||{_errors:[]},a[d]._errors.push(c(b))):a[d]=a[d]||{_errors:[]},a=a[d],e++}}};return e(a),d}function au(a,b){let c=b||function(a){return a.message},d={errors:[]},e=(a,b=[])=>{var f,g;for(let h of a.issues)if("invalid_union"===h.code&&h.errors.length)h.errors.map(a=>e({issues:a},h.path));else if("invalid_key"===h.code)e({issues:h.issues},h.path);else if("invalid_element"===h.code)e({issues:h.issues},h.path);else{let a=[...b,...h.path];if(0===a.length){d.errors.push(c(h));continue}let e=d,i=0;for(;i<a.length;){let b=a[i],d=i===a.length-1;"string"==typeof b?(e.properties??(e.properties={}),(f=e.properties)[b]??(f[b]={errors:[]}),e=e.properties[b]):(e.items??(e.items=[]),(g=e.items)[b]??(g[b]={errors:[]}),e=e.items[b]),d&&e.errors.push(c(h)),i++}}};return e(a),d}function av(a){let b=[];for(let c of a.map(a=>"object"==typeof a?a.key:a))"number"==typeof c?b.push(`[${c}]`):"symbol"==typeof c?b.push(`[${JSON.stringify(String(c))}]`):/[^\w$]/.test(c)?b.push(`[${JSON.stringify(c)}]`):(b.length&&b.push("."),b.push(c));return b.join("")}function aw(a){let b=[];for(let c of[...a.issues].sort((a,b)=>(a.path??[]).length-(b.path??[]).length))b.push(`✖ ${c.message}`),c.path?.length&&b.push(`  → at ${av(c.path)}`);return b.join("\n")}let ax=a=>(b,c,d,f)=>{let g=d?Object.assign(d,{async:!1}):{async:!1},i=b._zod.run({value:c,issues:[]},g);if(i instanceof Promise)throw new e;if(i.issues.length){let b=new(f?.Err??a)(i.issues.map(a=>ad(a,g,h())));throw E(b,f?.callee),b}return i.value},ay=ax(ar),az=a=>async(b,c,d,e)=>{let f=d?Object.assign(d,{async:!0}):{async:!0},g=b._zod.run({value:c,issues:[]},f);if(g instanceof Promise&&(g=await g),g.issues.length){let b=new(e?.Err??a)(g.issues.map(a=>ad(a,f,h())));throw E(b,e?.callee),b}return g.value},aA=az(ar),aB=a=>(b,c,d)=>{let f=d?{...d,async:!1}:{async:!1},g=b._zod.run({value:c,issues:[]},f);if(g instanceof Promise)throw new e;return g.issues.length?{success:!1,error:new(a??aq)(g.issues.map(a=>ad(a,f,h())))}:{success:!0,data:g.value}},aC=aB(ar),aD=a=>async(b,c,d)=>{let e=d?Object.assign(d,{async:!0}):{async:!0},f=b._zod.run({value:c,issues:[]},e);return f instanceof Promise&&(f=await f),f.issues.length?{success:!1,error:new a(f.issues.map(a=>ad(a,e,h())))}:{success:!0,data:f.value}},aE=aD(ar),aF=a=>(b,c,d)=>{let e=d?Object.assign(d,{direction:"backward"}):{direction:"backward"};return ax(a)(b,c,e)},aG=aF(ar),aH=a=>(b,c,d)=>ax(a)(b,c,d),aI=aH(ar),aJ=a=>async(b,c,d)=>{let e=d?Object.assign(d,{direction:"backward"}):{direction:"backward"};return az(a)(b,c,e)},aK=aJ(ar),aL=a=>async(b,c,d)=>az(a)(b,c,d),aM=aL(ar),aN=a=>(b,c,d)=>{let e=d?Object.assign(d,{direction:"backward"}):{direction:"backward"};return aB(a)(b,c,e)},aO=aN(ar),aP=a=>(b,c,d)=>aB(a)(b,c,d),aQ=aP(ar),aR=a=>async(b,c,d)=>{let e=d?Object.assign(d,{direction:"backward"}):{direction:"backward"};return aD(a)(b,c,e)},aS=aR(ar),aT=a=>async(b,c,d)=>aD(a)(b,c,d),aU=aT(ar);a.s(["$ZodAny",()=>cS,"$ZodArray",()=>cY,"$ZodBase64",()=>cD,"$ZodBase64URL",()=>cF,"$ZodBigInt",()=>cN,"$ZodBigIntFormat",()=>cO,"$ZodBoolean",()=>cM,"$ZodCIDRv4",()=>cA,"$ZodCIDRv6",()=>cB,"$ZodCUID",()=>cp,"$ZodCUID2",()=>cq,"$ZodCatch",()=>ds,"$ZodCodec",()=>dw,"$ZodCustom",()=>dF,"$ZodCustomStringFormat",()=>cJ,"$ZodDate",()=>cW,"$ZodDefault",()=>dl,"$ZodDiscriminatedUnion",()=>c4,"$ZodE164",()=>cG,"$ZodEmail",()=>cl,"$ZodEmoji",()=>cn,"$ZodEnum",()=>de,"$ZodFile",()=>dg,"$ZodFunction",()=>dC,"$ZodGUID",()=>cj,"$ZodIPv4",()=>cy,"$ZodIPv6",()=>cz,"$ZodISODate",()=>cv,"$ZodISODateTime",()=>cu,"$ZodISODuration",()=>cx,"$ZodISOTime",()=>cw,"$ZodIntersection",()=>c5,"$ZodJWT",()=>cI,"$ZodKSUID",()=>ct,"$ZodLazy",()=>dE,"$ZodLiteral",()=>df,"$ZodMap",()=>da,"$ZodNaN",()=>dt,"$ZodNanoID",()=>co,"$ZodNever",()=>cU,"$ZodNonOptional",()=>dp,"$ZodNull",()=>cR,"$ZodNullable",()=>dk,"$ZodNumber",()=>cK,"$ZodNumberFormat",()=>cL,"$ZodObject",()=>c0,"$ZodObjectJIT",()=>c1,"$ZodOptional",()=>dj,"$ZodPipe",()=>du,"$ZodPrefault",()=>dn,"$ZodPromise",()=>dD,"$ZodReadonly",()=>dz,"$ZodRecord",()=>c9,"$ZodSet",()=>dc,"$ZodString",()=>ch,"$ZodStringFormat",()=>ci,"$ZodSuccess",()=>dr,"$ZodSymbol",()=>cP,"$ZodTemplateLiteral",()=>dB,"$ZodTransform",()=>dh,"$ZodTuple",()=>c7,"$ZodType",()=>cg,"$ZodULID",()=>cr,"$ZodURL",()=>cm,"$ZodUUID",()=>ck,"$ZodUndefined",()=>cQ,"$ZodUnion",()=>c3,"$ZodUnknown",()=>cT,"$ZodVoid",()=>cV,"$ZodXID",()=>cs,"isValidBase64",()=>cC,"isValidBase64URL",()=>cE,"isValidJWT",()=>cH],80818),a.s(["$ZodCheck",()=>bS,"$ZodCheckBigIntFormat",()=>bY,"$ZodCheckEndsWith",()=>b9,"$ZodCheckGreaterThan",()=>bV,"$ZodCheckIncludes",()=>b7,"$ZodCheckLengthEquals",()=>b2,"$ZodCheckLessThan",()=>bU,"$ZodCheckLowerCase",()=>b5,"$ZodCheckMaxLength",()=>b0,"$ZodCheckMaxSize",()=>bZ,"$ZodCheckMimeType",()=>cc,"$ZodCheckMinLength",()=>b1,"$ZodCheckMinSize",()=>b$,"$ZodCheckMultipleOf",()=>bW,"$ZodCheckNumberFormat",()=>bX,"$ZodCheckOverwrite",()=>cd,"$ZodCheckProperty",()=>cb,"$ZodCheckRegex",()=>b4,"$ZodCheckSizeEquals",()=>b_,"$ZodCheckStartsWith",()=>b8,"$ZodCheckStringFormat",()=>b3,"$ZodCheckUpperCase",()=>b6],31227),a.s(["base64",()=>bh,"base64url",()=>bi,"bigint",()=>bs,"boolean",()=>bv,"browserEmail",()=>bb,"cidrv4",()=>bf,"cidrv6",()=>bg,"cuid",()=>aV,"cuid2",()=>aW,"date",()=>bn,"datetime",()=>bq,"domain",()=>bk,"duration",()=>a_,"e164",()=>bl,"email",()=>a6,"emoji",()=>bc,"extendedDuration",()=>a0,"guid",()=>a1,"hex",()=>bA,"hostname",()=>bj,"html5Email",()=>a7,"idnEmail",()=>ba,"integer",()=>bt,"ipv4",()=>bd,"ipv6",()=>be,"ksuid",()=>aZ,"lowercase",()=>by,"md5_base64",()=>bE,"md5_base64url",()=>bF,"md5_hex",()=>bD,"nanoid",()=>a$,"null",()=>bw,"number",()=>bu,"rfc5322Email",()=>a8,"sha1_base64",()=>bH,"sha1_base64url",()=>bI,"sha1_hex",()=>bG,"sha256_base64",()=>bK,"sha256_base64url",()=>bL,"sha256_hex",()=>bJ,"sha384_base64",()=>bN,"sha384_base64url",()=>bO,"sha384_hex",()=>bM,"sha512_base64",()=>bQ,"sha512_base64url",()=>bR,"sha512_hex",()=>bP,"string",()=>br,"time",()=>bp,"ulid",()=>aX,"undefined",()=>bx,"unicodeEmail",()=>a9,"uppercase",()=>bz,"uuid",()=>a2,"uuid4",()=>a3,"uuid6",()=>a4,"uuid7",()=>a5,"xid",()=>aY],58005);let aV=/^[cC][^\s-]{8,}$/,aW=/^[0-9a-z]+$/,aX=/^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/,aY=/^[0-9a-vA-V]{20}$/,aZ=/^[A-Za-z0-9]{27}$/,a$=/^[a-zA-Z0-9_-]{21}$/,a_=/^P(?:(\d+W)|(?!.*W)(?=\d|T\d)(\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+([.,]\d+)?S)?)?)$/,a0=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,a1=/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/,a2=a=>a?RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${a}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`):/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/,a3=a2(4),a4=a2(6),a5=a2(7),a6=/^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$/,a7=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,a8=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,a9=/^[^\s@"]{1,64}@[^\s@]{1,255}$/u,ba=a9,bb=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;function bc(){return RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")}let bd=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,be=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$/,bf=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/([0-9]|[1-2][0-9]|3[0-2])$/,bg=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,bh=/^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/,bi=/^[A-Za-z0-9_-]*$/,bj=/^(?=.{1,253}\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\.?$/,bk=/^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}$/,bl=/^\+(?:[0-9]){6,14}[0-9]$/,bm="(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))",bn=RegExp(`^${bm}$`);function bo(a){let b="(?:[01]\\d|2[0-3]):[0-5]\\d";return"number"==typeof a.precision?-1===a.precision?`${b}`:0===a.precision?`${b}:[0-5]\\d`:`${b}:[0-5]\\d\\.\\d{${a.precision}}`:`${b}(?::[0-5]\\d(?:\\.\\d+)?)?`}function bp(a){return RegExp(`^${bo(a)}$`)}function bq(a){let b=bo({precision:a.precision}),c=["Z"];a.local&&c.push(""),a.offset&&c.push("([+-](?:[01]\\d|2[0-3]):[0-5]\\d)");let d=`${b}(?:${c.join("|")})`;return RegExp(`^${bm}T(?:${d})$`)}let br=a=>{let b=a?`[\\s\\S]{${a?.minimum??0},${a?.maximum??""}}`:"[\\s\\S]*";return RegExp(`^${b}$`)},bs=/^-?\d+n?$/,bt=/^-?\d+$/,bu=/^-?\d+(?:\.\d+)?/,bv=/^(?:true|false)$/i,bw=/^null$/i,bx=/^undefined$/i,by=/^[^A-Z]*$/,bz=/^[^a-z]*$/,bA=/^[0-9a-fA-F]*$/;function bB(a,b){return RegExp(`^[A-Za-z0-9+/]{${a}}${b}$`)}function bC(a){return RegExp(`^[A-Za-z0-9_-]{${a}}$`)}let bD=/^[0-9a-fA-F]{32}$/,bE=bB(22,"=="),bF=bC(22),bG=/^[0-9a-fA-F]{40}$/,bH=bB(27,"="),bI=bC(27),bJ=/^[0-9a-fA-F]{64}$/,bK=bB(43,"="),bL=bC(43),bM=/^[0-9a-fA-F]{96}$/,bN=bB(64,""),bO=bC(64),bP=/^[0-9a-fA-F]{128}$/,bQ=bB(86,"=="),bR=bC(86),bS=c("$ZodCheck",(a,b)=>{var c;a._zod??(a._zod={}),a._zod.def=b,(c=a._zod).onattach??(c.onattach=[])}),bT={number:"number",bigint:"bigint",object:"date"},bU=c("$ZodCheckLessThan",(a,b)=>{bS.init(a,b);let c=bT[typeof b.value];a._zod.onattach.push(a=>{let c=a._zod.bag,d=(b.inclusive?c.maximum:c.exclusiveMaximum)??1/0;b.value<d&&(b.inclusive?c.maximum=b.value:c.exclusiveMaximum=b.value)}),a._zod.check=d=>{(b.inclusive?d.value<=b.value:d.value<b.value)||d.issues.push({origin:c,code:"too_big",maximum:b.value,input:d.value,inclusive:b.inclusive,inst:a,continue:!b.abort})}}),bV=c("$ZodCheckGreaterThan",(a,b)=>{bS.init(a,b);let c=bT[typeof b.value];a._zod.onattach.push(a=>{let c=a._zod.bag,d=(b.inclusive?c.minimum:c.exclusiveMinimum)??-1/0;b.value>d&&(b.inclusive?c.minimum=b.value:c.exclusiveMinimum=b.value)}),a._zod.check=d=>{(b.inclusive?d.value>=b.value:d.value>b.value)||d.issues.push({origin:c,code:"too_small",minimum:b.value,input:d.value,inclusive:b.inclusive,inst:a,continue:!b.abort})}}),bW=c("$ZodCheckMultipleOf",(a,b)=>{bS.init(a,b),a._zod.onattach.push(a=>{var c;(c=a._zod.bag).multipleOf??(c.multipleOf=b.value)}),a._zod.check=c=>{if(typeof c.value!=typeof b.value)throw Error("Cannot mix number and bigint in multiple_of check.");("bigint"==typeof c.value?c.value%b.value===BigInt(0):0===t(c.value,b.value))||c.issues.push({origin:typeof c.value,code:"not_multiple_of",divisor:b.value,input:c.value,inst:a,continue:!b.abort})}}),bX=c("$ZodCheckNumberFormat",(a,b)=>{bS.init(a,b),b.format=b.format||"float64";let c=b.format?.includes("int"),d=c?"int":"number",[e,f]=T[b.format];a._zod.onattach.push(a=>{let d=a._zod.bag;d.format=b.format,d.minimum=e,d.maximum=f,c&&(d.pattern=bt)}),a._zod.check=g=>{let h=g.value;if(c){if(!Number.isInteger(h))return void g.issues.push({expected:d,format:b.format,code:"invalid_type",continue:!1,input:h,inst:a});if(!Number.isSafeInteger(h))return void(h>0?g.issues.push({input:h,code:"too_big",maximum:Number.MAX_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:a,origin:d,continue:!b.abort}):g.issues.push({input:h,code:"too_small",minimum:Number.MIN_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:a,origin:d,continue:!b.abort}))}h<e&&g.issues.push({origin:"number",input:h,code:"too_small",minimum:e,inclusive:!0,inst:a,continue:!b.abort}),h>f&&g.issues.push({origin:"number",input:h,code:"too_big",maximum:f,inst:a})}}),bY=c("$ZodCheckBigIntFormat",(a,b)=>{bS.init(a,b);let[c,d]=U[b.format];a._zod.onattach.push(a=>{let e=a._zod.bag;e.format=b.format,e.minimum=c,e.maximum=d}),a._zod.check=e=>{let f=e.value;f<c&&e.issues.push({origin:"bigint",input:f,code:"too_small",minimum:c,inclusive:!0,inst:a,continue:!b.abort}),f>d&&e.issues.push({origin:"bigint",input:f,code:"too_big",maximum:d,inst:a})}}),bZ=c("$ZodCheckMaxSize",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.size}),a._zod.onattach.push(a=>{let c=a._zod.bag.maximum??1/0;b.maximum<c&&(a._zod.bag.maximum=b.maximum)}),a._zod.check=c=>{let d=c.value;d.size<=b.maximum||c.issues.push({origin:ae(d),code:"too_big",maximum:b.maximum,inclusive:!0,input:d,inst:a,continue:!b.abort})}}),b$=c("$ZodCheckMinSize",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.size}),a._zod.onattach.push(a=>{let c=a._zod.bag.minimum??-1/0;b.minimum>c&&(a._zod.bag.minimum=b.minimum)}),a._zod.check=c=>{let d=c.value;d.size>=b.minimum||c.issues.push({origin:ae(d),code:"too_small",minimum:b.minimum,inclusive:!0,input:d,inst:a,continue:!b.abort})}}),b_=c("$ZodCheckSizeEquals",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.size}),a._zod.onattach.push(a=>{let c=a._zod.bag;c.minimum=b.size,c.maximum=b.size,c.size=b.size}),a._zod.check=c=>{let d=c.value,e=d.size;if(e===b.size)return;let f=e>b.size;c.issues.push({origin:ae(d),...f?{code:"too_big",maximum:b.size}:{code:"too_small",minimum:b.size},inclusive:!0,exact:!0,input:c.value,inst:a,continue:!b.abort})}}),b0=c("$ZodCheckMaxLength",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.length}),a._zod.onattach.push(a=>{let c=a._zod.bag.maximum??1/0;b.maximum<c&&(a._zod.bag.maximum=b.maximum)}),a._zod.check=c=>{let d=c.value;if(d.length<=b.maximum)return;let e=af(d);c.issues.push({origin:e,code:"too_big",maximum:b.maximum,inclusive:!0,input:d,inst:a,continue:!b.abort})}}),b1=c("$ZodCheckMinLength",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.length}),a._zod.onattach.push(a=>{let c=a._zod.bag.minimum??-1/0;b.minimum>c&&(a._zod.bag.minimum=b.minimum)}),a._zod.check=c=>{let d=c.value;if(d.length>=b.minimum)return;let e=af(d);c.issues.push({origin:e,code:"too_small",minimum:b.minimum,inclusive:!0,input:d,inst:a,continue:!b.abort})}}),b2=c("$ZodCheckLengthEquals",(a,b)=>{var c;bS.init(a,b),(c=a._zod.def).when??(c.when=a=>{let b=a.value;return!r(b)&&void 0!==b.length}),a._zod.onattach.push(a=>{let c=a._zod.bag;c.minimum=b.length,c.maximum=b.length,c.length=b.length}),a._zod.check=c=>{let d=c.value,e=d.length;if(e===b.length)return;let f=af(d),g=e>b.length;c.issues.push({origin:f,...g?{code:"too_big",maximum:b.length}:{code:"too_small",minimum:b.length},inclusive:!0,exact:!0,input:c.value,inst:a,continue:!b.abort})}}),b3=c("$ZodCheckStringFormat",(a,b)=>{var c,d;bS.init(a,b),a._zod.onattach.push(a=>{let c=a._zod.bag;c.format=b.format,b.pattern&&(c.patterns??(c.patterns=new Set),c.patterns.add(b.pattern))}),b.pattern?(c=a._zod).check??(c.check=c=>{b.pattern.lastIndex=0,b.pattern.test(c.value)||c.issues.push({origin:"string",code:"invalid_format",format:b.format,input:c.value,...b.pattern?{pattern:b.pattern.toString()}:{},inst:a,continue:!b.abort})}):(d=a._zod).check??(d.check=()=>{})}),b4=c("$ZodCheckRegex",(a,b)=>{b3.init(a,b),a._zod.check=c=>{b.pattern.lastIndex=0,b.pattern.test(c.value)||c.issues.push({origin:"string",code:"invalid_format",format:"regex",input:c.value,pattern:b.pattern.toString(),inst:a,continue:!b.abort})}}),b5=c("$ZodCheckLowerCase",(a,b)=>{b.pattern??(b.pattern=by),b3.init(a,b)}),b6=c("$ZodCheckUpperCase",(a,b)=>{b.pattern??(b.pattern=bz),b3.init(a,b)}),b7=c("$ZodCheckIncludes",(a,b)=>{bS.init(a,b);let c=N(b.includes),d=new RegExp("number"==typeof b.position?`^.{${b.position}}${c}`:c);b.pattern=d,a._zod.onattach.push(a=>{let b=a._zod.bag;b.patterns??(b.patterns=new Set),b.patterns.add(d)}),a._zod.check=c=>{c.value.includes(b.includes,b.position)||c.issues.push({origin:"string",code:"invalid_format",format:"includes",includes:b.includes,input:c.value,inst:a,continue:!b.abort})}}),b8=c("$ZodCheckStartsWith",(a,b)=>{bS.init(a,b);let c=RegExp(`^${N(b.prefix)}.*`);b.pattern??(b.pattern=c),a._zod.onattach.push(a=>{let b=a._zod.bag;b.patterns??(b.patterns=new Set),b.patterns.add(c)}),a._zod.check=c=>{c.value.startsWith(b.prefix)||c.issues.push({origin:"string",code:"invalid_format",format:"starts_with",prefix:b.prefix,input:c.value,inst:a,continue:!b.abort})}}),b9=c("$ZodCheckEndsWith",(a,b)=>{bS.init(a,b);let c=RegExp(`.*${N(b.suffix)}$`);b.pattern??(b.pattern=c),a._zod.onattach.push(a=>{let b=a._zod.bag;b.patterns??(b.patterns=new Set),b.patterns.add(c)}),a._zod.check=c=>{c.value.endsWith(b.suffix)||c.issues.push({origin:"string",code:"invalid_format",format:"ends_with",suffix:b.suffix,input:c.value,inst:a,continue:!b.abort})}});function ca(a,b,c){a.issues.length&&b.issues.push(...ab(c,a.issues))}let cb=c("$ZodCheckProperty",(a,b)=>{bS.init(a,b),a._zod.check=a=>{let c=b.schema._zod.run({value:a.value[b.property],issues:[]},{});if(c instanceof Promise)return c.then(c=>ca(c,a,b.property));ca(c,a,b.property)}}),cc=c("$ZodCheckMimeType",(a,b)=>{bS.init(a,b);let c=new Set(b.mime);a._zod.onattach.push(a=>{a._zod.bag.mime=b.mime}),a._zod.check=d=>{c.has(d.value.type)||d.issues.push({code:"invalid_value",values:b.mime,input:d.value.type,inst:a,continue:!b.abort})}}),cd=c("$ZodCheckOverwrite",(a,b)=>{bS.init(a,b),a._zod.check=a=>{a.value=b.tx(a.value)}});a.s(["Doc",()=>ce],58697);class ce{constructor(a=[]){this.content=[],this.indent=0,this&&(this.args=a)}indented(a){this.indent+=1,a(this),this.indent-=1}write(a){if("function"==typeof a){a(this,{execution:"sync"}),a(this,{execution:"async"});return}let b=a.split("\n").filter(a=>a),c=Math.min(...b.map(a=>a.length-a.trimStart().length));for(let a of b.map(a=>a.slice(c)).map(a=>" ".repeat(2*this.indent)+a))this.content.push(a)}compile(){return Function(...this?.args,[...(this?.content??[""]).map(a=>`  ${a}`)].join("\n"))}}a.s(["version",()=>cf],67032);let cf={major:4,minor:1,patch:8},cg=c("$ZodType",(a,b)=>{var c;a??(a={}),a._zod.def=b,a._zod.bag=a._zod.bag||{},a._zod.version=cf;let d=[...a._zod.def.checks??[]];for(let b of(a._zod.traits.has("$ZodCheck")&&d.unshift(a),d))for(let c of b._zod.onattach)c(a);if(0===d.length)(c=a._zod).deferred??(c.deferred=[]),a._zod.deferred?.push(()=>{a._zod.run=a._zod.parse});else{let b=(a,b,c)=>{let d,f=aa(a);for(let g of b){if(g._zod.def.when){if(!g._zod.def.when(a))continue}else if(f)continue;let b=a.issues.length,h=g._zod.check(a);if(h instanceof Promise&&c?.async===!1)throw new e;if(d||h instanceof Promise)d=(d??Promise.resolve()).then(async()=>{await h,a.issues.length!==b&&(f||(f=aa(a,b)))});else{if(a.issues.length===b)continue;f||(f=aa(a,b))}}return d?d.then(()=>a):a},c=(c,f,g)=>{if(aa(c))return c.aborted=!0,c;let h=b(f,d,g);if(h instanceof Promise){if(!1===g.async)throw new e;return h.then(b=>a._zod.parse(b,g))}return a._zod.parse(h,g)};a._zod.run=(f,g)=>{if(g.skipChecks)return a._zod.parse(f,g);if("backward"===g.direction){let b=a._zod.parse({value:f.value,issues:[]},{...g,skipChecks:!0});return b instanceof Promise?b.then(a=>c(a,f,g)):c(b,f,g)}let h=a._zod.parse(f,g);if(h instanceof Promise){if(!1===g.async)throw new e;return h.then(a=>b(a,d,g))}return b(h,d,g)}}a["~standard"]={validate:b=>{try{let c=aC(a,b);return c.success?{value:c.data}:{issues:c.error?.issues}}catch(c){return aE(a,b).then(a=>a.success?{value:a.data}:{issues:a.error?.issues})}},vendor:"zod",version:1}}),ch=c("$ZodString",(a,b)=>{cg.init(a,b),a._zod.pattern=[...a?._zod.bag?.patterns??[]].pop()??br(a._zod.bag),a._zod.parse=(c,d)=>{if(b.coerce)try{c.value=String(c.value)}catch(a){}return"string"==typeof c.value||c.issues.push({expected:"string",code:"invalid_type",input:c.value,inst:a}),c}}),ci=c("$ZodStringFormat",(a,b)=>{b3.init(a,b),ch.init(a,b)}),cj=c("$ZodGUID",(a,b)=>{b.pattern??(b.pattern=a1),ci.init(a,b)}),ck=c("$ZodUUID",(a,b)=>{if(b.version){let a={v1:1,v2:2,v3:3,v4:4,v5:5,v6:6,v7:7,v8:8}[b.version];if(void 0===a)throw Error(`Invalid UUID version: "${b.version}"`);b.pattern??(b.pattern=a2(a))}else b.pattern??(b.pattern=a2());ci.init(a,b)}),cl=c("$ZodEmail",(a,b)=>{b.pattern??(b.pattern=a6),ci.init(a,b)}),cm=c("$ZodURL",(a,b)=>{ci.init(a,b),a._zod.check=c=>{try{let d=c.value.trim(),e=new URL(d);b.hostname&&(b.hostname.lastIndex=0,b.hostname.test(e.hostname)||c.issues.push({code:"invalid_format",format:"url",note:"Invalid hostname",pattern:bj.source,input:c.value,inst:a,continue:!b.abort})),b.protocol&&(b.protocol.lastIndex=0,b.protocol.test(e.protocol.endsWith(":")?e.protocol.slice(0,-1):e.protocol)||c.issues.push({code:"invalid_format",format:"url",note:"Invalid protocol",pattern:b.protocol.source,input:c.value,inst:a,continue:!b.abort})),b.normalize?c.value=e.href:c.value=d;return}catch(d){c.issues.push({code:"invalid_format",format:"url",input:c.value,inst:a,continue:!b.abort})}}}),cn=c("$ZodEmoji",(a,b)=>{b.pattern??(b.pattern=bc()),ci.init(a,b)}),co=c("$ZodNanoID",(a,b)=>{b.pattern??(b.pattern=a$),ci.init(a,b)}),cp=c("$ZodCUID",(a,b)=>{b.pattern??(b.pattern=aV),ci.init(a,b)}),cq=c("$ZodCUID2",(a,b)=>{b.pattern??(b.pattern=aW),ci.init(a,b)}),cr=c("$ZodULID",(a,b)=>{b.pattern??(b.pattern=aX),ci.init(a,b)}),cs=c("$ZodXID",(a,b)=>{b.pattern??(b.pattern=aY),ci.init(a,b)}),ct=c("$ZodKSUID",(a,b)=>{b.pattern??(b.pattern=aZ),ci.init(a,b)}),cu=c("$ZodISODateTime",(a,b)=>{b.pattern??(b.pattern=bq(b)),ci.init(a,b)}),cv=c("$ZodISODate",(a,b)=>{b.pattern??(b.pattern=bn),ci.init(a,b)}),cw=c("$ZodISOTime",(a,b)=>{b.pattern??(b.pattern=bp(b)),ci.init(a,b)}),cx=c("$ZodISODuration",(a,b)=>{b.pattern??(b.pattern=a_),ci.init(a,b)}),cy=c("$ZodIPv4",(a,b)=>{b.pattern??(b.pattern=bd),ci.init(a,b),a._zod.onattach.push(a=>{a._zod.bag.format="ipv4"})}),cz=c("$ZodIPv6",(a,b)=>{b.pattern??(b.pattern=be),ci.init(a,b),a._zod.onattach.push(a=>{a._zod.bag.format="ipv6"}),a._zod.check=c=>{try{new URL(`http://[${c.value}]`)}catch{c.issues.push({code:"invalid_format",format:"ipv6",input:c.value,inst:a,continue:!b.abort})}}}),cA=c("$ZodCIDRv4",(a,b)=>{b.pattern??(b.pattern=bf),ci.init(a,b)}),cB=c("$ZodCIDRv6",(a,b)=>{b.pattern??(b.pattern=bg),ci.init(a,b),a._zod.check=c=>{let d=c.value.split("/");try{if(2!==d.length)throw Error();let[a,b]=d;if(!b)throw Error();let c=Number(b);if(`${c}`!==b||c<0||c>128)throw Error();new URL(`http://[${a}]`)}catch{c.issues.push({code:"invalid_format",format:"cidrv6",input:c.value,inst:a,continue:!b.abort})}}});function cC(a){if(""===a)return!0;if(a.length%4!=0)return!1;try{return atob(a),!0}catch{return!1}}let cD=c("$ZodBase64",(a,b)=>{b.pattern??(b.pattern=bh),ci.init(a,b),a._zod.onattach.push(a=>{a._zod.bag.contentEncoding="base64"}),a._zod.check=c=>{cC(c.value)||c.issues.push({code:"invalid_format",format:"base64",input:c.value,inst:a,continue:!b.abort})}});function cE(a){if(!bi.test(a))return!1;let b=a.replace(/[-_]/g,a=>"-"===a?"+":"/");return cC(b.padEnd(4*Math.ceil(b.length/4),"="))}let cF=c("$ZodBase64URL",(a,b)=>{b.pattern??(b.pattern=bi),ci.init(a,b),a._zod.onattach.push(a=>{a._zod.bag.contentEncoding="base64url"}),a._zod.check=c=>{cE(c.value)||c.issues.push({code:"invalid_format",format:"base64url",input:c.value,inst:a,continue:!b.abort})}}),cG=c("$ZodE164",(a,b)=>{b.pattern??(b.pattern=bl),ci.init(a,b)});function cH(a,b=null){try{let c=a.split(".");if(3!==c.length)return!1;let[d]=c;if(!d)return!1;let e=JSON.parse(atob(d));if("typ"in e&&e?.typ!=="JWT"||!e.alg||b&&(!("alg"in e)||e.alg!==b))return!1;return!0}catch{return!1}}let cI=c("$ZodJWT",(a,b)=>{ci.init(a,b),a._zod.check=c=>{cH(c.value,b.alg)||c.issues.push({code:"invalid_format",format:"jwt",input:c.value,inst:a,continue:!b.abort})}}),cJ=c("$ZodCustomStringFormat",(a,b)=>{ci.init(a,b),a._zod.check=c=>{b.fn(c.value)||c.issues.push({code:"invalid_format",format:b.format,input:c.value,inst:a,continue:!b.abort})}}),cK=c("$ZodNumber",(a,b)=>{cg.init(a,b),a._zod.pattern=a._zod.bag.pattern??bu,a._zod.parse=(c,d)=>{if(b.coerce)try{c.value=Number(c.value)}catch(a){}let e=c.value;if("number"==typeof e&&!Number.isNaN(e)&&Number.isFinite(e))return c;let f="number"==typeof e?Number.isNaN(e)?"NaN":Number.isFinite(e)?void 0:"Infinity":void 0;return c.issues.push({expected:"number",code:"invalid_type",input:e,inst:a,...f?{received:f}:{}}),c}}),cL=c("$ZodNumber",(a,b)=>{bX.init(a,b),cK.init(a,b)}),cM=c("$ZodBoolean",(a,b)=>{cg.init(a,b),a._zod.pattern=bv,a._zod.parse=(c,d)=>{if(b.coerce)try{c.value=!!c.value}catch(a){}let e=c.value;return"boolean"==typeof e||c.issues.push({expected:"boolean",code:"invalid_type",input:e,inst:a}),c}}),cN=c("$ZodBigInt",(a,b)=>{cg.init(a,b),a._zod.pattern=bs,a._zod.parse=(c,d)=>{if(b.coerce)try{c.value=BigInt(c.value)}catch(a){}return"bigint"==typeof c.value||c.issues.push({expected:"bigint",code:"invalid_type",input:c.value,inst:a}),c}}),cO=c("$ZodBigInt",(a,b)=>{bY.init(a,b),cN.init(a,b)}),cP=c("$ZodSymbol",(a,b)=>{cg.init(a,b),a._zod.parse=(b,c)=>{let d=b.value;return"symbol"==typeof d||b.issues.push({expected:"symbol",code:"invalid_type",input:d,inst:a}),b}}),cQ=c("$ZodUndefined",(a,b)=>{cg.init(a,b),a._zod.pattern=bx,a._zod.values=new Set([void 0]),a._zod.optin="optional",a._zod.optout="optional",a._zod.parse=(b,c)=>{let d=b.value;return void 0===d||b.issues.push({expected:"undefined",code:"invalid_type",input:d,inst:a}),b}}),cR=c("$ZodNull",(a,b)=>{cg.init(a,b),a._zod.pattern=bw,a._zod.values=new Set([null]),a._zod.parse=(b,c)=>{let d=b.value;return null===d||b.issues.push({expected:"null",code:"invalid_type",input:d,inst:a}),b}}),cS=c("$ZodAny",(a,b)=>{cg.init(a,b),a._zod.parse=a=>a}),cT=c("$ZodUnknown",(a,b)=>{cg.init(a,b),a._zod.parse=a=>a}),cU=c("$ZodNever",(a,b)=>{cg.init(a,b),a._zod.parse=(b,c)=>(b.issues.push({expected:"never",code:"invalid_type",input:b.value,inst:a}),b)}),cV=c("$ZodVoid",(a,b)=>{cg.init(a,b),a._zod.parse=(b,c)=>{let d=b.value;return void 0===d||b.issues.push({expected:"void",code:"invalid_type",input:d,inst:a}),b}}),cW=c("$ZodDate",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{if(b.coerce)try{c.value=new Date(c.value)}catch(a){}let e=c.value,f=e instanceof Date;return f&&!Number.isNaN(e.getTime())||c.issues.push({expected:"date",code:"invalid_type",input:e,...f?{received:"Invalid Date"}:{},inst:a}),c}});function cX(a,b,c){a.issues.length&&b.issues.push(...ab(c,a.issues)),b.value[c]=a.value}let cY=c("$ZodArray",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{let e=c.value;if(!Array.isArray(e))return c.issues.push({expected:"array",code:"invalid_type",input:e,inst:a}),c;c.value=Array(e.length);let f=[];for(let a=0;a<e.length;a++){let g=e[a],h=b.element._zod.run({value:g,issues:[]},d);h instanceof Promise?f.push(h.then(b=>cX(b,c,a))):cX(h,c,a)}return f.length?Promise.all(f).then(()=>c):c}});function cZ(a,b,c,d){a.issues.length&&b.issues.push(...ab(c,a.issues)),void 0===a.value?c in d&&(b.value[c]=void 0):b.value[c]=a.value}function c$(a){let b=Object.keys(a.shape);for(let c of b)if(!a.shape?.[c]?._zod?.traits?.has("$ZodType"))throw Error(`Invalid element at key "${c}": expected a Zod schema`);let c=S(a.shape);return{...a,keys:b,keySet:new Set(b),numKeys:b.length,optionalKeys:new Set(c)}}function c_(a,b,c,d,e,f){let g=[],h=e.keySet,i=e.catchall._zod,j=i.def.type;for(let e of Object.keys(b)){if(h.has(e))continue;if("never"===j){g.push(e);continue}let f=i.run({value:b[e],issues:[]},d);f instanceof Promise?a.push(f.then(a=>cZ(a,c,e,b))):cZ(f,c,e,b)}return(g.length&&c.issues.push({code:"unrecognized_keys",keys:g,input:b,inst:f}),a.length)?Promise.all(a).then(()=>c):c}let c0=c("$ZodObject",(a,b)=>{let c;cg.init(a,b);let d=q(()=>c$(b));v(a._zod,"propValues",()=>{let a=b.shape,c={};for(let b in a){let d=a[b]._zod;if(d.values)for(let a of(c[b]??(c[b]=new Set),d.values))c[b].add(a)}return c});let e=b.catchall;a._zod.parse=(b,f)=>{c??(c=d.value);let g=b.value;if(!F(g))return b.issues.push({expected:"object",code:"invalid_type",input:g,inst:a}),b;b.value={};let h=[],i=c.shape;for(let a of c.keys){let c=i[a]._zod.run({value:g[a],issues:[]},f);c instanceof Promise?h.push(c.then(c=>cZ(c,b,a,g))):cZ(c,b,a,g)}return e?c_(h,g,b,f,d.value,a):h.length?Promise.all(h).then(()=>b):b}}),c1=c("$ZodObjectJIT",(a,b)=>{let c,d;c0.init(a,b);let e=a._zod.parse,f=q(()=>c$(b)),h=!g.jitless,i=h&&G.value,j=b.catchall;a._zod.parse=(g,k)=>{d??(d=f.value);let l=g.value;return F(l)?h&&i&&k?.async===!1&&!0!==k.jitless?(c||(c=(a=>{let b=new ce(["shape","payload","ctx"]),c=f.value,d=a=>{let b=D(a);return`shape[${b}]._zod.run({ value: input[${b}], issues: [] }, ctx)`};b.write("const input = payload.value;");let e=Object.create(null),g=0;for(let a of c.keys)e[a]=`key_${g++}`;for(let a of(b.write("const newResult = {};"),c.keys)){let c=e[a],f=D(a);b.write(`const ${c} = ${d(a)};`),b.write(`
        if (${c}.issues.length) {
          payload.issues = payload.issues.concat(${c}.issues.map(iss => ({
            ...iss,
            path: iss.path ? [${f}, ...iss.path] : [${f}]
          })));
        }
        
        
        if (${c}.value === undefined) {
          if (${f} in input) {
            newResult[${f}] = undefined;
          }
        } else {
          newResult[${f}] = ${c}.value;
        }
        
      `)}b.write("payload.value = newResult;"),b.write("return payload;");let h=b.compile();return(b,c)=>h(a,b,c)})(b.shape)),g=c(g,k),j)?c_([],l,g,k,d,a):g:e(g,k):(g.issues.push({expected:"object",code:"invalid_type",input:l,inst:a}),g)}});function c2(a,b,c,d){for(let c of a)if(0===c.issues.length)return b.value=c.value,b;let e=a.filter(a=>!aa(a));return 1===e.length?(b.value=e[0].value,e[0]):(b.issues.push({code:"invalid_union",input:b.value,inst:c,errors:a.map(a=>a.issues.map(a=>ad(a,d,h())))}),b)}let c3=c("$ZodUnion",(a,b)=>{cg.init(a,b),v(a._zod,"optin",()=>b.options.some(a=>"optional"===a._zod.optin)?"optional":void 0),v(a._zod,"optout",()=>b.options.some(a=>"optional"===a._zod.optout)?"optional":void 0),v(a._zod,"values",()=>{if(b.options.every(a=>a._zod.values))return new Set(b.options.flatMap(a=>Array.from(a._zod.values)))}),v(a._zod,"pattern",()=>{if(b.options.every(a=>a._zod.pattern)){let a=b.options.map(a=>a._zod.pattern);return RegExp(`^(${a.map(a=>s(a.source)).join("|")})$`)}});let c=1===b.options.length,d=b.options[0]._zod.run;a._zod.parse=(e,f)=>{if(c)return d(e,f);let g=!1,h=[];for(let a of b.options){let b=a._zod.run({value:e.value,issues:[]},f);if(b instanceof Promise)h.push(b),g=!0;else{if(0===b.issues.length)return b;h.push(b)}}return g?Promise.all(h).then(b=>c2(b,e,a,f)):c2(h,e,a,f)}}),c4=c("$ZodDiscriminatedUnion",(a,b)=>{c3.init(a,b);let c=a._zod.parse;v(a._zod,"propValues",()=>{let a={};for(let c of b.options){let d=c._zod.propValues;if(!d||0===Object.keys(d).length)throw Error(`Invalid discriminated union option at index "${b.options.indexOf(c)}"`);for(let[b,c]of Object.entries(d))for(let d of(a[b]||(a[b]=new Set),c))a[b].add(d)}return a});let d=q(()=>{let a=b.options,c=new Map;for(let d of a){let a=d._zod.propValues?.[b.discriminator];if(!a||0===a.size)throw Error(`Invalid discriminated union option at index "${b.options.indexOf(d)}"`);for(let b of a){if(c.has(b))throw Error(`Duplicate discriminator value "${String(b)}"`);c.set(b,d)}}return c});a._zod.parse=(e,f)=>{let g=e.value;if(!F(g))return e.issues.push({code:"invalid_type",expected:"object",input:g,inst:a}),e;let h=d.value.get(g?.[b.discriminator]);return h?h._zod.run(e,f):b.unionFallback?c(e,f):(e.issues.push({code:"invalid_union",errors:[],note:"No matching discriminator",discriminator:b.discriminator,input:g,path:[b.discriminator],inst:a}),e)}}),c5=c("$ZodIntersection",(a,b)=>{cg.init(a,b),a._zod.parse=(a,c)=>{let d=a.value,e=b.left._zod.run({value:d,issues:[]},c),f=b.right._zod.run({value:d,issues:[]},c);return e instanceof Promise||f instanceof Promise?Promise.all([e,f]).then(([b,c])=>c6(a,b,c)):c6(a,e,f)}});function c6(a,b,c){if(b.issues.length&&a.issues.push(...b.issues),c.issues.length&&a.issues.push(...c.issues),aa(a))return a;let d=function a(b,c){if(b===c||b instanceof Date&&c instanceof Date&&+b==+c)return{valid:!0,data:b};if(H(b)&&H(c)){let d=Object.keys(c),e=Object.keys(b).filter(a=>-1!==d.indexOf(a)),f={...b,...c};for(let d of e){let e=a(b[d],c[d]);if(!e.valid)return{valid:!1,mergeErrorPath:[d,...e.mergeErrorPath]};f[d]=e.data}return{valid:!0,data:f}}if(Array.isArray(b)&&Array.isArray(c)){if(b.length!==c.length)return{valid:!1,mergeErrorPath:[]};let d=[];for(let e=0;e<b.length;e++){let f=a(b[e],c[e]);if(!f.valid)return{valid:!1,mergeErrorPath:[e,...f.mergeErrorPath]};d.push(f.data)}return{valid:!0,data:d}}return{valid:!1,mergeErrorPath:[]}}(b.value,c.value);if(!d.valid)throw Error(`Unmergable intersection. Error path: ${JSON.stringify(d.mergeErrorPath)}`);return a.value=d.data,a}let c7=c("$ZodTuple",(a,b)=>{cg.init(a,b);let c=b.items,d=c.length-[...c].reverse().findIndex(a=>"optional"!==a._zod.optin);a._zod.parse=(e,f)=>{let g=e.value;if(!Array.isArray(g))return e.issues.push({input:g,inst:a,expected:"tuple",code:"invalid_type"}),e;e.value=[];let h=[];if(!b.rest){let b=g.length>c.length,f=g.length<d-1;if(b||f)return e.issues.push({...b?{code:"too_big",maximum:c.length}:{code:"too_small",minimum:c.length},input:g,inst:a,origin:"array"}),e}let i=-1;for(let a of c){if(++i>=g.length&&i>=d)continue;let b=a._zod.run({value:g[i],issues:[]},f);b instanceof Promise?h.push(b.then(a=>c8(a,e,i))):c8(b,e,i)}if(b.rest)for(let a of g.slice(c.length)){i++;let c=b.rest._zod.run({value:a,issues:[]},f);c instanceof Promise?h.push(c.then(a=>c8(a,e,i))):c8(c,e,i)}return h.length?Promise.all(h).then(()=>e):e}});function c8(a,b,c){a.issues.length&&b.issues.push(...ab(c,a.issues)),b.value[c]=a.value}let c9=c("$ZodRecord",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{let e=c.value;if(!H(e))return c.issues.push({expected:"record",code:"invalid_type",input:e,inst:a}),c;let f=[];if(b.keyType._zod.values){let g,h=b.keyType._zod.values;for(let a of(c.value={},h))if("string"==typeof a||"number"==typeof a||"symbol"==typeof a){let g=b.valueType._zod.run({value:e[a],issues:[]},d);g instanceof Promise?f.push(g.then(b=>{b.issues.length&&c.issues.push(...ab(a,b.issues)),c.value[a]=b.value})):(g.issues.length&&c.issues.push(...ab(a,g.issues)),c.value[a]=g.value)}for(let a in e)h.has(a)||(g=g??[]).push(a);g&&g.length>0&&c.issues.push({code:"unrecognized_keys",input:e,inst:a,keys:g})}else for(let g of(c.value={},Reflect.ownKeys(e))){if("__proto__"===g)continue;let i=b.keyType._zod.run({value:g,issues:[]},d);if(i instanceof Promise)throw Error("Async schemas not supported in object keys currently");if(i.issues.length){c.issues.push({code:"invalid_key",origin:"record",issues:i.issues.map(a=>ad(a,d,h())),input:g,path:[g],inst:a}),c.value[i.value]=i.value;continue}let j=b.valueType._zod.run({value:e[g],issues:[]},d);j instanceof Promise?f.push(j.then(a=>{a.issues.length&&c.issues.push(...ab(g,a.issues)),c.value[i.value]=a.value})):(j.issues.length&&c.issues.push(...ab(g,j.issues)),c.value[i.value]=j.value)}return f.length?Promise.all(f).then(()=>c):c}}),da=c("$ZodMap",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{let e=c.value;if(!(e instanceof Map))return c.issues.push({expected:"map",code:"invalid_type",input:e,inst:a}),c;let f=[];for(let[g,h]of(c.value=new Map,e)){let i=b.keyType._zod.run({value:g,issues:[]},d),j=b.valueType._zod.run({value:h,issues:[]},d);i instanceof Promise||j instanceof Promise?f.push(Promise.all([i,j]).then(([b,f])=>{db(b,f,c,g,e,a,d)})):db(i,j,c,g,e,a,d)}return f.length?Promise.all(f).then(()=>c):c}});function db(a,b,c,d,e,f,g){a.issues.length&&(L.has(typeof d)?c.issues.push(...ab(d,a.issues)):c.issues.push({code:"invalid_key",origin:"map",input:e,inst:f,issues:a.issues.map(a=>ad(a,g,h()))})),b.issues.length&&(L.has(typeof d)?c.issues.push(...ab(d,b.issues)):c.issues.push({origin:"map",code:"invalid_element",input:e,inst:f,key:d,issues:b.issues.map(a=>ad(a,g,h()))})),c.value.set(a.value,b.value)}let dc=c("$ZodSet",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{let e=c.value;if(!(e instanceof Set))return c.issues.push({input:e,inst:a,expected:"set",code:"invalid_type"}),c;let f=[];for(let a of(c.value=new Set,e)){let e=b.valueType._zod.run({value:a,issues:[]},d);e instanceof Promise?f.push(e.then(a=>dd(a,c))):dd(e,c)}return f.length?Promise.all(f).then(()=>c):c}});function dd(a,b){a.issues.length&&b.issues.push(...a.issues),b.value.add(a.value)}let de=c("$ZodEnum",(a,b)=>{cg.init(a,b);let c=n(b.entries),d=new Set(c);a._zod.values=d,a._zod.pattern=RegExp(`^(${c.filter(a=>L.has(typeof a)).map(a=>"string"==typeof a?N(a):a.toString()).join("|")})$`),a._zod.parse=(b,e)=>{let f=b.value;return d.has(f)||b.issues.push({code:"invalid_value",values:c,input:f,inst:a}),b}}),df=c("$ZodLiteral",(a,b)=>{if(cg.init(a,b),0===b.values.length)throw Error("Cannot create literal schema with no valid values");a._zod.values=new Set(b.values),a._zod.pattern=RegExp(`^(${b.values.map(a=>"string"==typeof a?N(a):a?N(a.toString()):String(a)).join("|")})$`),a._zod.parse=(c,d)=>{let e=c.value;return a._zod.values.has(e)||c.issues.push({code:"invalid_value",values:b.values,input:e,inst:a}),c}}),dg=c("$ZodFile",(a,b)=>{cg.init(a,b),a._zod.parse=(b,c)=>{let d=b.value;return d instanceof File||b.issues.push({expected:"file",code:"invalid_type",input:d,inst:a}),b}}),dh=c("$ZodTransform",(a,b)=>{cg.init(a,b),a._zod.parse=(c,d)=>{if("backward"===d.direction)throw new f(a.constructor.name);let g=b.transform(c.value,c);if(d.async)return(g instanceof Promise?g:Promise.resolve(g)).then(a=>(c.value=a,c));if(g instanceof Promise)throw new e;return c.value=g,c}});function di(a,b){return a.issues.length&&void 0===b?{issues:[],value:void 0}:a}let dj=c("$ZodOptional",(a,b)=>{cg.init(a,b),a._zod.optin="optional",a._zod.optout="optional",v(a._zod,"values",()=>b.innerType._zod.values?new Set([...b.innerType._zod.values,void 0]):void 0),v(a._zod,"pattern",()=>{let a=b.innerType._zod.pattern;return a?RegExp(`^(${s(a.source)})?$`):void 0}),a._zod.parse=(a,c)=>{if("optional"===b.innerType._zod.optin){let d=b.innerType._zod.run(a,c);return d instanceof Promise?d.then(b=>di(b,a.value)):di(d,a.value)}return void 0===a.value?a:b.innerType._zod.run(a,c)}}),dk=c("$ZodNullable",(a,b)=>{cg.init(a,b),v(a._zod,"optin",()=>b.innerType._zod.optin),v(a._zod,"optout",()=>b.innerType._zod.optout),v(a._zod,"pattern",()=>{let a=b.innerType._zod.pattern;return a?RegExp(`^(${s(a.source)}|null)$`):void 0}),v(a._zod,"values",()=>b.innerType._zod.values?new Set([...b.innerType._zod.values,null]):void 0),a._zod.parse=(a,c)=>null===a.value?a:b.innerType._zod.run(a,c)}),dl=c("$ZodDefault",(a,b)=>{cg.init(a,b),a._zod.optin="optional",v(a._zod,"values",()=>b.innerType._zod.values),a._zod.parse=(a,c)=>{if("backward"===c.direction)return b.innerType._zod.run(a,c);if(void 0===a.value)return a.value=b.defaultValue,a;let d=b.innerType._zod.run(a,c);return d instanceof Promise?d.then(a=>dm(a,b)):dm(d,b)}});function dm(a,b){return void 0===a.value&&(a.value=b.defaultValue),a}let dn=c("$ZodPrefault",(a,b)=>{cg.init(a,b),a._zod.optin="optional",v(a._zod,"values",()=>b.innerType._zod.values),a._zod.parse=(a,c)=>("backward"===c.direction||void 0===a.value&&(a.value=b.defaultValue),b.innerType._zod.run(a,c))}),dp=c("$ZodNonOptional",(a,b)=>{cg.init(a,b),v(a._zod,"values",()=>{let a=b.innerType._zod.values;return a?new Set([...a].filter(a=>void 0!==a)):void 0}),a._zod.parse=(c,d)=>{let e=b.innerType._zod.run(c,d);return e instanceof Promise?e.then(b=>dq(b,a)):dq(e,a)}});function dq(a,b){return a.issues.length||void 0!==a.value||a.issues.push({code:"invalid_type",expected:"nonoptional",input:a.value,inst:b}),a}let dr=c("$ZodSuccess",(a,b)=>{cg.init(a,b),a._zod.parse=(a,c)=>{if("backward"===c.direction)throw new f("ZodSuccess");let d=b.innerType._zod.run(a,c);return d instanceof Promise?d.then(b=>(a.value=0===b.issues.length,a)):(a.value=0===d.issues.length,a)}}),ds=c("$ZodCatch",(a,b)=>{cg.init(a,b),v(a._zod,"optin",()=>b.innerType._zod.optin),v(a._zod,"optout",()=>b.innerType._zod.optout),v(a._zod,"values",()=>b.innerType._zod.values),a._zod.parse=(a,c)=>{if("backward"===c.direction)return b.innerType._zod.run(a,c);let d=b.innerType._zod.run(a,c);return d instanceof Promise?d.then(d=>(a.value=d.value,d.issues.length&&(a.value=b.catchValue({...a,error:{issues:d.issues.map(a=>ad(a,c,h()))},input:a.value}),a.issues=[]),a)):(a.value=d.value,d.issues.length&&(a.value=b.catchValue({...a,error:{issues:d.issues.map(a=>ad(a,c,h()))},input:a.value}),a.issues=[]),a)}}),dt=c("$ZodNaN",(a,b)=>{cg.init(a,b),a._zod.parse=(b,c)=>("number"==typeof b.value&&Number.isNaN(b.value)||b.issues.push({input:b.value,inst:a,expected:"nan",code:"invalid_type"}),b)}),du=c("$ZodPipe",(a,b)=>{cg.init(a,b),v(a._zod,"values",()=>b.in._zod.values),v(a._zod,"optin",()=>b.in._zod.optin),v(a._zod,"optout",()=>b.out._zod.optout),v(a._zod,"propValues",()=>b.in._zod.propValues),a._zod.parse=(a,c)=>{if("backward"===c.direction){let d=b.out._zod.run(a,c);return d instanceof Promise?d.then(a=>dv(a,b.in,c)):dv(d,b.in,c)}let d=b.in._zod.run(a,c);return d instanceof Promise?d.then(a=>dv(a,b.out,c)):dv(d,b.out,c)}});function dv(a,b,c){return a.issues.length?(a.aborted=!0,a):b._zod.run({value:a.value,issues:a.issues},c)}let dw=c("$ZodCodec",(a,b)=>{cg.init(a,b),v(a._zod,"values",()=>b.in._zod.values),v(a._zod,"optin",()=>b.in._zod.optin),v(a._zod,"optout",()=>b.out._zod.optout),v(a._zod,"propValues",()=>b.in._zod.propValues),a._zod.parse=(a,c)=>{if("forward"===(c.direction||"forward")){let d=b.in._zod.run(a,c);return d instanceof Promise?d.then(a=>dx(a,b,c)):dx(d,b,c)}{let d=b.out._zod.run(a,c);return d instanceof Promise?d.then(a=>dx(a,b,c)):dx(d,b,c)}}});function dx(a,b,c){if(a.issues.length)return a.aborted=!0,a;if("forward"===(c.direction||"forward")){let d=b.transform(a.value,a);return d instanceof Promise?d.then(d=>dy(a,d,b.out,c)):dy(a,d,b.out,c)}{let d=b.reverseTransform(a.value,a);return d instanceof Promise?d.then(d=>dy(a,d,b.in,c)):dy(a,d,b.in,c)}}function dy(a,b,c,d){return a.issues.length?(a.aborted=!0,a):c._zod.run({value:b,issues:a.issues},d)}let dz=c("$ZodReadonly",(a,b)=>{cg.init(a,b),v(a._zod,"propValues",()=>b.innerType._zod.propValues),v(a._zod,"values",()=>b.innerType._zod.values),v(a._zod,"optin",()=>b.innerType._zod.optin),v(a._zod,"optout",()=>b.innerType._zod.optout),a._zod.parse=(a,c)=>{if("backward"===c.direction)return b.innerType._zod.run(a,c);let d=b.innerType._zod.run(a,c);return d instanceof Promise?d.then(dA):dA(d)}});function dA(a){return a.value=Object.freeze(a.value),a}let dB=c("$ZodTemplateLiteral",(a,b)=>{cg.init(a,b);let c=[];for(let a of b.parts)if("object"==typeof a&&null!==a){if(!a._zod.pattern)throw Error(`Invalid template literal part, no pattern found: ${[...a._zod.traits].shift()}`);let b=a._zod.pattern instanceof RegExp?a._zod.pattern.source:a._zod.pattern;if(!b)throw Error(`Invalid template literal part: ${a._zod.traits}`);let d=+!!b.startsWith("^"),e=b.endsWith("$")?b.length-1:b.length;c.push(b.slice(d,e))}else if(null===a||M.has(typeof a))c.push(N(`${a}`));else throw Error(`Invalid template literal part: ${a}`);a._zod.pattern=RegExp(`^${c.join("")}$`),a._zod.parse=(c,d)=>("string"!=typeof c.value?c.issues.push({input:c.value,inst:a,expected:"template_literal",code:"invalid_type"}):(a._zod.pattern.lastIndex=0,a._zod.pattern.test(c.value)||c.issues.push({input:c.value,inst:a,code:"invalid_format",format:b.format??"template_literal",pattern:a._zod.pattern.source})),c)}),dC=c("$ZodFunction",(a,b)=>(cg.init(a,b),a._def=b,a._zod.def=b,a.implement=b=>{if("function"!=typeof b)throw Error("implement() must be called with a function");return function(...c){let d=Reflect.apply(b,this,a._def.input?ay(a._def.input,c):c);return a._def.output?ay(a._def.output,d):d}},a.implementAsync=b=>{if("function"!=typeof b)throw Error("implementAsync() must be called with a function");return async function(...c){let d=a._def.input?await aA(a._def.input,c):c,e=await Reflect.apply(b,this,d);return a._def.output?await aA(a._def.output,e):e}},a._zod.parse=(b,c)=>("function"!=typeof b.value?b.issues.push({code:"invalid_type",expected:"function",input:b.value,inst:a}):a._def.output&&"promise"===a._def.output._zod.def.type?b.value=a.implementAsync(b.value):b.value=a.implement(b.value),b),a.input=(...b)=>{let c=a.constructor;return new c(Array.isArray(b[0])?{type:"function",input:new c7({type:"tuple",items:b[0],rest:b[1]}),output:a._def.output}:{type:"function",input:b[0],output:a._def.output})},a.output=b=>new a.constructor({type:"function",input:a._def.input,output:b}),a)),dD=c("$ZodPromise",(a,b)=>{cg.init(a,b),a._zod.parse=(a,c)=>Promise.resolve(a.value).then(a=>b.innerType._zod.run({value:a,issues:[]},c))}),dE=c("$ZodLazy",(a,b)=>{cg.init(a,b),v(a._zod,"innerType",()=>b.getter()),v(a._zod,"pattern",()=>a._zod.innerType._zod.pattern),v(a._zod,"propValues",()=>a._zod.innerType._zod.propValues),v(a._zod,"optin",()=>a._zod.innerType._zod.optin??void 0),v(a._zod,"optout",()=>a._zod.innerType._zod.optout??void 0),a._zod.parse=(b,c)=>a._zod.innerType._zod.run(b,c)}),dF=c("$ZodCustom",(a,b)=>{bS.init(a,b),cg.init(a,b),a._zod.parse=(a,b)=>a,a._zod.check=c=>{let d=c.value,e=b.fn(d);if(e instanceof Promise)return e.then(b=>dG(b,c,d,a));dG(e,c,d,a)}});function dG(a,b,c,d){if(!a){let a={code:"custom",input:c,inst:d,path:[...d._zod.def.path??[]],continue:!d._zod.def.abort};d._zod.def.params&&(a.params=d._zod.def.params),b.issues.push(ag(a))}}function dH(){return{localeError:(()=>{let a={string:{unit:"حرف",verb:"أن يحوي"},file:{unit:"بايت",verb:"أن يحوي"},array:{unit:"عنصر",verb:"أن يحوي"},set:{unit:"عنصر",verb:"أن يحوي"}},b={regex:"مدخل",email:"بريد إلكتروني",url:"رابط",emoji:"إيموجي",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"تاريخ ووقت بمعيار ISO",date:"تاريخ بمعيار ISO",time:"وقت بمعيار ISO",duration:"مدة بمعيار ISO",ipv4:"عنوان IPv4",ipv6:"عنوان IPv6",cidrv4:"مدى عناوين بصيغة IPv4",cidrv6:"مدى عناوين بصيغة IPv6",base64:"نَص بترميز base64-encoded",base64url:"نَص بترميز base64url-encoded",json_string:"نَص على هيئة JSON",e164:"رقم هاتف بمعيار E.164",jwt:"JWT",template_literal:"مدخل"};return c=>{switch(c.code){case"invalid_type":return`مدخلات غير مقبولة: يفترض إدخال ${c.expected}، ولكن تم إدخال ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`مدخلات غير مقبولة: يفترض إدخال ${R(c.values[0])}`;return`اختيار غير مقبول: يتوقع انتقاء أحد هذه الخيارات: ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return` أكبر من اللازم: يفترض أن تكون ${c.origin??"القيمة"} ${b} ${c.maximum.toString()} ${d.unit??"عنصر"}`;return`أكبر من اللازم: يفترض أن تكون ${c.origin??"القيمة"} ${b} ${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`أصغر من اللازم: يفترض لـ ${c.origin} أن يكون ${b} ${c.minimum.toString()} ${d.unit}`;return`أصغر من اللازم: يفترض لـ ${c.origin} أن يكون ${b} ${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`نَص غير مقبول: يجب أن يبدأ بـ "${c.prefix}"`;if("ends_with"===c.format)return`نَص غير مقبول: يجب أن ينتهي بـ "${c.suffix}"`;if("includes"===c.format)return`نَص غير مقبول: يجب أن يتضمَّن "${c.includes}"`;if("regex"===c.format)return`نَص غير مقبول: يجب أن يطابق النمط ${c.pattern}`;return`${b[c.format]??c.format} غير مقبول`;case"not_multiple_of":return`رقم غير مقبول: يجب أن يكون من مضاعفات ${c.divisor}`;case"unrecognized_keys":return`معرف${c.keys.length>1?"ات":""} غريب${c.keys.length>1?"ة":""}: ${o(c.keys,"، ")}`;case"invalid_key":return`معرف غير مقبول في ${c.origin}`;case"invalid_union":default:return"مدخل غير مقبول";case"invalid_element":return`مدخل غير مقبول في ${c.origin}`}}})()}}function dI(){return{localeError:(()=>{let a={string:{unit:"simvol",verb:"olmalıdır"},file:{unit:"bayt",verb:"olmalıdır"},array:{unit:"element",verb:"olmalıdır"},set:{unit:"element",verb:"olmalıdır"}},b={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Yanlış dəyər: g\xf6zlənilən ${c.expected}, daxil olan ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Yanlış dəyər: g\xf6zlənilən ${R(c.values[0])}`;return`Yanlış se\xe7im: aşağıdakılardan biri olmalıdır: ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`\xc7ox b\xf6y\xfck: g\xf6zlənilən ${c.origin??"dəyər"} ${b}${c.maximum.toString()} ${d.unit??"element"}`;return`\xc7ox b\xf6y\xfck: g\xf6zlənilən ${c.origin??"dəyər"} ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`\xc7ox ki\xe7ik: g\xf6zlənilən ${c.origin} ${b}${c.minimum.toString()} ${d.unit}`;return`\xc7ox ki\xe7ik: g\xf6zlənilən ${c.origin} ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Yanlış mətn: "${c.prefix}" ilə başlamalıdır`;if("ends_with"===c.format)return`Yanlış mətn: "${c.suffix}" ilə bitməlidir`;if("includes"===c.format)return`Yanlış mətn: "${c.includes}" daxil olmalıdır`;if("regex"===c.format)return`Yanlış mətn: ${c.pattern} şablonuna uyğun olmalıdır`;return`Yanlış ${b[c.format]??c.format}`;case"not_multiple_of":return`Yanlış ədəd: ${c.divisor} ilə b\xf6l\xfcnə bilən olmalıdır`;case"unrecognized_keys":return`Tanınmayan a\xe7ar${c.keys.length>1?"lar":""}: ${o(c.keys,", ")}`;case"invalid_key":return`${c.origin} daxilində yanlış a\xe7ar`;case"invalid_union":return"Yanlış dəyər";case"invalid_element":return`${c.origin} daxilində yanlış dəyər`;default:return`Yanlış dəyər`}}})()}}function dJ(a,b,c,d){let e=Math.abs(a),f=e%10,g=e%100;return g>=11&&g<=19?d:1===f?b:f>=2&&f<=4?c:d}function dK(){return{localeError:(()=>{let a={string:{unit:{one:"сімвал",few:"сімвалы",many:"сімвалаў"},verb:"мець"},array:{unit:{one:"элемент",few:"элементы",many:"элементаў"},verb:"мець"},set:{unit:{one:"элемент",few:"элементы",many:"элементаў"},verb:"мець"},file:{unit:{one:"байт",few:"байты",many:"байтаў"},verb:"мець"}},b={regex:"увод",email:"email адрас",url:"URL",emoji:"эмодзі",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO дата і час",date:"ISO дата",time:"ISO час",duration:"ISO працягласць",ipv4:"IPv4 адрас",ipv6:"IPv6 адрас",cidrv4:"IPv4 дыяпазон",cidrv6:"IPv6 дыяпазон",base64:"радок у фармаце base64",base64url:"радок у фармаце base64url",json_string:"JSON радок",e164:"нумар E.164",jwt:"JWT",template_literal:"увод"};return c=>{switch(c.code){case"invalid_type":return`Няправільны ўвод: чакаўся ${c.expected}, атрымана ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"лік";case"object":if(Array.isArray(a))return"масіў";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Няправільны ўвод: чакалася ${R(c.values[0])}`;return`Няправільны варыянт: чакаўся адзін з ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d){let a=dJ(Number(c.maximum),d.unit.one,d.unit.few,d.unit.many);return`Занадта вялікі: чакалася, што ${c.origin??"значэнне"} павінна ${d.verb} ${b}${c.maximum.toString()} ${a}`}return`Занадта вялікі: чакалася, што ${c.origin??"значэнне"} павінна быць ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d){let a=dJ(Number(c.minimum),d.unit.one,d.unit.few,d.unit.many);return`Занадта малы: чакалася, што ${c.origin} павінна ${d.verb} ${b}${c.minimum.toString()} ${a}`}return`Занадта малы: чакалася, што ${c.origin} павінна быць ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Няправільны радок: павінен пачынацца з "${c.prefix}"`;if("ends_with"===c.format)return`Няправільны радок: павінен заканчвацца на "${c.suffix}"`;if("includes"===c.format)return`Няправільны радок: павінен змяшчаць "${c.includes}"`;if("regex"===c.format)return`Няправільны радок: павінен адпавядаць шаблону ${c.pattern}`;return`Няправільны ${b[c.format]??c.format}`;case"not_multiple_of":return`Няправільны лік: павінен быць кратным ${c.divisor}`;case"unrecognized_keys":return`Нераспазнаны ${c.keys.length>1?"ключы":"ключ"}: ${o(c.keys,", ")}`;case"invalid_key":return`Няправільны ключ у ${c.origin}`;case"invalid_union":return"Няправільны ўвод";case"invalid_element":return`Няправільнае значэнне ў ${c.origin}`;default:return`Няправільны ўвод`}}})()}}function dL(){return{localeError:(()=>{let a={string:{unit:"caràcters",verb:"contenir"},file:{unit:"bytes",verb:"contenir"},array:{unit:"elements",verb:"contenir"},set:{unit:"elements",verb:"contenir"}},b={regex:"entrada",email:"adreça electrònica",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data i hora ISO",date:"data ISO",time:"hora ISO",duration:"durada ISO",ipv4:"adreça IPv4",ipv6:"adreça IPv6",cidrv4:"rang IPv4",cidrv6:"rang IPv6",base64:"cadena codificada en base64",base64url:"cadena codificada en base64url",json_string:"cadena JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return c=>{switch(c.code){case"invalid_type":return`Tipus inv\xe0lid: s'esperava ${c.expected}, s'ha rebut ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Valor inv\xe0lid: s'esperava ${R(c.values[0])}`;return`Opci\xf3 inv\xe0lida: s'esperava una de ${o(c.values," o ")}`;case"too_big":{let b=c.inclusive?"com a màxim":"menys de",d=a[c.origin]??null;if(d)return`Massa gran: s'esperava que ${c.origin??"el valor"} contingu\xe9s ${b} ${c.maximum.toString()} ${d.unit??"elements"}`;return`Massa gran: s'esperava que ${c.origin??"el valor"} fos ${b} ${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?"com a mínim":"més de",d=a[c.origin]??null;if(d)return`Massa petit: s'esperava que ${c.origin} contingu\xe9s ${b} ${c.minimum.toString()} ${d.unit}`;return`Massa petit: s'esperava que ${c.origin} fos ${b} ${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Format inv\xe0lid: ha de comen\xe7ar amb "${c.prefix}"`;if("ends_with"===c.format)return`Format inv\xe0lid: ha d'acabar amb "${c.suffix}"`;if("includes"===c.format)return`Format inv\xe0lid: ha d'incloure "${c.includes}"`;if("regex"===c.format)return`Format inv\xe0lid: ha de coincidir amb el patr\xf3 ${c.pattern}`;return`Format inv\xe0lid per a ${b[c.format]??c.format}`;case"not_multiple_of":return`N\xfamero inv\xe0lid: ha de ser m\xfaltiple de ${c.divisor}`;case"unrecognized_keys":return`Clau${c.keys.length>1?"s":""} no reconeguda${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Clau inv\xe0lida a ${c.origin}`;case"invalid_union":return"Entrada invàlida";case"invalid_element":return`Element inv\xe0lid a ${c.origin}`;default:return`Entrada inv\xe0lida`}}})()}}function dM(){return{localeError:(()=>{let a={string:{unit:"znaků",verb:"mít"},file:{unit:"bajtů",verb:"mít"},array:{unit:"prvků",verb:"mít"},set:{unit:"prvků",verb:"mít"}},b={regex:"regulární výraz",email:"e-mailová adresa",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"datum a čas ve formátu ISO",date:"datum ve formátu ISO",time:"čas ve formátu ISO",duration:"doba trvání ISO",ipv4:"IPv4 adresa",ipv6:"IPv6 adresa",cidrv4:"rozsah IPv4",cidrv6:"rozsah IPv6",base64:"řetězec zakódovaný ve formátu base64",base64url:"řetězec zakódovaný ve formátu base64url",json_string:"řetězec ve formátu JSON",e164:"číslo E.164",jwt:"JWT",template_literal:"vstup"};return c=>{switch(c.code){case"invalid_type":return`Neplatn\xfd vstup: oček\xe1v\xe1no ${c.expected}, obdrženo ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"číslo";case"string":return"řetězec";case"boolean":return"boolean";case"bigint":return"bigint";case"function":return"funkce";case"symbol":return"symbol";case"undefined":return"undefined";case"object":if(Array.isArray(a))return"pole";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Neplatn\xfd vstup: oček\xe1v\xe1no ${R(c.values[0])}`;return`Neplatn\xe1 možnost: oček\xe1v\xe1na jedna z hodnot ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Hodnota je př\xedliš velk\xe1: ${c.origin??"hodnota"} mus\xed m\xedt ${b}${c.maximum.toString()} ${d.unit??"prvků"}`;return`Hodnota je př\xedliš velk\xe1: ${c.origin??"hodnota"} mus\xed b\xfdt ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Hodnota je př\xedliš mal\xe1: ${c.origin??"hodnota"} mus\xed m\xedt ${b}${c.minimum.toString()} ${d.unit??"prvků"}`;return`Hodnota je př\xedliš mal\xe1: ${c.origin??"hodnota"} mus\xed b\xfdt ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Neplatn\xfd řetězec: mus\xed zač\xednat na "${c.prefix}"`;if("ends_with"===c.format)return`Neplatn\xfd řetězec: mus\xed končit na "${c.suffix}"`;if("includes"===c.format)return`Neplatn\xfd řetězec: mus\xed obsahovat "${c.includes}"`;if("regex"===c.format)return`Neplatn\xfd řetězec: mus\xed odpov\xeddat vzoru ${c.pattern}`;return`Neplatn\xfd form\xe1t ${b[c.format]??c.format}`;case"not_multiple_of":return`Neplatn\xe9 č\xedslo: mus\xed b\xfdt n\xe1sobkem ${c.divisor}`;case"unrecognized_keys":return`Nezn\xe1m\xe9 kl\xedče: ${o(c.keys,", ")}`;case"invalid_key":return`Neplatn\xfd kl\xedč v ${c.origin}`;case"invalid_union":return"Neplatný vstup";case"invalid_element":return`Neplatn\xe1 hodnota v ${c.origin}`;default:return`Neplatn\xfd vstup`}}})()}}function dN(){return{localeError:(()=>{let a={string:{unit:"tegn",verb:"havde"},file:{unit:"bytes",verb:"havde"},array:{unit:"elementer",verb:"indeholdt"},set:{unit:"elementer",verb:"indeholdt"}},b={string:"streng",number:"tal",boolean:"boolean",array:"liste",object:"objekt",set:"sæt",file:"fil"},c={regex:"input",email:"e-mailadresse",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dato- og klokkeslæt",date:"ISO-dato",time:"ISO-klokkeslæt",duration:"ISO-varighed",ipv4:"IPv4-område",ipv6:"IPv6-område",cidrv4:"IPv4-spektrum",cidrv6:"IPv6-spektrum",base64:"base64-kodet streng",base64url:"base64url-kodet streng",json_string:"JSON-streng",e164:"E.164-nummer",jwt:"JWT",template_literal:"input"};return d=>{var e,f,g,h;switch(d.code){case"invalid_type":return`Ugyldigt input: forventede ${b[e=d.expected]??e}, fik ${b[f=(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"tal";case"object":if(Array.isArray(a))return"liste";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name;return"objekt"}return b})(d.input)]??f}`;case"invalid_value":if(1===d.values.length)return`Ugyldig v\xe6rdi: forventede ${R(d.values[0])}`;return`Ugyldigt valg: forventede en af f\xf8lgende ${o(d.values,"|")}`;case"too_big":{let c=d.inclusive?"<=":"<",e=a[d.origin]??null,f=b[g=d.origin]??g;if(e)return`For stor: forventede ${f??"value"} ${e.verb} ${c} ${d.maximum.toString()} ${e.unit??"elementer"}`;return`For stor: forventede ${f??"value"} havde ${c} ${d.maximum.toString()}`}case"too_small":{let c=d.inclusive?">=":">",e=a[d.origin]??null,f=b[h=d.origin]??h;if(e)return`For lille: forventede ${f} ${e.verb} ${c} ${d.minimum.toString()} ${e.unit}`;return`For lille: forventede ${f} havde ${c} ${d.minimum.toString()}`}case"invalid_format":if("starts_with"===d.format)return`Ugyldig streng: skal starte med "${d.prefix}"`;if("ends_with"===d.format)return`Ugyldig streng: skal ende med "${d.suffix}"`;if("includes"===d.format)return`Ugyldig streng: skal indeholde "${d.includes}"`;if("regex"===d.format)return`Ugyldig streng: skal matche m\xf8nsteret ${d.pattern}`;return`Ugyldig ${c[d.format]??d.format}`;case"not_multiple_of":return`Ugyldigt tal: skal v\xe6re deleligt med ${d.divisor}`;case"unrecognized_keys":return`${d.keys.length>1?"Ukendte nøgler":"Ukendt nøgle"}: ${o(d.keys,", ")}`;case"invalid_key":return`Ugyldig n\xf8gle i ${d.origin}`;case"invalid_union":return"Ugyldigt input: matcher ingen af de tilladte typer";case"invalid_element":return`Ugyldig v\xe6rdi i ${d.origin}`;default:return"Ugyldigt input"}}})()}}function dO(){return{localeError:(()=>{let a={string:{unit:"Zeichen",verb:"zu haben"},file:{unit:"Bytes",verb:"zu haben"},array:{unit:"Elemente",verb:"zu haben"},set:{unit:"Elemente",verb:"zu haben"}},b={regex:"Eingabe",email:"E-Mail-Adresse",url:"URL",emoji:"Emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-Datum und -Uhrzeit",date:"ISO-Datum",time:"ISO-Uhrzeit",duration:"ISO-Dauer",ipv4:"IPv4-Adresse",ipv6:"IPv6-Adresse",cidrv4:"IPv4-Bereich",cidrv6:"IPv6-Bereich",base64:"Base64-codierter String",base64url:"Base64-URL-codierter String",json_string:"JSON-String",e164:"E.164-Nummer",jwt:"JWT",template_literal:"Eingabe"};return c=>{switch(c.code){case"invalid_type":return`Ung\xfcltige Eingabe: erwartet ${c.expected}, erhalten ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"Zahl";case"object":if(Array.isArray(a))return"Array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Ung\xfcltige Eingabe: erwartet ${R(c.values[0])}`;return`Ung\xfcltige Option: erwartet eine von ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Zu gro\xdf: erwartet, dass ${c.origin??"Wert"} ${b}${c.maximum.toString()} ${d.unit??"Elemente"} hat`;return`Zu gro\xdf: erwartet, dass ${c.origin??"Wert"} ${b}${c.maximum.toString()} ist`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Zu klein: erwartet, dass ${c.origin} ${b}${c.minimum.toString()} ${d.unit} hat`;return`Zu klein: erwartet, dass ${c.origin} ${b}${c.minimum.toString()} ist`}case"invalid_format":if("starts_with"===c.format)return`Ung\xfcltiger String: muss mit "${c.prefix}" beginnen`;if("ends_with"===c.format)return`Ung\xfcltiger String: muss mit "${c.suffix}" enden`;if("includes"===c.format)return`Ung\xfcltiger String: muss "${c.includes}" enthalten`;if("regex"===c.format)return`Ung\xfcltiger String: muss dem Muster ${c.pattern} entsprechen`;return`Ung\xfcltig: ${b[c.format]??c.format}`;case"not_multiple_of":return`Ung\xfcltige Zahl: muss ein Vielfaches von ${c.divisor} sein`;case"unrecognized_keys":return`${c.keys.length>1?"Unbekannte Schlüssel":"Unbekannter Schlüssel"}: ${o(c.keys,", ")}`;case"invalid_key":return`Ung\xfcltiger Schl\xfcssel in ${c.origin}`;case"invalid_union":return"Ungültige Eingabe";case"invalid_element":return`Ung\xfcltiger Wert in ${c.origin}`;default:return`Ung\xfcltige Eingabe`}}})()}}function dP(){return{localeError:(()=>{let a={string:{unit:"characters",verb:"to have"},file:{unit:"bytes",verb:"to have"},array:{unit:"items",verb:"to have"},set:{unit:"items",verb:"to have"}},b={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Invalid input: expected ${c.expected}, received ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Invalid input: expected ${R(c.values[0])}`;return`Invalid option: expected one of ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Too big: expected ${c.origin??"value"} to have ${b}${c.maximum.toString()} ${d.unit??"elements"}`;return`Too big: expected ${c.origin??"value"} to be ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Too small: expected ${c.origin} to have ${b}${c.minimum.toString()} ${d.unit}`;return`Too small: expected ${c.origin} to be ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Invalid string: must start with "${c.prefix}"`;if("ends_with"===c.format)return`Invalid string: must end with "${c.suffix}"`;if("includes"===c.format)return`Invalid string: must include "${c.includes}"`;if("regex"===c.format)return`Invalid string: must match pattern ${c.pattern}`;return`Invalid ${b[c.format]??c.format}`;case"not_multiple_of":return`Invalid number: must be a multiple of ${c.divisor}`;case"unrecognized_keys":return`Unrecognized key${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Invalid key in ${c.origin}`;case"invalid_union":default:return"Invalid input";case"invalid_element":return`Invalid value in ${c.origin}`}}})()}}function dQ(){return{localeError:(()=>{let a={string:{unit:"karaktrojn",verb:"havi"},file:{unit:"bajtojn",verb:"havi"},array:{unit:"elementojn",verb:"havi"},set:{unit:"elementojn",verb:"havi"}},b={regex:"enigo",email:"retadreso",url:"URL",emoji:"emoĝio",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-datotempo",date:"ISO-dato",time:"ISO-tempo",duration:"ISO-daŭro",ipv4:"IPv4-adreso",ipv6:"IPv6-adreso",cidrv4:"IPv4-rango",cidrv6:"IPv6-rango",base64:"64-ume kodita karaktraro",base64url:"URL-64-ume kodita karaktraro",json_string:"JSON-karaktraro",e164:"E.164-nombro",jwt:"JWT",template_literal:"enigo"};return c=>{switch(c.code){case"invalid_type":return`Nevalida enigo: atendiĝis ${c.expected}, riceviĝis ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"nombro";case"object":if(Array.isArray(a))return"tabelo";if(null===a)return"senvalora";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Nevalida enigo: atendiĝis ${R(c.values[0])}`;return`Nevalida opcio: atendiĝis unu el ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Tro granda: atendiĝis ke ${c.origin??"valoro"} havu ${b}${c.maximum.toString()} ${d.unit??"elementojn"}`;return`Tro granda: atendiĝis ke ${c.origin??"valoro"} havu ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Tro malgranda: atendiĝis ke ${c.origin} havu ${b}${c.minimum.toString()} ${d.unit}`;return`Tro malgranda: atendiĝis ke ${c.origin} estu ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Nevalida karaktraro: devas komenciĝi per "${c.prefix}"`;if("ends_with"===c.format)return`Nevalida karaktraro: devas finiĝi per "${c.suffix}"`;if("includes"===c.format)return`Nevalida karaktraro: devas inkluzivi "${c.includes}"`;if("regex"===c.format)return`Nevalida karaktraro: devas kongrui kun la modelo ${c.pattern}`;return`Nevalida ${b[c.format]??c.format}`;case"not_multiple_of":return`Nevalida nombro: devas esti oblo de ${c.divisor}`;case"unrecognized_keys":return`Nekonata${c.keys.length>1?"j":""} ŝlosilo${c.keys.length>1?"j":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Nevalida ŝlosilo en ${c.origin}`;case"invalid_union":default:return"Nevalida enigo";case"invalid_element":return`Nevalida valoro en ${c.origin}`}}})()}}function dR(){return{localeError:(()=>{let a={string:{unit:"caracteres",verb:"tener"},file:{unit:"bytes",verb:"tener"},array:{unit:"elementos",verb:"tener"},set:{unit:"elementos",verb:"tener"}},b={string:"texto",number:"número",boolean:"booleano",array:"arreglo",object:"objeto",set:"conjunto",file:"archivo",date:"fecha",bigint:"número grande",symbol:"símbolo",undefined:"indefinido",null:"nulo",function:"función",map:"mapa",record:"registro",tuple:"tupla",enum:"enumeración",union:"unión",literal:"literal",promise:"promesa",void:"vacío",never:"nunca",unknown:"desconocido",any:"cualquiera"};function c(a){return b[a]??a}let d={regex:"entrada",email:"dirección de correo electrónico",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"fecha y hora ISO",date:"fecha ISO",time:"hora ISO",duration:"duración ISO",ipv4:"dirección IPv4",ipv6:"dirección IPv6",cidrv4:"rango IPv4",cidrv6:"rango IPv6",base64:"cadena codificada en base64",base64url:"URL codificada en base64",json_string:"cadena JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return b=>{switch(b.code){case"invalid_type":return`Entrada inv\xe1lida: se esperaba ${c(b.expected)}, recibido ${c((a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype)return a.constructor.name;return"object"}return b})(b.input))}`;case"invalid_value":if(1===b.values.length)return`Entrada inv\xe1lida: se esperaba ${R(b.values[0])}`;return`Opci\xf3n inv\xe1lida: se esperaba una de ${o(b.values,"|")}`;case"too_big":{let d=b.inclusive?"<=":"<",e=a[b.origin]??null,f=c(b.origin);if(e)return`Demasiado grande: se esperaba que ${f??"valor"} tuviera ${d}${b.maximum.toString()} ${e.unit??"elementos"}`;return`Demasiado grande: se esperaba que ${f??"valor"} fuera ${d}${b.maximum.toString()}`}case"too_small":{let d=b.inclusive?">=":">",e=a[b.origin]??null,f=c(b.origin);if(e)return`Demasiado peque\xf1o: se esperaba que ${f} tuviera ${d}${b.minimum.toString()} ${e.unit}`;return`Demasiado peque\xf1o: se esperaba que ${f} fuera ${d}${b.minimum.toString()}`}case"invalid_format":if("starts_with"===b.format)return`Cadena inv\xe1lida: debe comenzar con "${b.prefix}"`;if("ends_with"===b.format)return`Cadena inv\xe1lida: debe terminar en "${b.suffix}"`;if("includes"===b.format)return`Cadena inv\xe1lida: debe incluir "${b.includes}"`;if("regex"===b.format)return`Cadena inv\xe1lida: debe coincidir con el patr\xf3n ${b.pattern}`;return`Inv\xe1lido ${d[b.format]??b.format}`;case"not_multiple_of":return`N\xfamero inv\xe1lido: debe ser m\xfaltiplo de ${b.divisor}`;case"unrecognized_keys":return`Llave${b.keys.length>1?"s":""} desconocida${b.keys.length>1?"s":""}: ${o(b.keys,", ")}`;case"invalid_key":return`Llave inv\xe1lida en ${c(b.origin)}`;case"invalid_union":return"Entrada inválida";case"invalid_element":return`Valor inv\xe1lido en ${c(b.origin)}`;default:return`Entrada inv\xe1lida`}}})()}}function dS(){return{localeError:(()=>{let a={string:{unit:"کاراکتر",verb:"داشته باشد"},file:{unit:"بایت",verb:"داشته باشد"},array:{unit:"آیتم",verb:"داشته باشد"},set:{unit:"آیتم",verb:"داشته باشد"}},b={regex:"ورودی",email:"آدرس ایمیل",url:"URL",emoji:"ایموجی",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"تاریخ و زمان ایزو",date:"تاریخ ایزو",time:"زمان ایزو",duration:"مدت زمان ایزو",ipv4:"IPv4 آدرس",ipv6:"IPv6 آدرس",cidrv4:"IPv4 دامنه",cidrv6:"IPv6 دامنه",base64:"base64-encoded رشته",base64url:"base64url-encoded رشته",json_string:"JSON رشته",e164:"E.164 عدد",jwt:"JWT",template_literal:"ورودی"};return c=>{switch(c.code){case"invalid_type":return`ورودی نامعتبر: می‌بایست ${c.expected} می‌بود، ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"عدد";case"object":if(Array.isArray(a))return"آرایه";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)} دریافت شد`;case"invalid_value":if(1===c.values.length)return`ورودی نامعتبر: می‌بایست ${R(c.values[0])} می‌بود`;return`گزینه نامعتبر: می‌بایست یکی از ${o(c.values,"|")} می‌بود`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`خیلی بزرگ: ${c.origin??"مقدار"} باید ${b}${c.maximum.toString()} ${d.unit??"عنصر"} باشد`;return`خیلی بزرگ: ${c.origin??"مقدار"} باید ${b}${c.maximum.toString()} باشد`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`خیلی کوچک: ${c.origin} باید ${b}${c.minimum.toString()} ${d.unit} باشد`;return`خیلی کوچک: ${c.origin} باید ${b}${c.minimum.toString()} باشد`}case"invalid_format":if("starts_with"===c.format)return`رشته نامعتبر: باید با "${c.prefix}" شروع شود`;if("ends_with"===c.format)return`رشته نامعتبر: باید با "${c.suffix}" تمام شود`;if("includes"===c.format)return`رشته نامعتبر: باید شامل "${c.includes}" باشد`;if("regex"===c.format)return`رشته نامعتبر: باید با الگوی ${c.pattern} مطابقت داشته باشد`;return`${b[c.format]??c.format} نامعتبر`;case"not_multiple_of":return`عدد نامعتبر: باید مضرب ${c.divisor} باشد`;case"unrecognized_keys":return`کلید${c.keys.length>1?"های":""} ناشناس: ${o(c.keys,", ")}`;case"invalid_key":return`کلید ناشناس در ${c.origin}`;case"invalid_union":default:return`ورودی نامعتبر`;case"invalid_element":return`مقدار نامعتبر در ${c.origin}`}}})()}}function dT(){return{localeError:(()=>{let a={string:{unit:"merkkiä",subject:"merkkijonon"},file:{unit:"tavua",subject:"tiedoston"},array:{unit:"alkiota",subject:"listan"},set:{unit:"alkiota",subject:"joukon"},number:{unit:"",subject:"luvun"},bigint:{unit:"",subject:"suuren kokonaisluvun"},int:{unit:"",subject:"kokonaisluvun"},date:{unit:"",subject:"päivämäärän"}},b={regex:"säännöllinen lauseke",email:"sähköpostiosoite",url:"URL-osoite",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-aikaleima",date:"ISO-päivämäärä",time:"ISO-aika",duration:"ISO-kesto",ipv4:"IPv4-osoite",ipv6:"IPv6-osoite",cidrv4:"IPv4-alue",cidrv6:"IPv6-alue",base64:"base64-koodattu merkkijono",base64url:"base64url-koodattu merkkijono",json_string:"JSON-merkkijono",e164:"E.164-luku",jwt:"JWT",template_literal:"templaattimerkkijono"};return c=>{switch(c.code){case"invalid_type":return`Virheellinen tyyppi: odotettiin ${c.expected}, oli ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Virheellinen sy\xf6te: t\xe4ytyy olla ${R(c.values[0])}`;return`Virheellinen valinta: t\xe4ytyy olla yksi seuraavista: ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Liian suuri: ${d.subject} t\xe4ytyy olla ${b}${c.maximum.toString()} ${d.unit}`.trim();return`Liian suuri: arvon t\xe4ytyy olla ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Liian pieni: ${d.subject} t\xe4ytyy olla ${b}${c.minimum.toString()} ${d.unit}`.trim();return`Liian pieni: arvon t\xe4ytyy olla ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Virheellinen sy\xf6te: t\xe4ytyy alkaa "${c.prefix}"`;if("ends_with"===c.format)return`Virheellinen sy\xf6te: t\xe4ytyy loppua "${c.suffix}"`;if("includes"===c.format)return`Virheellinen sy\xf6te: t\xe4ytyy sis\xe4lt\xe4\xe4 "${c.includes}"`;if("regex"===c.format)return`Virheellinen sy\xf6te: t\xe4ytyy vastata s\xe4\xe4nn\xf6llist\xe4 lauseketta ${c.pattern}`;return`Virheellinen ${b[c.format]??c.format}`;case"not_multiple_of":return`Virheellinen luku: t\xe4ytyy olla luvun ${c.divisor} monikerta`;case"unrecognized_keys":return`${c.keys.length>1?"Tuntemattomat avaimet":"Tuntematon avain"}: ${o(c.keys,", ")}`;case"invalid_key":return"Virheellinen avain tietueessa";case"invalid_union":return"Virheellinen unioni";case"invalid_element":return"Virheellinen arvo joukossa";default:return`Virheellinen sy\xf6te`}}})()}}function dU(){return{localeError:(()=>{let a={string:{unit:"caractères",verb:"avoir"},file:{unit:"octets",verb:"avoir"},array:{unit:"éléments",verb:"avoir"},set:{unit:"éléments",verb:"avoir"}},b={regex:"entrée",email:"adresse e-mail",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"date et heure ISO",date:"date ISO",time:"heure ISO",duration:"durée ISO",ipv4:"adresse IPv4",ipv6:"adresse IPv6",cidrv4:"plage IPv4",cidrv6:"plage IPv6",base64:"chaîne encodée en base64",base64url:"chaîne encodée en base64url",json_string:"chaîne JSON",e164:"numéro E.164",jwt:"JWT",template_literal:"entrée"};return c=>{switch(c.code){case"invalid_type":return`Entr\xe9e invalide : ${c.expected} attendu, ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"nombre";case"object":if(Array.isArray(a))return"tableau";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)} re\xe7u`;case"invalid_value":if(1===c.values.length)return`Entr\xe9e invalide : ${R(c.values[0])} attendu`;return`Option invalide : une valeur parmi ${o(c.values,"|")} attendue`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Trop grand : ${c.origin??"valeur"} doit ${d.verb} ${b}${c.maximum.toString()} ${d.unit??"élément(s)"}`;return`Trop grand : ${c.origin??"valeur"} doit \xeatre ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Trop petit : ${c.origin} doit ${d.verb} ${b}${c.minimum.toString()} ${d.unit}`;return`Trop petit : ${c.origin} doit \xeatre ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Cha\xeene invalide : doit commencer par "${c.prefix}"`;if("ends_with"===c.format)return`Cha\xeene invalide : doit se terminer par "${c.suffix}"`;if("includes"===c.format)return`Cha\xeene invalide : doit inclure "${c.includes}"`;if("regex"===c.format)return`Cha\xeene invalide : doit correspondre au mod\xe8le ${c.pattern}`;return`${b[c.format]??c.format} invalide`;case"not_multiple_of":return`Nombre invalide : doit \xeatre un multiple de ${c.divisor}`;case"unrecognized_keys":return`Cl\xe9${c.keys.length>1?"s":""} non reconnue${c.keys.length>1?"s":""} : ${o(c.keys,", ")}`;case"invalid_key":return`Cl\xe9 invalide dans ${c.origin}`;case"invalid_union":return"Entrée invalide";case"invalid_element":return`Valeur invalide dans ${c.origin}`;default:return`Entr\xe9e invalide`}}})()}}function dV(){return{localeError:(()=>{let a={string:{unit:"caractères",verb:"avoir"},file:{unit:"octets",verb:"avoir"},array:{unit:"éléments",verb:"avoir"},set:{unit:"éléments",verb:"avoir"}},b={regex:"entrée",email:"adresse courriel",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"date-heure ISO",date:"date ISO",time:"heure ISO",duration:"durée ISO",ipv4:"adresse IPv4",ipv6:"adresse IPv6",cidrv4:"plage IPv4",cidrv6:"plage IPv6",base64:"chaîne encodée en base64",base64url:"chaîne encodée en base64url",json_string:"chaîne JSON",e164:"numéro E.164",jwt:"JWT",template_literal:"entrée"};return c=>{switch(c.code){case"invalid_type":return`Entr\xe9e invalide : attendu ${c.expected}, re\xe7u ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Entr\xe9e invalide : attendu ${R(c.values[0])}`;return`Option invalide : attendu l'une des valeurs suivantes ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"≤":"<",d=a[c.origin]??null;if(d)return`Trop grand : attendu que ${c.origin??"la valeur"} ait ${b}${c.maximum.toString()} ${d.unit}`;return`Trop grand : attendu que ${c.origin??"la valeur"} soit ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?"≥":">",d=a[c.origin]??null;if(d)return`Trop petit : attendu que ${c.origin} ait ${b}${c.minimum.toString()} ${d.unit}`;return`Trop petit : attendu que ${c.origin} soit ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Cha\xeene invalide : doit commencer par "${c.prefix}"`;if("ends_with"===c.format)return`Cha\xeene invalide : doit se terminer par "${c.suffix}"`;if("includes"===c.format)return`Cha\xeene invalide : doit inclure "${c.includes}"`;if("regex"===c.format)return`Cha\xeene invalide : doit correspondre au motif ${c.pattern}`;return`${b[c.format]??c.format} invalide`;case"not_multiple_of":return`Nombre invalide : doit \xeatre un multiple de ${c.divisor}`;case"unrecognized_keys":return`Cl\xe9${c.keys.length>1?"s":""} non reconnue${c.keys.length>1?"s":""} : ${o(c.keys,", ")}`;case"invalid_key":return`Cl\xe9 invalide dans ${c.origin}`;case"invalid_union":return"Entrée invalide";case"invalid_element":return`Valeur invalide dans ${c.origin}`;default:return`Entr\xe9e invalide`}}})()}}function dW(){return{localeError:(()=>{let a={string:{unit:"אותיות",verb:"לכלול"},file:{unit:"בייטים",verb:"לכלול"},array:{unit:"פריטים",verb:"לכלול"},set:{unit:"פריטים",verb:"לכלול"}},b={regex:"קלט",email:"כתובת אימייל",url:"כתובת רשת",emoji:"אימוג'י",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"תאריך וזמן ISO",date:"תאריך ISO",time:"זמן ISO",duration:"משך זמן ISO",ipv4:"כתובת IPv4",ipv6:"כתובת IPv6",cidrv4:"טווח IPv4",cidrv6:"טווח IPv6",base64:"מחרוזת בבסיס 64",base64url:"מחרוזת בבסיס 64 לכתובות רשת",json_string:"מחרוזת JSON",e164:"מספר E.164",jwt:"JWT",template_literal:"קלט"};return c=>{switch(c.code){case"invalid_type":return`קלט לא תקין: צריך ${c.expected}, התקבל ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`קלט לא תקין: צריך ${R(c.values[0])}`;return`קלט לא תקין: צריך אחת מהאפשרויות  ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`גדול מדי: ${c.origin??"value"} צריך להיות ${b}${c.maximum.toString()} ${d.unit??"elements"}`;return`גדול מדי: ${c.origin??"value"} צריך להיות ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`קטן מדי: ${c.origin} צריך להיות ${b}${c.minimum.toString()} ${d.unit}`;return`קטן מדי: ${c.origin} צריך להיות ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`מחרוזת לא תקינה: חייבת להתחיל ב"${c.prefix}"`;if("ends_with"===c.format)return`מחרוזת לא תקינה: חייבת להסתיים ב "${c.suffix}"`;if("includes"===c.format)return`מחרוזת לא תקינה: חייבת לכלול "${c.includes}"`;if("regex"===c.format)return`מחרוזת לא תקינה: חייבת להתאים לתבנית ${c.pattern}`;return`${b[c.format]??c.format} לא תקין`;case"not_multiple_of":return`מספר לא תקין: חייב להיות מכפלה של ${c.divisor}`;case"unrecognized_keys":return`מפתח${c.keys.length>1?"ות":""} לא מזוה${c.keys.length>1?"ים":"ה"}: ${o(c.keys,", ")}`;case"invalid_key":return`מפתח לא תקין ב${c.origin}`;case"invalid_union":return"קלט לא תקין";case"invalid_element":return`ערך לא תקין ב${c.origin}`;default:return`קלט לא תקין`}}})()}}function dX(){return{localeError:(()=>{let a={string:{unit:"karakter",verb:"legyen"},file:{unit:"byte",verb:"legyen"},array:{unit:"elem",verb:"legyen"},set:{unit:"elem",verb:"legyen"}},b={regex:"bemenet",email:"email cím",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO időbélyeg",date:"ISO dátum",time:"ISO idő",duration:"ISO időintervallum",ipv4:"IPv4 cím",ipv6:"IPv6 cím",cidrv4:"IPv4 tartomány",cidrv6:"IPv6 tartomány",base64:"base64-kódolt string",base64url:"base64url-kódolt string",json_string:"JSON string",e164:"E.164 szám",jwt:"JWT",template_literal:"bemenet"};return c=>{switch(c.code){case"invalid_type":return`\xc9rv\xe9nytelen bemenet: a v\xe1rt \xe9rt\xe9k ${c.expected}, a kapott \xe9rt\xe9k ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"szám";case"object":if(Array.isArray(a))return"tömb";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`\xc9rv\xe9nytelen bemenet: a v\xe1rt \xe9rt\xe9k ${R(c.values[0])}`;return`\xc9rv\xe9nytelen opci\xf3: valamelyik \xe9rt\xe9k v\xe1rt ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`T\xfal nagy: ${c.origin??"érték"} m\xe9rete t\xfal nagy ${b}${c.maximum.toString()} ${d.unit??"elem"}`;return`T\xfal nagy: a bemeneti \xe9rt\xe9k ${c.origin??"érték"} t\xfal nagy: ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`T\xfal kicsi: a bemeneti \xe9rt\xe9k ${c.origin} m\xe9rete t\xfal kicsi ${b}${c.minimum.toString()} ${d.unit}`;return`T\xfal kicsi: a bemeneti \xe9rt\xe9k ${c.origin} t\xfal kicsi ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`\xc9rv\xe9nytelen string: "${c.prefix}" \xe9rt\xe9kkel kell kezdődnie`;if("ends_with"===c.format)return`\xc9rv\xe9nytelen string: "${c.suffix}" \xe9rt\xe9kkel kell v\xe9gződnie`;if("includes"===c.format)return`\xc9rv\xe9nytelen string: "${c.includes}" \xe9rt\xe9ket kell tartalmaznia`;if("regex"===c.format)return`\xc9rv\xe9nytelen string: ${c.pattern} mint\xe1nak kell megfelelnie`;return`\xc9rv\xe9nytelen ${b[c.format]??c.format}`;case"not_multiple_of":return`\xc9rv\xe9nytelen sz\xe1m: ${c.divisor} t\xf6bbsz\xf6r\xf6s\xe9nek kell lennie`;case"unrecognized_keys":return`Ismeretlen kulcs${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`\xc9rv\xe9nytelen kulcs ${c.origin}`;case"invalid_union":return"Érvénytelen bemenet";case"invalid_element":return`\xc9rv\xe9nytelen \xe9rt\xe9k: ${c.origin}`;default:return`\xc9rv\xe9nytelen bemenet`}}})()}}function dY(){return{localeError:(()=>{let a={string:{unit:"karakter",verb:"memiliki"},file:{unit:"byte",verb:"memiliki"},array:{unit:"item",verb:"memiliki"},set:{unit:"item",verb:"memiliki"}},b={regex:"input",email:"alamat email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"tanggal dan waktu format ISO",date:"tanggal format ISO",time:"jam format ISO",duration:"durasi format ISO",ipv4:"alamat IPv4",ipv6:"alamat IPv6",cidrv4:"rentang alamat IPv4",cidrv6:"rentang alamat IPv6",base64:"string dengan enkode base64",base64url:"string dengan enkode base64url",json_string:"string JSON",e164:"angka E.164",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Input tidak valid: diharapkan ${c.expected}, diterima ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Input tidak valid: diharapkan ${R(c.values[0])}`;return`Pilihan tidak valid: diharapkan salah satu dari ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Terlalu besar: diharapkan ${c.origin??"value"} memiliki ${b}${c.maximum.toString()} ${d.unit??"elemen"}`;return`Terlalu besar: diharapkan ${c.origin??"value"} menjadi ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Terlalu kecil: diharapkan ${c.origin} memiliki ${b}${c.minimum.toString()} ${d.unit}`;return`Terlalu kecil: diharapkan ${c.origin} menjadi ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`String tidak valid: harus dimulai dengan "${c.prefix}"`;if("ends_with"===c.format)return`String tidak valid: harus berakhir dengan "${c.suffix}"`;if("includes"===c.format)return`String tidak valid: harus menyertakan "${c.includes}"`;if("regex"===c.format)return`String tidak valid: harus sesuai pola ${c.pattern}`;return`${b[c.format]??c.format} tidak valid`;case"not_multiple_of":return`Angka tidak valid: harus kelipatan dari ${c.divisor}`;case"unrecognized_keys":return`Kunci tidak dikenali ${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Kunci tidak valid di ${c.origin}`;case"invalid_union":default:return"Input tidak valid";case"invalid_element":return`Nilai tidak valid di ${c.origin}`}}})()}}function dZ(){return{localeError:(()=>{let a={string:{unit:"stafi",verb:"að hafa"},file:{unit:"bæti",verb:"að hafa"},array:{unit:"hluti",verb:"að hafa"},set:{unit:"hluti",verb:"að hafa"}},b={regex:"gildi",email:"netfang",url:"vefslóð",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dagsetning og tími",date:"ISO dagsetning",time:"ISO tími",duration:"ISO tímalengd",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded strengur",base64url:"base64url-encoded strengur",json_string:"JSON strengur",e164:"E.164 tölugildi",jwt:"JWT",template_literal:"gildi"};return c=>{switch(c.code){case"invalid_type":return`Rangt gildi: \xde\xfa sl\xf3st inn ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"númer";case"object":if(Array.isArray(a))return"fylki";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)} \xfear sem \xe1 a\xf0 vera ${c.expected}`;case"invalid_value":if(1===c.values.length)return`Rangt gildi: gert r\xe1\xf0 fyrir ${R(c.values[0])}`;return`\xd3gilt val: m\xe1 vera eitt af eftirfarandi ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Of st\xf3rt: gert er r\xe1\xf0 fyrir a\xf0 ${c.origin??"gildi"} hafi ${b}${c.maximum.toString()} ${d.unit??"hluti"}`;return`Of st\xf3rt: gert er r\xe1\xf0 fyrir a\xf0 ${c.origin??"gildi"} s\xe9 ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Of l\xedti\xf0: gert er r\xe1\xf0 fyrir a\xf0 ${c.origin} hafi ${b}${c.minimum.toString()} ${d.unit}`;return`Of l\xedti\xf0: gert er r\xe1\xf0 fyrir a\xf0 ${c.origin} s\xe9 ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`\xd3gildur strengur: ver\xf0ur a\xf0 byrja \xe1 "${c.prefix}"`;if("ends_with"===c.format)return`\xd3gildur strengur: ver\xf0ur a\xf0 enda \xe1 "${c.suffix}"`;if("includes"===c.format)return`\xd3gildur strengur: ver\xf0ur a\xf0 innihalda "${c.includes}"`;if("regex"===c.format)return`\xd3gildur strengur: ver\xf0ur a\xf0 fylgja mynstri ${c.pattern}`;return`Rangt ${b[c.format]??c.format}`;case"not_multiple_of":return`R\xf6ng tala: ver\xf0ur a\xf0 vera margfeldi af ${c.divisor}`;case"unrecognized_keys":return`\xd3\xfeekkt ${c.keys.length>1?"ir lyklar":"ur lykill"}: ${o(c.keys,", ")}`;case"invalid_key":return`Rangur lykill \xed ${c.origin}`;case"invalid_union":default:return"Rangt gildi";case"invalid_element":return`Rangt gildi \xed ${c.origin}`}}})()}}function d$(){return{localeError:(()=>{let a={string:{unit:"caratteri",verb:"avere"},file:{unit:"byte",verb:"avere"},array:{unit:"elementi",verb:"avere"},set:{unit:"elementi",verb:"avere"}},b={regex:"input",email:"indirizzo email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data e ora ISO",date:"data ISO",time:"ora ISO",duration:"durata ISO",ipv4:"indirizzo IPv4",ipv6:"indirizzo IPv6",cidrv4:"intervallo IPv4",cidrv6:"intervallo IPv6",base64:"stringa codificata in base64",base64url:"URL codificata in base64",json_string:"stringa JSON",e164:"numero E.164",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Input non valido: atteso ${c.expected}, ricevuto ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"numero";case"object":if(Array.isArray(a))return"vettore";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Input non valido: atteso ${R(c.values[0])}`;return`Opzione non valida: atteso uno tra ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Troppo grande: ${c.origin??"valore"} deve avere ${b}${c.maximum.toString()} ${d.unit??"elementi"}`;return`Troppo grande: ${c.origin??"valore"} deve essere ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Troppo piccolo: ${c.origin} deve avere ${b}${c.minimum.toString()} ${d.unit}`;return`Troppo piccolo: ${c.origin} deve essere ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Stringa non valida: deve iniziare con "${c.prefix}"`;if("ends_with"===c.format)return`Stringa non valida: deve terminare con "${c.suffix}"`;if("includes"===c.format)return`Stringa non valida: deve includere "${c.includes}"`;if("regex"===c.format)return`Stringa non valida: deve corrispondere al pattern ${c.pattern}`;return`Invalid ${b[c.format]??c.format}`;case"not_multiple_of":return`Numero non valido: deve essere un multiplo di ${c.divisor}`;case"unrecognized_keys":return`Chiav${c.keys.length>1?"i":"e"} non riconosciut${c.keys.length>1?"e":"a"}: ${o(c.keys,", ")}`;case"invalid_key":return`Chiave non valida in ${c.origin}`;case"invalid_union":default:return"Input non valido";case"invalid_element":return`Valore non valido in ${c.origin}`}}})()}}function d_(){return{localeError:(()=>{let a={string:{unit:"文字",verb:"である"},file:{unit:"バイト",verb:"である"},array:{unit:"要素",verb:"である"},set:{unit:"要素",verb:"である"}},b={regex:"入力値",email:"メールアドレス",url:"URL",emoji:"絵文字",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO日時",date:"ISO日付",time:"ISO時刻",duration:"ISO期間",ipv4:"IPv4アドレス",ipv6:"IPv6アドレス",cidrv4:"IPv4範囲",cidrv6:"IPv6範囲",base64:"base64エンコード文字列",base64url:"base64urlエンコード文字列",json_string:"JSON文字列",e164:"E.164番号",jwt:"JWT",template_literal:"入力値"};return c=>{switch(c.code){case"invalid_type":return`無効な入力: ${c.expected}が期待されましたが、${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"数値";case"object":if(Array.isArray(a))return"配列";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}が入力されました`;case"invalid_value":if(1===c.values.length)return`無効な入力: ${R(c.values[0])}が期待されました`;return`無効な選択: ${o(c.values,"、")}のいずれかである必要があります`;case"too_big":{let b=c.inclusive?"以下である":"より小さい",d=a[c.origin]??null;if(d)return`大きすぎる値: ${c.origin??"値"}は${c.maximum.toString()}${d.unit??"要素"}${b}必要があります`;return`大きすぎる値: ${c.origin??"値"}は${c.maximum.toString()}${b}必要があります`}case"too_small":{let b=c.inclusive?"以上である":"より大きい",d=a[c.origin]??null;if(d)return`小さすぎる値: ${c.origin}は${c.minimum.toString()}${d.unit}${b}必要があります`;return`小さすぎる値: ${c.origin}は${c.minimum.toString()}${b}必要があります`}case"invalid_format":if("starts_with"===c.format)return`無効な文字列: "${c.prefix}"で始まる必要があります`;if("ends_with"===c.format)return`無効な文字列: "${c.suffix}"で終わる必要があります`;if("includes"===c.format)return`無効な文字列: "${c.includes}"を含む必要があります`;if("regex"===c.format)return`無効な文字列: パターン${c.pattern}に一致する必要があります`;return`無効な${b[c.format]??c.format}`;case"not_multiple_of":return`無効な数値: ${c.divisor}の倍数である必要があります`;case"unrecognized_keys":return`認識されていないキー${c.keys.length>1?"群":""}: ${o(c.keys,"、")}`;case"invalid_key":return`${c.origin}内の無効なキー`;case"invalid_union":return"無効な入力";case"invalid_element":return`${c.origin}内の無効な値`;default:return`無効な入力`}}})()}}function d0(){return{localeError:(()=>{let a={string:{unit:"სიმბოლო",verb:"უნდა შეიცავდეს"},file:{unit:"ბაიტი",verb:"უნდა შეიცავდეს"},array:{unit:"ელემენტი",verb:"უნდა შეიცავდეს"},set:{unit:"ელემენტი",verb:"უნდა შეიცავდეს"}},b={regex:"შეყვანა",email:"ელ-ფოსტის მისამართი",url:"URL",emoji:"ემოჯი",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"თარიღი-დრო",date:"თარიღი",time:"დრო",duration:"ხანგრძლივობა",ipv4:"IPv4 მისამართი",ipv6:"IPv6 მისამართი",cidrv4:"IPv4 დიაპაზონი",cidrv6:"IPv6 დიაპაზონი",base64:"base64-კოდირებული სტრინგი",base64url:"base64url-კოდირებული სტრინგი",json_string:"JSON სტრინგი",e164:"E.164 ნომერი",jwt:"JWT",template_literal:"შეყვანა"};return c=>{switch(c.code){case"invalid_type":return`არასწორი შეყვანა: მოსალოდნელი ${c.expected}, მიღებული ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"რიცხვი";case"object":if(Array.isArray(a))return"მასივი";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return({string:"სტრინგი",boolean:"ბულეანი",undefined:"undefined",bigint:"bigint",symbol:"symbol",function:"ფუნქცია"})[b]??b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`არასწორი შეყვანა: მოსალოდნელი ${R(c.values[0])}`;return`არასწორი ვარიანტი: მოსალოდნელია ერთ-ერთი ${o(c.values,"|")}-დან`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`ზედმეტად დიდი: მოსალოდნელი ${c.origin??"მნიშვნელობა"} ${d.verb} ${b}${c.maximum.toString()} ${d.unit}`;return`ზედმეტად დიდი: მოსალოდნელი ${c.origin??"მნიშვნელობა"} იყოს ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`ზედმეტად პატარა: მოსალოდნელი ${c.origin} ${d.verb} ${b}${c.minimum.toString()} ${d.unit}`;return`ზედმეტად პატარა: მოსალოდნელი ${c.origin} იყოს ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`არასწორი სტრინგი: უნდა იწყებოდეს "${c.prefix}"-ით`;if("ends_with"===c.format)return`არასწორი სტრინგი: უნდა მთავრდებოდეს "${c.suffix}"-ით`;if("includes"===c.format)return`არასწორი სტრინგი: უნდა შეიცავდეს "${c.includes}"-ს`;if("regex"===c.format)return`არასწორი სტრინგი: უნდა შეესაბამებოდეს შაბლონს ${c.pattern}`;return`არასწორი ${b[c.format]??c.format}`;case"not_multiple_of":return`არასწორი რიცხვი: უნდა იყოს ${c.divisor}-ის ჯერადი`;case"unrecognized_keys":return`უცნობი გასაღებ${c.keys.length>1?"ები":"ი"}: ${o(c.keys,", ")}`;case"invalid_key":return`არასწორი გასაღები ${c.origin}-ში`;case"invalid_union":return"არასწორი შეყვანა";case"invalid_element":return`არასწორი მნიშვნელობა ${c.origin}-ში`;default:return`არასწორი შეყვანა`}}})()}}function d1(){return{localeError:(()=>{let a={string:{unit:"តួអក្សរ",verb:"គួរមាន"},file:{unit:"បៃ",verb:"គួរមាន"},array:{unit:"ធាតុ",verb:"គួរមាន"},set:{unit:"ធាតុ",verb:"គួរមាន"}},b={regex:"ទិន្នន័យបញ្ចូល",email:"អាសយដ្ឋានអ៊ីមែល",url:"URL",emoji:"សញ្ញាអារម្មណ៍",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"កាលបរិច្ឆេទ និងម៉ោង ISO",date:"កាលបរិច្ឆេទ ISO",time:"ម៉ោង ISO",duration:"រយៈពេល ISO",ipv4:"អាសយដ្ឋាន IPv4",ipv6:"អាសយដ្ឋាន IPv6",cidrv4:"ដែនអាសយដ្ឋាន IPv4",cidrv6:"ដែនអាសយដ្ឋាន IPv6",base64:"ខ្សែអក្សរអ៊ិកូដ base64",base64url:"ខ្សែអក្សរអ៊ិកូដ base64url",json_string:"ខ្សែអក្សរ JSON",e164:"លេខ E.164",jwt:"JWT",template_literal:"ទិន្នន័យបញ្ចូល"};return c=>{switch(c.code){case"invalid_type":return`ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${c.expected} ប៉ុន្តែទទួលបាន ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"មិនមែនជាលេខ (NaN)":"លេខ";case"object":if(Array.isArray(a))return"អារេ (Array)";if(null===a)return"គ្មានតម្លៃ (null)";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${R(c.values[0])}`;return`ជម្រើសមិនត្រឹមត្រូវ៖ ត្រូវជាមួយក្នុងចំណោម ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`ធំពេក៖ ត្រូវការ ${c.origin??"តម្លៃ"} ${b} ${c.maximum.toString()} ${d.unit??"ធាតុ"}`;return`ធំពេក៖ ត្រូវការ ${c.origin??"តម្លៃ"} ${b} ${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`តូចពេក៖ ត្រូវការ ${c.origin} ${b} ${c.minimum.toString()} ${d.unit}`;return`តូចពេក៖ ត្រូវការ ${c.origin} ${b} ${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវចាប់ផ្តើមដោយ "${c.prefix}"`;if("ends_with"===c.format)return`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវបញ្ចប់ដោយ "${c.suffix}"`;if("includes"===c.format)return`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវមាន "${c.includes}"`;if("regex"===c.format)return`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវតែផ្គូផ្គងនឹងទម្រង់ដែលបានកំណត់ ${c.pattern}`;return`មិនត្រឹមត្រូវ៖ ${b[c.format]??c.format}`;case"not_multiple_of":return`លេខមិនត្រឹមត្រូវ៖ ត្រូវតែជាពហុគុណនៃ ${c.divisor}`;case"unrecognized_keys":return`រកឃើញសោមិនស្គាល់៖ ${o(c.keys,", ")}`;case"invalid_key":return`សោមិនត្រឹមត្រូវនៅក្នុង ${c.origin}`;case"invalid_union":default:return`ទិន្នន័យមិនត្រឹមត្រូវ`;case"invalid_element":return`ទិន្នន័យមិនត្រឹមត្រូវនៅក្នុង ${c.origin}`}}})()}}function d2(){return d1()}function d3(){return{localeError:(()=>{let a={string:{unit:"문자",verb:"to have"},file:{unit:"바이트",verb:"to have"},array:{unit:"개",verb:"to have"},set:{unit:"개",verb:"to have"}},b={regex:"입력",email:"이메일 주소",url:"URL",emoji:"이모지",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO 날짜시간",date:"ISO 날짜",time:"ISO 시간",duration:"ISO 기간",ipv4:"IPv4 주소",ipv6:"IPv6 주소",cidrv4:"IPv4 범위",cidrv6:"IPv6 범위",base64:"base64 인코딩 문자열",base64url:"base64url 인코딩 문자열",json_string:"JSON 문자열",e164:"E.164 번호",jwt:"JWT",template_literal:"입력"};return c=>{switch(c.code){case"invalid_type":return`잘못된 입력: 예상 타입은 ${c.expected}, 받은 타입은 ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}입니다`;case"invalid_value":if(1===c.values.length)return`잘못된 입력: 값은 ${R(c.values[0])} 이어야 합니다`;return`잘못된 옵션: ${o(c.values,"또는 ")} 중 하나여야 합니다`;case"too_big":{let b=c.inclusive?"이하":"미만",d="미만"===b?"이어야 합니다":"여야 합니다",e=a[c.origin]??null,f=e?.unit??"요소";if(e)return`${c.origin??"값"}이 너무 큽니다: ${c.maximum.toString()}${f} ${b}${d}`;return`${c.origin??"값"}이 너무 큽니다: ${c.maximum.toString()} ${b}${d}`}case"too_small":{let b=c.inclusive?"이상":"초과",d="이상"===b?"이어야 합니다":"여야 합니다",e=a[c.origin]??null,f=e?.unit??"요소";if(e)return`${c.origin??"값"}이 너무 작습니다: ${c.minimum.toString()}${f} ${b}${d}`;return`${c.origin??"값"}이 너무 작습니다: ${c.minimum.toString()} ${b}${d}`}case"invalid_format":if("starts_with"===c.format)return`잘못된 문자열: "${c.prefix}"(으)로 시작해야 합니다`;if("ends_with"===c.format)return`잘못된 문자열: "${c.suffix}"(으)로 끝나야 합니다`;if("includes"===c.format)return`잘못된 문자열: "${c.includes}"을(를) 포함해야 합니다`;if("regex"===c.format)return`잘못된 문자열: 정규식 ${c.pattern} 패턴과 일치해야 합니다`;return`잘못된 ${b[c.format]??c.format}`;case"not_multiple_of":return`잘못된 숫자: ${c.divisor}의 배수여야 합니다`;case"unrecognized_keys":return`인식할 수 없는 키: ${o(c.keys,", ")}`;case"invalid_key":return`잘못된 키: ${c.origin}`;case"invalid_union":default:return`잘못된 입력`;case"invalid_element":return`잘못된 값: ${c.origin}`}}})()}}a.s([],96981),a.s(["default",()=>dH],72920),a.s(["default",()=>dI],81880),a.s(["default",()=>dK],61158),a.s(["default",()=>dL],46352),a.s(["default",()=>dM],40114),a.s(["default",()=>dN],71004),a.s(["default",()=>dO],77803),a.s(["default",()=>dP],92933),a.s(["default",()=>dQ],68795),a.s(["default",()=>dR],58294),a.s(["default",()=>dS],9354),a.s(["default",()=>dT],20903),a.s(["default",()=>dU],88422),a.s(["default",()=>dV],18985),a.s(["default",()=>dW],85473),a.s(["default",()=>dX],99822),a.s(["default",()=>dY],96227),a.s(["default",()=>dZ],85654),a.s(["default",()=>d$],94867),a.s(["default",()=>d_],92874),a.s(["default",()=>d0],48409),a.s(["default",()=>d2],38505),a.s(["default",()=>d1],49988),a.s(["default",()=>d3],78397),a.s(["default",()=>d7],28902);let d4=(a,b)=>{switch(a){case"number":return Number.isNaN(b)?"NaN":"skaičius";case"bigint":return"sveikasis skaičius";case"string":return"eilutė";case"boolean":return"loginė reikšmė";case"undefined":case"void":return"neapibrėžta reikšmė";case"function":return"funkcija";case"symbol":return"simbolis";case"object":if(void 0===b)return"nežinomas objektas";if(null===b)return"nulinė reikšmė";if(Array.isArray(b))return"masyvas";if(Object.getPrototypeOf(b)!==Object.prototype&&b.constructor)return b.constructor.name;return"objektas";case"null":return"nulinė reikšmė"}return a},d5=a=>a.charAt(0).toUpperCase()+a.slice(1);function d6(a){let b=Math.abs(a),c=b%10,d=b%100;return d>=11&&d<=19||0===c?"many":1===c?"one":"few"}function d7(){return{localeError:(()=>{let a={string:{unit:{one:"simbolis",few:"simboliai",many:"simbolių"},verb:{smaller:{inclusive:"turi būti ne ilgesnė kaip",notInclusive:"turi būti trumpesnė kaip"},bigger:{inclusive:"turi būti ne trumpesnė kaip",notInclusive:"turi būti ilgesnė kaip"}}},file:{unit:{one:"baitas",few:"baitai",many:"baitų"},verb:{smaller:{inclusive:"turi būti ne didesnis kaip",notInclusive:"turi būti mažesnis kaip"},bigger:{inclusive:"turi būti ne mažesnis kaip",notInclusive:"turi būti didesnis kaip"}}},array:{unit:{one:"elementą",few:"elementus",many:"elementų"},verb:{smaller:{inclusive:"turi turėti ne daugiau kaip",notInclusive:"turi turėti mažiau kaip"},bigger:{inclusive:"turi turėti ne mažiau kaip",notInclusive:"turi turėti daugiau kaip"}}},set:{unit:{one:"elementą",few:"elementus",many:"elementų"},verb:{smaller:{inclusive:"turi turėti ne daugiau kaip",notInclusive:"turi turėti mažiau kaip"},bigger:{inclusive:"turi turėti ne mažiau kaip",notInclusive:"turi turėti daugiau kaip"}}}};function b(b,c,d,e){let f=a[b]??null;return null===f?f:{unit:f.unit[c],verb:f.verb[e][d?"inclusive":"notInclusive"]}}let c={regex:"įvestis",email:"el. pašto adresas",url:"URL",emoji:"jaustukas",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO data ir laikas",date:"ISO data",time:"ISO laikas",duration:"ISO trukmė",ipv4:"IPv4 adresas",ipv6:"IPv6 adresas",cidrv4:"IPv4 tinklo prefiksas (CIDR)",cidrv6:"IPv6 tinklo prefiksas (CIDR)",base64:"base64 užkoduota eilutė",base64url:"base64url užkoduota eilutė",json_string:"JSON eilutė",e164:"E.164 numeris",jwt:"JWT",template_literal:"įvestis"};return a=>{switch(a.code){case"invalid_type":let d;return`Gautas tipas ${d4(typeof(d=a.input),d)}, o tikėtasi - ${d4(a.expected)}`;case"invalid_value":if(1===a.values.length)return`Privalo būti ${R(a.values[0])}`;return`Privalo būti vienas iš ${o(a.values,"|")} pasirinkimų`;case"too_big":{let c=d4(a.origin),d=b(a.origin,d6(Number(a.maximum)),a.inclusive??!1,"smaller");if(d?.verb)return`${d5(c??a.origin??"reikšmė")} ${d.verb} ${a.maximum.toString()} ${d.unit??"elementų"}`;let e=a.inclusive?"ne didesnis kaip":"mažesnis kaip";return`${d5(c??a.origin??"reikšmė")} turi būti ${e} ${a.maximum.toString()} ${d?.unit}`}case"too_small":{let c=d4(a.origin),d=b(a.origin,d6(Number(a.minimum)),a.inclusive??!1,"bigger");if(d?.verb)return`${d5(c??a.origin??"reikšmė")} ${d.verb} ${a.minimum.toString()} ${d.unit??"elementų"}`;let e=a.inclusive?"ne mažesnis kaip":"didesnis kaip";return`${d5(c??a.origin??"reikšmė")} turi būti ${e} ${a.minimum.toString()} ${d?.unit}`}case"invalid_format":if("starts_with"===a.format)return`Eilutė privalo prasidėti "${a.prefix}"`;if("ends_with"===a.format)return`Eilutė privalo pasibaigti "${a.suffix}"`;if("includes"===a.format)return`Eilutė privalo įtraukti "${a.includes}"`;if("regex"===a.format)return`Eilutė privalo atitikti ${a.pattern}`;return`Neteisingas ${c[a.format]??a.format}`;case"not_multiple_of":return`Skaičius privalo būti ${a.divisor} kartotinis.`;case"unrecognized_keys":return`Neatpažint${a.keys.length>1?"i":"as"} rakt${a.keys.length>1?"ai":"as"}: ${o(a.keys,", ")}`;case"invalid_key":return"Rastas klaidingas raktas";case"invalid_union":default:return"Klaidinga įvestis";case"invalid_element":{let b=d4(a.origin);return`${d5(b??a.origin??"reikšmė")} turi klaidingą įvestį`}}}})()}}function d8(){return{localeError:(()=>{let a={string:{unit:"знаци",verb:"да имаат"},file:{unit:"бајти",verb:"да имаат"},array:{unit:"ставки",verb:"да имаат"},set:{unit:"ставки",verb:"да имаат"}},b={regex:"внес",email:"адреса на е-пошта",url:"URL",emoji:"емоџи",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO датум и време",date:"ISO датум",time:"ISO време",duration:"ISO времетраење",ipv4:"IPv4 адреса",ipv6:"IPv6 адреса",cidrv4:"IPv4 опсег",cidrv6:"IPv6 опсег",base64:"base64-енкодирана низа",base64url:"base64url-енкодирана низа",json_string:"JSON низа",e164:"E.164 број",jwt:"JWT",template_literal:"внес"};return c=>{switch(c.code){case"invalid_type":return`Грешен внес: се очекува ${c.expected}, примено ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"број";case"object":if(Array.isArray(a))return"низа";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Invalid input: expected ${R(c.values[0])}`;return`Грешана опција: се очекува една ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Премногу голем: се очекува ${c.origin??"вредноста"} да има ${b}${c.maximum.toString()} ${d.unit??"елементи"}`;return`Премногу голем: се очекува ${c.origin??"вредноста"} да биде ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Премногу мал: се очекува ${c.origin} да има ${b}${c.minimum.toString()} ${d.unit}`;return`Премногу мал: се очекува ${c.origin} да биде ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Неважечка низа: мора да започнува со "${c.prefix}"`;if("ends_with"===c.format)return`Неважечка низа: мора да завршува со "${c.suffix}"`;if("includes"===c.format)return`Неважечка низа: мора да вклучува "${c.includes}"`;if("regex"===c.format)return`Неважечка низа: мора да одгоара на патернот ${c.pattern}`;return`Invalid ${b[c.format]??c.format}`;case"not_multiple_of":return`Грешен број: мора да биде делив со ${c.divisor}`;case"unrecognized_keys":return`${c.keys.length>1?"Непрепознаени клучеви":"Непрепознаен клуч"}: ${o(c.keys,", ")}`;case"invalid_key":return`Грешен клуч во ${c.origin}`;case"invalid_union":return"Грешен внес";case"invalid_element":return`Грешна вредност во ${c.origin}`;default:return`Грешен внес`}}})()}}function d9(){return{localeError:(()=>{let a={string:{unit:"aksara",verb:"mempunyai"},file:{unit:"bait",verb:"mempunyai"},array:{unit:"elemen",verb:"mempunyai"},set:{unit:"elemen",verb:"mempunyai"}},b={regex:"input",email:"alamat e-mel",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"tarikh masa ISO",date:"tarikh ISO",time:"masa ISO",duration:"tempoh ISO",ipv4:"alamat IPv4",ipv6:"alamat IPv6",cidrv4:"julat IPv4",cidrv6:"julat IPv6",base64:"string dikodkan base64",base64url:"string dikodkan base64url",json_string:"string JSON",e164:"nombor E.164",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Input tidak sah: dijangka ${c.expected}, diterima ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"nombor";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Input tidak sah: dijangka ${R(c.values[0])}`;return`Pilihan tidak sah: dijangka salah satu daripada ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Terlalu besar: dijangka ${c.origin??"nilai"} ${d.verb} ${b}${c.maximum.toString()} ${d.unit??"elemen"}`;return`Terlalu besar: dijangka ${c.origin??"nilai"} adalah ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Terlalu kecil: dijangka ${c.origin} ${d.verb} ${b}${c.minimum.toString()} ${d.unit}`;return`Terlalu kecil: dijangka ${c.origin} adalah ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`String tidak sah: mesti bermula dengan "${c.prefix}"`;if("ends_with"===c.format)return`String tidak sah: mesti berakhir dengan "${c.suffix}"`;if("includes"===c.format)return`String tidak sah: mesti mengandungi "${c.includes}"`;if("regex"===c.format)return`String tidak sah: mesti sepadan dengan corak ${c.pattern}`;return`${b[c.format]??c.format} tidak sah`;case"not_multiple_of":return`Nombor tidak sah: perlu gandaan ${c.divisor}`;case"unrecognized_keys":return`Kunci tidak dikenali: ${o(c.keys,", ")}`;case"invalid_key":return`Kunci tidak sah dalam ${c.origin}`;case"invalid_union":default:return"Input tidak sah";case"invalid_element":return`Nilai tidak sah dalam ${c.origin}`}}})()}}function ea(){return{localeError:(()=>{let a={string:{unit:"tekens"},file:{unit:"bytes"},array:{unit:"elementen"},set:{unit:"elementen"}},b={regex:"invoer",email:"emailadres",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datum en tijd",date:"ISO datum",time:"ISO tijd",duration:"ISO duur",ipv4:"IPv4-adres",ipv6:"IPv6-adres",cidrv4:"IPv4-bereik",cidrv6:"IPv6-bereik",base64:"base64-gecodeerde tekst",base64url:"base64 URL-gecodeerde tekst",json_string:"JSON string",e164:"E.164-nummer",jwt:"JWT",template_literal:"invoer"};return c=>{switch(c.code){case"invalid_type":return`Ongeldige invoer: verwacht ${c.expected}, ontving ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"getal";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Ongeldige invoer: verwacht ${R(c.values[0])}`;return`Ongeldige optie: verwacht \xe9\xe9n van ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Te lang: verwacht dat ${c.origin??"waarde"} ${b}${c.maximum.toString()} ${d.unit??"elementen"} bevat`;return`Te lang: verwacht dat ${c.origin??"waarde"} ${b}${c.maximum.toString()} is`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Te kort: verwacht dat ${c.origin} ${b}${c.minimum.toString()} ${d.unit} bevat`;return`Te kort: verwacht dat ${c.origin} ${b}${c.minimum.toString()} is`}case"invalid_format":if("starts_with"===c.format)return`Ongeldige tekst: moet met "${c.prefix}" beginnen`;if("ends_with"===c.format)return`Ongeldige tekst: moet op "${c.suffix}" eindigen`;if("includes"===c.format)return`Ongeldige tekst: moet "${c.includes}" bevatten`;if("regex"===c.format)return`Ongeldige tekst: moet overeenkomen met patroon ${c.pattern}`;return`Ongeldig: ${b[c.format]??c.format}`;case"not_multiple_of":return`Ongeldig getal: moet een veelvoud van ${c.divisor} zijn`;case"unrecognized_keys":return`Onbekende key${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Ongeldige key in ${c.origin}`;case"invalid_union":default:return"Ongeldige invoer";case"invalid_element":return`Ongeldige waarde in ${c.origin}`}}})()}}function eb(){return{localeError:(()=>{let a={string:{unit:"tegn",verb:"å ha"},file:{unit:"bytes",verb:"å ha"},array:{unit:"elementer",verb:"å inneholde"},set:{unit:"elementer",verb:"å inneholde"}},b={regex:"input",email:"e-postadresse",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dato- og klokkeslett",date:"ISO-dato",time:"ISO-klokkeslett",duration:"ISO-varighet",ipv4:"IPv4-område",ipv6:"IPv6-område",cidrv4:"IPv4-spekter",cidrv6:"IPv6-spekter",base64:"base64-enkodet streng",base64url:"base64url-enkodet streng",json_string:"JSON-streng",e164:"E.164-nummer",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`Ugyldig input: forventet ${c.expected}, fikk ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"tall";case"object":if(Array.isArray(a))return"liste";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Ugyldig verdi: forventet ${R(c.values[0])}`;return`Ugyldig valg: forventet en av ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`For stor(t): forventet ${c.origin??"value"} til \xe5 ha ${b}${c.maximum.toString()} ${d.unit??"elementer"}`;return`For stor(t): forventet ${c.origin??"value"} til \xe5 ha ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`For lite(n): forventet ${c.origin} til \xe5 ha ${b}${c.minimum.toString()} ${d.unit}`;return`For lite(n): forventet ${c.origin} til \xe5 ha ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Ugyldig streng: m\xe5 starte med "${c.prefix}"`;if("ends_with"===c.format)return`Ugyldig streng: m\xe5 ende med "${c.suffix}"`;if("includes"===c.format)return`Ugyldig streng: m\xe5 inneholde "${c.includes}"`;if("regex"===c.format)return`Ugyldig streng: m\xe5 matche m\xf8nsteret ${c.pattern}`;return`Ugyldig ${b[c.format]??c.format}`;case"not_multiple_of":return`Ugyldig tall: m\xe5 v\xe6re et multiplum av ${c.divisor}`;case"unrecognized_keys":return`${c.keys.length>1?"Ukjente nøkler":"Ukjent nøkkel"}: ${o(c.keys,", ")}`;case"invalid_key":return`Ugyldig n\xf8kkel i ${c.origin}`;case"invalid_union":default:return"Ugyldig input";case"invalid_element":return`Ugyldig verdi i ${c.origin}`}}})()}}function ec(){return{localeError:(()=>{let a={string:{unit:"harf",verb:"olmalıdır"},file:{unit:"bayt",verb:"olmalıdır"},array:{unit:"unsur",verb:"olmalıdır"},set:{unit:"unsur",verb:"olmalıdır"}},b={regex:"giren",email:"epostagâh",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO hengâmı",date:"ISO tarihi",time:"ISO zamanı",duration:"ISO müddeti",ipv4:"IPv4 nişânı",ipv6:"IPv6 nişânı",cidrv4:"IPv4 menzili",cidrv6:"IPv6 menzili",base64:"base64-şifreli metin",base64url:"base64url-şifreli metin",json_string:"JSON metin",e164:"E.164 sayısı",jwt:"JWT",template_literal:"giren"};return c=>{switch(c.code){case"invalid_type":return`F\xe2sit giren: umulan ${c.expected}, alınan ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"numara";case"object":if(Array.isArray(a))return"saf";if(null===a)return"gayb";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`F\xe2sit giren: umulan ${R(c.values[0])}`;return`F\xe2sit tercih: m\xfbteberler ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Fazla b\xfcy\xfck: ${c.origin??"value"}, ${b}${c.maximum.toString()} ${d.unit??"elements"} sahip olmalıydı.`;return`Fazla b\xfcy\xfck: ${c.origin??"value"}, ${b}${c.maximum.toString()} olmalıydı.`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Fazla k\xfc\xe7\xfck: ${c.origin}, ${b}${c.minimum.toString()} ${d.unit} sahip olmalıydı.`;return`Fazla k\xfc\xe7\xfck: ${c.origin}, ${b}${c.minimum.toString()} olmalıydı.`}case"invalid_format":if("starts_with"===c.format)return`F\xe2sit metin: "${c.prefix}" ile başlamalı.`;if("ends_with"===c.format)return`F\xe2sit metin: "${c.suffix}" ile bitmeli.`;if("includes"===c.format)return`F\xe2sit metin: "${c.includes}" ihtiv\xe2 etmeli.`;if("regex"===c.format)return`F\xe2sit metin: ${c.pattern} nakşına uymalı.`;return`F\xe2sit ${b[c.format]??c.format}`;case"not_multiple_of":return`F\xe2sit sayı: ${c.divisor} katı olmalıydı.`;case"unrecognized_keys":return`Tanınmayan anahtar ${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`${c.origin} i\xe7in tanınmayan anahtar var.`;case"invalid_union":return"Giren tanınamadı.";case"invalid_element":return`${c.origin} i\xe7in tanınmayan kıymet var.`;default:return`Kıymet tanınamadı.`}}})()}}function ed(){return{localeError:(()=>{let a={string:{unit:"توکي",verb:"ولري"},file:{unit:"بایټس",verb:"ولري"},array:{unit:"توکي",verb:"ولري"},set:{unit:"توکي",verb:"ولري"}},b={regex:"ورودي",email:"بریښنالیک",url:"یو آر ال",emoji:"ایموجي",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"نیټه او وخت",date:"نېټه",time:"وخت",duration:"موده",ipv4:"د IPv4 پته",ipv6:"د IPv6 پته",cidrv4:"د IPv4 ساحه",cidrv6:"د IPv6 ساحه",base64:"base64-encoded متن",base64url:"base64url-encoded متن",json_string:"JSON متن",e164:"د E.164 شمېره",jwt:"JWT",template_literal:"ورودي"};return c=>{switch(c.code){case"invalid_type":return`ناسم ورودي: باید ${c.expected} وای, مګر ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"عدد";case"object":if(Array.isArray(a))return"ارې";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)} ترلاسه شو`;case"invalid_value":if(1===c.values.length)return`ناسم ورودي: باید ${R(c.values[0])} وای`;return`ناسم انتخاب: باید یو له ${o(c.values,"|")} څخه وای`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`ډیر لوی: ${c.origin??"ارزښت"} باید ${b}${c.maximum.toString()} ${d.unit??"عنصرونه"} ولري`;return`ډیر لوی: ${c.origin??"ارزښت"} باید ${b}${c.maximum.toString()} وي`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`ډیر کوچنی: ${c.origin} باید ${b}${c.minimum.toString()} ${d.unit} ولري`;return`ډیر کوچنی: ${c.origin} باید ${b}${c.minimum.toString()} وي`}case"invalid_format":if("starts_with"===c.format)return`ناسم متن: باید د "${c.prefix}" سره پیل شي`;if("ends_with"===c.format)return`ناسم متن: باید د "${c.suffix}" سره پای ته ورسيږي`;if("includes"===c.format)return`ناسم متن: باید "${c.includes}" ولري`;if("regex"===c.format)return`ناسم متن: باید د ${c.pattern} سره مطابقت ولري`;return`${b[c.format]??c.format} ناسم دی`;case"not_multiple_of":return`ناسم عدد: باید د ${c.divisor} مضرب وي`;case"unrecognized_keys":return`ناسم ${c.keys.length>1?"کلیډونه":"کلیډ"}: ${o(c.keys,", ")}`;case"invalid_key":return`ناسم کلیډ په ${c.origin} کې`;case"invalid_union":default:return`ناسمه ورودي`;case"invalid_element":return`ناسم عنصر په ${c.origin} کې`}}})()}}function ee(){return{localeError:(()=>{let a={string:{unit:"znaków",verb:"mieć"},file:{unit:"bajtów",verb:"mieć"},array:{unit:"elementów",verb:"mieć"},set:{unit:"elementów",verb:"mieć"}},b={regex:"wyrażenie",email:"adres email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data i godzina w formacie ISO",date:"data w formacie ISO",time:"godzina w formacie ISO",duration:"czas trwania ISO",ipv4:"adres IPv4",ipv6:"adres IPv6",cidrv4:"zakres IPv4",cidrv6:"zakres IPv6",base64:"ciąg znaków zakodowany w formacie base64",base64url:"ciąg znaków zakodowany w formacie base64url",json_string:"ciąg znaków w formacie JSON",e164:"liczba E.164",jwt:"JWT",template_literal:"wejście"};return c=>{switch(c.code){case"invalid_type":return`Nieprawidłowe dane wejściowe: oczekiwano ${c.expected}, otrzymano ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"liczba";case"object":if(Array.isArray(a))return"tablica";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Nieprawidłowe dane wejściowe: oczekiwano ${R(c.values[0])}`;return`Nieprawidłowa opcja: oczekiwano jednej z wartości ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Za duża wartość: oczekiwano, że ${c.origin??"wartość"} będzie mieć ${b}${c.maximum.toString()} ${d.unit??"elementów"}`;return`Zbyt duż(y/a/e): oczekiwano, że ${c.origin??"wartość"} będzie wynosić ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Za mała wartość: oczekiwano, że ${c.origin??"wartość"} będzie mieć ${b}${c.minimum.toString()} ${d.unit??"elementów"}`;return`Zbyt mał(y/a/e): oczekiwano, że ${c.origin??"wartość"} będzie wynosić ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Nieprawidłowy ciąg znak\xf3w: musi zaczynać się od "${c.prefix}"`;if("ends_with"===c.format)return`Nieprawidłowy ciąg znak\xf3w: musi kończyć się na "${c.suffix}"`;if("includes"===c.format)return`Nieprawidłowy ciąg znak\xf3w: musi zawierać "${c.includes}"`;if("regex"===c.format)return`Nieprawidłowy ciąg znak\xf3w: musi odpowiadać wzorcowi ${c.pattern}`;return`Nieprawidłow(y/a/e) ${b[c.format]??c.format}`;case"not_multiple_of":return`Nieprawidłowa liczba: musi być wielokrotnością ${c.divisor}`;case"unrecognized_keys":return`Nierozpoznane klucze${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Nieprawidłowy klucz w ${c.origin}`;case"invalid_union":return"Nieprawidłowe dane wejściowe";case"invalid_element":return`Nieprawidłowa wartość w ${c.origin}`;default:return`Nieprawidłowe dane wejściowe`}}})()}}function ef(){return{localeError:(()=>{let a={string:{unit:"caracteres",verb:"ter"},file:{unit:"bytes",verb:"ter"},array:{unit:"itens",verb:"ter"},set:{unit:"itens",verb:"ter"}},b={regex:"padrão",email:"endereço de e-mail",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data e hora ISO",date:"data ISO",time:"hora ISO",duration:"duração ISO",ipv4:"endereço IPv4",ipv6:"endereço IPv6",cidrv4:"faixa de IPv4",cidrv6:"faixa de IPv6",base64:"texto codificado em base64",base64url:"URL codificada em base64",json_string:"texto JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return c=>{switch(c.code){case"invalid_type":return`Tipo inv\xe1lido: esperado ${c.expected}, recebido ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"número";case"object":if(Array.isArray(a))return"array";if(null===a)return"nulo";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Entrada inv\xe1lida: esperado ${R(c.values[0])}`;return`Op\xe7\xe3o inv\xe1lida: esperada uma das ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Muito grande: esperado que ${c.origin??"valor"} tivesse ${b}${c.maximum.toString()} ${d.unit??"elementos"}`;return`Muito grande: esperado que ${c.origin??"valor"} fosse ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Muito pequeno: esperado que ${c.origin} tivesse ${b}${c.minimum.toString()} ${d.unit}`;return`Muito pequeno: esperado que ${c.origin} fosse ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Texto inv\xe1lido: deve come\xe7ar com "${c.prefix}"`;if("ends_with"===c.format)return`Texto inv\xe1lido: deve terminar com "${c.suffix}"`;if("includes"===c.format)return`Texto inv\xe1lido: deve incluir "${c.includes}"`;if("regex"===c.format)return`Texto inv\xe1lido: deve corresponder ao padr\xe3o ${c.pattern}`;return`${b[c.format]??c.format} inv\xe1lido`;case"not_multiple_of":return`N\xfamero inv\xe1lido: deve ser m\xfaltiplo de ${c.divisor}`;case"unrecognized_keys":return`Chave${c.keys.length>1?"s":""} desconhecida${c.keys.length>1?"s":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Chave inv\xe1lida em ${c.origin}`;case"invalid_union":return"Entrada inválida";case"invalid_element":return`Valor inv\xe1lido em ${c.origin}`;default:return`Campo inv\xe1lido`}}})()}}function eg(a,b,c,d){let e=Math.abs(a),f=e%10,g=e%100;return g>=11&&g<=19?d:1===f?b:f>=2&&f<=4?c:d}function eh(){return{localeError:(()=>{let a={string:{unit:{one:"символ",few:"символа",many:"символов"},verb:"иметь"},file:{unit:{one:"байт",few:"байта",many:"байт"},verb:"иметь"},array:{unit:{one:"элемент",few:"элемента",many:"элементов"},verb:"иметь"},set:{unit:{one:"элемент",few:"элемента",many:"элементов"},verb:"иметь"}},b={regex:"ввод",email:"email адрес",url:"URL",emoji:"эмодзи",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO дата и время",date:"ISO дата",time:"ISO время",duration:"ISO длительность",ipv4:"IPv4 адрес",ipv6:"IPv6 адрес",cidrv4:"IPv4 диапазон",cidrv6:"IPv6 диапазон",base64:"строка в формате base64",base64url:"строка в формате base64url",json_string:"JSON строка",e164:"номер E.164",jwt:"JWT",template_literal:"ввод"};return c=>{switch(c.code){case"invalid_type":return`Неверный ввод: ожидалось ${c.expected}, получено ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"число";case"object":if(Array.isArray(a))return"массив";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Неверный ввод: ожидалось ${R(c.values[0])}`;return`Неверный вариант: ожидалось одно из ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d){let a=eg(Number(c.maximum),d.unit.one,d.unit.few,d.unit.many);return`Слишком большое значение: ожидалось, что ${c.origin??"значение"} будет иметь ${b}${c.maximum.toString()} ${a}`}return`Слишком большое значение: ожидалось, что ${c.origin??"значение"} будет ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d){let a=eg(Number(c.minimum),d.unit.one,d.unit.few,d.unit.many);return`Слишком маленькое значение: ожидалось, что ${c.origin} будет иметь ${b}${c.minimum.toString()} ${a}`}return`Слишком маленькое значение: ожидалось, что ${c.origin} будет ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Неверная строка: должна начинаться с "${c.prefix}"`;if("ends_with"===c.format)return`Неверная строка: должна заканчиваться на "${c.suffix}"`;if("includes"===c.format)return`Неверная строка: должна содержать "${c.includes}"`;if("regex"===c.format)return`Неверная строка: должна соответствовать шаблону ${c.pattern}`;return`Неверный ${b[c.format]??c.format}`;case"not_multiple_of":return`Неверное число: должно быть кратным ${c.divisor}`;case"unrecognized_keys":return`Нераспознанн${c.keys.length>1?"ые":"ый"} ключ${c.keys.length>1?"и":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Неверный ключ в ${c.origin}`;case"invalid_union":return"Неверные входные данные";case"invalid_element":return`Неверное значение в ${c.origin}`;default:return`Неверные входные данные`}}})()}}function ei(){return{localeError:(()=>{let a={string:{unit:"znakov",verb:"imeti"},file:{unit:"bajtov",verb:"imeti"},array:{unit:"elementov",verb:"imeti"},set:{unit:"elementov",verb:"imeti"}},b={regex:"vnos",email:"e-poštni naslov",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datum in čas",date:"ISO datum",time:"ISO čas",duration:"ISO trajanje",ipv4:"IPv4 naslov",ipv6:"IPv6 naslov",cidrv4:"obseg IPv4",cidrv6:"obseg IPv6",base64:"base64 kodiran niz",base64url:"base64url kodiran niz",json_string:"JSON niz",e164:"E.164 številka",jwt:"JWT",template_literal:"vnos"};return c=>{switch(c.code){case"invalid_type":return`Neveljaven vnos: pričakovano ${c.expected}, prejeto ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"število";case"object":if(Array.isArray(a))return"tabela";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Neveljaven vnos: pričakovano ${R(c.values[0])}`;return`Neveljavna možnost: pričakovano eno izmed ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Preveliko: pričakovano, da bo ${c.origin??"vrednost"} imelo ${b}${c.maximum.toString()} ${d.unit??"elementov"}`;return`Preveliko: pričakovano, da bo ${c.origin??"vrednost"} ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Premajhno: pričakovano, da bo ${c.origin} imelo ${b}${c.minimum.toString()} ${d.unit}`;return`Premajhno: pričakovano, da bo ${c.origin} ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Neveljaven niz: mora se začeti z "${c.prefix}"`;if("ends_with"===c.format)return`Neveljaven niz: mora se končati z "${c.suffix}"`;if("includes"===c.format)return`Neveljaven niz: mora vsebovati "${c.includes}"`;if("regex"===c.format)return`Neveljaven niz: mora ustrezati vzorcu ${c.pattern}`;return`Neveljaven ${b[c.format]??c.format}`;case"not_multiple_of":return`Neveljavno število: mora biti večkratnik ${c.divisor}`;case"unrecognized_keys":return`Neprepoznan${c.keys.length>1?"i ključi":" ključ"}: ${o(c.keys,", ")}`;case"invalid_key":return`Neveljaven ključ v ${c.origin}`;case"invalid_union":default:return"Neveljaven vnos";case"invalid_element":return`Neveljavna vrednost v ${c.origin}`}}})()}}function ej(){return{localeError:(()=>{let a={string:{unit:"tecken",verb:"att ha"},file:{unit:"bytes",verb:"att ha"},array:{unit:"objekt",verb:"att innehålla"},set:{unit:"objekt",verb:"att innehålla"}},b={regex:"reguljärt uttryck",email:"e-postadress",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-datum och tid",date:"ISO-datum",time:"ISO-tid",duration:"ISO-varaktighet",ipv4:"IPv4-intervall",ipv6:"IPv6-intervall",cidrv4:"IPv4-spektrum",cidrv6:"IPv6-spektrum",base64:"base64-kodad sträng",base64url:"base64url-kodad sträng",json_string:"JSON-sträng",e164:"E.164-nummer",jwt:"JWT",template_literal:"mall-literal"};return c=>{switch(c.code){case"invalid_type":return`Ogiltig inmatning: f\xf6rv\xe4ntat ${c.expected}, fick ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"antal";case"object":if(Array.isArray(a))return"lista";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Ogiltig inmatning: f\xf6rv\xe4ntat ${R(c.values[0])}`;return`Ogiltigt val: f\xf6rv\xe4ntade en av ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`F\xf6r stor(t): f\xf6rv\xe4ntade ${c.origin??"värdet"} att ha ${b}${c.maximum.toString()} ${d.unit??"element"}`;return`F\xf6r stor(t): f\xf6rv\xe4ntat ${c.origin??"värdet"} att ha ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`F\xf6r lite(t): f\xf6rv\xe4ntade ${c.origin??"värdet"} att ha ${b}${c.minimum.toString()} ${d.unit}`;return`F\xf6r lite(t): f\xf6rv\xe4ntade ${c.origin??"värdet"} att ha ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Ogiltig str\xe4ng: m\xe5ste b\xf6rja med "${c.prefix}"`;if("ends_with"===c.format)return`Ogiltig str\xe4ng: m\xe5ste sluta med "${c.suffix}"`;if("includes"===c.format)return`Ogiltig str\xe4ng: m\xe5ste inneh\xe5lla "${c.includes}"`;if("regex"===c.format)return`Ogiltig str\xe4ng: m\xe5ste matcha m\xf6nstret "${c.pattern}"`;return`Ogiltig(t) ${b[c.format]??c.format}`;case"not_multiple_of":return`Ogiltigt tal: m\xe5ste vara en multipel av ${c.divisor}`;case"unrecognized_keys":return`${c.keys.length>1?"Okända nycklar":"Okänd nyckel"}: ${o(c.keys,", ")}`;case"invalid_key":return`Ogiltig nyckel i ${c.origin??"värdet"}`;case"invalid_union":default:return"Ogiltig input";case"invalid_element":return`Ogiltigt v\xe4rde i ${c.origin??"värdet"}`}}})()}}function ek(){return{localeError:(()=>{let a={string:{unit:"எழுத்துக்கள்",verb:"கொண்டிருக்க வேண்டும்"},file:{unit:"பைட்டுகள்",verb:"கொண்டிருக்க வேண்டும்"},array:{unit:"உறுப்புகள்",verb:"கொண்டிருக்க வேண்டும்"},set:{unit:"உறுப்புகள்",verb:"கொண்டிருக்க வேண்டும்"}},b={regex:"உள்ளீடு",email:"மின்னஞ்சல் முகவரி",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO தேதி நேரம்",date:"ISO தேதி",time:"ISO நேரம்",duration:"ISO கால அளவு",ipv4:"IPv4 முகவரி",ipv6:"IPv6 முகவரி",cidrv4:"IPv4 வரம்பு",cidrv6:"IPv6 வரம்பு",base64:"base64-encoded சரம்",base64url:"base64url-encoded சரம்",json_string:"JSON சரம்",e164:"E.164 எண்",jwt:"JWT",template_literal:"input"};return c=>{switch(c.code){case"invalid_type":return`தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${c.expected}, பெறப்பட்டது ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"எண் அல்லாதது":"எண்";case"object":if(Array.isArray(a))return"அணி";if(null===a)return"வெறுமை";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${R(c.values[0])}`;return`தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${o(c.values,"|")} இல் ஒன்று`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`மிக பெரியது: எதிர்பார்க்கப்பட்டது ${c.origin??"மதிப்பு"} ${b}${c.maximum.toString()} ${d.unit??"உறுப்புகள்"} ஆக இருக்க வேண்டும்`;return`மிக பெரியது: எதிர்பார்க்கப்பட்டது ${c.origin??"மதிப்பு"} ${b}${c.maximum.toString()} ஆக இருக்க வேண்டும்`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${c.origin} ${b}${c.minimum.toString()} ${d.unit} ஆக இருக்க வேண்டும்`;return`மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${c.origin} ${b}${c.minimum.toString()} ஆக இருக்க வேண்டும்`}case"invalid_format":if("starts_with"===c.format)return`தவறான சரம்: "${c.prefix}" இல் தொடங்க வேண்டும்`;if("ends_with"===c.format)return`தவறான சரம்: "${c.suffix}" இல் முடிவடைய வேண்டும்`;if("includes"===c.format)return`தவறான சரம்: "${c.includes}" ஐ உள்ளடக்க வேண்டும்`;if("regex"===c.format)return`தவறான சரம்: ${c.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`;return`தவறான ${b[c.format]??c.format}`;case"not_multiple_of":return`தவறான எண்: ${c.divisor} இன் பலமாக இருக்க வேண்டும்`;case"unrecognized_keys":return`அடையாளம் தெரியாத விசை${c.keys.length>1?"கள்":""}: ${o(c.keys,", ")}`;case"invalid_key":return`${c.origin} இல் தவறான விசை`;case"invalid_union":return"தவறான உள்ளீடு";case"invalid_element":return`${c.origin} இல் தவறான மதிப்பு`;default:return`தவறான உள்ளீடு`}}})()}}function el(){return{localeError:(()=>{let a={string:{unit:"ตัวอักษร",verb:"ควรมี"},file:{unit:"ไบต์",verb:"ควรมี"},array:{unit:"รายการ",verb:"ควรมี"},set:{unit:"รายการ",verb:"ควรมี"}},b={regex:"ข้อมูลที่ป้อน",email:"ที่อยู่อีเมล",url:"URL",emoji:"อิโมจิ",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"วันที่เวลาแบบ ISO",date:"วันที่แบบ ISO",time:"เวลาแบบ ISO",duration:"ช่วงเวลาแบบ ISO",ipv4:"ที่อยู่ IPv4",ipv6:"ที่อยู่ IPv6",cidrv4:"ช่วง IP แบบ IPv4",cidrv6:"ช่วง IP แบบ IPv6",base64:"ข้อความแบบ Base64",base64url:"ข้อความแบบ Base64 สำหรับ URL",json_string:"ข้อความแบบ JSON",e164:"เบอร์โทรศัพท์ระหว่างประเทศ (E.164)",jwt:"โทเคน JWT",template_literal:"ข้อมูลที่ป้อน"};return c=>{switch(c.code){case"invalid_type":return`ประเภทข้อมูลไม่ถูกต้อง: ควรเป็น ${c.expected} แต่ได้รับ ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"ไม่ใช่ตัวเลข (NaN)":"ตัวเลข";case"object":if(Array.isArray(a))return"อาร์เรย์ (Array)";if(null===a)return"ไม่มีค่า (null)";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`ค่าไม่ถูกต้อง: ควรเป็น ${R(c.values[0])}`;return`ตัวเลือกไม่ถูกต้อง: ควรเป็นหนึ่งใน ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"ไม่เกิน":"น้อยกว่า",d=a[c.origin]??null;if(d)return`เกินกำหนด: ${c.origin??"ค่า"} ควรมี${b} ${c.maximum.toString()} ${d.unit??"รายการ"}`;return`เกินกำหนด: ${c.origin??"ค่า"} ควรมี${b} ${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?"อย่างน้อย":"มากกว่า",d=a[c.origin]??null;if(d)return`น้อยกว่ากำหนด: ${c.origin} ควรมี${b} ${c.minimum.toString()} ${d.unit}`;return`น้อยกว่ากำหนด: ${c.origin} ควรมี${b} ${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`รูปแบบไม่ถูกต้อง: ข้อความต้องขึ้นต้นด้วย "${c.prefix}"`;if("ends_with"===c.format)return`รูปแบบไม่ถูกต้อง: ข้อความต้องลงท้ายด้วย "${c.suffix}"`;if("includes"===c.format)return`รูปแบบไม่ถูกต้อง: ข้อความต้องมี "${c.includes}" อยู่ในข้อความ`;if("regex"===c.format)return`รูปแบบไม่ถูกต้อง: ต้องตรงกับรูปแบบที่กำหนด ${c.pattern}`;return`รูปแบบไม่ถูกต้อง: ${b[c.format]??c.format}`;case"not_multiple_of":return`ตัวเลขไม่ถูกต้อง: ต้องเป็นจำนวนที่หารด้วย ${c.divisor} ได้ลงตัว`;case"unrecognized_keys":return`พบคีย์ที่ไม่รู้จัก: ${o(c.keys,", ")}`;case"invalid_key":return`คีย์ไม่ถูกต้องใน ${c.origin}`;case"invalid_union":return"ข้อมูลไม่ถูกต้อง: ไม่ตรงกับรูปแบบยูเนียนที่กำหนดไว้";case"invalid_element":return`ข้อมูลไม่ถูกต้องใน ${c.origin}`;default:return`ข้อมูลไม่ถูกต้อง`}}})()}}function em(){return{localeError:(()=>{let a={string:{unit:"karakter",verb:"olmalı"},file:{unit:"bayt",verb:"olmalı"},array:{unit:"öğe",verb:"olmalı"},set:{unit:"öğe",verb:"olmalı"}},b={regex:"girdi",email:"e-posta adresi",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO tarih ve saat",date:"ISO tarih",time:"ISO saat",duration:"ISO süre",ipv4:"IPv4 adresi",ipv6:"IPv6 adresi",cidrv4:"IPv4 aralığı",cidrv6:"IPv6 aralığı",base64:"base64 ile şifrelenmiş metin",base64url:"base64url ile şifrelenmiş metin",json_string:"JSON dizesi",e164:"E.164 sayısı",jwt:"JWT",template_literal:"Şablon dizesi"};return c=>{switch(c.code){case"invalid_type":return`Ge\xe7ersiz değer: beklenen ${c.expected}, alınan ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Ge\xe7ersiz değer: beklenen ${R(c.values[0])}`;return`Ge\xe7ersiz se\xe7enek: aşağıdakilerden biri olmalı: ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`\xc7ok b\xfcy\xfck: beklenen ${c.origin??"değer"} ${b}${c.maximum.toString()} ${d.unit??"öğe"}`;return`\xc7ok b\xfcy\xfck: beklenen ${c.origin??"değer"} ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`\xc7ok k\xfc\xe7\xfck: beklenen ${c.origin} ${b}${c.minimum.toString()} ${d.unit}`;return`\xc7ok k\xfc\xe7\xfck: beklenen ${c.origin} ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Ge\xe7ersiz metin: "${c.prefix}" ile başlamalı`;if("ends_with"===c.format)return`Ge\xe7ersiz metin: "${c.suffix}" ile bitmeli`;if("includes"===c.format)return`Ge\xe7ersiz metin: "${c.includes}" i\xe7ermeli`;if("regex"===c.format)return`Ge\xe7ersiz metin: ${c.pattern} desenine uymalı`;return`Ge\xe7ersiz ${b[c.format]??c.format}`;case"not_multiple_of":return`Ge\xe7ersiz sayı: ${c.divisor} ile tam b\xf6l\xfcnebilmeli`;case"unrecognized_keys":return`Tanınmayan anahtar${c.keys.length>1?"lar":""}: ${o(c.keys,", ")}`;case"invalid_key":return`${c.origin} i\xe7inde ge\xe7ersiz anahtar`;case"invalid_union":return"Geçersiz değer";case"invalid_element":return`${c.origin} i\xe7inde ge\xe7ersiz değer`;default:return`Ge\xe7ersiz değer`}}})()}}function en(){return{localeError:(()=>{let a={string:{unit:"символів",verb:"матиме"},file:{unit:"байтів",verb:"матиме"},array:{unit:"елементів",verb:"матиме"},set:{unit:"елементів",verb:"матиме"}},b={regex:"вхідні дані",email:"адреса електронної пошти",url:"URL",emoji:"емодзі",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"дата та час ISO",date:"дата ISO",time:"час ISO",duration:"тривалість ISO",ipv4:"адреса IPv4",ipv6:"адреса IPv6",cidrv4:"діапазон IPv4",cidrv6:"діапазон IPv6",base64:"рядок у кодуванні base64",base64url:"рядок у кодуванні base64url",json_string:"рядок JSON",e164:"номер E.164",jwt:"JWT",template_literal:"вхідні дані"};return c=>{switch(c.code){case"invalid_type":return`Неправильні вхідні дані: очікується ${c.expected}, отримано ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"число";case"object":if(Array.isArray(a))return"масив";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Неправильні вхідні дані: очікується ${R(c.values[0])}`;return`Неправильна опція: очікується одне з ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Занадто велике: очікується, що ${c.origin??"значення"} ${d.verb} ${b}${c.maximum.toString()} ${d.unit??"елементів"}`;return`Занадто велике: очікується, що ${c.origin??"значення"} буде ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Занадто мале: очікується, що ${c.origin} ${d.verb} ${b}${c.minimum.toString()} ${d.unit}`;return`Занадто мале: очікується, що ${c.origin} буде ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Неправильний рядок: повинен починатися з "${c.prefix}"`;if("ends_with"===c.format)return`Неправильний рядок: повинен закінчуватися на "${c.suffix}"`;if("includes"===c.format)return`Неправильний рядок: повинен містити "${c.includes}"`;if("regex"===c.format)return`Неправильний рядок: повинен відповідати шаблону ${c.pattern}`;return`Неправильний ${b[c.format]??c.format}`;case"not_multiple_of":return`Неправильне число: повинно бути кратним ${c.divisor}`;case"unrecognized_keys":return`Нерозпізнаний ключ${c.keys.length>1?"і":""}: ${o(c.keys,", ")}`;case"invalid_key":return`Неправильний ключ у ${c.origin}`;case"invalid_union":return"Неправильні вхідні дані";case"invalid_element":return`Неправильне значення у ${c.origin}`;default:return`Неправильні вхідні дані`}}})()}}function eo(){return en()}function ep(){return{localeError:(()=>{let a={string:{unit:"حروف",verb:"ہونا"},file:{unit:"بائٹس",verb:"ہونا"},array:{unit:"آئٹمز",verb:"ہونا"},set:{unit:"آئٹمز",verb:"ہونا"}},b={regex:"ان پٹ",email:"ای میل ایڈریس",url:"یو آر ایل",emoji:"ایموجی",uuid:"یو یو آئی ڈی",uuidv4:"یو یو آئی ڈی وی 4",uuidv6:"یو یو آئی ڈی وی 6",nanoid:"نینو آئی ڈی",guid:"جی یو آئی ڈی",cuid:"سی یو آئی ڈی",cuid2:"سی یو آئی ڈی 2",ulid:"یو ایل آئی ڈی",xid:"ایکس آئی ڈی",ksuid:"کے ایس یو آئی ڈی",datetime:"آئی ایس او ڈیٹ ٹائم",date:"آئی ایس او تاریخ",time:"آئی ایس او وقت",duration:"آئی ایس او مدت",ipv4:"آئی پی وی 4 ایڈریس",ipv6:"آئی پی وی 6 ایڈریس",cidrv4:"آئی پی وی 4 رینج",cidrv6:"آئی پی وی 6 رینج",base64:"بیس 64 ان کوڈڈ سٹرنگ",base64url:"بیس 64 یو آر ایل ان کوڈڈ سٹرنگ",json_string:"جے ایس او این سٹرنگ",e164:"ای 164 نمبر",jwt:"جے ڈبلیو ٹی",template_literal:"ان پٹ"};return c=>{switch(c.code){case"invalid_type":return`غلط ان پٹ: ${c.expected} متوقع تھا، ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"نمبر";case"object":if(Array.isArray(a))return"آرے";if(null===a)return"نل";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)} موصول ہوا`;case"invalid_value":if(1===c.values.length)return`غلط ان پٹ: ${R(c.values[0])} متوقع تھا`;return`غلط آپشن: ${o(c.values,"|")} میں سے ایک متوقع تھا`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`بہت بڑا: ${c.origin??"ویلیو"} کے ${b}${c.maximum.toString()} ${d.unit??"عناصر"} ہونے متوقع تھے`;return`بہت بڑا: ${c.origin??"ویلیو"} کا ${b}${c.maximum.toString()} ہونا متوقع تھا`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`بہت چھوٹا: ${c.origin} کے ${b}${c.minimum.toString()} ${d.unit} ہونے متوقع تھے`;return`بہت چھوٹا: ${c.origin} کا ${b}${c.minimum.toString()} ہونا متوقع تھا`}case"invalid_format":if("starts_with"===c.format)return`غلط سٹرنگ: "${c.prefix}" سے شروع ہونا چاہیے`;if("ends_with"===c.format)return`غلط سٹرنگ: "${c.suffix}" پر ختم ہونا چاہیے`;if("includes"===c.format)return`غلط سٹرنگ: "${c.includes}" شامل ہونا چاہیے`;if("regex"===c.format)return`غلط سٹرنگ: پیٹرن ${c.pattern} سے میچ ہونا چاہیے`;return`غلط ${b[c.format]??c.format}`;case"not_multiple_of":return`غلط نمبر: ${c.divisor} کا مضاعف ہونا چاہیے`;case"unrecognized_keys":return`غیر تسلیم شدہ کی${c.keys.length>1?"ز":""}: ${o(c.keys,"، ")}`;case"invalid_key":return`${c.origin} میں غلط کی`;case"invalid_union":return"غلط ان پٹ";case"invalid_element":return`${c.origin} میں غلط ویلیو`;default:return`غلط ان پٹ`}}})()}}function eq(){return{localeError:(()=>{let a={string:{unit:"ký tự",verb:"có"},file:{unit:"byte",verb:"có"},array:{unit:"phần tử",verb:"có"},set:{unit:"phần tử",verb:"có"}},b={regex:"đầu vào",email:"địa chỉ email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ngày giờ ISO",date:"ngày ISO",time:"giờ ISO",duration:"khoảng thời gian ISO",ipv4:"địa chỉ IPv4",ipv6:"địa chỉ IPv6",cidrv4:"dải IPv4",cidrv6:"dải IPv6",base64:"chuỗi mã hóa base64",base64url:"chuỗi mã hóa base64url",json_string:"chuỗi JSON",e164:"số E.164",jwt:"JWT",template_literal:"đầu vào"};return c=>{switch(c.code){case"invalid_type":return`Đầu v\xe0o kh\xf4ng hợp lệ: mong đợi ${c.expected}, nhận được ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"số";case"object":if(Array.isArray(a))return"mảng";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`Đầu v\xe0o kh\xf4ng hợp lệ: mong đợi ${R(c.values[0])}`;return`T\xf9y chọn kh\xf4ng hợp lệ: mong đợi một trong c\xe1c gi\xe1 trị ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`Qu\xe1 lớn: mong đợi ${c.origin??"giá trị"} ${d.verb} ${b}${c.maximum.toString()} ${d.unit??"phần tử"}`;return`Qu\xe1 lớn: mong đợi ${c.origin??"giá trị"} ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`Qu\xe1 nhỏ: mong đợi ${c.origin} ${d.verb} ${b}${c.minimum.toString()} ${d.unit}`;return`Qu\xe1 nhỏ: mong đợi ${c.origin} ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`Chuỗi kh\xf4ng hợp lệ: phải bắt đầu bằng "${c.prefix}"`;if("ends_with"===c.format)return`Chuỗi kh\xf4ng hợp lệ: phải kết th\xfac bằng "${c.suffix}"`;if("includes"===c.format)return`Chuỗi kh\xf4ng hợp lệ: phải bao gồm "${c.includes}"`;if("regex"===c.format)return`Chuỗi kh\xf4ng hợp lệ: phải khớp với mẫu ${c.pattern}`;return`${b[c.format]??c.format} kh\xf4ng hợp lệ`;case"not_multiple_of":return`Số kh\xf4ng hợp lệ: phải l\xe0 bội số của ${c.divisor}`;case"unrecognized_keys":return`Kh\xf3a kh\xf4ng được nhận dạng: ${o(c.keys,", ")}`;case"invalid_key":return`Kh\xf3a kh\xf4ng hợp lệ trong ${c.origin}`;case"invalid_union":return"Đầu vào không hợp lệ";case"invalid_element":return`Gi\xe1 trị kh\xf4ng hợp lệ trong ${c.origin}`;default:return`Đầu v\xe0o kh\xf4ng hợp lệ`}}})()}}function er(){return{localeError:(()=>{let a={string:{unit:"字符",verb:"包含"},file:{unit:"字节",verb:"包含"},array:{unit:"项",verb:"包含"},set:{unit:"项",verb:"包含"}},b={regex:"输入",email:"电子邮件",url:"URL",emoji:"表情符号",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO日期时间",date:"ISO日期",time:"ISO时间",duration:"ISO时长",ipv4:"IPv4地址",ipv6:"IPv6地址",cidrv4:"IPv4网段",cidrv6:"IPv6网段",base64:"base64编码字符串",base64url:"base64url编码字符串",json_string:"JSON字符串",e164:"E.164号码",jwt:"JWT",template_literal:"输入"};return c=>{switch(c.code){case"invalid_type":return`无效输入：期望 ${c.expected}，实际接收 ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"非数字(NaN)":"数字";case"object":if(Array.isArray(a))return"数组";if(null===a)return"空值(null)";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`无效输入：期望 ${R(c.values[0])}`;return`无效选项：期望以下之一 ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`数值过大：期望 ${c.origin??"值"} ${b}${c.maximum.toString()} ${d.unit??"个元素"}`;return`数值过大：期望 ${c.origin??"值"} ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`数值过小：期望 ${c.origin} ${b}${c.minimum.toString()} ${d.unit}`;return`数值过小：期望 ${c.origin} ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`无效字符串：必须以 "${c.prefix}" 开头`;if("ends_with"===c.format)return`无效字符串：必须以 "${c.suffix}" 结尾`;if("includes"===c.format)return`无效字符串：必须包含 "${c.includes}"`;if("regex"===c.format)return`无效字符串：必须满足正则表达式 ${c.pattern}`;return`无效${b[c.format]??c.format}`;case"not_multiple_of":return`无效数字：必须是 ${c.divisor} 的倍数`;case"unrecognized_keys":return`出现未知的键(key): ${o(c.keys,", ")}`;case"invalid_key":return`${c.origin} 中的键(key)无效`;case"invalid_union":return"无效输入";case"invalid_element":return`${c.origin} 中包含无效值(value)`;default:return`无效输入`}}})()}}function es(){return{localeError:(()=>{let a={string:{unit:"字元",verb:"擁有"},file:{unit:"位元組",verb:"擁有"},array:{unit:"項目",verb:"擁有"},set:{unit:"項目",verb:"擁有"}},b={regex:"輸入",email:"郵件地址",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO 日期時間",date:"ISO 日期",time:"ISO 時間",duration:"ISO 期間",ipv4:"IPv4 位址",ipv6:"IPv6 位址",cidrv4:"IPv4 範圍",cidrv6:"IPv6 範圍",base64:"base64 編碼字串",base64url:"base64url 編碼字串",json_string:"JSON 字串",e164:"E.164 數值",jwt:"JWT",template_literal:"輸入"};return c=>{switch(c.code){case"invalid_type":return`無效的輸入值：預期為 ${c.expected}，但收到 ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"number";case"object":if(Array.isArray(a))return"array";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`無效的輸入值：預期為 ${R(c.values[0])}`;return`無效的選項：預期為以下其中之一 ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`數值過大：預期 ${c.origin??"值"} 應為 ${b}${c.maximum.toString()} ${d.unit??"個元素"}`;return`數值過大：預期 ${c.origin??"值"} 應為 ${b}${c.maximum.toString()}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`數值過小：預期 ${c.origin} 應為 ${b}${c.minimum.toString()} ${d.unit}`;return`數值過小：預期 ${c.origin} 應為 ${b}${c.minimum.toString()}`}case"invalid_format":if("starts_with"===c.format)return`無效的字串：必須以 "${c.prefix}" 開頭`;if("ends_with"===c.format)return`無效的字串：必須以 "${c.suffix}" 結尾`;if("includes"===c.format)return`無效的字串：必須包含 "${c.includes}"`;if("regex"===c.format)return`無效的字串：必須符合格式 ${c.pattern}`;return`無效的 ${b[c.format]??c.format}`;case"not_multiple_of":return`無效的數字：必須為 ${c.divisor} 的倍數`;case"unrecognized_keys":return`無法識別的鍵值${c.keys.length>1?"們":""}：${o(c.keys,"、")}`;case"invalid_key":return`${c.origin} 中有無效的鍵值`;case"invalid_union":return"無效的輸入值";case"invalid_element":return`${c.origin} 中有無效的值`;default:return`無效的輸入值`}}})()}}function et(){return{localeError:(()=>{let a={string:{unit:"àmi",verb:"ní"},file:{unit:"bytes",verb:"ní"},array:{unit:"nkan",verb:"ní"},set:{unit:"nkan",verb:"ní"}},b={regex:"ẹ̀rọ ìbáwọlé",email:"àdírẹ́sì ìmẹ́lì",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"àkókò ISO",date:"ọjọ́ ISO",time:"àkókò ISO",duration:"àkókò tó pé ISO",ipv4:"àdírẹ́sì IPv4",ipv6:"àdírẹ́sì IPv6",cidrv4:"àgbègbè IPv4",cidrv6:"àgbègbè IPv6",base64:"ọ̀rọ̀ tí a kọ́ ní base64",base64url:"ọ̀rọ̀ base64url",json_string:"ọ̀rọ̀ JSON",e164:"nọ́mbà E.164",jwt:"JWT",template_literal:"ẹ̀rọ ìbáwọlé"};return c=>{switch(c.code){case"invalid_type":return`\xccb\xe1wọl\xe9 aṣ\xecṣe: a n\xed l\xe1ti fi ${c.expected}, \xe0mọ̀ a r\xed ${(a=>{let b=typeof a;switch(b){case"number":return Number.isNaN(a)?"NaN":"nọ́mbà";case"object":if(Array.isArray(a))return"akopọ";if(null===a)return"null";if(Object.getPrototypeOf(a)!==Object.prototype&&a.constructor)return a.constructor.name}return b})(c.input)}`;case"invalid_value":if(1===c.values.length)return`\xccb\xe1wọl\xe9 aṣ\xecṣe: a n\xed l\xe1ti fi ${R(c.values[0])}`;return`\xc0ṣ\xe0y\xe0n aṣ\xecṣe: yan ọ̀kan l\xe1ra ${o(c.values,"|")}`;case"too_big":{let b=c.inclusive?"<=":"<",d=a[c.origin]??null;if(d)return`T\xf3 pọ̀ j\xf9: a n\xed l\xe1ti jẹ́ p\xe9 ${c.origin??"iye"} ${d.verb} ${b}${c.maximum} ${d.unit}`;return`T\xf3 pọ̀ j\xf9: a n\xed l\xe1ti jẹ́ ${b}${c.maximum}`}case"too_small":{let b=c.inclusive?">=":">",d=a[c.origin]??null;if(d)return`K\xe9r\xe9 ju: a n\xed l\xe1ti jẹ́ p\xe9 ${c.origin} ${d.verb} ${b}${c.minimum} ${d.unit}`;return`K\xe9r\xe9 ju: a n\xed l\xe1ti jẹ́ ${b}${c.minimum}`}case"invalid_format":if("starts_with"===c.format)return`Ọ̀rọ̀ aṣ\xecṣe: gbọ́dọ̀ bẹ̀rẹ̀ pẹ̀l\xfa "${c.prefix}"`;if("ends_with"===c.format)return`Ọ̀rọ̀ aṣ\xecṣe: gbọ́dọ̀ par\xed pẹ̀l\xfa "${c.suffix}"`;if("includes"===c.format)return`Ọ̀rọ̀ aṣ\xecṣe: gbọ́dọ̀ n\xed "${c.includes}"`;if("regex"===c.format)return`Ọ̀rọ̀ aṣ\xecṣe: gbọ́dọ̀ b\xe1 \xe0pẹẹrẹ mu ${c.pattern}`;return`Aṣ\xecṣe: ${b[c.format]??c.format}`;case"not_multiple_of":return`Nọ́mb\xe0 aṣ\xecṣe: gbọ́dọ̀ jẹ́ \xe8y\xe0 p\xedp\xedn ti ${c.divisor}`;case"unrecognized_keys":return`Bọt\xecn\xec \xe0\xecmọ̀: ${o(c.keys,", ")}`;case"invalid_key":return`Bọt\xecn\xec aṣ\xecṣe n\xedn\xfa ${c.origin}`;case"invalid_union":default:return"Ìbáwọlé aṣìṣe";case"invalid_element":return`Iye aṣ\xecṣe n\xedn\xfa ${c.origin}`}}})()}}a.s(["default",()=>d8],65312),a.s(["default",()=>d9],60843),a.s(["default",()=>ea],56182),a.s(["default",()=>eb],12326),a.s(["default",()=>ec],43307),a.s(["default",()=>ed],7637),a.s(["default",()=>ee],99916),a.s(["default",()=>ef],85444),a.s(["default",()=>eh],22838),a.s(["default",()=>ei],24487),a.s(["default",()=>ej],82431),a.s(["default",()=>ek],23453),a.s(["default",()=>el],29828),a.s(["default",()=>em],6045),a.s(["default",()=>eo],91936),a.s(["default",()=>en],92925),a.s(["default",()=>ep],41875),a.s(["default",()=>eq],46169),a.s(["default",()=>er],80637),a.s(["default",()=>es],10773),a.s(["default",()=>et],17363),a.s(["$ZodRegistry",()=>ew,"$input",()=>ev,"$output",()=>eu,"globalRegistry",()=>ey,"registry",()=>ex],8173);let eu=Symbol("ZodOutput"),ev=Symbol("ZodInput");class ew{constructor(){this._map=new WeakMap,this._idmap=new Map}add(a,...b){let c=b[0];if(this._map.set(a,c),c&&"object"==typeof c&&"id"in c){if(this._idmap.has(c.id))throw Error(`ID ${c.id} already exists in the registry`);this._idmap.set(c.id,a)}return this}clear(){return this._map=new WeakMap,this._idmap=new Map,this}remove(a){let b=this._map.get(a);return b&&"object"==typeof b&&"id"in b&&this._idmap.delete(b.id),this._map.delete(a),this}get(a){let b=a._zod.parent;if(b){let c={...this.get(b)??{}};delete c.id;let d={...c,...this._map.get(a)};return Object.keys(d).length?d:void 0}return this._map.get(a)}has(a){return this._map.has(a)}}function ex(){return new ew}let ey=ex();function ez(a,b){return new a({type:"string",...P(b)})}function eA(a,b){return new a({type:"string",coerce:!0,...P(b)})}function eB(a,b){return new a({type:"string",format:"email",check:"string_format",abort:!1,...P(b)})}function eC(a,b){return new a({type:"string",format:"guid",check:"string_format",abort:!1,...P(b)})}function eD(a,b){return new a({type:"string",format:"uuid",check:"string_format",abort:!1,...P(b)})}function eE(a,b){return new a({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v4",...P(b)})}function eF(a,b){return new a({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v6",...P(b)})}function eG(a,b){return new a({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v7",...P(b)})}function eH(a,b){return new a({type:"string",format:"url",check:"string_format",abort:!1,...P(b)})}function eI(a,b){return new a({type:"string",format:"emoji",check:"string_format",abort:!1,...P(b)})}function eJ(a,b){return new a({type:"string",format:"nanoid",check:"string_format",abort:!1,...P(b)})}function eK(a,b){return new a({type:"string",format:"cuid",check:"string_format",abort:!1,...P(b)})}function eL(a,b){return new a({type:"string",format:"cuid2",check:"string_format",abort:!1,...P(b)})}function eM(a,b){return new a({type:"string",format:"ulid",check:"string_format",abort:!1,...P(b)})}function eN(a,b){return new a({type:"string",format:"xid",check:"string_format",abort:!1,...P(b)})}function eO(a,b){return new a({type:"string",format:"ksuid",check:"string_format",abort:!1,...P(b)})}function eP(a,b){return new a({type:"string",format:"ipv4",check:"string_format",abort:!1,...P(b)})}function eQ(a,b){return new a({type:"string",format:"ipv6",check:"string_format",abort:!1,...P(b)})}function eR(a,b){return new a({type:"string",format:"cidrv4",check:"string_format",abort:!1,...P(b)})}function eS(a,b){return new a({type:"string",format:"cidrv6",check:"string_format",abort:!1,...P(b)})}function eT(a,b){return new a({type:"string",format:"base64",check:"string_format",abort:!1,...P(b)})}function eU(a,b){return new a({type:"string",format:"base64url",check:"string_format",abort:!1,...P(b)})}function eV(a,b){return new a({type:"string",format:"e164",check:"string_format",abort:!1,...P(b)})}function eW(a,b){return new a({type:"string",format:"jwt",check:"string_format",abort:!1,...P(b)})}a.s(["TimePrecision",()=>eX,"_any",()=>fg,"_array",()=>fP,"_base64",()=>eT,"_base64url",()=>eU,"_bigint",()=>e9,"_boolean",()=>e7,"_catch",()=>f5,"_check",()=>ge,"_cidrv4",()=>eR,"_cidrv6",()=>eS,"_coercedBigint",()=>fa,"_coercedBoolean",()=>e8,"_coercedDate",()=>fl,"_coercedNumber",()=>e1,"_coercedString",()=>eA,"_cuid",()=>eK,"_cuid2",()=>eL,"_custom",()=>gb,"_date",()=>fk,"_default",()=>f2,"_discriminatedUnion",()=>fR,"_e164",()=>eV,"_email",()=>eB,"_emoji",()=>eI,"_endsWith",()=>fH,"_enum",()=>fX,"_file",()=>f$,"_float32",()=>e3,"_float64",()=>e4,"_gt",()=>fp,"_gte",()=>fq,"_guid",()=>eC,"_includes",()=>fF,"_int",()=>e2,"_int32",()=>e5,"_int64",()=>fb,"_intersection",()=>fS,"_ipv4",()=>eP,"_ipv6",()=>eQ,"_isoDate",()=>eZ,"_isoDateTime",()=>eY,"_isoDuration",()=>e_,"_isoTime",()=>e$,"_jwt",()=>eW,"_ksuid",()=>eO,"_lazy",()=>f9,"_length",()=>fB,"_literal",()=>fZ,"_lowercase",()=>fD,"_lt",()=>fn,"_lte",()=>fo,"_map",()=>fV,"_max",()=>fo,"_maxLength",()=>fz,"_maxSize",()=>fw,"_mime",()=>fJ,"_min",()=>fq,"_minLength",()=>fA,"_minSize",()=>fx,"_multipleOf",()=>fv,"_nan",()=>fm,"_nanoid",()=>eJ,"_nativeEnum",()=>fY,"_negative",()=>fs,"_never",()=>fi,"_nonnegative",()=>fu,"_nonoptional",()=>f3,"_nonpositive",()=>ft,"_normalize",()=>fL,"_null",()=>ff,"_nullable",()=>f1,"_number",()=>e0,"_optional",()=>f0,"_overwrite",()=>fK,"_pipe",()=>f6,"_positive",()=>fr,"_promise",()=>ga,"_property",()=>fI,"_readonly",()=>f7,"_record",()=>fU,"_refine",()=>gc,"_regex",()=>fC,"_set",()=>fW,"_size",()=>fy,"_startsWith",()=>fG,"_string",()=>ez,"_stringFormat",()=>gg,"_stringbool",()=>gf,"_success",()=>f4,"_superRefine",()=>gd,"_symbol",()=>fd,"_templateLiteral",()=>f8,"_toLowerCase",()=>fN,"_toUpperCase",()=>fO,"_transform",()=>f_,"_trim",()=>fM,"_tuple",()=>fT,"_uint32",()=>e6,"_uint64",()=>fc,"_ulid",()=>eM,"_undefined",()=>fe,"_union",()=>fQ,"_unknown",()=>fh,"_uppercase",()=>fE,"_url",()=>eH,"_uuid",()=>eD,"_uuidv4",()=>eE,"_uuidv6",()=>eF,"_uuidv7",()=>eG,"_void",()=>fj,"_xid",()=>eN],61130);let eX={Any:null,Minute:-1,Second:0,Millisecond:3,Microsecond:6};function eY(a,b){return new a({type:"string",format:"datetime",check:"string_format",offset:!1,local:!1,precision:null,...P(b)})}function eZ(a,b){return new a({type:"string",format:"date",check:"string_format",...P(b)})}function e$(a,b){return new a({type:"string",format:"time",check:"string_format",precision:null,...P(b)})}function e_(a,b){return new a({type:"string",format:"duration",check:"string_format",...P(b)})}function e0(a,b){return new a({type:"number",checks:[],...P(b)})}function e1(a,b){return new a({type:"number",coerce:!0,checks:[],...P(b)})}function e2(a,b){return new a({type:"number",check:"number_format",abort:!1,format:"safeint",...P(b)})}function e3(a,b){return new a({type:"number",check:"number_format",abort:!1,format:"float32",...P(b)})}function e4(a,b){return new a({type:"number",check:"number_format",abort:!1,format:"float64",...P(b)})}function e5(a,b){return new a({type:"number",check:"number_format",abort:!1,format:"int32",...P(b)})}function e6(a,b){return new a({type:"number",check:"number_format",abort:!1,format:"uint32",...P(b)})}function e7(a,b){return new a({type:"boolean",...P(b)})}function e8(a,b){return new a({type:"boolean",coerce:!0,...P(b)})}function e9(a,b){return new a({type:"bigint",...P(b)})}function fa(a,b){return new a({type:"bigint",coerce:!0,...P(b)})}function fb(a,b){return new a({type:"bigint",check:"bigint_format",abort:!1,format:"int64",...P(b)})}function fc(a,b){return new a({type:"bigint",check:"bigint_format",abort:!1,format:"uint64",...P(b)})}function fd(a,b){return new a({type:"symbol",...P(b)})}function fe(a,b){return new a({type:"undefined",...P(b)})}function ff(a,b){return new a({type:"null",...P(b)})}function fg(a){return new a({type:"any"})}function fh(a){return new a({type:"unknown"})}function fi(a,b){return new a({type:"never",...P(b)})}function fj(a,b){return new a({type:"void",...P(b)})}function fk(a,b){return new a({type:"date",...P(b)})}function fl(a,b){return new a({type:"date",coerce:!0,...P(b)})}function fm(a,b){return new a({type:"nan",...P(b)})}function fn(a,b){return new bU({check:"less_than",...P(b),value:a,inclusive:!1})}function fo(a,b){return new bU({check:"less_than",...P(b),value:a,inclusive:!0})}function fp(a,b){return new bV({check:"greater_than",...P(b),value:a,inclusive:!1})}function fq(a,b){return new bV({check:"greater_than",...P(b),value:a,inclusive:!0})}function fr(a){return fp(0,a)}function fs(a){return fn(0,a)}function ft(a){return fo(0,a)}function fu(a){return fq(0,a)}function fv(a,b){return new bW({check:"multiple_of",...P(b),value:a})}function fw(a,b){return new bZ({check:"max_size",...P(b),maximum:a})}function fx(a,b){return new b$({check:"min_size",...P(b),minimum:a})}function fy(a,b){return new b_({check:"size_equals",...P(b),size:a})}function fz(a,b){return new b0({check:"max_length",...P(b),maximum:a})}function fA(a,b){return new b1({check:"min_length",...P(b),minimum:a})}function fB(a,b){return new b2({check:"length_equals",...P(b),length:a})}function fC(a,b){return new b4({check:"string_format",format:"regex",...P(b),pattern:a})}function fD(a){return new b5({check:"string_format",format:"lowercase",...P(a)})}function fE(a){return new b6({check:"string_format",format:"uppercase",...P(a)})}function fF(a,b){return new b7({check:"string_format",format:"includes",...P(b),includes:a})}function fG(a,b){return new b8({check:"string_format",format:"starts_with",...P(b),prefix:a})}function fH(a,b){return new b9({check:"string_format",format:"ends_with",...P(b),suffix:a})}function fI(a,b,c){return new cb({check:"property",property:a,schema:b,...P(c)})}function fJ(a,b){return new cc({check:"mime_type",mime:a,...P(b)})}function fK(a){return new cd({check:"overwrite",tx:a})}function fL(a){return fK(b=>b.normalize(a))}function fM(){return fK(a=>a.trim())}function fN(){return fK(a=>a.toLowerCase())}function fO(){return fK(a=>a.toUpperCase())}function fP(a,b,c){return new a({type:"array",element:b,...P(c)})}function fQ(a,b,c){return new a({type:"union",options:b,...P(c)})}function fR(a,b,c,d){return new a({type:"union",options:c,discriminator:b,...P(d)})}function fS(a,b,c){return new a({type:"intersection",left:b,right:c})}function fT(a,b,c,d){let e=c instanceof cg,f=e?d:c;return new a({type:"tuple",items:b,rest:e?c:null,...P(f)})}function fU(a,b,c,d){return new a({type:"record",keyType:b,valueType:c,...P(d)})}function fV(a,b,c,d){return new a({type:"map",keyType:b,valueType:c,...P(d)})}function fW(a,b,c){return new a({type:"set",valueType:b,...P(c)})}function fX(a,b,c){return new a({type:"enum",entries:Array.isArray(b)?Object.fromEntries(b.map(a=>[a,a])):b,...P(c)})}function fY(a,b,c){return new a({type:"enum",entries:b,...P(c)})}function fZ(a,b,c){return new a({type:"literal",values:Array.isArray(b)?b:[b],...P(c)})}function f$(a,b){return new a({type:"file",...P(b)})}function f_(a,b){return new a({type:"transform",transform:b})}function f0(a,b){return new a({type:"optional",innerType:b})}function f1(a,b){return new a({type:"nullable",innerType:b})}function f2(a,b,c){return new a({type:"default",innerType:b,get defaultValue(){return"function"==typeof c?c():I(c)}})}function f3(a,b,c){return new a({type:"nonoptional",innerType:b,...P(c)})}function f4(a,b){return new a({type:"success",innerType:b})}function f5(a,b,c){return new a({type:"catch",innerType:b,catchValue:"function"==typeof c?c:()=>c})}function f6(a,b,c){return new a({type:"pipe",in:b,out:c})}function f7(a,b){return new a({type:"readonly",innerType:b})}function f8(a,b,c){return new a({type:"template_literal",parts:b,...P(c)})}function f9(a,b){return new a({type:"lazy",getter:b})}function ga(a,b){return new a({type:"promise",innerType:b})}function gb(a,b,c){let d=P(c);return d.abort??(d.abort=!0),new a({type:"custom",check:"custom",fn:b,...d})}function gc(a,b,c){return new a({type:"custom",check:"custom",fn:b,...P(c)})}function gd(a){let b=ge(c=>(c.addIssue=a=>{"string"==typeof a?c.issues.push(ag(a,c.value,b._zod.def)):(a.fatal&&(a.continue=!1),a.code??(a.code="custom"),a.input??(a.input=c.value),a.inst??(a.inst=b),a.continue??(a.continue=!b._zod.def.abort),c.issues.push(ag(a)))},a(c.value,c)));return b}function ge(a,b){let c=new bS({check:"custom",...P(b)});return c._zod.check=a,c}function gf(a,b){let c=P(b),d=c.truthy??["true","1","yes","on","y","enabled"],e=c.falsy??["false","0","no","off","n","disabled"];"sensitive"!==c.case&&(d=d.map(a=>"string"==typeof a?a.toLowerCase():a),e=e.map(a=>"string"==typeof a?a.toLowerCase():a));let f=new Set(d),g=new Set(e),h=a.Codec??dw,i=a.Boolean??cM,j=new h({type:"pipe",in:new(a.String??ch)({type:"string",error:c.error}),out:new i({type:"boolean",error:c.error}),transform:(a,b)=>{let d=a;return"sensitive"!==c.case&&(d=d.toLowerCase()),!!f.has(d)||!g.has(d)&&(b.issues.push({code:"invalid_value",expected:"stringbool",values:[...f,...g],input:b.value,inst:j,continue:!1}),{})},reverseTransform:(a,b)=>!0===a?d[0]||"true":e[0]||"false",error:c.error});return j}function gg(a,b,c,d={}){let e=P(d),f={...P(d),check:"string_format",type:"string",format:b,fn:"function"==typeof c?c:a=>c.test(a),...e};return c instanceof RegExp&&(f.pattern=c),new a(f)}a.s(["JSONSchemaGenerator",()=>gh,"toJSONSchema",()=>gi],28185);class gh{constructor(a){this.counter=0,this.metadataRegistry=a?.metadata??ey,this.target=a?.target??"draft-2020-12",this.unrepresentable=a?.unrepresentable??"throw",this.override=a?.override??(()=>{}),this.io=a?.io??"output",this.seen=new Map}process(a,b={path:[],schemaPath:[]}){var c;let d=a._zod.def,e=this.seen.get(a);if(e)return e.count++,b.schemaPath.includes(a)&&(e.cycle=b.path),e.schema;let f={schema:{},count:1,cycle:void 0,path:b.path};this.seen.set(a,f);let g=a._zod.toJSONSchema?.();if(g)f.schema=g;else{let c={...b,schemaPath:[...b.schemaPath,a],path:b.path},e=a._zod.parent;if(e)f.ref=e,this.process(e,c),this.seen.get(e).isParent=!0;else{let b=f.schema;switch(d.type){case"string":{b.type="string";let{minimum:c,maximum:d,format:e,patterns:g,contentEncoding:h}=a._zod.bag;if("number"==typeof c&&(b.minLength=c),"number"==typeof d&&(b.maxLength=d),e&&(b.format=({guid:"uuid",url:"uri",datetime:"date-time",json_string:"json-string",regex:""})[e]??e,""===b.format&&delete b.format),h&&(b.contentEncoding=h),g&&g.size>0){let a=[...g];1===a.length?b.pattern=a[0].source:a.length>1&&(f.schema.allOf=[...a.map(a=>({..."draft-7"===this.target||"draft-4"===this.target||"openapi-3.0"===this.target?{type:"string"}:{},pattern:a.source}))])}break}case"number":{let{minimum:c,maximum:d,format:e,multipleOf:f,exclusiveMaximum:g,exclusiveMinimum:h}=a._zod.bag;"string"==typeof e&&e.includes("int")?b.type="integer":b.type="number","number"==typeof h&&("draft-4"===this.target||"openapi-3.0"===this.target?(b.minimum=h,b.exclusiveMinimum=!0):b.exclusiveMinimum=h),"number"==typeof c&&(b.minimum=c,"number"==typeof h&&"draft-4"!==this.target&&(h>=c?delete b.minimum:delete b.exclusiveMinimum)),"number"==typeof g&&("draft-4"===this.target||"openapi-3.0"===this.target?(b.maximum=g,b.exclusiveMaximum=!0):b.exclusiveMaximum=g),"number"==typeof d&&(b.maximum=d,"number"==typeof g&&"draft-4"!==this.target&&(g<=d?delete b.maximum:delete b.exclusiveMaximum)),"number"==typeof f&&(b.multipleOf=f);break}case"boolean":case"success":b.type="boolean";break;case"bigint":if("throw"===this.unrepresentable)throw Error("BigInt cannot be represented in JSON Schema");break;case"symbol":if("throw"===this.unrepresentable)throw Error("Symbols cannot be represented in JSON Schema");break;case"null":"openapi-3.0"===this.target?(b.type="string",b.nullable=!0,b.enum=[null]):b.type="null";break;case"any":case"unknown":break;case"undefined":if("throw"===this.unrepresentable)throw Error("Undefined cannot be represented in JSON Schema");break;case"void":if("throw"===this.unrepresentable)throw Error("Void cannot be represented in JSON Schema");break;case"never":b.not={};break;case"date":if("throw"===this.unrepresentable)throw Error("Date cannot be represented in JSON Schema");break;case"array":{let{minimum:e,maximum:f}=a._zod.bag;"number"==typeof e&&(b.minItems=e),"number"==typeof f&&(b.maxItems=f),b.type="array",b.items=this.process(d.element,{...c,path:[...c.path,"items"]});break}case"object":{b.type="object",b.properties={};let a=d.shape;for(let d in a)b.properties[d]=this.process(a[d],{...c,path:[...c.path,"properties",d]});let e=new Set([...new Set(Object.keys(a))].filter(a=>{let b=d.shape[a]._zod;return"input"===this.io?void 0===b.optin:void 0===b.optout}));e.size>0&&(b.required=Array.from(e)),d.catchall?._zod.def.type==="never"?b.additionalProperties=!1:d.catchall?d.catchall&&(b.additionalProperties=this.process(d.catchall,{...c,path:[...c.path,"additionalProperties"]})):"output"===this.io&&(b.additionalProperties=!1);break}case"union":b.anyOf=d.options.map((a,b)=>this.process(a,{...c,path:[...c.path,"anyOf",b]}));break;case"intersection":{let a=this.process(d.left,{...c,path:[...c.path,"allOf",0]}),e=this.process(d.right,{...c,path:[...c.path,"allOf",1]}),f=a=>"allOf"in a&&1===Object.keys(a).length;b.allOf=[...f(a)?a.allOf:[a],...f(e)?e.allOf:[e]];break}case"tuple":{b.type="array";let e="draft-2020-12"===this.target?"prefixItems":"items",f="draft-2020-12"===this.target||"openapi-3.0"===this.target?"items":"additionalItems",g=d.items.map((a,b)=>this.process(a,{...c,path:[...c.path,e,b]})),h=d.rest?this.process(d.rest,{...c,path:[...c.path,f,..."openapi-3.0"===this.target?[d.items.length]:[]]}):null;"draft-2020-12"===this.target?(b.prefixItems=g,h&&(b.items=h)):"openapi-3.0"===this.target?(b.items={anyOf:g},h&&b.items.anyOf.push(h),b.minItems=g.length,h||(b.maxItems=g.length)):(b.items=g,h&&(b.additionalItems=h));let{minimum:i,maximum:j}=a._zod.bag;"number"==typeof i&&(b.minItems=i),"number"==typeof j&&(b.maxItems=j);break}case"record":b.type="object",("draft-7"===this.target||"draft-2020-12"===this.target)&&(b.propertyNames=this.process(d.keyType,{...c,path:[...c.path,"propertyNames"]})),b.additionalProperties=this.process(d.valueType,{...c,path:[...c.path,"additionalProperties"]});break;case"map":if("throw"===this.unrepresentable)throw Error("Map cannot be represented in JSON Schema");break;case"set":if("throw"===this.unrepresentable)throw Error("Set cannot be represented in JSON Schema");break;case"enum":{let a=n(d.entries);a.every(a=>"number"==typeof a)&&(b.type="number"),a.every(a=>"string"==typeof a)&&(b.type="string"),b.enum=a;break}case"literal":{let a=[];for(let b of d.values)if(void 0===b){if("throw"===this.unrepresentable)throw Error("Literal `undefined` cannot be represented in JSON Schema")}else if("bigint"==typeof b)if("throw"===this.unrepresentable)throw Error("BigInt literals cannot be represented in JSON Schema");else a.push(Number(b));else a.push(b);if(0===a.length);else if(1===a.length){let c=a[0];b.type=null===c?"null":typeof c,"draft-4"===this.target||"openapi-3.0"===this.target?b.enum=[c]:b.const=c}else a.every(a=>"number"==typeof a)&&(b.type="number"),a.every(a=>"string"==typeof a)&&(b.type="string"),a.every(a=>"boolean"==typeof a)&&(b.type="string"),a.every(a=>null===a)&&(b.type="null"),b.enum=a;break}case"file":{let c={type:"string",format:"binary",contentEncoding:"binary"},{minimum:d,maximum:e,mime:f}=a._zod.bag;void 0!==d&&(c.minLength=d),void 0!==e&&(c.maxLength=e),f?1===f.length?(c.contentMediaType=f[0],Object.assign(b,c)):b.anyOf=f.map(a=>({...c,contentMediaType:a})):Object.assign(b,c);break}case"transform":if("throw"===this.unrepresentable)throw Error("Transforms cannot be represented in JSON Schema");break;case"nullable":{let a=this.process(d.innerType,c);"openapi-3.0"===this.target?(f.ref=d.innerType,b.nullable=!0):b.anyOf=[a,{type:"null"}];break}case"nonoptional":case"promise":case"optional":this.process(d.innerType,c),f.ref=d.innerType;break;case"default":this.process(d.innerType,c),f.ref=d.innerType,b.default=JSON.parse(JSON.stringify(d.defaultValue));break;case"prefault":this.process(d.innerType,c),f.ref=d.innerType,"input"===this.io&&(b._prefault=JSON.parse(JSON.stringify(d.defaultValue)));break;case"catch":{let a;this.process(d.innerType,c),f.ref=d.innerType;try{a=d.catchValue(void 0)}catch{throw Error("Dynamic catch values are not supported in JSON Schema")}b.default=a;break}case"nan":if("throw"===this.unrepresentable)throw Error("NaN cannot be represented in JSON Schema");break;case"template_literal":{let c=a._zod.pattern;if(!c)throw Error("Pattern not found in template literal");b.type="string",b.pattern=c.source;break}case"pipe":{let a="input"===this.io?"transform"===d.in._zod.def.type?d.out:d.in:d.out;this.process(a,c),f.ref=a;break}case"readonly":this.process(d.innerType,c),f.ref=d.innerType,b.readOnly=!0;break;case"lazy":{let b=a._zod.innerType;this.process(b,c),f.ref=b;break}case"custom":if("throw"===this.unrepresentable)throw Error("Custom types cannot be represented in JSON Schema");break;case"function":if("throw"===this.unrepresentable)throw Error("Function types cannot be represented in JSON Schema")}}}let h=this.metadataRegistry.get(a);return h&&Object.assign(f.schema,h),"input"===this.io&&function a(b,c){let d=c??{seen:new Set};if(d.seen.has(b))return!1;d.seen.add(b);let e=b._zod.def;switch(e.type){case"string":case"number":case"bigint":case"boolean":case"date":case"symbol":case"undefined":case"null":case"any":case"unknown":case"never":case"void":case"literal":case"enum":case"nan":case"file":case"template_literal":case"custom":case"success":case"catch":case"function":return!1;case"array":return a(e.element,d);case"object":for(let b in e.shape)if(a(e.shape[b],d))return!0;return!1;case"union":for(let b of e.options)if(a(b,d))return!0;return!1;case"intersection":return a(e.left,d)||a(e.right,d);case"tuple":for(let b of e.items)if(a(b,d))return!0;if(e.rest&&a(e.rest,d))return!0;return!1;case"record":case"map":return a(e.keyType,d)||a(e.valueType,d);case"set":return a(e.valueType,d);case"promise":case"optional":case"nonoptional":case"nullable":case"readonly":case"default":case"prefault":return a(e.innerType,d);case"lazy":return a(e.getter(),d);case"transform":return!0;case"pipe":return a(e.in,d)||a(e.out,d)}throw Error(`Unknown schema type: ${e.type}`)}(a)&&(delete f.schema.examples,delete f.schema.default),"input"===this.io&&f.schema._prefault&&((c=f.schema).default??(c.default=f.schema._prefault)),delete f.schema._prefault,this.seen.get(a).schema}emit(a,b){let c={cycles:b?.cycles??"ref",reused:b?.reused??"inline",external:b?.external??void 0},d=this.seen.get(a);if(!d)throw Error("Unprocessed schema. This is a bug in Zod.");let e=a=>{let b="draft-2020-12"===this.target?"$defs":"definitions";if(c.external){let d=c.external.registry.get(a[0])?.id,e=c.external.uri??(a=>a);if(d)return{ref:e(d)};let f=a[1].defId??a[1].schema.id??`schema${this.counter++}`;return a[1].defId=f,{defId:f,ref:`${e("__shared")}#/${b}/${f}`}}if(a[1]===d)return{ref:"#"};let e=`#/${b}/`,f=a[1].schema.id??`__schema${this.counter++}`;return{defId:f,ref:e+f}},f=a=>{if(a[1].schema.$ref)return;let b=a[1],{ref:c,defId:d}=e(a);b.def={...b.schema},d&&(b.defId=d);let f=b.schema;for(let a in f)delete f[a];f.$ref=c};if("throw"===c.cycles)for(let a of this.seen.entries()){let b=a[1];if(b.cycle)throw Error(`Cycle detected: #/${b.cycle?.join("/")}/<root>

Set the \`cycles\` parameter to \`"ref"\` to resolve cyclical schemas with defs.`)}for(let b of this.seen.entries()){let d=b[1];if(a===b[0]){f(b);continue}if(c.external){let d=c.external.registry.get(b[0])?.id;if(a!==b[0]&&d){f(b);continue}}if(this.metadataRegistry.get(b[0])?.id||d.cycle||d.count>1&&"ref"===c.reused){f(b);continue}}let g=(a,b)=>{let c=this.seen.get(a),d=c.def??c.schema,e={...d};if(null===c.ref)return;let f=c.ref;if(c.ref=null,f){g(f,b);let a=this.seen.get(f).schema;a.$ref&&("draft-7"===b.target||"draft-4"===b.target||"openapi-3.0"===b.target)?(d.allOf=d.allOf??[],d.allOf.push(a)):(Object.assign(d,a),Object.assign(d,e))}c.isParent||this.override({zodSchema:a,jsonSchema:d,path:c.path??[]})};for(let a of[...this.seen.entries()].reverse())g(a[0],{target:this.target});let h={};if("draft-2020-12"===this.target?h.$schema="https://json-schema.org/draft/2020-12/schema":"draft-7"===this.target?h.$schema="http://json-schema.org/draft-07/schema#":"draft-4"===this.target?h.$schema="http://json-schema.org/draft-04/schema#":"openapi-3.0"===this.target||console.warn(`Invalid target: ${this.target}`),c.external?.uri){let b=c.external.registry.get(a)?.id;if(!b)throw Error("Schema is missing an `id` property");h.$id=c.external.uri(b)}Object.assign(h,d.def);let i=c.external?.defs??{};for(let a of this.seen.entries()){let b=a[1];b.def&&b.defId&&(i[b.defId]=b.def)}c.external||Object.keys(i).length>0&&("draft-2020-12"===this.target?h.$defs=i:h.definitions=i);try{return JSON.parse(JSON.stringify(h))}catch(a){throw Error("Error converting schema to JSON.")}}}function gi(a,b){if(a instanceof ew){let c=new gh(b),d={};for(let b of a._idmap.entries()){let[a,d]=b;c.process(d)}let e={},f={registry:a,uri:b?.uri,defs:d};for(let d of a._idmap.entries()){let[a,g]=d;e[a]=c.emit(g,{...b,external:f})}return Object.keys(d).length>0&&(e.__shared={["draft-2020-12"===c.target?"$defs":"definitions"]:d}),{schemas:e}}let c=new gh(b);return c.process(a),c.emit(a,b)}a.s([],94941)},65749,a=>{"use strict";a.s(["zodResolver",()=>k],65749);var b=a.i(39457);let c=(a,c,d)=>{if(a&&"reportValidity"in a){let e=(0,b.get)(d,c);a.setCustomValidity(e&&e.message||""),a.reportValidity()}},d=(a,b)=>{for(let d in b.fields){let e=b.fields[d];e&&e.ref&&"reportValidity"in e.ref?c(e.ref,d,a):e&&e.refs&&e.refs.forEach(b=>c(b,d,a))}},e=(a,c)=>{c.shouldUseNativeValidation&&d(a,c);let e={};for(let d in a){let g=(0,b.get)(c.fields,d),h=Object.assign(a[d]||{},{ref:g&&g.ref});if(f(c.names||Object.keys(a),d)){let a=Object.assign({},(0,b.get)(e,d));(0,b.set)(a,"root",h),(0,b.set)(e,d,a)}else(0,b.set)(e,d,h)}return e},f=(a,b)=>{let c=g(b);return a.some(a=>g(a).match(`^${c}\\.\\d+`))};function g(a){return a.replace(/\]|\[/g,"")}a.i(22657);var h=a.i(23387),i=a.i(81573);function j(a,b){try{var c=a()}catch(a){return b(a)}return c&&c.then?c.then(void 0,b):c}function k(a,c,f){if(void 0===f&&(f={}),"_def"in a&&"object"==typeof a._def&&"typeName"in a._def)return function(g,h,i){try{return Promise.resolve(j(function(){return Promise.resolve(a["sync"===f.mode?"parse":"parseAsync"](g,c)).then(function(a){return i.shouldUseNativeValidation&&d({},i),{errors:{},values:f.raw?Object.assign({},g):a}})},function(a){if(Array.isArray(null==a?void 0:a.issues))return{values:{},errors:e(function(a,c){for(var d={};a.length;){var e=a[0],f=e.code,g=e.message,h=e.path.join(".");if(!d[h])if("unionErrors"in e){var i=e.unionErrors[0].errors[0];d[h]={message:i.message,type:i.code}}else d[h]={message:g,type:f};if("unionErrors"in e&&e.unionErrors.forEach(function(b){return b.errors.forEach(function(b){return a.push(b)})}),c){var j=d[h].types,k=j&&j[e.code];d[h]=(0,b.appendErrors)(h,c,d,f,k?[].concat(k,e.message):e.message)}a.shift()}return d}(a.errors,!i.shouldUseNativeValidation&&"all"===i.criteriaMode),i)};throw a}))}catch(a){return Promise.reject(a)}};if("_zod"in a&&"object"==typeof a._zod)return function(g,k,l){try{return Promise.resolve(j(function(){return Promise.resolve(("sync"===f.mode?i.parse:i.parseAsync)(a,g,c)).then(function(a){return l.shouldUseNativeValidation&&d({},l),{errors:{},values:f.raw?Object.assign({},g):a}})},function(a){if(a instanceof h.$ZodError)return{values:{},errors:e(function(a,c){for(var d={};a.length;){var e=a[0],f=e.code,g=e.message,h=e.path.join(".");if(!d[h])if("invalid_union"===e.code&&e.errors.length>0){var i=e.errors[0][0];d[h]={message:i.message,type:i.code}}else d[h]={message:g,type:f};if("invalid_union"===e.code&&e.errors.forEach(function(b){return b.forEach(function(b){return a.push(b)})}),c){var j=d[h].types,k=j&&j[e.code];d[h]=(0,b.appendErrors)(h,c,d,f,k?[].concat(k,e.message):e.message)}a.shift()}return d}(a.issues,!l.shouldUseNativeValidation&&"all"===l.criteriaMode),l)};throw a}))}catch(a){return Promise.reject(a)}};throw Error("Invalid input: not a Zod schema")}},74572,a=>{"use strict";function b(a){return a.toUpperCase().replace(/[^A-Z0-9]/g,"")}function c(a){return a.replace(/[\s-]/g,"")}a.s(["formatLicence",()=>e,"isValidLicence",()=>f,"normalizedLicence",()=>g]);let d={"CA-AB":{format:a=>{let b=a.replace(/\D/g,"").slice(0,9);return b.length>6?`${b.slice(0,6)}-${b.slice(6)}`:b},test:a=>/^\d{9}$/.test(a)||/^\d{5,9}$/.test(a)},"CA-BC":{format:a=>a.replace(/\D/g,"").slice(0,8),test:a=>/^\d{7,8}$/.test(a)},"CA-MB":{format:a=>{let c=b(a).slice(0,12);if(!c)return"";let d=c.slice(0,2),e=c.slice(2,4);return[d,e,c.slice(4,6),c.slice(6)].filter(Boolean).join("-")},test:a=>/^[A-Z0-9]{12}$/.test(a)},"CA-NB":{format:a=>a.replace(/\D/g,"").slice(0,7),test:a=>/^\d{5,7}$/.test(a)},"CA-NL":{format:a=>{let c=b(a);return(c.slice(0,1)+c.slice(1,10)).toUpperCase()},test:a=>/^[A-Z]\d{9}$/.test(a)},"CA-NS":{format:a=>b(a).slice(0,14),test:a=>/^[A-Z0-9]{6,14}$/.test(a)},"CA-ON":{format:a=>{let c=b(a).slice(0,14),d=c.slice(0,1),e=c.slice(1,5);return[d+e,c.slice(5,10),c.slice(10,15)].filter(Boolean).join("-")},test:a=>/^[A-Z]\d{14}$/.test(a)},"CA-PE":{format:a=>a.replace(/\D/g,"").slice(0,6),test:a=>/^\d{5,6}$/.test(a)},"CA-QC":{format:a=>{let c=b(a);return(c.slice(0,1)+c.slice(1,13)).toUpperCase()},test:a=>/^[A-Z]\d{12}$/.test(a)},"CA-SK":{format:a=>a.replace(/\D/g,"").slice(0,8),test:a=>/^\d{8}$/.test(a)},"CA-DEFAULT":{format:a=>b(a).slice(0,15),test:a=>/^[A-Z0-9]{5,15}$/.test(a)}};function e(a,b){let c=d["CA-DEFAULT"];return(d[a]??c).format(b)}function f(a,b){let e=d["CA-DEFAULT"];return(d[a]??e).test(c(b.toUpperCase()))}function g(a){return c(a.toUpperCase())}},40674,a=>{"use strict";function b(a){let b=a.toUpperCase().replace(/\s+/g,"");if(!/^[ABCEGHJ-NPRSTVXY]\d[A-Z]\d[A-Z]\d$/.test(b))return{ok:!1};let c=`${b.slice(0,3)} ${b.slice(3)}`;return{ok:!0,normalized:c,province:({A:"NL",B:"NS",C:"PE",E:"NB",G:"QC",H:"QC",J:"QC",K:"ON",L:"ON",M:"ON",N:"ON",P:"ON",R:"MB",S:"SK",T:"AB",V:"BC",Y:"YT",X:"NT"})[b.charAt(0)]??void 0}}function c(a){return/^\d{5}(-\d{4})?$/.test(a.trim())}a.s(["detectCA",()=>b,"isUSZip",()=>c])},68894,a=>{"use strict";a.s(["formatPhoneForDisplay",()=>bi,"toE164",()=>bj],68894);let b={version:4,country_calling_codes:{1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],692:["MH"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],880:["BD"],886:["TW"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},countries:{AC:["247","00","(?:[01589]\\d|[46])\\d{4}",[5,6]],AD:["376","00","(?:1|6\\d)\\d{7}|[135-9]\\d{5}",[6,8,9],[["(\\d{3})(\\d{3})","$1 $2",["[135-9]"]],["(\\d{4})(\\d{4})","$1 $2",["1"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]]],AE:["971","00","(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",[5,6,7,8,9,10,11,12],[["(\\d{3})(\\d{2,9})","$1 $2",["60|8"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\d{3})(\\d)(\\d{5})","$1 $2 $3",["[479]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],AF:["93","00","[2-7]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],AG:["1","011","(?:268|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([457]\\d{6})$|1","268$1",0,"268"],AI:["1","011","(?:264|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2457]\\d{6})$|1","264$1",0,"264"],AL:["355","00","(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",[6,7,8,9],[["(\\d{3})(\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],AM:["374","00","(?:[1-489]\\d|55|60|77)\\d{6}",[8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\d{3})(\\d{5})","$1 $2",["2|3[12]"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[3-9]"],"0$1"]],"0"],AO:["244","00","[29]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[29]"]]]],AR:["54","00","(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",[10,11],[["(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\d)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\d{3})(\\d{3})(\\d{5})","$1-$2-$3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],AS:["1","011","(?:[58]\\d\\d|684|900)\\d{7}",[10],0,"1",0,"([267]\\d{6})$|1","684$1",0,"684"],AT:["43","00","1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\d)(\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\d{3})(\\d{2})","$1 $2",["517"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\d{3})(\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:48|5[0-3579]|[6-9])|7(?:20|32|8)|[89]","(?:31|4)6|51|6(?:485|5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\d{4})(\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],AU:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",[5,6,7,8,9,10,12],[["(\\d{2})(\\d{3,4})","$1 $2",["16"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["14|4"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"(183[12])|0",0,0,0,[["(?:(?:2(?:(?:[0-26-9]\\d|3[0-8]|5[0135-9])\\d|4(?:[02-9]\\d|10))|3(?:(?:[0-3589]\\d|6[1-9]|7[0-35-9])\\d|4(?:[0-578]\\d|90))|7(?:[013-57-9]\\d|2[0-8])\\d)\\d\\d|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4])|[34]\\d\\d)|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,["163\\d{2,6}",[5,6,7,8,9]],["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],AW:["297","00","(?:[25-79]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[25-9]"]]]],AX:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",[5,6,7,8,9,10,11,12],0,"0",0,0,0,0,"18",0,"00"],AZ:["994","00","365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[28]|2|365|46","1[28]|2|365[45]|46","1[28]|2|365(?:4|5[02])|46"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[13-9]"],"0$1"]],"0"],BA:["387","00","6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-3]|[7-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]|6[56]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],BB:["1","011","(?:246|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","246$1",0,"246"],BD:["880","00","[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{4,6})","$1-$2",["31[5-8]|[459]1"],"0$1"],["(\\d{3})(\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\d{4})(\\d{3,6})","$1-$2",["[13-9]|2[23]"],"0$1"],["(\\d)(\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],BE:["32","00","4\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],BF:["226","00","(?:[025-7]\\d|44)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[024-7]"]]]],BG:["359","00","00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",[6,7,8,9,12],[["(\\d)(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],BH:["973","00","[136-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[13679]|8[02-4679]"]]]],BI:["257","00","(?:[267]\\d|31)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2367]"]]]],BJ:["229","00","(?:01\\d|[24-689])\\d{7}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["0"]]]],BL:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|3[3-7]|5[12]|87)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],BM:["1","011","(?:441|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","441$1",0,"441"],BN:["673","00","[2-578]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-578]"]]]],BO:["591","00(?:1\\d)?","8001\\d{5}|(?:[2-467]\\d|50)\\d{6}",[8,9],[["(\\d)(\\d{7})","$1 $2",["[235]|4[46]"]],["(\\d{8})","$1",["[67]"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\d)?"],BQ:["599","00","(?:[34]1|7\\d)\\d{5}",[7],0,0,0,0,0,0,"[347]"],BR:["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","[1-467]\\d{9,10}|55[0-46-9]\\d{8}|[34]\\d{7}|55\\d{7,8}|(?:5[0-46-9]|[89]\\d)\\d{7,9}",[8,9,10,11],[["(\\d{4})(\\d{4})","$1-$2",["300|4(?:0[02]|37|86)","300|4(?:0(?:0|20)|370|864)"]],["(\\d{3})(\\d{2,3})(\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],"($1)"],["(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["[16][1-9]|[2-57-9]"],"($1)"]],"0",0,"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2"],BS:["1","011","(?:242|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([3-8]\\d{6})$|1","242$1",0,"242"],BT:["975","00","[178]\\d{7}|[2-8]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[2-6]|7[246]|8[2-4]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[67]|[78]"]]]],BW:["267","00","(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",[7,8,10],[["(\\d{2})(\\d{5})","$1 $2",["90"]],["(\\d{3})(\\d{4})","$1 $2",["[24-6]|3[15-9]"]],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37]"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["8"]]]],BY:["375","810","(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3})","$1 $2",["800"],"8 $1"],["(\\d{3})(\\d{2})(\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],BZ:["501","00","(?:0800\\d|[2-8])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],["(\\d)(\\d{3})(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]]],CA:["1","011","[2-9]\\d{9}|3\\d{6}",[7,10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|5[07]|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\d{6}",[10]],["",[10]],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",[10]],["900[2-9]\\d{6}",[10]],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\d{6}",[10]],0,["310\\d{4}",[7]],0,["600[2-9]\\d{6}",[10]]]],CC:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CD:["243","00","(?:(?:[189]|5\\d)\\d|2)\\d{7}|[1-68]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["5"],"0$1"]],"0"],CF:["236","00","(?:[27]\\d{3}|8776)\\d{4}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[278]"]]]],CG:["242","00","222\\d{6}|(?:0\\d|80)\\d{7}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]]]],CH:["41","00","8\\d{11}|[2-9]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],CI:["225","00","[02]\\d{9}",[10],[["(\\d{2})(\\d{2})(\\d)(\\d{5})","$1 $2 $3 $4",["2"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3 $4",["0"]]]],CK:["682","00","[2-578]\\d{4}",[5],[["(\\d{2})(\\d{3})","$1 $2",["[2-578]"]]]],CL:["56","(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0","12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",[9,10,11],[["(\\d{5})(\\d{4})","$1 $2",["219","2196"],"($1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["60|809"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["44"]],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[1-36]"],"($1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9(?:10|[2-9])"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-8]|[1-9])"],"($1)"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{3})(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"]]]],CM:["237","00","[26]\\d{8}|88\\d{6,7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["88"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]|88"]]]],CN:["86","00|1(?:[12]\\d|79)\\d\\d00","(?:(?:1[03-689]|2\\d)\\d\\d|6)\\d{8}|1\\d{10}|[126]\\d{6}(?:\\d(?:\\d{2})?)?|86\\d{5,6}|(?:[3-579]\\d|8[0-57-9])\\d{5,9}",[7,8,9,10,11,12],[["(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]","(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123"],"0$1"],["(\\d{3})(\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\d{3})(\\d{7,8})","$1 $2",["9"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"(1(?:[12]\\d|79)\\d\\d)|0",0,0,0,0,"00"],CO:["57","00(?:4(?:[14]4|56)|[579])","(?:46|60\\d\\d)\\d{6}|(?:1\\d|[39])\\d{9}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["46"]],["(\\d{3})(\\d{7})","$1 $2",["6|90"],"($1)"],["(\\d{3})(\\d{7})","$1 $2",["3[0-357]|9[14]"]],["(\\d)(\\d{3})(\\d{7})","$1-$2-$3",["1"],"0$1",0,"$1 $2 $3"]],"0",0,"0([3579]|4(?:[14]4|56))?"],CR:["506","00","(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",[8,10],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[3-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],CU:["53","119","(?:[2-7]|8\\d\\d)\\d{7}|[2-47]\\d{6}|[34]\\d{5}",[6,7,8,10],[["(\\d{2})(\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["[56]"],"0$1"],["(\\d{3})(\\d{7})","$1 $2",["8"],"0$1"]],"0"],CV:["238","0","(?:[2-59]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2-589]"]]]],CW:["599","00","(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[3467]"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],CX:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CY:["357","00","(?:[279]\\d|[58]0)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[257-9]"]]]],CZ:["420","00","(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",[9,10,11,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["96"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]]],DE:["49","00","[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\d{2})(\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\d{3})(\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["138"],"0$1"],["(\\d{5})(\\d{2,10})","$1 $2",["3"],"0$1"],["(\\d{3})(\\d{5,11})","$1 $2",["181"],"0$1"],["(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\d{3})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\d{3})(\\d{7,12})","$1 $2",["8"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["15[03568]","15(?:[0568]|3[13])"],"0$1"],["(\\d{3})(\\d{8})","$1 $2",["18"],"0$1"],["(\\d{3})(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\d{4})(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\d{3})(\\d{2})(\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],DJ:["253","00","(?:2\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[27]"]]]],DK:["45","00","[2-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],DM:["1","011","(?:[58]\\d\\d|767|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","767$1",0,"767"],DO:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,0,0,0,"8001|8[024]9"],DZ:["213","00","(?:[1-4]|[5-79]\\d|80)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],EC:["593","00","1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",[8,9,10,11],[["(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{3})(\\d{3,4})","$1 $2 $3",["1"]]],"0"],EE:["372","00","8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],["(\\d{4})(\\d{3,4})","$1 $2",["[45]|8(?:00|[1-49])","[45]|8(?:00[1-9]|[1-49])"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],EG:["20","00","[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",[8,9,10],[["(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{8})","$1 $2",["1"],"0$1"]],"0"],EH:["212","00","[5-8]\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],ER:["291","00","[178]\\d{6}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],ES:["34","00","[5-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],ET:["251","00","(?:11|[2-579]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-579]"],"0$1"]],"0"],FI:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",[5,6,7,8,9,10,11,12],[["(\\d{5})","$1",["20[2-59]"],"0$1"],["(\\d{3})(\\d{3,7})","$1 $2",["(?:[1-3]0|[68])0|70[07-9]"],"0$1"],["(\\d{2})(\\d{4,8})","$1 $2",["[14]|2[09]|50|7[135]"],"0$1"],["(\\d{2})(\\d{6,10})","$1 $2",["7"],"0$1"],["(\\d)(\\d{4,9})","$1 $2",["(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],FJ:["679","0(?:0|52)","45\\d{5}|(?:0800\\d|[235-9])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1 $2",["[235-9]|45"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],FK:["500","00","[2-7]\\d{4}",[5]],FM:["691","00","(?:[39]\\d\\d|820)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[389]"]]]],FO:["298","00","[2-9]\\d{5}",[6],[["(\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],FR:["33","00","[1-9]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],GA:["241","00","(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",[7,8],[["(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["11|[67]"],"0$1"]],0,0,"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})","$1"],GB:["44","00","[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",[7,9,10],[["(\\d{3})(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["800"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[25]|7(?:0|6[02-9])","[25]|7(?:0|6(?:[03-9]|2[356]))"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,"0|180020",0,0,0,[["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0-35])|4(?:(?:[0-5]\\d|70)\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-3]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]],0," x"],GD:["1","011","(?:473|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","473$1",0,"473"],GE:["995","00","(?:[3-57]\\d\\d|800)\\d{6}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],GF:["594","00","(?:[56]94\\d|7093)\\d{5}|(?:80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]|9[47]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[89]"],"0$1"]],"0"],GG:["44","00","(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",[7,9,10],0,"0",0,"([25-9]\\d{5})$|0|180020","1481$1",0,0,[["1481[25-9]\\d{5}",[10]],["7(?:(?:781|839)\\d|911[17])\\d{5}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]]],GH:["233","00","(?:[235]\\d{3}|800)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],GI:["350","00","(?:[25]\\d|60)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["2"]]]],GL:["299","00","(?:19|[2-689]\\d|70)\\d{4}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["19|[2-9]"]]]],GM:["220","00","[2-9]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],GN:["224","00","722\\d{6}|(?:3|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]]],GP:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-79]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],GQ:["240","00","222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],["(\\d{3})(\\d{6})","$1 $2",["[89]"]]]],GR:["30","00","5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",[10,11,12],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],["(\\d{4})(\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2689]"]],["(\\d{3})(\\d{3,4})(\\d{5})","$1 $2 $3",["8"]]]],GT:["502","00","80\\d{6}|(?:1\\d{3}|[2-7])\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1 $2",["[2-8]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],GU:["1","011","(?:[58]\\d\\d|671|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","671$1",0,"671"],GW:["245","00","[49]\\d{8}|4\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["40"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"]]]],GY:["592","001","(?:[2-8]\\d{3}|9008)\\d{3}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],HK:["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",[5,6,7,8,9,11],[["(\\d{3})(\\d{2,5})","$1 $2",["900","9003"]],["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{3})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],HN:["504","00","8\\d{10}|[237-9]\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1-$2",["[237-9]"]]]],HR:["385","00","[2-69]\\d{8}|80\\d{5,7}|[1-79]\\d{7}|6\\d{6}",[7,8,9],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["6[01]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6|7[245]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-57]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],HT:["509","00","[2-589]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[2-589]"]]]],HU:["36","00","[235-7]\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"06 $1"]],"06"],ID:["62","00[89]","00[1-9]\\d{9,14}|(?:[1-36]|8\\d{5})\\d{6}|00\\d{9}|[1-9]\\d{8,10}|[2-9]\\d{7}",[7,8,9,10,11,12,13,14,15,16,17],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["15"]],["(\\d{2})(\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\d{3})(\\d{5,7})","$1 $2",["800"],"0$1"],["(\\d{3})(\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\d{3})(\\d{3,4})(\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\d{3})(\\d{6,8})","$1 $2",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\d{3})(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],IE:["353","00","(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\d{3})(\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["4"],"(0$1)"],["(\\d{2})(\\d)(\\d{3})(\\d{4})","$1 $2 $3 $4",["8"],"0$1"]],"0"],IL:["972","0(?:0|1[2-9])","1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",[7,8,9,10,11,12],[["(\\d{4})(\\d{3})","$1-$2",["125"]],["(\\d{4})(\\d{2})(\\d{2})","$1-$2-$3",["121"]],["(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1-$2-$3",["12"]],["(\\d{4})(\\d{6})","$1-$2",["159"]],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})","$1-$2 $3-$4",["15"]]],"0"],IM:["44","00","1624\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([25-8]\\d{5})$|0|180020","1624$1",0,"74576|(?:16|7[56])24"],IN:["91","00","(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",[8,9,10,11,12,13],[["(\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\d{4})(\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["140"],0,1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"],"0$1",1],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\d{5})(\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\d{4})(\\d{2,4})(\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],IO:["246","00","3\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["3"]]]],IQ:["964","00","(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],IR:["98","00","[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",[4,5,6,7,10],[["(\\d{4,5})","$1",["96"],"0$1"],["(\\d{2})(\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],IS:["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\d|[4-9])\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],IT:["39","00","0\\d{5,11}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:43|55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",[6,7,8,9,10,11,12],[["(\\d{2})(\\d{4,6})","$1 $2",["0[26]"]],["(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],["(\\d{4})(\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\d{4})(\\d{4})","$1 $2",["894"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["1(?:44|[679])|[378]|43"]],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]|14"]],["(\\d{2})(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[03]"]]],0,0,0,0,0,0,[["0(?:669[0-79]\\d{1,6}|831\\d{2,8})|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[2356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],["3[2-9]\\d{7,8}|(?:31|43)\\d{8}",[9,10]],["80(?:0\\d{3}|3)\\d{3}",[6,9]],["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",[6,8,9,10]],["1(?:78\\d|99)\\d{6}",[9,10]],["3[2-8]\\d{9,10}",[11,12]],0,0,["55\\d{8}",[10]],["84(?:[08]\\d{3}|[17])\\d{3}",[6,9]]]],JE:["44","00","1534\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([0-24-8]\\d{5})$|0|180020","1534$1",0,0,[["1534[0-24-8]\\d{5}"],["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97\\d))\\d{5}"],["80(?:07(?:35|81)|8901)\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],["701511\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],["56\\d{8}"]]],JM:["1","011","(?:[58]\\d\\d|658|900)\\d{7}",[10],0,"1",0,0,0,0,"658|876"],JO:["962","00","(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\d{3})(\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["70"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],JP:["81","010","00[1-9]\\d{6,14}|[25-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["3|4(?:2[09]|7[01])|6[1-9]","3|4(?:2(?:0|9[02-69])|7(?:0[019]|1))|6[1-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["[14]|[289][2-9]|5[3-9]|7[2-4679]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[25-9]"],"0$1"]],"0",0,"(000[2569]\\d{4,6})$|(?:(?:003768)0?)|0","$1"],KE:["254","000","(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",[7,8,9,10],[["(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[17]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],KG:["996","00","8\\d{9}|[235-9]\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-79]|88"],"0$1"],["(\\d{3})(\\d{3})(\\d)(\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],KH:["855","00[14-9]","1\\d{9}|[1-9]\\d{7,8}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],KI:["686","00","(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",[5,8],0,"0"],KM:["269","00","[3478]\\d{6}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[3478]"]]]],KN:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","869$1",0,"869"],KP:["850","00|99","85\\d{6}|(?:19\\d|[2-7])\\d{7}",[8,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],KR:["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\d{2})(\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\d{4})(\\d{4})","$1-$2",["1"]],["(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[36]0|8"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{2})(\\d{5})(\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\d\\d))?"],KW:["965","00","18\\d{5}|(?:[2569]\\d|41)\\d{6}",[7,8],[["(\\d{4})(\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\d{3})(\\d{5})","$1 $2",["[245]"]]]],KY:["1","011","(?:345|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","345$1",0,"345"],KZ:["7","810","(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",[10,14],0,"8",0,0,0,0,"33622|7",0,"8~10"],LA:["856","00","[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["3"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[23]"],"0$1"]],"0"],LB:["961","00","[27-9]\\d{7}|[13-9]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-6]|9[04-9])|8[02-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27-9]"]]],"0"],LC:["1","011","(?:[58]\\d\\d|758|900)\\d{7}",[10],0,"1",0,"([2-8]\\d{6})$|1","758$1",0,"758"],LI:["423","00","[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",[7,9],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2379]|8(?:0[09]|7)","[2379]|8(?:0(?:02|9)|7)"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["69"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]],"0",0,"(1001)|0"],LK:["94","00","[1-9]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],LR:["231","00","(?:[2457]\\d|33|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["4[67]|[56]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-578]"],"0$1"]],"0"],LS:["266","00","(?:[256]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2568]"]]]],LT:["370","00","(?:[3469]\\d|52|[78]0)\\d{6}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["52[0-7]"],"(0-$1)",1],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"0 $1",1],["(\\d{2})(\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(0-$1)",1],["(\\d{3})(\\d{5})","$1 $2",["[3-6]"],"(0-$1)",1]],"0",0,"[08]"],LU:["352","00","35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\d{2})(\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"],LV:["371","00","(?:[268]\\d|78|90)\\d{6}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2679]|8[01]"]]]],LY:["218","00","[2-9]\\d{8}",[9],[["(\\d{2})(\\d{7})","$1-$2",["[2-9]"],"0$1"]],"0"],MA:["212","00","[5-8]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\d{4})(\\d{5})","$1-$2",["5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)"],"0$1"],["(\\d{2})(\\d{7})","$1-$2",["8"],"0$1"],["(\\d{3})(\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5(?:2(?:[0-25-79]\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[0167]\\d|2[0-8]|5[0-5]|8[0-7]))\\d{6}"],["80[0-7]\\d{6}"],["89\\d{7}"],0,0,0,0,["(?:592(?:4[0-2]|93)|80[89]\\d\\d)\\d{4}"]]],MC:["377","00","(?:[3489]|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[389]"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],MD:["373","00","(?:[235-7]\\d|[89]0)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],ME:["382","00","(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],MF:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],MG:["261","00","[23]\\d{8}",[9],[["(\\d{2})(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"([24-9]\\d{6})$|0","20$1"],MH:["692","011","329\\d{4}|(?:[256]\\d|45)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1-$2",["[2-6]"]]],"1"],MK:["389","00","[2-578]\\d{7}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2|34[47]|4(?:[37]7|5[47]|64)"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],ML:["223","00","[24-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],MM:["95","00","1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",[6,7,8,9,10],[["(\\d)(\\d{2})(\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|452|678|86","[12]|452|6788|86"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\d)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\d)(\\d{5})(\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],MN:["976","001","[12]\\d{7,9}|[5-9]\\d{7}",[8,9,10],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[5-9]"]],["(\\d{3})(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],MO:["853","00","0800\\d{3}|(?:28|[68]\\d)\\d{6}",[7,8],[["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{4})(\\d{4})","$1 $2",["[268]"]]]],MP:["1","011","[58]\\d{9}|(?:67|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","670$1",0,"670"],MQ:["596","00","(?:596\\d|7091)\\d{5}|(?:69|[89]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-79]|8(?:0[6-9]|[36])"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],MR:["222","00","(?:[2-4]\\d\\d|800)\\d{5}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],MS:["1","011","(?:[58]\\d\\d|664|900)\\d{7}",[10],0,"1",0,"([34]\\d{6})$|1","664$1",0,"664"],MT:["356","00","3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2357-9]"]]]],MU:["230","0(?:0|[24-7]0|3[03])","(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\d{4})(\\d{4})","$1 $2",["[57]"]],["(\\d{5})(\\d{5})","$1 $2",["8"]]],0,0,0,0,0,0,0,"020"],MV:["960","0(?:0|19)","(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",[7,10],[["(\\d{3})(\\d{4})","$1-$2",["[34679]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],MW:["265","00","(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",[7,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[137-9]"],"0$1"]],"0"],MX:["52","0[09]","[2-9]\\d{9}",[10],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["33|5[56]|81"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2-9]"]]],0,0,0,0,0,0,0,"00"],MY:["60","00","1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1-$2 $3",["1(?:[02469]|[378][1-9]|53)|8","1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3-$4",["1(?:[367]|80)"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],MZ:["258","00","(?:2|8\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2|8[2-79]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],NA:["264","00","[68]\\d{7,8}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],NC:["687","00","(?:050|[2-57-9]\\d\\d)\\d{3}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[02-57-9]"]]]],NE:["227","00","[027-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["08"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[089]|2[013]|7[0467]"]]]],NF:["672","00","[13]\\d{5}",[6],[["(\\d{2})(\\d{4})","$1 $2",["1[0-3]"]],["(\\d)(\\d{5})","$1 $2",["[13]"]]],0,0,"([0-258]\\d{4})$","3$1"],NG:["234","009","(?:20|9\\d)\\d{8}|[78]\\d{9,13}",[10,11,12,13,14],[["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["20[129]"],"0$1"],["(\\d{4})(\\d{2})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\d{3})(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],NI:["505","00","(?:1800|[25-8]\\d{3})\\d{4}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[125-8]"]]]],NL:["31","00","(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",[5,6,7,8,9,10,11],[["(\\d{3})(\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["66"],"0$1"],["(\\d)(\\d{8})","$1 $2",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-578]|91"],"0$1"],["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3",["9"],"0$1"]],"0"],NO:["47","00","(?:0|[2-9]\\d{3})\\d{4}",[5,8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],NP:["977","00","(?:1\\d|9)\\d{9}|[1-9]\\d{7}",[8,10,11],[["(\\d)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],"0$1"],["(\\d{3})(\\d{7})","$1-$2",["9"]]],"0"],NR:["674","00","(?:222|444|(?:55|8\\d)\\d|666|777|999)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[24-9]"]]]],NU:["683","00","(?:[4-7]|888\\d)\\d{3}",[4,7],[["(\\d{3})(\\d{4})","$1 $2",["8"]]]],NZ:["64","0(?:0|161)","[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,8})","$1 $2",["8[1-79]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["50[036-8]|8|90","50(?:[0367]|88)|8|90"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|[589]"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["1|2[028]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7"],"0$1"]],"0",0,0,0,0,0,0,"00"],OM:["968","00","(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",[7,8,9],[["(\\d{3})(\\d{4,6})","$1 $2",["[58]"]],["(\\d{2})(\\d{6})","$1 $2",["2"]],["(\\d{4})(\\d{4})","$1 $2",["[179]"]]]],PA:["507","00","(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",[7,8,10,11],[["(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],["(\\d{4})(\\d{4})","$1-$2",["[68]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]]],PE:["51","00|19(?:1[124]|77|90)00","(?:[14-8]|9\\d)\\d{7}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["1"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,"00"," Anexo "],PF:["689","00","4\\d{5}(?:\\d{2})?|8\\d{7,8}",[6,8,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4|8[7-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],PG:["675","00|140[1-3]","(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\d{4})(\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],PH:["63","00","(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",[6,8,9,10,11,12,13],[["(\\d)(\\d{5})","$1 $2",["2"],"(0$1)"],["(\\d{4})(\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1"]]],"0"],PK:["92","00","122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,7})","$1 $2 $3",["[89]0"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["1"]],["(\\d{3})(\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\d{5})(\\d{5})","$1 $2",["58"],"(0$1)"],["(\\d{3})(\\d{7})","$1 $2",["3"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],PL:["48","00","(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",[6,7,8,9,10],[["(\\d{5})","$1",["19"]],["(\\d{3})(\\d{3})","$1 $2",["11|20|64"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-7]|8[1-79]|9[145]"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["8"]]]],PM:["508","00","[45]\\d{5}|(?:708|8\\d\\d)\\d{6}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[45]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],PR:["1","011","(?:[589]\\d\\d|787)\\d{7}",[10],0,"1",0,0,0,0,"787|939"],PS:["970","00","[2489]2\\d{6}|(?:1\\d|5)\\d{8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],PT:["351","00","1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["16|[236-9]"]]]],PW:["680","01[12]","(?:[24-8]\\d\\d|345|900)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],PY:["595","00","59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\d{3})(\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["87"]],["(\\d{3})(\\d{6})","$1 $2",["9(?:[5-79]|8[1-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],"0"],QA:["974","00","800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",[7,8,9,11],[["(\\d{3})(\\d{4})","$1 $2",["2[136]|8"]],["(\\d{4})(\\d{4})","$1 $2",["[3-7]"]]]],RE:["262","00","709\\d{6}|(?:26|[689]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[26-9]"],"0$1"]],"0",0,0,0,0,0,[["26(?:2\\d\\d|3(?:0\\d|1[0-6]))\\d{4}"],["(?:69(?:2\\d\\d|3(?:[06][0-6]|1[0-3]|2[0-2]|3[0-39]|4\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\d{4}"],["80\\d{7}"],["89[1-37-9]\\d{6}"],0,0,0,0,["9(?:399[0-3]|479[0-6]|76(?:2[278]|3[0-37]))\\d{4}"],["8(?:1[019]|2[0156]|84|90)\\d{6}"]]],RO:["40","00","(?:[236-8]\\d|90)\\d{7}|[23]\\d{5}",[6,9],[["(\\d{3})(\\d{3})","$1 $2",["2[3-6]","2[3-6]\\d9"],"0$1"],["(\\d{2})(\\d{4})","$1 $2",["219|31"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[236-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],RS:["381","00","38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",[6,7,8,9,10,11,12],[["(\\d{3})(\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\d{2})(\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],RU:["7","810","8\\d{13}|[347-9]\\d{9}",[10,14],[["(\\d{4})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\d{5})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[349]|8(?:[02-7]|1[1-8])"],"8 ($1)",1],["(\\d{4})(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["8"],"8 ($1)"]],"8",0,0,0,0,0,[["336(?:[013-9]\\d|2[013-9])\\d{5}|(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15-7]|6[0-35-79]|7[1-37-9]))\\d{7}",[10]],["9\\d{9}",[10]],["8(?:0[04]|108\\d{3})\\d{7}"],["80[39]\\d{7}",[10]],["808\\d{7}",[10]]],"8~10"],RW:["250","00","(?:06|[27]\\d\\d|[89]00)\\d{6}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"]],"0"],SA:["966","00","(?:[15]\\d|800|92)\\d{7}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["9"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]],"0"],SB:["677","0[01]","[6-9]\\d{6}|[1-6]\\d{4}",[5,7],[["(\\d{2})(\\d{5})","$1 $2",["6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],SC:["248","010|0[0-2]","(?:[2489]\\d|64)\\d{5}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]|9[57]"]]],0,0,0,0,0,0,0,"00"],SD:["249","00","[19]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],SE:["46","00","(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",[6,7,8,9,10,12],[["(\\d{2})(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{4})","$1-$2",["9(?:00|39|44|9)"],"0$1",0,"$1 $2"],["(\\d{2})(\\d{3})(\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{2,3})(\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["10|7"],"0$1",0,"$1 $2 $3 $4"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],SG:["65","0[0-3]\\d","(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["[369]|8(?:0[1-9]|[1-9])"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]],["(\\d{4})(\\d{4})(\\d{3})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],SH:["290","00","(?:[256]\\d|8)\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],SI:["386","00|10(?:22|66|88|99)","[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",[5,6,7,8],[["(\\d{2})(\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["59|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],SJ:["47","00","0\\d{4}|(?:[489]\\d|79)\\d{6}",[5,8],0,0,0,0,0,0,"79"],SK:["421","00","[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",[6,7,9],[["(\\d)(\\d{2})(\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],SL:["232","00","(?:[237-9]\\d|66)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[236-9]"],"(0$1)"]],"0"],SM:["378","00","(?:0549|[5-7]\\d)\\d{6}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\d{4})(\\d{6})","$1 $2",["0"]]],0,0,"([89]\\d{5})$","0549$1"],SN:["221","00","(?:[378]\\d|93)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]]]],SO:["252","00","[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",[6,7,8,9],[["(\\d{2})(\\d{4})","$1 $2",["8[125]"]],["(\\d{6})","$1",["[134]"]],["(\\d)(\\d{6})","$1 $2",["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],["(\\d)(\\d{7})","$1 $2",["(?:2|90)4|[67]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[348]|64|79|90"]],["(\\d{2})(\\d{5,7})","$1 $2",["1|28|6[0-35-9]|7[67]|9[2-9]"]]],"0"],SR:["597","00","(?:[2-5]|[6-8]\\d|90)\\d{5}",[6,7],[["(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],["(\\d{3})(\\d{3})","$1-$2",["[2-5]"]],["(\\d{3})(\\d{4})","$1-$2",["[6-9]"]]]],SS:["211","00","[19]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],ST:["239","00","(?:22|9\\d)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[29]"]]]],SV:["503","00","[267]\\d{7}|(?:80\\d|900)\\d{4}(?:\\d{4})?",[7,8,11],[["(\\d{3})(\\d{4})","$1 $2",["[89]"]],["(\\d{4})(\\d{4})","$1 $2",["[267]"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]]],SX:["1","011","7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"(5\\d{6})$|1","721$1",0,"721"],SY:["963","00","[1-359]\\d{8}|[1-5]\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-4]|5[1-3]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[59]"],"0$1",1]],"0"],SZ:["268","00","0800\\d{4}|(?:[237]\\d|900)\\d{6}",[8,9],[["(\\d{4})(\\d{4})","$1 $2",["[0237]"]],["(\\d{5})(\\d{4})","$1 $2",["9"]]]],TA:["290","00","8\\d{3}",[4],0,0,0,0,0,0,"8"],TC:["1","011","(?:[58]\\d\\d|649|900)\\d{7}",[10],0,"1",0,"([2-479]\\d{6})$|1","649$1",0,"649"],TD:["235","00|16","(?:22|30|[689]\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[236-9]"]]],0,0,0,0,0,0,0,"00"],TG:["228","00","[279]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[279]"]]]],TH:["66","00[1-9]","(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",[8,9,10,13],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],TJ:["992","810","[0-57-9]\\d{8}",[9],[["(\\d{6})(\\d)(\\d{2})","$1 $2 $3",["331","3317"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["44[02-479]|[34]7"]],["(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3(?:[1245]|3[12])"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[0-57-9]"]]],0,0,0,0,0,0,0,"8~10"],TK:["690","00","[2-47]\\d{3,6}",[4,5,6,7]],TL:["670","00","7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[2-489]|70"]],["(\\d{4})(\\d{4})","$1 $2",["7"]]]],TM:["993","810","(?:[1-6]\\d|71)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\d{2})(\\d{6})","$1 $2",["[67]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],TN:["216","00","[2-57-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]"]]]],TO:["676","00","(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",[5,7],[["(\\d{2})(\\d{3})","$1-$2",["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[5-9]"]]]],TR:["90","00","4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",[7,10,12,13],[["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["512|8[01589]|90"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|61[06])","5(?:[0-59]|61[06]1)"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1],["(\\d{3})(\\d{3})(\\d{6,7})","$1 $2 $3",["80"],"0$1",1]],"0"],TT:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-46-8]\\d{6})$|1","868$1",0,"868"],TV:["688","00","(?:2|7\\d\\d|90)\\d{4}",[5,6,7],[["(\\d{2})(\\d{3})","$1 $2",["2"]],["(\\d{2})(\\d{4})","$1 $2",["90"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],TW:["886","0(?:0[25-79]|19)","[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",[7,8,9,10,11],[["(\\d{2})(\\d)(\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[258]0"],"0$1"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]","[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,5})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],TZ:["255","00[056]","(?:[25-8]\\d|41|90)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["5"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],UA:["380","00","[89]\\d{9}|[3-9]\\d{8}",[9,10],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])","3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|89|9[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],UG:["256","00[057]","800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",[9],[["(\\d{4})(\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],US:["1","011","[2-9]\\d{9}|3\\d{6}",[10],[["(\\d{3})(\\d{4})","$1-$2",["310"],0,1],["(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["(?:3052(?:0[0-8]|[1-9]\\d)|5056(?:[0-35-9]\\d|4[0-68]))\\d{4}|(?:2742|305[3-9]|(?:472|983)[2-47-9]|505[2-57-9])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-269])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[0-247]|4[0378]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[0168]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],["900[2-9]\\d{6}"],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],0,0,0,["305209\\d{4}"]]],UY:["598","0(?:0|1[3-9]\\d)","0004\\d{2,9}|[1249]\\d{7}|2\\d{3,4}|(?:[49]\\d|80)\\d{5}",[4,5,6,7,8,9,10,11,12,13],[["(\\d{4,5})","$1",["21"]],["(\\d{3})(\\d{3,4})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[49]0|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[124]"]],["(\\d{3})(\\d{3})(\\d{2,4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{2,4})","$1 $2 $3 $4",["0"]]],"0",0,0,0,0,0,0,"00"," int. "],UZ:["998","00","(?:20|33|[5-9]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[235-9]"]]]],VA:["39","00","0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",[6,7,8,9,10,11,12],0,0,0,0,0,0,"06698"],VC:["1","011","(?:[58]\\d\\d|784|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","784$1",0,"784"],VE:["58","00","[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",[10],[["(\\d{3})(\\d{7})","$1-$2",["[24-689]"],"0$1"]],"0"],VG:["1","011","(?:284|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-578]\\d{6})$|1","284$1",0,"284"],VI:["1","011","[58]\\d{9}|(?:34|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","340$1",0,"340"],VN:["84","00","[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["80"],"0$1",1],["(\\d{4})(\\d{4,6})","$1 $2",["1"],0,1],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["6"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[357-9]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],VU:["678","00","[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",[5,7],[["(\\d{3})(\\d{4})","$1 $2",["[57-9]"]]]],WF:["681","00","(?:40|72|8\\d{4})\\d{4}|[89]\\d{5}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[47-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],WS:["685","0","(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",[5,6,7,10],[["(\\d{5})","$1",["[2-5]|6[1-9]"]],["(\\d{3})(\\d{3,7})","$1 $2",["[68]"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],XK:["383","00","2\\d{7,8}|3\\d{7,11}|(?:4\\d\\d|[89]00)\\d{5}",[8,9,10,11,12],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2|39"],"0$1"],["(\\d{2})(\\d{7,10})","$1 $2",["3"],"0$1"]],"0"],YE:["967","00","(?:1|7\\d)\\d{7}|[1-7]\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7(?:[24-6]|8[0-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],YT:["262","00","7093\\d{5}|(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}",[9],0,"0",0,0,0,0,0,[["269(?:0[0-467]|15|5[0-4]|6\\d|[78]0)\\d{4}"],["(?:639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\d{4}"],["80\\d{7}"],0,0,0,0,0,["9(?:(?:39|47)8[01]|769\\d)\\d{4}"]]],ZA:["27","00","[1-79]\\d{8}|8\\d{4,9}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],ZM:["260","00","800\\d{6}|(?:21|[579]\\d|63)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[579]"],"0$1"]],"0"],ZW:["263","00","2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",[5,6,7,8,9,10],[["(\\d{3})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\d)(\\d{3})(\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["80"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\d{4})(\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"]},nonGeographic:{800:["800",0,"(?:00|[1-9]\\d)\\d{6}",[8],[["(\\d{4})(\\d{4})","$1 $2",["\\d"]]],0,0,0,0,0,0,[0,0,["(?:00|[1-9]\\d)\\d{6}"]]],808:["808",0,"[1-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[1-9]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,["[1-9]\\d{7}"]]],870:["870",0,"7\\d{11}|[235-7]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-7]"]]],0,0,0,0,0,0,[0,["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"],0,0,0,0,0,0,["2\\d{8}",[9]]]],878:["878",0,"10\\d{10}",[12],[["(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3",["1"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["10\\d{10}"]]],881:["881",0,"6\\d{9}|[0-36-9]\\d{8}",[9,10],[["(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[0-37-9]"]],["(\\d)(\\d{3})(\\d{5,6})","$1 $2 $3",["6"]]],0,0,0,0,0,0,[0,["6\\d{9}|[0-36-9]\\d{8}"]]],882:["882",0,"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",[7,8,9,10,11,12],[["(\\d{2})(\\d{5})","$1 $2",["16|342"]],["(\\d{2})(\\d{6})","$1 $2",["49"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1[36]|9"]],["(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|23|3(?:[15]|4[57])|4|51"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["34"]],["(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["[1-35]"]]],0,0,0,0,0,0,[0,["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",[7,8,9,10,12]],0,0,0,["348[57]\\d{7}",[11]],0,0,["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]],883:["883",0,"(?:[1-4]\\d|51)\\d{6,10}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,8})","$1 $2 $3",["[14]|2[24-689]|3[02-689]|51[24-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["21"]],["(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[235]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]],888:["888",0,"\\d{11}",[11],[["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3"]],0,0,0,0,0,0,[0,0,0,0,0,0,["\\d{11}"]]],979:["979",0,"[1359]\\d{8}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[1359]"]]],0,0,0,0,0,0,[0,0,0,["[1359]\\d{8}"]]]}};function c(a,b){a=a.split("-"),b=b.split("-");for(var c=a[0].split("."),d=b[0].split("."),e=0;e<3;e++){var f=Number(c[e]),g=Number(d[e]);if(f>g)return 1;if(g>f)return -1;if(!isNaN(f)&&isNaN(g))return 1;if(isNaN(f)&&!isNaN(g))return -1}return a[1]&&b[1]?a[1]>b[1]?1:a[1]<b[1]?-1:0:!a[1]&&b[1]?1:a[1]&&!b[1]?-1:0}var d={}.constructor;function e(a){return null!=a&&a.constructor===d}function f(a){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function g(a,b){if(!(a instanceof b))throw TypeError("Cannot call a class as a function")}function h(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=f(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=f(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==f(b)?b:b+""}(d.key),d)}}function i(a,b,c){return b&&h(a.prototype,b),c&&h(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}var j=" ext. ",k=/^\d+$/,l=i(function a(b){g(this,a),r(b),this.metadata=b,u.call(this,b)},[{key:"getCountries",value:function(){return Object.keys(this.metadata.countries).filter(function(a){return"001"!==a})}},{key:"getCountryMetadata",value:function(a){return this.metadata.countries[a]}},{key:"nonGeographic",value:function(){if(!this.v1&&!this.v2&&!this.v3)return this.metadata.nonGeographic||this.metadata.nonGeographical}},{key:"hasCountry",value:function(a){return void 0!==this.getCountryMetadata(a)}},{key:"hasCallingCode",value:function(a){if(this.getCountryCodesForCallingCode(a))return!0;if(this.nonGeographic()){if(this.nonGeographic()[a])return!0}else{var b=this.countryCallingCodes()[a];if(b&&1===b.length&&"001"===b[0])return!0}}},{key:"isNonGeographicCallingCode",value:function(a){return this.nonGeographic()?!!this.nonGeographic()[a]:!this.getCountryCodesForCallingCode(a)}},{key:"country",value:function(a){return this.selectNumberingPlan(a)}},{key:"selectNumberingPlan",value:function(a,b){if(a&&k.test(a)&&(b=a,a=null),a&&"001"!==a){if(!this.hasCountry(a))throw Error("Unknown country: ".concat(a));this.numberingPlan=new m(this.getCountryMetadata(a),this)}else if(b){if(!this.hasCallingCode(b))throw Error("Unknown calling code: ".concat(b));this.numberingPlan=new m(this.getNumberingPlanMetadata(b),this)}else this.numberingPlan=void 0;return this}},{key:"getCountryCodesForCallingCode",value:function(a){var b=this.countryCallingCodes()[a];if(b){if(1===b.length&&3===b[0].length)return;return b}}},{key:"getCountryCodeForCallingCode",value:function(a){var b=this.getCountryCodesForCallingCode(a);if(b)return b[0]}},{key:"getNumberingPlanMetadata",value:function(a){var b=this.getCountryCodeForCallingCode(a);if(b)return this.getCountryMetadata(b);if(this.nonGeographic()){var c=this.nonGeographic()[a];if(c)return c}else{var d=this.countryCallingCodes()[a];if(d&&1===d.length&&"001"===d[0])return this.metadata.countries["001"]}}},{key:"countryCallingCode",value:function(){return this.numberingPlan.callingCode()}},{key:"IDDPrefix",value:function(){return this.numberingPlan.IDDPrefix()}},{key:"defaultIDDPrefix",value:function(){return this.numberingPlan.defaultIDDPrefix()}},{key:"nationalNumberPattern",value:function(){return this.numberingPlan.nationalNumberPattern()}},{key:"possibleLengths",value:function(){return this.numberingPlan.possibleLengths()}},{key:"formats",value:function(){return this.numberingPlan.formats()}},{key:"nationalPrefixForParsing",value:function(){return this.numberingPlan.nationalPrefixForParsing()}},{key:"nationalPrefixTransformRule",value:function(){return this.numberingPlan.nationalPrefixTransformRule()}},{key:"leadingDigits",value:function(){return this.numberingPlan.leadingDigits()}},{key:"hasTypes",value:function(){return this.numberingPlan.hasTypes()}},{key:"type",value:function(a){return this.numberingPlan.type(a)}},{key:"ext",value:function(){return this.numberingPlan.ext()}},{key:"countryCallingCodes",value:function(){return this.v1?this.metadata.country_phone_code_to_countries:this.metadata.country_calling_codes}},{key:"chooseCountryByCountryCallingCode",value:function(a){return this.selectNumberingPlan(a)}},{key:"hasSelectedNumberingPlan",value:function(){return void 0!==this.numberingPlan}}]),m=i(function a(b,c){g(this,a),this.globalMetadataObject=c,this.metadata=b,u.call(this,c.metadata)},[{key:"callingCode",value:function(){return this.metadata[0]}},{key:"getDefaultCountryMetadataForRegion",value:function(){return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())}},{key:"IDDPrefix",value:function(){if(!this.v1&&!this.v2)return this.metadata[1]}},{key:"defaultIDDPrefix",value:function(){if(!this.v1&&!this.v2)return this.metadata[12]}},{key:"nationalNumberPattern",value:function(){return this.v1||this.v2?this.metadata[1]:this.metadata[2]}},{key:"possibleLengths",value:function(){if(!this.v1)return this.metadata[this.v2?2:3]}},{key:"_getFormats",value:function(a){return a[this.v1?2:this.v2?3:4]}},{key:"formats",value:function(){var a=this;return(this._getFormats(this.metadata)||this._getFormats(this.getDefaultCountryMetadataForRegion())||[]).map(function(b){return new n(b,a)})}},{key:"nationalPrefix",value:function(){return this.metadata[this.v1?3:this.v2?4:5]}},{key:"_getNationalPrefixFormattingRule",value:function(a){return a[this.v1?4:this.v2?5:6]}},{key:"nationalPrefixFormattingRule",value:function(){return this._getNationalPrefixFormattingRule(this.metadata)||this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())}},{key:"_nationalPrefixForParsing",value:function(){return this.metadata[this.v1?5:this.v2?6:7]}},{key:"nationalPrefixForParsing",value:function(){return this._nationalPrefixForParsing()||this.nationalPrefix()}},{key:"nationalPrefixTransformRule",value:function(){return this.metadata[this.v1?6:this.v2?7:8]}},{key:"_getNationalPrefixIsOptionalWhenFormatting",value:function(){return!!this.metadata[this.v1?7:this.v2?8:9]}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata)||this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())}},{key:"leadingDigits",value:function(){return this.metadata[this.v1?8:this.v2?9:10]}},{key:"types",value:function(){return this.metadata[this.v1?9:this.v2?10:11]}},{key:"hasTypes",value:function(){return(!this.types()||0!==this.types().length)&&!!this.types()}},{key:"type",value:function(a){if(this.hasTypes()&&q(this.types(),a))return new p(q(this.types(),a),this)}},{key:"ext",value:function(){return this.v1||this.v2?j:this.metadata[13]||j}}]),n=i(function a(b,c){g(this,a),this._format=b,this.metadata=c},[{key:"pattern",value:function(){return this._format[0]}},{key:"format",value:function(){return this._format[1]}},{key:"leadingDigitsPatterns",value:function(){return this._format[2]||[]}},{key:"nationalPrefixFormattingRule",value:function(){return this._format[3]||this.metadata.nationalPrefixFormattingRule()}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return!!this._format[4]||this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"nationalPrefixIsMandatoryWhenFormattingInNationalFormat",value:function(){return this.usesNationalPrefix()&&!this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"usesNationalPrefix",value:function(){return!(!this.nationalPrefixFormattingRule()||o.test(this.nationalPrefixFormattingRule()))}},{key:"internationalFormat",value:function(){return this._format[5]||this.format()}}]),o=/^\(?\$1\)?$/,p=i(function a(b,c){g(this,a),this.type=b,this.metadata=c},[{key:"pattern",value:function(){return this.metadata.v1?this.type:this.type[0]}},{key:"possibleLengths",value:function(){if(!this.metadata.v1)return this.type[1]||this.metadata.possibleLengths()}}]);function q(a,b){switch(b){case"FIXED_LINE":return a[0];case"MOBILE":return a[1];case"TOLL_FREE":return a[2];case"PREMIUM_RATE":return a[3];case"PERSONAL_NUMBER":return a[4];case"VOICEMAIL":return a[5];case"UAN":return a[6];case"PAGER":return a[7];case"VOIP":return a[8];case"SHARED_COST":return a[9]}}function r(a){if(!a)throw Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");if(!e(a)||!e(a.countries))throw Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(e(a)?"an object of shape: { "+Object.keys(a).join(", ")+" }":"a "+s(a)+": "+a,"."))}var s=function(a){return f(a)};function t(a,b){if((b=new l(b)).hasCountry(a))return b.country(a).countryCallingCode();throw Error("Unknown country: ".concat(a))}function u(a){var b=a.version;"number"==typeof b?(this.v1=1===b,this.v2=2===b,this.v3=3===b,this.v4=4===b):b?-1===c(b,"1.2.0")?this.v2=!0:-1===c(b,"1.7.35")?this.v3=!0:this.v4=!0:this.v1=!0}function v(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function w(a,b){return function a(b,c,d){var e=d.type(c),f=e&&e.possibleLengths()||d.possibleLengths();if(!f)return"IS_POSSIBLE";if("FIXED_LINE_OR_MOBILE"===c){if(!d.type("FIXED_LINE"))return a(b,"MOBILE",d);var g=d.type("MOBILE");g&&(f=function(a,b){for(var c,d=a.slice(),e=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return v(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?v(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(b);!(c=e()).done;){var f=c.value;0>a.indexOf(f)&&d.push(f)}return d.sort(function(a,b){return a-b})}(f,g.possibleLengths()))}else if(c&&!e)return"INVALID_LENGTH";var h=b.length,i=f[0];return i===h?"IS_POSSIBLE":i>h?"TOO_SHORT":f[f.length-1]<h?"TOO_LONG":f.indexOf(h,1)>=0?"IS_POSSIBLE":"INVALID_LENGTH"}(a,void 0,b)}function x(a,b){return"IS_POSSIBLE"===w(a,b)}function y(a,b){return a=a||"",RegExp("^(?:"+b+")$").test(a)}function z(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var A=["MOBILE","PREMIUM_RATE","TOLL_FREE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL"];function B(a,b,c){if(b=b||{},a.country||a.countryCallingCode){(c=new l(c)).selectNumberingPlan(a.country,a.countryCallingCode);var d=b.v2?a.nationalNumber:a.phone;if(y(d,c.nationalNumberPattern())){if(C(d,"FIXED_LINE",c))return c.type("MOBILE")&&""===c.type("MOBILE").pattern()||!c.type("MOBILE")||C(d,"MOBILE",c)?"FIXED_LINE_OR_MOBILE":"FIXED_LINE";for(var e,f=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return z(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?z(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(A);!(e=f()).done;){var g=e.value;if(C(d,g,c))return g}}}}function C(a,b,c){return!(!(b=c.type(b))||!b.pattern()||b.possibleLengths()&&0>b.possibleLengths().indexOf(a.length))&&y(a,b.pattern())}var D="0-9０-９٠-٩۰-۹",E="".concat("-‐-―−ー－").concat("／/").concat("．.").concat("  ­​⁠　").concat("()（）［］\\[\\]").concat("~⁓∼～"),F="+＋",G=RegExp("(["+D+"])");function H(a,b,c,d){if(b){var e=new l(d);e.selectNumberingPlan(b,c);var f=new RegExp(e.IDDPrefix());if(0===a.search(f)){var g=(a=a.slice(a.match(f)[0].length)).match(G);if(!g||null==g[1]||!(g[1].length>0)||"0"!==g[1])return a}}}function I(a,b){if(a&&b.numberingPlan.nationalPrefixForParsing()){var c=RegExp("^(?:"+b.numberingPlan.nationalPrefixForParsing()+")"),d=c.exec(a);if(d){var e,f,g,h=d.length-1,i=h>0&&d[h];if(b.nationalPrefixTransformRule()&&i)e=a.replace(c,b.nationalPrefixTransformRule()),h>1&&(f=d[1]);else{var j=d[0];e=a.slice(j.length),i&&(f=d[1])}if(i){var k=a.indexOf(d[1]);a.slice(0,k)===b.numberingPlan.nationalPrefix()&&(g=b.numberingPlan.nationalPrefix())}else g=d[0];return{nationalNumber:e,nationalPrefix:g,carrierCode:f}}}return{nationalNumber:a}}function J(a,b){var c,d,e,f=I(a,b),g=f.carrierCode,h=f.nationalNumber;return h!==a&&(c=a,d=h,!(!y(c,(e=b).nationalNumberPattern())||y(d,e.nationalNumberPattern()))||b.possibleLengths()&&!function(a,b){switch(w(a,b)){case"TOO_SHORT":case"INVALID_LENGTH":return!1;default:return!0}}(h,b))?{nationalNumber:a}:{nationalNumber:h,carrierCode:g}}function K(a,b,c,d){var e=b?t(b,d):c;if(0===a.indexOf(e)){(d=new l(d)).selectNumberingPlan(b,c);var f=a.slice(e.length),g=J(f,d).nationalNumber,h=J(a,d).nationalNumber;if(!y(h,d.nationalNumberPattern())&&y(g,d.nationalNumberPattern())||"TOO_LONG"===w(h,d))return{countryCallingCode:e,number:f}}return{number:a}}function L(a,b,c,d){if(!a)return{};if("+"!==a[0]){var e,f=H(a,b,c,d);if(f&&f!==a)e=!0,a="+"+f;else{if(b||c){var g=K(a,b,c,d),h=g.countryCallingCode,i=g.number;if(h)return{countryCallingCodeSource:"FROM_NUMBER_WITHOUT_PLUS_SIGN",countryCallingCode:h,number:i}}return{number:a}}}if("0"===a[1])return{};d=new l(d);for(var j=2;j-1<=3&&j<=a.length;){var k=a.slice(1,j);if(d.hasCallingCode(k))return d.selectNumberingPlan(k),{countryCallingCodeSource:e?"FROM_NUMBER_WITH_IDD":"FROM_NUMBER_WITH_PLUS_SIGN",countryCallingCode:k,number:a.slice(j)};j++}return{}}function M(a){return a.replace(RegExp("[".concat(E,"]+"),"g")," ").trim()}var N=/(\$\d)/;function O(a,b,c){var d=c.useInternationalFormat,e=c.withNationalPrefix;c.carrierCode,c.metadata;var f=a.replace(new RegExp(b.pattern()),d?b.internationalFormat():e&&b.nationalPrefixFormattingRule()?b.format().replace(N,b.nationalPrefixFormattingRule()):b.format());return d?M(f):f}var P=/^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/,Q=function(a){return"([".concat(D,"]{1,").concat(a,"})")};function R(a){var b="[  \\t,]*",c="[:\\.．]?[  \\t,-]*",d="[  \\t]*";return";ext="+Q("20")+"|"+(b+"(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)"+c+Q("20"))+"#?|"+(b+"(?:[xｘ#＃~～]|int|ｉｎｔ)"+c+Q("9"))+"#?|"+("[- ]+"+Q("6"))+"#|"+(d+"(?:,{2}|;)"+c+Q("15"))+"#?|"+(d+"(?:,)+"+c+Q("9"))+"#?"}var S="["+F+"]{0,1}(?:["+E+"]*["+D+"]){3,}["+E+D+"]*",T=RegExp("^["+F+"]{0,1}(?:["+E+"]*["+D+"]){1,2}$","i"),U=RegExp("^["+D+"]{2}$|^"+(S+"(?:"+R())+")?$","i");function V(a){return(V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function W(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function X(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function Y(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?X(Object(c),!0).forEach(function(b){var d,e,f;d=a,e=b,f=c[b],(e=function(a){var b=function(a,b){if("object"!=V(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=V(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==V(b)?b:b+""}(e))in d?Object.defineProperty(d,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):d[e]=f}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):X(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}var Z={formatExtension:function(a,b,c){return"".concat(a).concat(c.ext()).concat(b)}};function $(a,b,c,d,e){var f=function(a,b){for(var c,d=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return W(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?W(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(a);!(c=d()).done;){var e=c.value;if(e.leadingDigitsPatterns().length>0){var f=e.leadingDigitsPatterns()[e.leadingDigitsPatterns().length-1];if(0!==b.search(f))continue}if(y(b,e.pattern()))return e}}(d.formats(),a);return f?O(a,f,{useInternationalFormat:"INTERNATIONAL"===c,withNationalPrefix:!f.nationalPrefixIsOptionalWhenFormattingInNationalFormat()||!e||!1!==e.nationalPrefix,carrierCode:b,metadata:d}):a}function _(a){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function aa(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function ab(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?aa(Object(c),!0).forEach(function(b){var d,e,f;d=a,e=b,f=c[b],(e=ac(e))in d?Object.defineProperty(d,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):d[e]=f}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):aa(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}function ac(a){var b=function(a,b){if("object"!=_(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=_(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==_(b)?b:b+""}var ad=function(){var a,b;return a=function a(b,c,d){if(!(this instanceof a))throw TypeError("Cannot call a class as a function");if(!b)throw TypeError("First argument is required");if("string"!=typeof b)throw TypeError("First argument must be a string");if("+"===b[0]&&!c)throw TypeError("`metadata` argument not passed");if(e(c)&&e(c.countries)){d=c;var f=b;if(!ae.test(f))throw Error('Invalid `number` argument passed: must consist of a "+" followed by digits');var g=L(f,void 0,void 0,d),h=g.countryCallingCode;if(c=g.number,b=h,!c)throw Error("Invalid `number` argument passed: too short")}if(!c)throw TypeError("`nationalNumber` argument is required");if("string"!=typeof c)throw TypeError("`nationalNumber` argument must be a string");r(d);var i=function(a,b){var c,d,e=new l(b);return/^[A-Z]{2}$/.test(a)?(c=a,e.selectNumberingPlan(c),d=e.countryCallingCode()):d=a,{country:c,countryCallingCode:d}}(b,d),j=i.country,k=i.countryCallingCode;this.country=j,this.countryCallingCode=k,this.nationalNumber=c,this.number="+"+this.countryCallingCode+this.nationalNumber,this.getMetadata=function(){return d}},b=[{key:"setExt",value:function(a){this.ext=a}},{key:"getPossibleCountries",value:function(){var a,b,c,d;return this.country?[this.country]:(a=this.countryCallingCode,b=this.nationalNumber,(d=new l(c=this.getMetadata()).getCountryCodesForCallingCode(a))?d.filter(function(a){var d,e,f;return d=b,e=a,(f=new l(c)).selectNumberingPlan(e),f.numberingPlan.possibleLengths().indexOf(d.length)>=0}):[])}},{key:"isPossible",value:function(){return function(a,b,c){if(void 0===b&&(b={}),c=new l(c),b.v2){if(!a.countryCallingCode)throw Error("Invalid phone number object passed");c.selectNumberingPlan(a.countryCallingCode)}else{if(!a.phone)return!1;if(a.country){if(!c.hasCountry(a.country))throw Error("Unknown country: ".concat(a.country));c.country(a.country)}else{if(!a.countryCallingCode)throw Error("Invalid phone number object passed");c.selectNumberingPlan(a.countryCallingCode)}}if(c.possibleLengths())return x(a.phone||a.nationalNumber,c);if(a.countryCallingCode&&c.isNonGeographicCallingCode(a.countryCallingCode))return!0;throw Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')}(this,{v2:!0},this.getMetadata())}},{key:"isValid",value:function(){var a,b;return(a=a={v2:!0},(b=new l(b=this.getMetadata())).selectNumberingPlan(this.country,this.countryCallingCode),b.hasTypes())?void 0!==B(this,a,b.metadata):y(a.v2?this.nationalNumber:this.phone,b.nationalNumberPattern())}},{key:"isNonGeographic",value:function(){return new l(this.getMetadata()).isNonGeographicCallingCode(this.countryCallingCode)}},{key:"isEqual",value:function(a){return this.number===a.number&&this.ext===a.ext}},{key:"getType",value:function(){return B(this,{v2:!0},this.getMetadata())}},{key:"format",value:function(a,b){return function(a,b,c,d){if(c=c?Y(Y({},Z),c):Z,d=new l(d),a.country&&"001"!==a.country){if(!d.hasCountry(a.country))throw Error("Unknown country: ".concat(a.country));d.country(a.country)}else{if(!a.countryCallingCode)return a.phone||"";d.selectNumberingPlan(a.countryCallingCode)}var e,f,g,h,i,j,k,m,n,o,p,q,r,s=d.countryCallingCode(),u=c.v2?a.nationalNumber:a.phone;switch(b){case"NATIONAL":if(!u)return"";return e=r=$(u,a.carrierCode,"NATIONAL",d,c),f=a.ext,g=d,h=c.formatExtension,f?h(e,f,g):e;case"INTERNATIONAL":if(!u)return"+".concat(s);return r=$(u,null,"INTERNATIONAL",d,c),i=r="+".concat(s," ").concat(r),j=a.ext,k=d,m=c.formatExtension,j?m(i,j,k):i;case"E.164":return"+".concat(s).concat(u);case"RFC3966":var v={number:"+".concat(s).concat(u),ext:a.ext},w=v.number,x=v.ext;if(!w)return"";if("+"!==w[0])throw Error('"formatRFC3966()" expects "number" to be in E.164 format.');return"tel:".concat(w).concat(x?";ext="+x:"");case"IDD":if(!c.fromCountry)return;return n=function(a,b,c,d,e){if(t(d,e.metadata)===c){var f,g,h=$(a,b,"NATIONAL",e);return"1"===c?c+" "+h:h}var i=(f=void 0,((g=new l(e.metadata)).selectNumberingPlan(d,f),g.defaultIDDPrefix())?g.defaultIDDPrefix():P.test(g.IDDPrefix())?g.IDDPrefix():void 0);if(i)return"".concat(i," ").concat(c," ").concat($(a,null,"INTERNATIONAL",e))}(u,a.carrierCode,s,c.fromCountry,d),o=a.ext,p=d,q=c.formatExtension,o?q(n,o,p):n;default:throw Error('Unknown "format" argument passed to "formatNumber()": "'.concat(b,'"'))}}(this,a,b?ab(ab({},b),{},{v2:!0}):{v2:!0},this.getMetadata())}},{key:"formatNational",value:function(a){return this.format("NATIONAL",a)}},{key:"formatInternational",value:function(a){return this.format("INTERNATIONAL",a)}},{key:"getURI",value:function(a){return this.format("RFC3966",a)}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,ac(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}(),ae=/^\+\d+$/;function af(a){return(af="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}var ag=function(){var a,b;return a=function a(b){var c=b.onCountryChange,d=b.onCallingCodeChange;if(!(this instanceof a))throw TypeError("Cannot call a class as a function");this.onCountryChange=c,this.onCallingCodeChange=d},b=[{key:"reset",value:function(a){var b=a.country,c=a.callingCode;this.international=!1,this.missingPlus=!1,this.IDDPrefix=void 0,this.callingCode=void 0,this.digits="",this.resetNationalSignificantNumber(),this.initCountryAndCallingCode(b,c)}},{key:"resetNationalSignificantNumber",value:function(){this.nationalSignificantNumber=this.getNationalDigits(),this.nationalSignificantNumberMatchesInput=!0,this.nationalPrefix=void 0,this.carrierCode=void 0,this.complexPrefixBeforeNationalSignificantNumber=void 0}},{key:"update",value:function(a){for(var b=0,c=Object.keys(a);b<c.length;b++){var d=c[b];this[d]=a[d]}}},{key:"initCountryAndCallingCode",value:function(a,b){this.setCountry(a),this.setCallingCode(b)}},{key:"setCountry",value:function(a){this.country=a,this.onCountryChange(a)}},{key:"setCallingCode",value:function(a){this.callingCode=a,this.onCallingCodeChange(a,this.country)}},{key:"startInternationalNumber",value:function(a,b){this.international=!0,this.initCountryAndCallingCode(a,b)}},{key:"appendDigits",value:function(a){this.digits+=a}},{key:"appendNationalSignificantNumberDigits",value:function(a){this.nationalSignificantNumber+=a}},{key:"getNationalDigits",value:function(){return this.international?this.digits.slice((this.IDDPrefix?this.IDDPrefix.length:0)+(this.callingCode?this.callingCode.length:0)):this.digits}},{key:"getDigitsWithoutInternationalPrefix",value:function(){return this.international&&this.IDDPrefix?this.digits.slice(this.IDDPrefix.length):this.digits}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=af(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=af(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==af(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}();function ah(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var ai=/x/;function aj(a,b){if(b<1)return"";for(var c="";b>1;)1&b&&(c+=a),b>>=1,a+=a;return c+a}function ak(a,b){return")"===a[b]&&b++,function(a){for(var b=[],c=0;c<a.length;)"("===a[c]?b.push(c):")"===a[c]&&b.pop(),c++;var d=0,e="";b.push(a.length);for(var f=0;f<b.length;f++){var g=b[f];e+=a.slice(d,g),d=g+1}return e}(a.slice(0,b))}function al(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var am={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9","０":"0","１":"1","２":"2","３":"3","４":"4","５":"5","６":"6","７":"7","８":"8","９":"9","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9"};function an(a){for(var b,c="",d=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return al(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?al(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(a.split(""));!(b=d()).done;){var e=am[b.value];e&&(c+=e)}return c}function ao(a,b,c){var d,e,f=c.metadata,g=c.useNationalPrefixFormattingRule,h=c.getSeparatorAfterNationalPrefix,i=O(a.nationalSignificantNumber,b,{carrierCode:a.carrierCode,useInternationalFormat:a.international,withNationalPrefix:g,metadata:f});if(!g&&(a.nationalPrefix?i=a.nationalPrefix+h(b)+i:a.complexPrefixBeforeNationalSignificantNumber&&(i=a.complexPrefixBeforeNationalSignificantNumber+" "+i)),d=i,e=a,an(d)===e.getNationalDigits())return i}function ap(a){return(ap="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}var aq=function(){var a,b;return a=function a(){if(!(this instanceof a))throw TypeError("Cannot call a class as a function")},b=[{key:"parse",value:function(a){if(this.context=[{or:!0,instructions:[]}],this.parsePattern(a),1!==this.context.length)throw Error("Non-finalized contexts left when pattern parse ended");var b=this.context[0],c=b.branches,d=b.instructions;if(c)return{op:"|",args:c.concat([at(d)])};if(0===d.length)throw Error("Pattern is required");return 1===d.length?d[0]:d}},{key:"startContext",value:function(a){this.context.push(a)}},{key:"endContext",value:function(){this.context.pop()}},{key:"getContext",value:function(){return this.context[this.context.length-1]}},{key:"parsePattern",value:function(a){if(!a)throw Error("Pattern is required");var b=a.match(as);if(!b){if(ar.test(a))throw Error("Illegal characters found in a pattern: ".concat(a));this.getContext().instructions=this.getContext().instructions.concat(a.split(""));return}var c=b[1],d=a.slice(0,b.index),e=a.slice(b.index+c.length);switch(c){case"(?:":d&&this.parsePattern(d),this.startContext({or:!0,instructions:[],branches:[]});break;case")":if(!this.getContext().or)throw Error('")" operator must be preceded by "(?:" operator');if(d&&this.parsePattern(d),0===this.getContext().instructions.length)throw Error('No instructions found after "|" operator in an "or" group');var f=this.getContext().branches;f.push(at(this.getContext().instructions)),this.endContext(),this.getContext().instructions.push({op:"|",args:f});break;case"|":if(!this.getContext().or)throw Error('"|" operator can only be used inside "or" groups');if(d&&this.parsePattern(d),!this.getContext().branches)if(1===this.context.length)this.getContext().branches=[];else throw Error('"branches" not found in an "or" group context');this.getContext().branches.push(at(this.getContext().instructions)),this.getContext().instructions=[];break;case"[":d&&this.parsePattern(d),this.startContext({oneOfSet:!0});break;case"]":if(!this.getContext().oneOfSet)throw Error('"]" operator must be preceded by "[" operator');this.endContext(),this.getContext().instructions.push({op:"[]",args:function(a){for(var b=[],c=0;c<a.length;){if("-"===a[c]){if(0===c||c===a.length-1)throw Error("Couldn't parse a one-of set pattern: ".concat(a));for(var d=a[c-1].charCodeAt(0)+1,e=a[c+1].charCodeAt(0)-1,f=d;f<=e;)b.push(String.fromCharCode(f)),f++}else b.push(a[c]);c++}return b}(d)});break;default:throw Error("Unknown operator: ".concat(c))}e&&this.parsePattern(e)}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=ap(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=ap(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==ap(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}(),ar=/[\(\)\[\]\?\:\|]/,as=RegExp("(\\||\\(\\?\\:|\\)|\\[|\\])");function at(a){return 1===a.length?a[0]:a}function au(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return av(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?av(a,b):void 0}}(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function av(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function aw(a){return(aw="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}var ax=function(){var a,b;return a=function a(b){if(!(this instanceof a))throw TypeError("Cannot call a class as a function");this.matchTree=new aq().parse(b)},b=[{key:"match",value:function(a){var b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},c=b.allowOverflow;if(!a)throw Error("String is required");var d=function a(b,c,d){if("string"==typeof c){var e=b.join("");return 0===c.indexOf(e)?b.length===c.length?{match:!0,matchedChars:b}:{partialMatch:!0}:0===e.indexOf(c)?d&&b.length>c.length?{overflow:!0}:{match:!0,matchedChars:b.slice(0,c.length)}:void 0}if(Array.isArray(c)){for(var f=b.slice(),g=0;g<c.length;){var h=a(f,c[g],d&&g===c.length-1);if(!h)return;if(h.overflow)return h;if(h.match){if(0===(f=f.slice(h.matchedChars.length)).length)if(g===c.length-1)return{match:!0,matchedChars:b};else return{partialMatch:!0}}else if(h.partialMatch)return{partialMatch:!0};else throw Error("Unsupported match result:\n".concat(JSON.stringify(h,null,2)));g++}return d?{overflow:!0}:{match:!0,matchedChars:b.slice(0,b.length-f.length)}}switch(c.op){case"|":for(var i,j,k=au(c.args);!(j=k()).done;){var l=a(b,j.value,d);if(l)if(l.overflow)return l;else if(l.match)return{match:!0,matchedChars:l.matchedChars};else if(l.partialMatch)i=!0;else throw Error("Unsupported match result:\n".concat(JSON.stringify(l,null,2)))}if(i)return{partialMatch:!0};return;case"[]":for(var m,n=au(c.args);!(m=n()).done;){var o=m.value;if(b[0]===o){if(1===b.length)return{match:!0,matchedChars:b};if(d)return{overflow:!0};return{match:!0,matchedChars:[o]}}}return;default:throw Error("Unsupported instruction tree: ".concat(c))}}(a.split(""),this.matchTree,!0);if(d&&d.match&&delete d.matchedChars,!d||!d.overflow||c)return d}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=aw(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=aw(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==aw(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}();function ay(a){return(ay="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function az(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return aA(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?aA(a,b):void 0}}(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function aA(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var aB=aj("9",15),aC=/[- ]/,aD=RegExp("["+E+"]*\\$1["+E+"]*(\\$\\d["+E+"]*)*$"),aE=function(){var a,b;return a=function a(b){b.state;var c=b.metadata;if(!(this instanceof a))throw TypeError("Cannot call a class as a function");this.metadata=c,this.resetFormat()},b=[{key:"resetFormat",value:function(){this.chosenFormat=void 0,this.template=void 0,this.nationalNumberTemplate=void 0,this.populatedNationalNumberTemplate=void 0,this.populatedNationalNumberTemplatePosition=-1}},{key:"reset",value:function(a,b){this.resetFormat(),a?(this.isNANP="1"===a.callingCode(),this.matchingFormats=a.formats(),b.nationalSignificantNumber&&this.narrowDownMatchingFormats(b)):(this.isNANP=void 0,this.matchingFormats=[])}},{key:"format",value:function(a,b){var c=this;if("IS_POSSIBLE"===w(b.nationalSignificantNumber,this.metadata))for(var d,e=az(this.matchingFormats);!(d=e()).done;){var f=d.value,g=function(a,b,c){var d=c.metadata,e=c.shouldTryNationalPrefixFormattingRule,f=c.getSeparatorAfterNationalPrefix;if(new RegExp("^(?:".concat(b.pattern(),")$")).test(a.nationalSignificantNumber))return function(a,b,c){var d=c.metadata,e=c.shouldTryNationalPrefixFormattingRule,f=c.getSeparatorAfterNationalPrefix;if(a.nationalSignificantNumber,a.international,a.nationalPrefix,a.carrierCode,e(b)){var g=ao(a,b,{useNationalPrefixFormattingRule:!0,getSeparatorAfterNationalPrefix:f,metadata:d});if(g)return g}return ao(a,b,{useNationalPrefixFormattingRule:!1,getSeparatorAfterNationalPrefix:f,metadata:d})}(a,b,{metadata:d,shouldTryNationalPrefixFormattingRule:e,getSeparatorAfterNationalPrefix:f})}(b,f,{metadata:this.metadata,shouldTryNationalPrefixFormattingRule:function(a){return c.shouldTryNationalPrefixFormattingRule(a,{international:b.international,nationalPrefix:b.nationalPrefix})},getSeparatorAfterNationalPrefix:function(a){return c.getSeparatorAfterNationalPrefix(a)}});if(g)return this.resetFormat(),this.chosenFormat=f,this.setNationalNumberTemplate(g.replace(/\d/g,"x"),b),this.populatedNationalNumberTemplate=g,this.populatedNationalNumberTemplatePosition=this.template.lastIndexOf("x"),g}return this.formatNationalNumberWithNextDigits(a,b)}},{key:"formatNationalNumberWithNextDigits",value:function(a,b){var c=this.chosenFormat,d=this.chooseFormat(b);if(d)if(d===c)return this.formatNextNationalNumberDigits(a);else return this.formatNextNationalNumberDigits(b.getNationalDigits())}},{key:"narrowDownMatchingFormats",value:function(a){var b=this,c=a.nationalSignificantNumber,d=a.nationalPrefix,e=a.international,f=c.length-3;f<0&&(f=0),this.matchingFormats=this.matchingFormats.filter(function(a){return b.formatSuits(a,e,d)&&b.formatMatches(a,c,f)}),this.chosenFormat&&-1===this.matchingFormats.indexOf(this.chosenFormat)&&this.resetFormat()}},{key:"formatSuits",value:function(a,b,c){return!(c&&!a.usesNationalPrefix()&&!a.nationalPrefixIsOptionalWhenFormattingInNationalFormat()||!b&&!c&&a.nationalPrefixIsMandatoryWhenFormattingInNationalFormat())}},{key:"formatMatches",value:function(a,b,c){var d=a.leadingDigitsPatterns().length;if(0===d)return!0;c=Math.min(c,d-1);var e=a.leadingDigitsPatterns()[c];if(b.length<3)try{return void 0!==new ax(e).match(b,{allowOverflow:!0})}catch(a){return console.error(a),!0}return new RegExp("^(".concat(e,")")).test(b)}},{key:"getFormatFormat",value:function(a,b){return b?a.internationalFormat():a.format()}},{key:"chooseFormat",value:function(a){for(var b,c,d,e=this,f=az(this.matchingFormats.slice());!(d=f()).done&&0!==(b=d.value,c=e.chosenFormat===b?0:aD.test(e.getFormatFormat(b,a.international))?e.createTemplateForFormat(b,a)?(e.chosenFormat=b,0):(e.matchingFormats=e.matchingFormats.filter(function(a){return a!==b}),1):1);)if(1===c)continue;return this.chosenFormat||this.resetFormat(),this.chosenFormat}},{key:"createTemplateForFormat",value:function(a,b){if(!(a.pattern().indexOf("|")>=0)){var c=this.getTemplateForFormat(a,b);if(c)return this.setNationalNumberTemplate(c,b),!0}}},{key:"getSeparatorAfterNationalPrefix",value:function(a){return this.isNANP||a&&a.nationalPrefixFormattingRule()&&aC.test(a.nationalPrefixFormattingRule())?" ":""}},{key:"getInternationalPrefixBeforeCountryCallingCode",value:function(a,b){var c=a.IDDPrefix,d=a.missingPlus;return c?b&&!1===b.spacing?c:c+" ":d?"":"+"}},{key:"getTemplate",value:function(a){if(this.template){for(var b=-1,c=0,d=a.international?this.getInternationalPrefixBeforeCountryCallingCode(a,{spacing:!1}):"";c<d.length+a.getDigitsWithoutInternationalPrefix().length;)b=this.template.indexOf("x",b+1),c++;return ak(this.template,b+1)}}},{key:"setNationalNumberTemplate",value:function(a,b){this.nationalNumberTemplate=a,this.populatedNationalNumberTemplate=a,this.populatedNationalNumberTemplatePosition=-1,b.international?this.template=this.getInternationalPrefixBeforeCountryCallingCode(b).replace(/[\d\+]/g,"x")+aj("x",b.callingCode.length)+" "+a:this.template=a}},{key:"getTemplateForFormat",value:function(a,b){var c,d=b.nationalSignificantNumber,e=b.international,f=b.nationalPrefix,g=b.complexPrefixBeforeNationalSignificantNumber,h=a.pattern();h=h.replace(/\[([^\[\]])*\]/g,"\\d").replace(/\d(?=[^,}][^,}])/g,"\\d");var i=aB.match(h)[0];if(!(d.length>i.length)){var j=RegExp("^"+h+"$"),k=d.replace(/\d/g,"9");j.test(k)&&(i=k);var l=this.getFormatFormat(a,e);if(this.shouldTryNationalPrefixFormattingRule(a,{international:e,nationalPrefix:f})){var m=l.replace(N,a.nationalPrefixFormattingRule());if(an(a.nationalPrefixFormattingRule())===(f||"")+an("$1")&&(l=m,c=!0,f))for(var n=f.length;n>0;)l=l.replace(/\d/,"x"),n--}var o=i.replace(new RegExp(h),l).replace(/9/g,"x");return!c&&(g?o=aj("x",g.length)+" "+o:f&&(o=aj("x",f.length)+this.getSeparatorAfterNationalPrefix(a)+o)),e&&(o=M(o)),o}}},{key:"formatNextNationalNumberDigits",value:function(a){var b=function(a,b,c){for(var d,e=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return ah(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?ah(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(c.split(""));!(d=e()).done;){var f=d.value;if(0>a.slice(b+1).search(ai))return;b=a.search(ai),a=a.replace(ai,f)}return[a,b]}(this.populatedNationalNumberTemplate,this.populatedNationalNumberTemplatePosition,a);return b?(this.populatedNationalNumberTemplate=b[0],this.populatedNationalNumberTemplatePosition=b[1],ak(this.populatedNationalNumberTemplate,this.populatedNationalNumberTemplatePosition+1)):void this.resetFormat()}},{key:"shouldTryNationalPrefixFormattingRule",value:function(a,b){var c=b.international,d=b.nationalPrefix;if(a.nationalPrefixFormattingRule()){var e=a.usesNationalPrefix();if(e&&d||!e&&!c)return!0}}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=ay(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=ay(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==ay(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}();function aF(a){return(aF="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function aG(a,b){return function(a){if(Array.isArray(a))return a}(a)||function(a,b){var c=null==a?null:"undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(null!=c){var d,e,f,g,h=[],i=!0,j=!1;try{if(f=(c=c.call(a)).next,0===b){if(Object(c)!==c)return;i=!1}else for(;!(i=(d=f.call(c)).done)&&(h.push(d.value),h.length!==b);i=!0);}catch(a){j=!0,e=a}finally{try{if(!i&&null!=c.return&&(g=c.return(),Object(g)!==g))return}finally{if(j)throw e}}return h}}(a,b)||function(a,b){if(a){if("string"==typeof a)return aH(a,b);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?aH(a,b):void 0}}(a,b)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function aH(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var aI=RegExp("^["+E+D+"]+$","i"),aJ="(?:["+F+"]["+E+D+"]*|["+E+D+"]+)",aK=RegExp("[^"+E+D+"]+.*$"),aL=/[^\d\[\]]/,aM=function(){var a,b;return a=function a(b){var c=b.defaultCountry,d=b.defaultCallingCode,e=b.metadata,f=b.onNationalSignificantNumberChange;if(!(this instanceof a))throw TypeError("Cannot call a class as a function");this.defaultCountry=c,this.defaultCallingCode=d,this.metadata=e,this.onNationalSignificantNumberChange=f},b=[{key:"input",value:function(a,b){var c,d,e,f,g,h=aG((e=(d=aG("+"===(c=function(a){var b,c=a.search(aJ);if(!(c<0))return"+"===(a=a.slice(c))[0]&&(b=!0,a=a.slice(1)),a=a.replace(aK,""),b&&(a="+"+a),a}(a)||"")[0]?[c.slice(1),!0]:[c],2))[0],f=d[1],aI.test(e)||(e=""),[e,f]),2),i=h[0],j=h[1],k=an(i);return j&&!b.digits&&(b.startInternationalNumber(),k||(g=!0)),k&&this.inputDigits(k,b),{digits:k,justLeadingPlus:g}}},{key:"inputDigits",value:function(a,b){var c=b.digits,d=c.length<3&&c.length+a.length>=3;if(b.appendDigits(a),d&&this.extractIddPrefix(b),this.isWaitingForCountryCallingCode(b)){if(!this.extractCountryCallingCode(b))return}else b.appendNationalSignificantNumberDigits(a);b.international||this.hasExtractedNationalSignificantNumber||this.extractNationalSignificantNumber(b.getNationalDigits(),function(a){return b.update(a)})}},{key:"isWaitingForCountryCallingCode",value:function(a){var b=a.international,c=a.callingCode;return b&&!c}},{key:"extractCountryCallingCode",value:function(a){var b=L("+"+a.getDigitsWithoutInternationalPrefix(),this.defaultCountry,this.defaultCallingCode,this.metadata.metadata),c=b.countryCallingCode,d=b.number;if(c)return a.setCallingCode(c),a.update({nationalSignificantNumber:d}),!0}},{key:"reset",value:function(a){if(a){this.hasSelectedNumberingPlan=!0;var b=a._nationalPrefixForParsing();this.couldPossiblyExtractAnotherNationalSignificantNumber=b&&aL.test(b)}else this.hasSelectedNumberingPlan=void 0,this.couldPossiblyExtractAnotherNationalSignificantNumber=void 0}},{key:"extractNationalSignificantNumber",value:function(a,b){if(this.hasSelectedNumberingPlan){var c=I(a,this.metadata),d=c.nationalPrefix,e=c.nationalNumber,f=c.carrierCode;if(e!==a)return this.onExtractedNationalNumber(d,f,e,a,b),!0}}},{key:"extractAnotherNationalSignificantNumber",value:function(a,b,c){if(!this.hasExtractedNationalSignificantNumber)return this.extractNationalSignificantNumber(a,c);if(this.couldPossiblyExtractAnotherNationalSignificantNumber){var d=I(a,this.metadata),e=d.nationalPrefix,f=d.nationalNumber,g=d.carrierCode;if(f!==b)return this.onExtractedNationalNumber(e,g,f,a,c),!0}}},{key:"onExtractedNationalNumber",value:function(a,b,c,d,e){var f,g,h=d.lastIndexOf(c);if(h>=0&&h===d.length-c.length){g=!0;var i=d.slice(0,h);i!==a&&(f=i)}e({nationalPrefix:a,carrierCode:b,nationalSignificantNumber:c,nationalSignificantNumberMatchesInput:g,complexPrefixBeforeNationalSignificantNumber:f}),this.hasExtractedNationalSignificantNumber=!0,this.onNationalSignificantNumberChange()}},{key:"reExtractNationalSignificantNumber",value:function(a){return!!this.extractAnotherNationalSignificantNumber(a.getNationalDigits(),a.nationalSignificantNumber,function(b){return a.update(b)})||(this.extractIddPrefix(a)||this.fixMissingPlus(a)?(this.extractCallingCodeAndNationalSignificantNumber(a),!0):void 0)}},{key:"extractIddPrefix",value:function(a){var b=a.international,c=a.IDDPrefix,d=a.digits;if(a.nationalSignificantNumber,!b&&!c){var e=H(d,this.defaultCountry,this.defaultCallingCode,this.metadata.metadata);if(void 0!==e&&e!==d)return a.update({IDDPrefix:d.slice(0,d.length-e.length)}),this.startInternationalNumber(a,{country:void 0,callingCode:void 0}),!0}}},{key:"fixMissingPlus",value:function(a){if(!a.international){var b=K(a.digits,this.defaultCountry,this.defaultCallingCode,this.metadata.metadata),c=b.countryCallingCode;if(b.number,c)return a.update({missingPlus:!0}),this.startInternationalNumber(a,{country:a.country,callingCode:c}),!0}}},{key:"startInternationalNumber",value:function(a,b){var c=b.country,d=b.callingCode;a.startInternationalNumber(c,d),a.nationalSignificantNumber&&(a.resetNationalSignificantNumber(),this.onNationalSignificantNumberChange(),this.hasExtractedNationalSignificantNumber=void 0)}},{key:"extractCallingCodeAndNationalSignificantNumber",value:function(a){this.extractCountryCallingCode(a)&&this.extractNationalSignificantNumber(a.getNationalDigits(),function(b){return a.update(b)})}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=aF(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=aF(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==aF(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}();function aN(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function aO(a,b){var c=b.countries,d=(b.defaultCountry,b.metadata);d=new l(d);for(var e,f=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return aN(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?aN(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(c);!(e=f()).done;){var g=e.value;if(d.country(g),d.leadingDigits()){if(a&&0===a.search(d.leadingDigits()))return g}else if(B({phone:a,country:g},void 0,d.metadata))return g}}function aP(a,b){var c=b.nationalNumber,d=b.defaultCountry,e=b.metadata,f=e.getCountryCodesForCallingCode(a);if(f)return 1===f.length?f[0]:aO(c,{countries:f,defaultCountry:d,metadata:e.metadata})}function aQ(a){return(aQ="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function aR(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var aS=function(){var a,b;return a=function a(b,c){if(!(this instanceof a))throw TypeError("Cannot call a class as a function");this.metadata=new l(c);var d,e=function(a){if(Array.isArray(a))return a}(d=this.getCountryAndCallingCode(b))||function(a,b){var c=null==a?null:"undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(null!=c){var d,e,f,g,h=[],i=!0,j=!1;try{f=(c=c.call(a)).next,!1;for(;!(i=(d=f.call(c)).done)&&(h.push(d.value),h.length!==b);i=!0);}catch(a){j=!0,e=a}finally{try{if(!i&&null!=c.return&&(g=c.return(),Object(g)!==g))return}finally{if(j)throw e}}return h}}(d,2)||function(a,b){if(a){if("string"==typeof a)return aR(a,2);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?aR(a,b):void 0}}(d,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),f=e[0],g=e[1];this.defaultCountry=f,this.defaultCallingCode=g,this.reset()},b=[{key:"getCountryAndCallingCode",value:function(a){var b,c;return a&&(e(a)?(b=a.defaultCountry,c=a.defaultCallingCode):b=a),b&&!this.metadata.hasCountry(b)&&(b=void 0),[b,c]}},{key:"input",value:function(a){var b=this.parser.input(a,this.state),c=b.digits;if(b.justLeadingPlus)this.formattedOutput="+";else if(c){if(this.determineTheCountryIfNeeded(),this.state.nationalSignificantNumber&&this.formatter.narrowDownMatchingFormats(this.state),this.metadata.hasSelectedNumberingPlan()&&(d=this.formatter.format(c,this.state)),void 0===d&&this.parser.reExtractNationalSignificantNumber(this.state)){this.determineTheCountryIfNeeded();var d,e=this.state.getNationalDigits();e&&(d=this.formatter.format(e,this.state))}this.formattedOutput=d?this.getFullNumber(d):this.getNonFormattedNumber()}return this.formattedOutput}},{key:"reset",value:function(){var a=this;return this.state=new ag({onCountryChange:function(b){a.country=b},onCallingCodeChange:function(b,c){a.metadata.selectNumberingPlan(c,b),a.formatter.reset(a.metadata.numberingPlan,a.state),a.parser.reset(a.metadata.numberingPlan)}}),this.formatter=new aE({state:this.state,metadata:this.metadata}),this.parser=new aM({defaultCountry:this.defaultCountry,defaultCallingCode:this.defaultCallingCode,metadata:this.metadata,state:this.state,onNationalSignificantNumberChange:function(){a.determineTheCountryIfNeeded(),a.formatter.reset(a.metadata.numberingPlan,a.state)}}),this.state.reset({country:this.defaultCountry,callingCode:this.defaultCallingCode}),this.formattedOutput="",this}},{key:"isInternational",value:function(){return this.state.international}},{key:"getCallingCode",value:function(){if(this.isInternational())return this.state.callingCode}},{key:"getCountryCallingCode",value:function(){return this.getCallingCode()}},{key:"getCountry",value:function(){if(this.state.digits)return this._getCountry()}},{key:"_getCountry",value:function(){return this.state.country}},{key:"determineTheCountryIfNeeded",value:function(){(!this.state.country||this.isCountryCallingCodeAmbiguous())&&this.determineTheCountry()}},{key:"getFullNumber",value:function(a){var b=this;if(this.isInternational()){var c=function(a){return b.formatter.getInternationalPrefixBeforeCountryCallingCode(b.state,{spacing:!!a})+a},d=this.state.callingCode;return c(d?a?"".concat(d," ").concat(a):d:"".concat(this.state.getDigitsWithoutInternationalPrefix()))}return a}},{key:"getNonFormattedNationalNumberWithPrefix",value:function(){var a=this.state,b=a.nationalSignificantNumber,c=a.complexPrefixBeforeNationalSignificantNumber,d=a.nationalPrefix,e=b,f=c||d;return f&&(e=f+e),e}},{key:"getNonFormattedNumber",value:function(){var a=this.state.nationalSignificantNumberMatchesInput;return this.getFullNumber(a?this.getNonFormattedNationalNumberWithPrefix():this.state.getNationalDigits())}},{key:"getNonFormattedTemplate",value:function(){var a=this.getNonFormattedNumber();if(a)return a.replace(/[\+\d]/g,"x")}},{key:"isCountryCallingCodeAmbiguous",value:function(){var a=this.state.callingCode,b=this.metadata.getCountryCodesForCallingCode(a);return b&&b.length>1}},{key:"determineTheCountry",value:function(){this.state.setCountry(aP(this.isInternational()?this.state.callingCode:this.defaultCallingCode,{nationalNumber:this.state.nationalSignificantNumber,defaultCountry:this.defaultCountry,metadata:this.metadata}))}},{key:"getNumberValue",value:function(){var a=this.state,b=a.digits,c=a.callingCode,d=a.country,e=a.nationalSignificantNumber;if(b){if(this.isInternational())if(c)return"+"+c+e;else return"+"+b;else if(d||c)return"+"+(d?this.metadata.countryCallingCode():c)+e}}},{key:"getNumber",value:function(){var a=this.state,b=a.nationalSignificantNumber,c=a.carrierCode,d=a.callingCode,e=this._getCountry();if(b&&(e||d)){if(e&&e===this.defaultCountry){var f=new l(this.metadata.metadata);f.selectNumberingPlan(e);var g=f.numberingPlan.callingCode(),h=this.metadata.getCountryCodesForCallingCode(g);if(h.length>1){var i=aO(b,{countries:h,defaultCountry:this.defaultCountry,metadata:this.metadata.metadata});i&&(e=i)}}var j=new ad(e||d,b,this.metadata.metadata);return c&&(j.carrierCode=c),j}}},{key:"isPossible",value:function(){var a=this.getNumber();return!!a&&a.isPossible()}},{key:"isValid",value:function(){var a=this.getNumber();return!!a&&a.isValid()}},{key:"getNationalNumber",value:function(){return this.state.nationalSignificantNumber}},{key:"getChars",value:function(){return(this.state.international?"+":"")+this.state.digits}},{key:"getTemplate",value:function(){return this.formatter.getTemplate(this.state)||this.getNonFormattedTemplate()||""}}],function(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,function(a){var b=function(a,b){if("object"!=aQ(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=aQ(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==aQ(b)?b:b+""}(d.key),d)}}(a.prototype,b),Object.defineProperty(a,"prototype",{writable:!1}),a}();function aT(a){return aS.call(this,a,b)}function aU(a){return(aU="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function aV(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function aW(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function aX(a){return(aX="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}aT.prototype=Object.create(aS.prototype,{}),aT.prototype.constructor=aT;function aY(a){var b="function"==typeof Map?new Map:void 0;return(aY=function(a){if(null===a||!function(a){try{return -1!==Function.toString.call(a).indexOf("[native code]")}catch(b){return"function"==typeof a}}(a))return a;if("function"!=typeof a)throw TypeError("Super expression must either be null or a function");if(void 0!==b){if(b.has(a))return b.get(a);b.set(a,c)}function c(){return function(a,b,c){if(aZ())return Reflect.construct.apply(null,arguments);var d=[null];d.push.apply(d,b);var e=new(a.bind.apply(a,d));return c&&a$(e,c.prototype),e}(a,arguments,a_(this).constructor)}return c.prototype=Object.create(a.prototype,{constructor:{value:c,enumerable:!1,writable:!0,configurable:!0}}),a$(c,a)})(a)}function aZ(){try{var a=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(a){}return(aZ=function(){return!!a})()}function a$(a,b){return(a$=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(a,b){return a.__proto__=b,a})(a,b)}function a_(a){return(a_=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(a){return a.__proto__||Object.getPrototypeOf(a)})(a)}var a0=function(a){function b(a){var c,d,e;if(!(this instanceof b))throw TypeError("Cannot call a class as a function");return d=b,e=[a],d=a_(d),Object.setPrototypeOf(c=function(a,b){if(b&&("object"==aX(b)||"function"==typeof b))return b;if(void 0!==b)throw TypeError("Derived constructors may only return object or undefined");var c=a;if(void 0===c)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return c}(this,aZ()?Reflect.construct(d,e||[],a_(this).constructor):d.apply(this,e)),b.prototype),c.name=c.constructor.name,c}if("function"!=typeof a&&null!==a)throw TypeError("Super expression must either be null or a function");return b.prototype=Object.create(a&&a.prototype,{constructor:{value:b,writable:!0,configurable:!0}}),Object.defineProperty(b,"prototype",{writable:!1}),a&&a$(b,a),Object.defineProperty(b,"prototype",{writable:!1}),b}(aY(Error)),a1=RegExp("(?:"+R()+")$","i");function a2(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}function a3(a){for(var b,c="",d=function(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(c)return(c=c.call(a)).next.bind(c);if(Array.isArray(a)||(c=function(a,b){if(a){if("string"==typeof a)return a2(a,void 0);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?a2(a,b):void 0}}(a))){c&&(a=c);var d=0;return function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(a.split(""));!(b=d()).done;){var e=b.value;c+=function(a,b,c){if("+"===a){if(b)return;return"+"}return am[a]}(e,c)||""}return c}var a4="(["+D+"]|[\\-\\.\\(\\)]?)",a5=RegExp("^\\+"+a4+"*["+D+"]"+a4+"*$","g"),a6=RegExp("^("+("["+D+"]+((\\-)*[")+D+"])*\\.)*[a-zA-Z]+((\\-)*["+D+"])*\\.?$","g"),a7="tel:",a8=";phone-context=",a9=RegExp("["+F+D+"]"),ba=RegExp("[^"+D+"#]+$");function bb(a){return(bb="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function bc(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function bd(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?bc(Object(c),!0).forEach(function(b){var d,e,f;d=a,e=b,f=c[b],(e=function(a){var b=function(a,b){if("object"!=bb(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=bb(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==bb(b)?b:b+""}(e))in d?Object.defineProperty(d,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):d[e]=f}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):bc(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}function be(a){return(be="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a})(a)}function bf(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function bg(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?bf(Object(c),!0).forEach(function(b){var d,e,f;d=a,e=b,f=c[b],(e=function(a){var b=function(a,b){if("object"!=be(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=be(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==be(b)?b:b+""}(e))in d?Object.defineProperty(d,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):d[e]=f}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):bf(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}function bh(){var a,b,c=function(a){var b,c,d,f,g=function(a){if(Array.isArray(a))return a}(b=Array.prototype.slice.call(a))||function(a,b){var c=null==a?null:"undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(null!=c){var d,e,f,g,h=[],i=!0,j=!1;try{f=(c=c.call(a)).next,!1;for(;!(i=(d=f.call(c)).done)&&(h.push(d.value),h.length!==b);i=!0);}catch(a){j=!0,e=a}finally{try{if(!i&&null!=c.return&&(g=c.return(),Object(g)!==g))return}finally{if(j)throw e}}return h}}(b,4)||function(a,b){if(a){if("string"==typeof a)return aW(a,4);var c=({}).toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?aW(a,b):void 0}}(b,4)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),h=g[0],i=g[1],j=g[2],k=g[3];if("string"==typeof h)c=h;else throw TypeError("A text for parsing must be a string.");if(i&&"string"!=typeof i)if(e(i))j?(d=i,f=j):f=i;else throw Error("Invalid second argument: ".concat(i));else k?(d=j,f=k):(d=void 0,f=j),i&&(d=function(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?aV(Object(c),!0).forEach(function(b){var d,e,f;d=a,e=b,f=c[b],(e=function(a){var b=function(a,b){if("object"!=aU(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=aU(d))return d;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}(a,"string");return"symbol"==aU(b)?b:b+""}(e))in d?Object.defineProperty(d,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):d[e]=f}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):aV(Object(c)).forEach(function(b){Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(c,b))})}return a}({defaultCountry:i},d));return{text:c,options:d,metadata:f}}(arguments),d=c.text,f=c.options,g=c.metadata,h=f;h&&h.defaultCountry&&(a=h.defaultCountry,!g.countries.hasOwnProperty(a))&&(h=bg(bg({},h),{},{defaultCountry:void 0}));try{return b=h,function(a,b,c){if(b=b||{},c=new l(c),b.defaultCountry&&!c.hasCountry(b.defaultCountry)){if(b.v2)throw new a0("INVALID_COUNTRY");throw Error("Unknown country: ".concat(b.defaultCountry))}var d,e,f,g,h=function(a,b,c){var d=function(a,b){var c=b.extractFormattedPhoneNumber,d=function(a){var b=a.indexOf(a8);if(b<0)return null;var c=b+a8.length;if(c>=a.length)return"";var d=a.indexOf(";",c);return d>=0?a.substring(c,d):a.substring(c)}(a);if(!(null===d||0!==d.length&&(a5.test(d)||a6.test(d))))throw new a0("NOT_A_NUMBER");if(null===d)e=c(a)||"";else{e="","+"===d.charAt(0)&&(e+=d);var e,f,g=a.indexOf(a7);f=g>=0?g+a7.length:0;var h=a.indexOf(a8);e+=a.substring(f,h)}var i=e.indexOf(";isub=");if(i>0&&(e=e.substring(0,i)),""!==e)return e}(a,{extractFormattedPhoneNumber:function(a){if(a){if(a.length>250){if(b)throw new a0("TOO_LONG");return}if(!1===c)return a;var d=a.search(a9);return d<0?void 0:a.slice(d).replace(ba,"")}}});if(!d)return{};if(!(d.length>=2&&U.test(d)))return T.test(d)?{error:"TOO_SHORT"}:{};var e=function(a){var b=a.search(a1);if(b<0)return{};for(var c=a.slice(0,b),d=a.match(a1),e=1;e<d.length;){if(d[e])return{number:c,ext:d[e]};e++}}(d);return e.ext?e:{number:d}}(a,b.v2,b.extract),i=h.number,j=h.ext,k=h.error;if(!i){if(b.v2){if("TOO_SHORT"===k)throw new a0("TOO_SHORT");throw new a0("NOT_A_NUMBER")}return{}}var m=function(a,b,c,d){var e,f=L(a3(a),b,c,d.metadata),g=f.countryCallingCodeSource,h=f.countryCallingCode,i=f.number;if(h)d.selectNumberingPlan(h);else{if(!i||!b&&!c)return{};d.selectNumberingPlan(b,c),b&&(e=b),h=c||t(b,d.metadata)}if(!i)return{countryCallingCodeSource:g,countryCallingCode:h};var j=J(a3(i),d),k=j.nationalNumber,l=j.carrierCode,m=aP(h,{nationalNumber:k,defaultCountry:b,metadata:d});return m&&(e=m,"001"===m||d.country(e)),{country:e,countryCallingCode:h,countryCallingCodeSource:g,nationalNumber:k,carrierCode:l}}(i,b.defaultCountry,b.defaultCallingCode,c),n=m.country,o=m.nationalNumber,p=m.countryCallingCode,q=m.countryCallingCodeSource,r=m.carrierCode;if(!c.hasSelectedNumberingPlan()){if(b.v2)throw new a0("INVALID_COUNTRY");return{}}if(!o||o.length<2){if(b.v2)throw new a0("TOO_SHORT");return{}}if(o.length>17){if(b.v2)throw new a0("TOO_LONG");return{}}if(b.v2){var s=new ad(p,o,c.metadata);return n&&(s.country=n),r&&(s.carrierCode=r),j&&(s.ext=j),s.__countryCallingCodeSource=q,s}var u=(b.extended?!!c.hasSelectedNumberingPlan():!!n)&&y(o,c.nationalNumberPattern());return b.extended?{country:n,countryCallingCode:p,carrierCode:r,valid:u,possible:!!u||!!(!0===b.extended&&c.possibleLengths()&&x(o,c)),phone:o,ext:j}:u?(d=n,e=o,f=j,g={country:d,phone:e},f&&(g.ext=f),g):{}}(d,bd(bd({},b),{},{v2:!0}),g)}catch(a){if(a instanceof a0);else throw a}}function bi(a,b){return new aT(b).input(a)}function bj(a,c){let d=function(){return function(a,c){var d=Array.prototype.slice.call(c);return d.push(b),a.apply(this,d)}(bh,arguments)}(a,c);return d?.isValid()?d.number:null}},50725,a=>{"use strict";a.s(["classesFor",()=>c]);let b={"CA-MB":["1","2","3","4","5","6"],"CA-ON":["A","B","C","D","E","F","G","M"],"CA-BC":["1","2","3","4","5","6","7","8"],"CA-AB":["1","2","3","4","5","6","7"],"CA-SK":["1","2","3","4","5","6","7"],"CA-QC":["1","2","3","4","5","6"],"CA-NB":["1","2","3","4","5","6","7"],"CA-NL":["1","2","3","4","5","6"],"CA-NS":["1","2","3","4","5","6","7"],"CA-PE":["1","2","3","4","5"]};function c(a){return b[a]??[]}},75462,(a,b,c)=>{c.remove=function(a){return a.replace(/[^\u0000-\u007e]/g,function(a){return e[a]||a})};for(var d=[{base:" ",chars:" "},{base:"0",chars:"߀"},{base:"A",chars:"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"},{base:"AA",chars:"Ꜳ"},{base:"AE",chars:"ÆǼǢ"},{base:"AO",chars:"Ꜵ"},{base:"AU",chars:"Ꜷ"},{base:"AV",chars:"ꜸꜺ"},{base:"AY",chars:"Ꜽ"},{base:"B",chars:"ⒷＢḂḄḆɃƁ"},{base:"C",chars:"ⒸＣꜾḈĆCĈĊČÇƇȻ"},{base:"D",chars:"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ"},{base:"Dh",chars:"Ð"},{base:"DZ",chars:"ǱǄ"},{base:"Dz",chars:"ǲǅ"},{base:"E",chars:"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ"},{base:"F",chars:"ꝼⒻＦḞƑꝻ"},{base:"G",chars:"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ"},{base:"H",chars:"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"},{base:"I",chars:"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"},{base:"J",chars:"ⒿＪĴɈȷ"},{base:"K",chars:"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"},{base:"L",chars:"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"},{base:"LJ",chars:"Ǉ"},{base:"Lj",chars:"ǈ"},{base:"M",chars:"ⓂＭḾṀṂⱮƜϻ"},{base:"N",chars:"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ"},{base:"NJ",chars:"Ǌ"},{base:"Nj",chars:"ǋ"},{base:"O",chars:"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"},{base:"OE",chars:"Œ"},{base:"OI",chars:"Ƣ"},{base:"OO",chars:"Ꝏ"},{base:"OU",chars:"Ȣ"},{base:"P",chars:"ⓅＰṔṖƤⱣꝐꝒꝔ"},{base:"Q",chars:"ⓆＱꝖꝘɊ"},{base:"R",chars:"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"},{base:"S",chars:"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"},{base:"T",chars:"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"},{base:"Th",chars:"Þ"},{base:"TZ",chars:"Ꜩ"},{base:"U",chars:"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"},{base:"V",chars:"ⓋＶṼṾƲꝞɅ"},{base:"VY",chars:"Ꝡ"},{base:"W",chars:"ⓌＷẀẂŴẆẄẈⱲ"},{base:"X",chars:"ⓍＸẊẌ"},{base:"Y",chars:"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"},{base:"Z",chars:"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"},{base:"a",chars:"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ"},{base:"aa",chars:"ꜳ"},{base:"ae",chars:"æǽǣ"},{base:"ao",chars:"ꜵ"},{base:"au",chars:"ꜷ"},{base:"av",chars:"ꜹꜻ"},{base:"ay",chars:"ꜽ"},{base:"b",chars:"ⓑｂḃḅḇƀƃɓƂ"},{base:"c",chars:"ｃⓒćĉċčçḉƈȼꜿↄ"},{base:"d",chars:"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ"},{base:"dh",chars:"ð"},{base:"dz",chars:"ǳǆ"},{base:"e",chars:"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ"},{base:"f",chars:"ⓕｆḟƒ"},{base:"ff",chars:"ﬀ"},{base:"fi",chars:"ﬁ"},{base:"fl",chars:"ﬂ"},{base:"ffi",chars:"ﬃ"},{base:"ffl",chars:"ﬄ"},{base:"g",chars:"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ"},{base:"h",chars:"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"},{base:"hv",chars:"ƕ"},{base:"i",chars:"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"},{base:"j",chars:"ⓙｊĵǰɉ"},{base:"k",chars:"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"},{base:"l",chars:"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ"},{base:"lj",chars:"ǉ"},{base:"m",chars:"ⓜｍḿṁṃɱɯ"},{base:"n",chars:"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ"},{base:"nj",chars:"ǌ"},{base:"o",chars:"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ"},{base:"oe",chars:"œ"},{base:"oi",chars:"ƣ"},{base:"oo",chars:"ꝏ"},{base:"ou",chars:"ȣ"},{base:"p",chars:"ⓟｐṕṗƥᵽꝑꝓꝕρ"},{base:"q",chars:"ⓠｑɋꝗꝙ"},{base:"r",chars:"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"},{base:"s",chars:"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ"},{base:"ss",chars:"ß"},{base:"t",chars:"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"},{base:"th",chars:"þ"},{base:"tz",chars:"ꜩ"},{base:"u",chars:"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"},{base:"v",chars:"ⓥｖṽṿʋꝟʌ"},{base:"vy",chars:"ꝡ"},{base:"w",chars:"ⓦｗẁẃŵẇẅẘẉⱳ"},{base:"x",chars:"ⓧｘẋẍ"},{base:"y",chars:"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"},{base:"z",chars:"ⓩｚźẑżžẓẕƶȥɀⱬꝣ"}],e={},f=0;f<d.length;f+=1)for(var g=d[f].chars,h=0;h<g.length;h+=1)e[g[h]]=d[f].base;c.replacementList=d,c.diacriticsMap=e},44585,(a,b,c)=>{"use strict";let d=a.r(77344),e=a.r(79007),f=a.r(75462).remove,g={},h={},i={},j={},k={};function l(a){return String("000"+(a||"")).slice(-3)}function m(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function n(a,b){switch(a){case"official":return Array.isArray(b)?b[0]:b;case"all":return"string"==typeof b?[b]:b;case"alias":return Array.isArray(b)?b[1]||b[0]:b;default:throw TypeError("LocaleNameType must be one of these: all, official, alias!")}}d.forEach(function(a){h[a[0]]=a[1],i[a[1]]=a[0],j[a[2]]=a[0],k[a[0]]=a[2]});function o(a){return h[j[l(a)]]}function p(a){return j[l(a)]}function q(a){if("string"==typeof a){if(/^[0-9]*$/.test(a))return p(a);if(2===a.length)return a.toUpperCase();if(3===a.length)return i[a.toUpperCase()]}if("number"==typeof a)return p(a)}c.registerLocale=function(a){if(!a.locale)throw TypeError("Missing localeData.locale");if(!a.countries)throw TypeError("Missing localeData.countries");g[a.locale]=a.countries},c.alpha3ToAlpha2=function(a){return i[a]},c.alpha2ToAlpha3=function(a){return h[a]},c.alpha3ToNumeric=function(a){return k[i[a]]},c.alpha2ToNumeric=function(a){return k[a]},c.numericToAlpha3=o,c.numericToAlpha2=p,c.toAlpha3=function(a){if("string"==typeof a){if(/^[0-9]*$/.test(a))return o(a);if(2===a.length)return h[a.toUpperCase()];if(3===a.length)return a.toUpperCase()}if("number"==typeof a)return o(a)},c.toAlpha2=q,c.getName=function(a,b,c={}){"select"in c||(c.select="official");try{let d=g[b.toLowerCase()][q(a)];return n(c.select,d)}catch(a){return}},c.getNames=function(a,b={}){var c;"select"in b||(b.select="official");let d=g[a.toLowerCase()];return void 0===d?{}:(c=function(a){return n(b.select,a)},Object.keys(d).reduce(function(a,b){let e=d[b];return a[b]=c(e,b),a},{}))},c.getAlpha2Code=function(a,b){let c=a=>a.toLowerCase(),d=(a,b)=>c(a)===c(b);try{let c=g[b.toLowerCase()];for(let b in c)if(m(c,b)){if("string"==typeof c[b]&&d(c[b],a))return b;if(Array.isArray(c[b])){for(let e of c[b])if(d(e,a))return b}}return}catch(a){return}},c.getSimpleAlpha2Code=function(a,b){let c=a=>f(a.toLowerCase()),d=(a,b)=>c(a)===c(b);try{let c=g[b.toLowerCase()];for(let b in c)if(m(c,b)){if("string"==typeof c[b]&&d(c[b],a))return b;if(Array.isArray(c[b])){for(let e of c[b])if(d(e,a))return b}}return}catch(a){return}},c.getAlpha2Codes=function(){return h},c.getAlpha3Code=function(a,b){let d=c.getAlpha2Code(a,b);return d?c.toAlpha3(d):void 0},c.getSimpleAlpha3Code=function(a,b){let d=c.getSimpleAlpha2Code(a,b);return d?c.toAlpha3(d):void 0},c.getAlpha3Codes=function(){return i},c.getNumericCodes=function(){return j},c.langs=function(){return Object.keys(g)},c.getSupportedLanguages=function(){return e},c.isValid=function(a){if(!a)return!1;let b=a.toString().toUpperCase();return m(i,b)||m(h,b)||m(j,b)}},92807,a=>{a.v(JSON.parse('{"locale":"af","countries":{"AF":"Afganistan","AL":"Albanië","DZ":"Algerië","AS":"Amerikaans-Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktika","AG":"Antigua en Barbuda","AR":"Argentinië","AM":"Armenië","AW":"Aruba","AU":"Australië","AT":"Oostenryk","AZ":"Azerbeidjan","BS":"Bahamas","BH":"Bahrein","BD":"Bangladesj","BB":"Barbados","BY":"Belarus","BE":"België","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhoetan","BO":"Bolivië","BA":"Bosnië en Herzegowina","BW":"Botswana","BV":"Bouveteiland","BR":"Brasilië","IO":"Britse Indiese Oseaangebied","BN":"Broenei","BG":"Bulgarye","BF":"Burkina Faso","BI":"Burundi","KH":"Kambodja","CM":"Kameroen","CA":"Kanada","CV":"Kaap Verde","KY":"Kaaimanseilande","CF":"Sentraal-Afrikaanse Republiek","TD":"Tsjad","CL":"Chili","CN":"Sjina","CX":"Kerseiland","CC":"Cocos- (Keeling) eilande","CO":"Colombië","KM":"Comore","CG":"Republiek van die Kongo","CD":"Demokratiese Republiek van die Kongo","CK":"Cookeilande","CR":"Costa Rica","CI":"Ivoorkus","HR":"Kroasië","CU":"Kuba","CY":"Siprus","CZ":"Tjeggiese Republiek","DK":"Denemarke","DJ":"Djiboeti","DM":"Dominica","DO":"Dominikaanse Republiek","EC":"Ecuador","EG":"Egipte","SV":"El Salvador","GQ":"Ekwatoriaal-Guinee","ER":"Eritrea","EE":"Estland","ET":"Ethiopië","FK":"Falklandeilande","FO":"Faroëreilande","FJ":"Fidji","FI":"Finland","FR":"Frankryk","GF":"Frans-Guyana","PF":"Frans-Polinesië","TF":"Franse Suidelike Gebiede","GA":"Gaboen","GM":"Gambië","GE":"Georgië","DE":"Duitsland","GH":"Ghana","GI":"Gibraltar","GR":"Griekeland","GL":"Groenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinee","GW":"Guinee-Bissau","GY":"Guyana","HT":"Haïti","HM":"Heard en McDonaldeilande","VA":"Vatikaanstad","HN":"Honduras","HK":"Hongkong SAS Sjina","HU":"Hongarye","IS":"Ysland","IN":"Indië","ID":"Indonesië","IR":"Iran","IQ":"Irak","IE":"Ierland","IL":"Israel","IT":"Italië","JM":"Jamaika","JP":"Japan","JO":"Jordanië","KZ":"Kazakstan","KE":"Kenia","KI":"Kiribati","KP":"Noord-Korea","KR":"Suid-Korea","KW":"Koeweit","KG":"Kirgisië","LA":"Laos","LV":"Letland","LB":"Libanon","LS":"Lesotho","LR":"Liberië","LY":"Libië","LI":"Liechtenstein","LT":"Litaue","LU":"Luxemburg","MO":"Macau SAS Sjina","MG":"Madagaskar","MW":"Malawi","MY":"Maleisië","MV":"Maledive","ML":"Mali","MT":"Malta","MH":"Marshalleilande","MQ":"Martinique","MR":"Mauritanië","MU":"Mauritius","YT":"Mayotte","MX":"Meksiko","FM":"Mikronesië","MD":"Moldowa","MC":"Monaco","MN":"Mongolië","MS":"Montserrat","MA":"Marokko","MZ":"Mosambiek","MM":"Mianmar (Birma)","NA":"Namibië","NR":"Nauru","NP":"Nepal","NL":"Nederland","NC":"Nieu-Kaledonië","NZ":"Nieu-Seeland","NI":"Nicaragua","NE":"Niger","NG":"Nigerië","NU":"Niue","NF":"Norfolkeiland","MK":"Macedonië","MP":"Noordelike Mariana-eilande","NO":"Noorweë","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestynse gebiede","PA":"Panama","PG":"Papoea-Nieu-Guinee","PY":"Paraguay","PE":"Peru","PH":"Filippyne","PN":"Pitcairneilande","PL":"Pole","PT":"Portugal","PR":"Puerto Rico","QA":"Katar","RE":"Réunion","RO":"Roemenië","RU":"Rusland","RW":"Rwanda","SH":"Sint Helena","KN":"Sint Kitts en Nevis","LC":"Sint Lucia","PM":"Sint Pierre en Miquelon","VC":"Sint Vincent en die Grenadine","WS":"Samoa","SM":"San Marino","ST":"Sao Tome en Principe","SA":"Saoedi-Arabië","SN":"Senegal","SC":"Seychelle","SL":"Sierra Leone","SG":"Singapoer","SK":"Slowakye","SI":"Slowenië","SB":"Solomoneilande","SO":"Somalië","ZA":"Suid-Afrika","GS":"Suid-Georgië en die Suidelike Sandwicheilande","ES":"Spanje","LK":"Sri Lanka","SD":"Soedan","SR":"Suriname","SJ":"Svalbard en Jan Mayen","SZ":"Swaziland","SE":"Swede","CH":"Switserland","SY":"Sirië","TW":"Taiwan","TJ":"Tadjikistan","TZ":"Tanzanië","TH":"Thailand","TL":"Oos-Timor","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad en Tobago","TN":"Tunisië","TR":"Turkye","TM":"Turkmenië","TC":"Turks- en Caicoseilande","TV":"Tuvalu","UG":"Uganda","UA":"Oekraïne","AE":"Verenigde Arabiese Emirate","GB":"Verenigde Koninkryk","US":"Verenigde State van Amerika","UM":"VS klein omliggende eilande","UY":"Uruguay","UZ":"Oesbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Viëtnam","VG":"Britse Maagde-eilande","VI":"Amerikaanse Maagde-eilande","WF":"Wallis en Futuna","EH":"Wes-Sahara","YE":"Jemen","ZM":"Zambië","ZW":"Zimbabwe","AX":"Ålandeilande","BQ":"Karibiese Nederland","CW":"Curaçao","GG":"Guernsey","IM":"Eiland Man","JE":"Jersey","ME":"Montenegro","BL":"Sint Barthélemy","MF":"Sint Martin","RS":"Serwië","SX":"Sint Maarten","SS":"Suid-Soedan","XK":"Kosovo"}}'))},68264,a=>{a.v(JSON.parse('{"locale":"am","countries":{"AF":"አፍጋኒስታን","AL":"አልባኒያ","DZ":"አልጄሪያ","AS":"የአሜሪካ ሳሞአ","AD":"አንዶራ","AO":"አንጐላ","AI":"አንጉኢላ","AQ":"አንታርክቲካ","AG":"አንቲጓ እና ባሩዳ","AR":"አርጀንቲና","AM":"አርሜኒያ","AW":"አሩባ","AU":"አውስትራልያ","AT":"ኦስትሪያ","AZ":"አዘርባጃን","BS":"ባሃማስ","BH":"ባህሬን","BD":"ባንግላዲሽ","BB":"ባርቤዶስ","BY":"ቤላሩስ","BE":"ቤልጄም","BZ":"ቤሊዘ","BJ":"ቤኒን","BM":"ቤርሙዳ","BT":"ቡህታን","BO":"ቦሊቪያ","BA":"ቦስኒያ እና ሄርዞጎቪኒያ","BW":"ቦትስዋና","BV":"ቡቬት ደሴት","BR":"ብራዚል","IO":"የብሪታኒያ ህንድ ውቂያኖስ ግዛት","BN":"ብሩኒ","BG":"ቡልጌሪያ","BF":"ቡርኪና ፋሶ","BI":"ብሩንዲ","KH":"ካምቦዲያ","CM":"ካሜሩን","CA":"ካናዳ","CV":"ኬፕ ቬርዴ","KY":"ካይማን ደሴቶች","CF":"የመካከለኛው አፍሪካ ሪፐብሊክ","TD":"ቻድ","CL":"ቺሊ","CN":"ቻይና","CX":"የገና ደሴት","CC":"ኮኮስ(ኬሊንግ) ደሴቶች","CO":"ኮሎምቢያ","KM":"ኮሞሮስ","CG":"ኮንጎ ብራዛቪል","CD":"ኮንጎ-ኪንሻሳ","CK":"ኩክ ደሴቶች","CR":"ኮስታ ሪካ","CI":"ኮት ዲቯር","HR":"ክሮኤሽያ","CU":"ኩባ","CY":"ሳይፕረስ","CZ":"ቼክ ሪፑብሊክ","DK":"ዴንማርክ","DJ":"ጂቡቲ","DM":"ዶሚኒካ","DO":"ዶሚኒክ ሪፑብሊክ","EC":"ኢኳዶር","EG":"ግብጽ","SV":"ኤል ሳልቫዶር","GQ":"ኢኳቶሪያል ጊኒ","ER":"ኤርትራ","EE":"ኤስቶኒያ","ET":"ኢትዮጵያ","FK":"የፎክላንድ ደሴቶች","FO":"የፋሮ ደሴቶች","FJ":"ፊጂ","FI":"ፊንላንድ","FR":"ፈረንሳይ","GF":"የፈረንሳይ ጉዊአና","PF":"የፈረንሳይ ፖሊኔዢያ","TF":"የፈረንሳይ ደቡባዊ ግዛቶች","GA":"ጋቦን","GM":"ጋምቢያ","GE":"ጆርጂያ","DE":"ጀርመን","GH":"ጋና","GI":"ጂብራልተር","GR":"ግሪክ","GL":"ግሪንላንድ","GD":"ግሬናዳ","GP":"ጉዋደሉፕ","GU":"ጉዋም","GT":"ጉዋቲማላ","GN":"ጊኒ","GW":"ጊኒ ቢሳኦ","GY":"ጉያና","HT":"ሀይቲ","HM":"ኽርድ ደሴቶችና ማክዶናልድ ደሴቶች","VA":"ቫቲካን ከተማ","HN":"ሆንዱራስ","HK":"ሆንግ ኮንግ SAR ቻይና","HU":"ሀንጋሪ","IS":"አይስላንድ","IN":"ህንድ","ID":"ኢንዶኔዢያ","IR":"ኢራን","IQ":"ኢራቅ","IE":"አየርላንድ","IL":"እስራኤል","IT":"ጣሊያን","JM":"ጃማይካ","JP":"ጃፓን","JO":"ጆርዳን","KZ":"ካዛኪስታን","KE":"ኬንያ","KI":"ኪሪባቲ","KP":"ሰሜን ኮሪያ","KR":"ደቡብ ኮሪያ","KW":"ክዌት","KG":"ኪርጊስታን","LA":"ላኦስ","LV":"ላትቪያ","LB":"ሊባኖስ","LS":"ሌሶቶ","LR":"ላይቤሪያ","LY":"ሊቢያ","LI":"ሊችተንስታይን","LT":"ሊቱዌኒያ","LU":"ሉክሰምበርግ","MO":"ማካኡ ልዩ የአስተዳደር ክልል ቻይና","MG":"ማዳጋስካር","MW":"ማላዊ","MY":"ማሌዢያ","MV":"ማልዲቭስ","ML":"ማሊ","MT":"ማልታ","MH":"ማርሻል አይላንድ","MQ":"ማርቲኒክ","MR":"ሞሪቴኒያ","MU":"ሞሪሸስ","YT":"ሜይኦቴ","MX":"ሜክሲኮ","FM":"ሚክሮኔዢያ","MD":"ሞልዶቫ","MC":"ሞናኮ","MN":"ሞንጎሊያ","MS":"ሞንትሴራት","MA":"ሞሮኮ","MZ":"ሞዛምቢክ","MM":"ማይናማር(በርማ)","NA":"ናሚቢያ","NR":"ናኡሩ","NP":"ኔፓል","NL":"ኔዘርላንድ","NC":"ኒው ካሌዶኒያ","NZ":"ኒው ዚላንድ","NI":"ኒካራጓ","NE":"ኒጀር","NG":"ናይጄሪያ","NU":"ኒኡይ","NF":"ኖርፎልክ ደሴት","MK":"መቄዶንያ","MP":"የሰሜናዊ ማሪያና ደሴቶች","NO":"ኖርዌ","OM":"ኦማን","PK":"ፓኪስታን","PW":"ፓላው","PS":"የፍልስጤም ግዛት","PA":"ፓናማ","PG":"ፓፑዋ ኒው ጊኒ","PY":"ፓራጓይ","PE":"ፔሩ","PH":"ፊሊፒንስ","PN":"ፒትካኢርን አይስላንድ","PL":"ፖላንድ","PT":"ፖርቱጋል","PR":"ፖርታ ሪኮ","QA":"ኳታር","RE":"ሪዩኒየን","RO":"ሮሜኒያ","RU":"ራሺያ","RW":"ሩዋንዳ","SH":"ሴንት ሄለና","KN":"ቅዱስ ኪትስ እና ኔቪስ","LC":"ሴንት ሉቺያ","PM":"ቅዱስ ፒዬር እና ሚኩኤሎን","VC":"ቅዱስ ቪንሴንት እና ግሬናዲንስ","WS":"ሳሞአ","SM":"ሳን ማሪኖ","ST":"ሳኦ ቶሜ እና ፕሪንሲፔ","SA":"ሳውድአረቢያ","SN":"ሴኔጋል","SC":"ሲሼልስ","SL":"ሴራሊዮን","SG":"ሲንጋፖር","SK":"ስሎቫኪያ","SI":"ስሎቬኒያ","SB":"ሰሎሞን ደሴት","SO":"ሱማሌ","ZA":"ደቡብ አፍሪካ","GS":"ደቡብ ጆርጂያ እና የደቡብ ሳንድዊች ደሴቶች","ES":"ስፔን","LK":"ሲሪላንካ","SD":"ሱዳን","SR":"ሱሪናም","SJ":"ስቫልባርድ እና ጃን ማየን","SZ":"ሱዋዚላንድ","SE":"ስዊድን","CH":"ስዊዘርላንድ","SY":"ሲሪያ","TW":"ታይዋን","TJ":"ታጃኪስታን","TZ":"ታንዛኒያ","TH":"ታይላንድ","TL":"ምስራቅ ሌስት","TG":"ቶጐ","TK":"ቶክላው","TO":"ቶንጋ","TT":"ትሪናዳድ እና ቶቤጎ","TN":"ቱኒዚያ","TR":"ቱርክ","TM":"ቱርክሜኒስታን","TC":"የቱርኮችና የካኢኮስ ደሴቶች","TV":"ቱቫሉ","UG":"ዩጋንዳ","UA":"ዩክሬን","AE":"የተባበሩት አረብ ኤምሬትስ","GB":"እንግሊዝ","US":"ዩናይትድ ስቴትስ","UM":"የዩ ኤስ ጠረፍ ላይ ያሉ ደሴቶች","UY":"ኡራጓይ","UZ":"ኡዝቤኪስታን","VU":"ቫኑአቱ","VE":"ቬንዙዌላ","VN":"ቬትናም","VG":"የእንግሊዝ ቨርጂን ደሴቶች","VI":"የአሜሪካ ቨርጂን ደሴቶች","WF":"ዋሊስ እና ፉቱና ደሴቶች","EH":"ምዕራባዊ ሳህራ","YE":"የመን","ZM":"ዛምቢያ","ZW":"ዚምቧቤ","AX":"የአላንድ ደሴቶች","BQ":"የካሪቢያን ኔዘርላንድስ","CW":"ኩራሳዎ","GG":"ጉርነሲ","IM":"አይል ኦፍ ማን","JE":"ጀርሲ","ME":"ሞንተኔግሮ","BL":"ቅዱስ በርቴሎሜ","MF":"ሴንት ማርቲን","RS":"ሰርብያ","SX":"ሲንት ማርተን","SS":"ደቡብ ሱዳን","XK":"ኮሶቮ"}}'))},13124,a=>{a.v(JSON.parse('{"locale":"ar","countries":{"AF":"أفغانستان","AL":"ألبانيا","DZ":"الجزائر","AS":"ساموا الأمريكية","AD":"أندورا","AO":"أنغولا","AI":"أنغويلا","AQ":"القارة القطبية الجنوبية","AG":"أنتيغوا وباربودا","AR":"الأرجنتين","AM":"أرمينيا","AW":"أروبا","AU":"أستراليا","AT":"النمسا","AZ":"أذربيجان","BS":"باهاماس","BH":"البحرين","BD":"بنغلاديش","BB":"باربادوس","BY":"روسيا البيضاء","BE":"بلجيكا","BZ":"بليز","BJ":"بنين","BM":"برمودا","BT":"بوتان","BO":"بوليفيا","BA":"البوسنة والهرسك","BW":"بوتسوانا","BV":"جزيرة بوفيه","BR":"البرازيل","IO":"إقليم المحيط الهندي البريطاني","BN":"بروناي","BG":"بلغاريا","BF":"بوركينا فاسو","BI":"بوروندي","KH":"كمبوديا","CM":"الكاميرون","CA":"كندا","CV":"الرأس الأخضر","KY":"جزر كايمان","CF":"جمهورية أفريقيا الوسطى","TD":"تشاد","CL":"تشيلي","CN":"الصين","CX":"جزيرة عيد الميلاد","CC":"جزر كوكوس","CO":"كولومبيا","KM":"جزر القمر","CG":"جمهورية الكونغو","CD":"جمهورية الكونغو الديمقراطية","CK":"جزر كوك","CR":"كوستاريكا","CI":"ساحل العاج","HR":"كرواتيا","CU":"كوبا","CY":"قبرص","CZ":"جمهورية التشيك","DK":"الدنمارك","DJ":"جيبوتي","DM":"دومينيكا","DO":"جمهورية الدومينيكان","EC":"الإكوادور","EG":"مصر","SV":"السلفادور","GQ":"غينيا الاستوائية","ER":"إريتريا","EE":"إستونيا","ET":"إثيوبيا","FK":"جزر فوكلاند","FO":"جزر فارو","FJ":"فيجي","FI":"فنلندا","FR":"فرنسا","GF":"غويانا الفرنسية","PF":"بولينزيا الفرنسية","TF":"أراض فرنسية جنوبية وأنتارتيكية","GA":"الغابون","GM":"غامبيا","GE":"جورجيا","DE":"ألمانيا","GH":"غانا","GI":"جبل طارق","GR":"اليونان","GL":"جرينلاند","GD":"غرينادا","GP":"غوادلوب","GU":"غوام","GT":"غواتيمالا","GN":"غينيا","GW":"غينيا بيساو","GY":"غيانا","HT":"هايتي","HM":"جزيرة هيرد وجزر ماكدونالد","VA":"الفاتيكان","HN":"هندوراس","HK":"هونغ كونغ","HU":"المجر","IS":"آيسلندا","IN":"الهند","ID":"إندونيسيا","IR":"إيران","IQ":"العراق","IE":"أيرلندا","IL":"إسرائيل","IT":"إيطاليا","JM":"جامايكا","JP":"اليابان","JO":"الأردن","KZ":"كازاخستان","KE":"كينيا","KI":"كيريباتي","KP":"كوريا الشمالية","KR":"كوريا الجنوبية","KW":"الكويت","KG":"قيرغيزستان","LA":"لاوس","LV":"لاتفيا","LB":"لبنان","LS":"ليسوتو","LR":"ليبيريا","LY":"ليبيا","LI":"ليختنشتاين","LT":"ليتوانيا","LU":"لوكسمبورغ","MO":"ماكاو","MK":"مقدونيا الشمالية","MG":"مدغشقر","MW":"مالاوي","MY":"ماليزيا","MV":"جزر المالديف","ML":"مالي","MT":"مالطا","MH":"جزر مارشال","MQ":"مارتينيك","MR":"موريتانيا","MU":"موريشيوس","YT":"مايوت","MX":"المكسيك","FM":"ولايات ميكرونيسيا المتحدة","MD":"مولدوفا","MC":"موناكو","MN":"منغوليا","MS":"مونتسرات","MA":"المغرب","MZ":"موزمبيق","MM":"بورما","NA":"ناميبيا","NR":"ناورو","NP":"نيبال","NL":"هولندا","NC":"كاليدونيا الجديدة","NZ":"نيوزيلندا","NI":"نيكاراغوا","NE":"النيجر","NG":"نيجيريا","NU":"نييوي","NF":"جزيرة نورفولك","MP":"جزر ماريانا الشمالية","NO":"النرويج","OM":"عمان","PK":"باكستان","PW":"بالاو","PS":"فلسطين","PA":"بنما","PG":"بابوا غينيا الجديدة","PY":"باراغواي","PE":"بيرو","PH":"الفلبين","PN":"جزر بيتكيرن","PL":"بولندا","PT":"البرتغال","PR":"بورتوريكو","QA":"قطر","RE":"لا ريونيون","RO":"رومانيا","RU":"روسيا","RW":"رواندا","SH":"سانت هيلينا وأسينشين وتريستان دا كونا","KN":"سانت كيتس ونيفيس","LC":"سانت لوسيا","PM":"سان بيير وميكلون","VC":"سانت فينسنت والغرينادين","WS":"ساموا","SM":"سان مارينو","ST":"ساو تومي وبرينسيب","SA":"السعودية","SN":"السنغال","SC":"سيشل","SL":"سيراليون","SG":"سنغافورة","SK":"سلوفاكيا","SI":"سلوفينيا","SB":"جزر سليمان","SO":"الصومال","ZA":"جنوب أفريقيا","GS":"جورجيا الجنوبية وجزر ساندويتش الجنوبية","ES":"إسبانيا","LK":"سريلانكا","SD":"السودان","SR":"سورينام","SJ":"سفالبارد ويان ماين","SZ":"سوازيلاند","SE":"السويد","CH":"سويسرا","SY":"سوريا","TW":"تايوان","TJ":"طاجيكستان","TZ":"تانزانيا","TH":"تايلاند","TL":"تيمور الشرقية","TG":"توغو","TK":"توكيلاو","TO":"تونغا","TT":"ترينيداد وتوباغو","TN":"تونس","TR":"تركيا","TM":"تركمانستان","TC":"جزر توركس وكايكوس","TV":"توفالو","UG":"أوغندا","UA":"أوكرانيا","AE":"الإمارات العربية المتحدة","GB":"المملكة المتحدة","US":"الولايات المتحدة","UM":"جزر الولايات المتحدة","UY":"الأوروغواي","UZ":"أوزبكستان","VU":"فانواتو","VE":"فنزويلا","VN":"فيتنام","VG":"جزر العذراء البريطانية","VI":"جزر العذراء الأمريكية","WF":"والس وفوتونا","EH":"الصحراء الغربية","YE":"اليمن","ZM":"زامبيا","ZW":"زيمبابوي","AX":"جزر أولاند","BQ":"الجزر الكاريبية الهولندية","CW":"كوراساو","GG":"غيرنزي","IM":"جزيرة مان","JE":"جيرزي","ME":"الجبل الأسود","BL":"سان بارتيلمي","MF":"سانت مارتن (الجزء الفرنسي)","RS":"صربيا","SX":"سانت مارتن (الجزء الهولندي)","SS":"جنوب السودان","XK":"كوسوفو"}}'))},1025,a=>{a.v(JSON.parse('{"locale":"az","countries":{"AD":"Andorra","AE":"Birləşmiş Ərəb Əmirlikləri","AF":"Əfqanıstan","AG":"Antiqua və Barbuda","AI":"Angilya","AL":"Albaniya","AM":"Ermənistan","AO":"Anqola","AQ":"Antarktika","AR":"Argentina","AS":"Amerika Samoası","AT":"Avstriya","AU":"Avstraliya","AW":"Aruba","AX":"Aland adaları","AZ":"Azərbaycan","BA":"Bosniya və Herseqovina","BB":"Barbados","BD":"Banqladeş","BE":"Belçika","BF":"Burkina Faso","BG":"Bolqarıstan","BH":"Bəhreyn","BI":"Burundi","BJ":"Benin","BL":"Sent-Bartelemi","BM":"Bermud adaları","BN":"Bruney","BO":"Boliviya","BQ":"Karib Niderlandı","BR":"Braziliya","BS":"Baham adaları","BT":"Butan","BV":"Buve adası","BW":"Botsvana","BY":"Belarus","BZ":"Beliz","CA":"Kanada","CC":"Kokos (Kilinq) adaları","CD":"Konqo - Kinşasa","CF":"Mərkəzi Afrika Respublikası","CG":"Konqo - Brazzavil","CH":"İsveçrə","CI":"Kotd’ivuar","CK":"Kuk adaları","CL":"Çili","CM":"Kamerun","CN":"Çin","CO":"Kolumbiya","CR":"Kosta Rika","CU":"Kuba","CV":"Kabo-Verde","CW":"Kurasao","CX":"Milad adası","CY":"Kipr","CZ":"Çex Respublikası","DE":"Almaniya","DJ":"Cibuti","DK":"Danimarka","DM":"Dominika","DO":"Dominikan Respublikası","DZ":"Əlcəzair","EC":"Ekvador","EE":"Estoniya","EG":"Misir","EH":"Qərbi Saxara","ER":"Eritreya","ES":"İspaniya","ET":"Efiopiya","FI":"Finlandiya","FJ":"Fici","FK":"Folklend adaları","FM":"Mikroneziya","FO":"Farer adaları","FR":"Fransa","GA":"Qabon","GB":"Birləşmiş Krallıq","GD":"Qrenada","GE":"Gürcüstan","GF":"Fransa Qvianası","GG":"Gernsi","GH":"Qana","GI":"Cəbəllütariq","GL":"Qrenlandiya","GM":"Qambiya","GN":"Qvineya","GP":"Qvadelupa","GQ":"Ekvatorial Qvineya","GR":"Yunanıstan","GS":"Cənubi Corciya və Cənubi Sendviç adaları","GT":"Qvatemala","GU":"Quam","GW":"Qvineya-Bisau","GY":"Qayana","HK":"Honq Konq","HM":"Herd və Makdonald adaları","HN":"Honduras","HR":"Xorvatiya","HT":"Haiti","HU":"Macarıstan","ID":"İndoneziya","IE":"İrlandiya","IL":"İsrail","IM":"Men adası","IN":"Hindistan","IO":"Britaniyanın Hind Okeanı Ərazisi","IQ":"İraq","IR":"İran","IS":"İslandiya","IT":"İtaliya","JE":"Cersi","JM":"Yamayka","JO":"İordaniya","JP":"Yaponiya","KE":"Keniya","KG":"Qırğızıstan","KH":"Kamboca","KI":"Kiribati","KM":"Komor adaları","KN":"Sent-Kits və Nevis","KP":"Şimali Koreya","KR":"Cənubi Koreya","KW":"Küveyt","KY":"Kayman adaları","KZ":"Qazaxıstan","LA":"Laos","LB":"Livan","LC":"Sent-Lusiya","LI":"Lixtenşteyn","LK":"Şri-Lanka","LR":"Liberiya","LS":"Lesoto","LT":"Litva","LU":"Lüksemburq","LV":"Latviya","LY":"Liviya","MA":"Mərakeş","MC":"Monako","MD":"Moldova","ME":"Monteneqro","MF":"Sent Martin","MG":"Madaqaskar","MH":"Marşal adaları","MK":"Şimali Makedoniya","ML":"Mali","MM":"Myanma","MN":"Monqolustan","MO":"Makao","MP":"Şimali Marian adaları","MQ":"Martinik","MR":"Mavritaniya","MS":"Monserat","MT":"Malta","MU":"Mavriki","MV":"Maldiv adaları","MW":"Malavi","MX":"Meksika","MY":"Malayziya","MZ":"Mozambik","NA":"Namibiya","NC":"Yeni Kaledoniya","NE":"Niger","NF":"Norfolk adası","NG":"Nigeriya","NI":"Nikaraqua","NL":"Niderland","NO":"Norveç","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Yeni Zelandiya","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Fransa Polineziyası","PG":"Papua-Yeni Qvineya","PH":"Filippin","PK":"Pakistan","PL":"Polşa","PM":"Müqəddəs Pyer və Mikelon","PN":"Pitkern adaları","PR":"Puerto Riko","PS":"Fələstin Əraziləri","PT":"Portuqaliya","PW":"Palau","PY":"Paraqvay","QA":"Qətər","RE":"Reyunyon","RO":"Rumıniya","RS":"Serbiya","RU":"Rusiya","RW":"Ruanda","SA":"Səudiyyə Ərəbistanı","SB":"Solomon adaları","SC":"Seyşel adaları","SD":"Sudan","SE":"İsveç","SG":"Sinqapur","SH":"Müqəddəs Yelena","SI":"Sloveniya","SJ":"Svalbard və Yan-Mayen","SK":"Slovakiya","SL":"Syerra-Leone","SM":"San-Marino","SN":"Seneqal","SO":"Somali","SR":"Surinam","SS":"Cənubi Sudan","ST":"San-Tome və Prinsipi","SV":"Salvador","SX":"Sint-Marten","SY":"Suriya","SZ":"Svazilend","TC":"Törks və Kaykos adaları","TD":"Çad","TF":"Fransanın Cənub Əraziləri","TG":"Toqo","TH":"Tailand","TJ":"Tacikistan","TK":"Tokelau","TL":"Şərqi Timor","TM":"Türkmənistan","TN":"Tunis","TO":"Tonqa","TR":"Türkiyə","TT":"Trinidad və Tobaqo","TV":"Tuvalu","TW":"Tayvan","TZ":"Tanzaniya","UA":"Ukrayna","UG":"Uqanda","UM":"ABŞ-a bağlı kiçik adacıqlar","US":"Amerika Birləşmiş Ştatları","UY":"Uruqvay","UZ":"Özbəkistan","VA":"Vatikan","VC":"Sent-Vinsent və Qrenadinlər","VE":"Venesuela","VG":"Britaniyanın Virgin adaları","VI":"ABŞ Virgin adaları","VN":"Vyetnam","VU":"Vanuatu","WF":"Uollis və Futuna","WS":"Samoa","XK":"Kosovo","YE":"Yəmən","YT":"Mayot","ZA":"Cənub Afrika","ZM":"Zambiya","ZW":"Zimbabve"}}'))},84669,a=>{a.v(JSON.parse('{"locale":"be","countries":{"AD":"Андора","AE":"Аб’яднаныя Арабскія Эміраты","AF":"Афганістан","AG":"Антыгуа і Барбуда","AI":"Ангілья","AL":"Албанія","AM":"Арменія","AO":"Ангола","AQ":"Антарктыка","AR":"Аргенціна","AS":"Амерыканскае Самоа","AT":"Аўстрыя","AU":"Аўстралія","AW":"Аруба","AX":"Аландскія астравы","AZ":"Азербайджан","BA":"Боснія і Герцагавіна","BB":"Барбадас","BD":"Бангладэш","BE":"Бельгія","BF":"Буркіна-Фасо","BG":"Балгарыя","BH":"Бахрэйн","BI":"Бурундзі","BJ":"Бенін","BL":"Сен-Бартэльмі","BM":"Бермудскія астравы","BN":"Бруней","BO":"Балівія","BQ":"Карыбскія Нідэрланды","BR":"Бразілія","BS":"Багамы","BT":"Бутан","BV":"Востраў Бувэ","BW":"Батсвана","BY":"Беларусь","BZ":"Беліз","CA":"Канада","CC":"Какосавыя (Кілінг) астравы","CD":"Конга (Кіншаса)","CF":"Цэнтральнаафрыканская Рэспубліка","CG":"Конга - Бразавіль","CH":"Швейцарыя","CI":"Кот-д’Івуар","CK":"Астравы Кука","CL":"Чылі","CM":"Камерун","CN":"Кітай","CO":"Калумбія","CR":"Коста-Рыка","CU":"Куба","CV":"Каба-Вердэ","CW":"Кюрасаа","CX":"Востраў Каляд","CY":"Кіпр","CZ":"Чэхія","DE":"Германія","DJ":"Джыбуці","DK":"Данія","DM":"Дамініка","DO":"Дамініканская Рэспубліка","DZ":"Алжыр","EC":"Эквадор","EE":"Эстонія","EG":"Егіпет","EH":"Заходняя Сахара","ER":"Эрытрэя","ES":"Іспанія","ET":"Эфіопія","FI":"Фінляндыя","FJ":"Фіджы","FK":"Фалклендскія астравы","FM":"Мікранезія","FO":"Фарэрскія астравы","FR":"Францыя","GA":"Габон","GB":"Вялікабрытанія","GD":"Грэнада","GE":"Грузія","GF":"Французская Гвіяна","GG":"Гернсі","GH":"Гана","GI":"Гібралтар","GL":"Грэнландыя","GM":"Гамбія","GN":"Гвінея","GP":"Гвадэлупа","GQ":"Экватарыяльная Гвінея","GR":"Грэцыя","GS":"Паўднёвая Джорджыя і Паўднёвыя Сандвічавы астравы","GT":"Гватэмала","GU":"Гуам","GW":"Гвінея-Бісау","GY":"Гаяна","HK":"Ганконг, САР (Кітай)","HM":"Астравы Херд і Макдональд","HN":"Гандурас","HR":"Харватыя","HT":"Гаіці","HU":"Венгрыя","ID":"Інданезія","IE":"Ірландыя","IL":"Ізраіль","IM":"Востраў Мэн","IN":"Індыя","IO":"Брытанская тэрыторыя ў Індыйскім акіяне","IQ":"Ірак","IR":"Іран","IS":"Ісландыя","IT":"Італія","JE":"Джэрсі","JM":"Ямайка","JO":"Іарданія","JP":"Японія","KE":"Кенія","KG":"Кыргызстан","KH":"Камбоджа","KI":"Кірыбаці","KM":"Каморскія Астравы","KN":"Сент-Кітс і Невіс","KP":"Паўночная Карэя","KR":"Паўднёвая Карэя","KW":"Кувейт","KY":"Кайманавы астравы","KZ":"Казахстан","LA":"Лаос","LB":"Ліван","LC":"Сент-Люсія","LI":"Ліхтэнштэйн","LK":"Шры-Ланка","LR":"Ліберыя","LS":"Лесота","LT":"Літва","LU":"Люксембург","LV":"Латвія","LY":"Лівія","MA":"Марока","MC":"Манака","MD":"Малдова","ME":"Чарнагорыя","MF":"Сен-Мартэн","MG":"Мадагаскар","MH":"Маршалавы Астравы","MK":"Рэспубліка Македонія","ML":"Малі","MM":"М’янма (Бірма)","MN":"Манголія","MO":"Макаа, САР (Кітай)","MP":"Паўночныя Марыянскія астравы","MQ":"Марцініка","MR":"Маўрытанія","MS":"Мантсерат","MT":"Мальта","MU":"Маўрыкій","MV":"Мальдывы","MW":"Малаві","MX":"Мексіка","MY":"Малайзія","MZ":"Мазамбік","NA":"Намібія","NC":"Новая Каледонія","NE":"Нігер","NF":"Востраў Норфалк","NG":"Нігерыя","NI":"Нікарагуа","NL":"Нідэрланды","NO":"Нарвегія","NP":"Непал","NR":"Науру","NU":"Ніуэ","NZ":"Новая Зеландыя","OM":"Аман","PA":"Панама","PE":"Перу","PF":"Французская Палінезія","PG":"Папуа-Новая Гвінея","PH":"Філіпіны","PK":"Пакістан","PL":"Польшча","PM":"Сен-П’ер і Мікелон","PN":"Астравы Піткэрн","PR":"Пуэрта-Рыка","PS":"Палесцінскія Тэрыторыі","PT":"Партугалія","PW":"Палау","PY":"Парагвай","QA":"Катар","RE":"Рэюньён","RO":"Румынія","RS":"Сербія","RU":"Расія","RW":"Руанда","SA":"Саудаўская Аравія","SB":"Саламонавы Астравы","SC":"Сейшэльскія Астравы","SD":"Судан","SE":"Швецыя","SG":"Сінгапур","SH":"Востраў Святой Алены","SI":"Славенія","SJ":"Шпіцберген і Ян-Маен","SK":"Славакія","SL":"Сьера-Леонэ","SM":"Сан-Марына","SN":"Сенегал","SO":"Самалі","SR":"Сурынам","SS":"Паўднёвы Судан","ST":"Сан-Тамэ і Прынсіпі","SV":"Сальвадор","SX":"Сінт-Мартэн","SY":"Сірыя","SZ":"Свазіленд","TC":"Цёркс і Кайкас","TD":"Чад","TF":"Французскія Паўднёвыя тэрыторыі","TG":"Тога","TH":"Тайланд","TJ":"Таджыкістан","TK":"Такелау","TL":"Тымор-Лешці","TM":"Туркменістан","TN":"Туніс","TO":"Тонга","TR":"Турцыя","TT":"Трынідад і Табага","TV":"Тувалу","TW":"Тайвань","TZ":"Танзанія","UA":"Украіна","UG":"Уганда","UM":"Малыя Аддаленыя астравы ЗША","US":"Злучаныя Штаты Амерыкі","UY":"Уругвай","UZ":"Узбекістан","VA":"Ватыкан","VC":"Сент-Вінсент і Грэнадзіны","VE":"Венесуэла","VG":"Брытанскія Віргінскія астравы","VI":"Амерыканскія Віргінскія астравы","VN":"В’етнам","VU":"Вануату","WF":"Уоліс і Футуна","WS":"Самоа","XK":"Косава","YE":"Емен","YT":"Маёта","ZA":"Паўднёваафрыканская Рэспубліка","ZM":"Замбія","ZW":"Зімбабвэ"}}'))},68251,a=>{a.v(JSON.parse('{"locale":"bg","countries":{"AD":"Андора","AE":"Обединени арабски емирства","AF":"Афганистан","AG":"Антигуа и Барбуда","AI":"Ангуила","AL":"Албания","AM":"Армения","AO":"Ангола","AQ":"Антарктика","AR":"Аржентина","AS":"Американска Самоа","AT":"Австрия","AU":"Австралия","AW":"Аруба","AX":"Оландски острови","AZ":"Азербайджан","BA":"Босна и Херцеговина","BB":"Барбадос","BD":"Бангладеш","BE":"Белгия","BF":"Буркина Фасо","BG":"България","BH":"Бахрейн","BI":"Бурунди","BJ":"Бенин","BL":"Сен Бартелеми","BM":"Бермуда","BN":"Бруней Даруссалам","BO":"Боливия","BQ":"Карибска Нидерландия","BR":"Бразилия","BS":"Бахами","BT":"Бутан","BV":"остров Буве","BW":"Ботсвана","BY":"Беларус","BZ":"Белиз","CA":"Канада","CC":"Кокосови острови (острови Кийлинг)","CD":"Конго (Киншаса)","CF":"Централноафриканска република","CG":"Конго (Бразавил)","CH":"Швейцария","CI":"Кот д’Ивоар","CK":"острови Кук","CL":"Чили","CM":"Камерун","CN":"Китай","CO":"Колумбия","CR":"Коста Рика","CU":"Куба","CV":"Кабо Верде","CW":"Кюрасао","CX":"остров Рождество","CY":"Кипър","CZ":"Чехия","DE":"Германия","DJ":"Джибути","DK":"Дания","DM":"Доминика","DO":"Доминиканска република","DZ":"Алжир","EC":"Еквадор","EE":"Естония","EG":"Египет","EH":"Западна Сахара","ER":"Еритрея","ES":"Испания","ET":"Етиопия","FI":"Финландия","FJ":"Фиджи","FK":"Фолклендски острови","FM":"Микронезия","FO":"Фарьорски острови","FR":"Франция","GA":"Габон","GB":"Обединеното кралство","GD":"Гренада","GE":"Грузия","GF":"Френска Гвиана","GG":"Гърнзи","GH":"Гана","GI":"Гибралтар","GL":"Гренландия","GM":"Гамбия","GN":"Гвинея","GP":"Гваделупа","GQ":"Екваториална Гвинея","GR":"Гърция","GS":"Южна Джорджия и Южни Сандвичеви острови","GT":"Гватемала","GU":"Гуам","GW":"Гвинея-Бисау","GY":"Гаяна","HK":"Хонконг, САР на Китай","HM":"остров Хърд и острови Макдоналд","HN":"Хондурас","HR":"Хърватия","HT":"Хаити","HU":"Унгария","ID":"Индонезия","IE":"Ирландия","IL":"Израел","IM":"остров Ман","IN":"Индия","IO":"Британска територия в Индийския океан","IQ":"Ирак","IR":"Иран","IS":"Исландия","IT":"Италия","JE":"Джърси","JM":"Ямайка","JO":"Йордания","JP":"Япония","KE":"Кения","KG":"Киргизстан","KH":"Камбоджа","KI":"Кирибати","KM":"Коморски острови","KN":"Сейнт Китс и Невис","KP":"Северна Корея","KR":"Южна Корея","KW":"Кувейт","KY":"Кайманови острови","KZ":"Казахстан","LA":"Лаос","LB":"Ливан","LC":"Сейнт Лусия","LI":"Лихтенщайн","LK":"Шри Ланка","LR":"Либерия","LS":"Лесото","LT":"Литва","LU":"Люксембург","LV":"Латвия","LY":"Либия","MA":"Мароко","MC":"Монако","MD":"Молдова","ME":"Черна гора","MF":"Сен Мартен","MG":"Мадагаскар","MH":"Маршалови острови","MK":"Северна Македония","ML":"Мали","MM":"Мианмар (Бирма)","MN":"Монголия","MO":"Макао, САР на Китай","MP":"Северни Мариански острови","MQ":"Мартиника","MR":"Мавритания","MS":"Монтсерат","MT":"Малта","MU":"Мавриций","MV":"Малдиви","MW":"Малави","MX":"Мексико","MY":"Малайзия","MZ":"Мозамбик","NA":"Намибия","NC":"Нова Каледония","NE":"Нигер","NF":"остров Норфолк","NG":"Нигерия","NI":"Никарагуа","NL":"Нидерландия","NO":"Норвегия","NP":"Непал","NR":"Науру","NU":"Ниуе","NZ":"Нова Зеландия","OM":"Оман","PA":"Панама","PE":"Перу","PF":"Френска Полинезия","PG":"Папуа-Нова Гвинея","PH":"Филипини","PK":"Пакистан","PL":"Полша","PM":"Сен Пиер и Микелон","PN":"Острови Питкерн","PR":"Пуерто Рико","PS":"Палестински територии","PT":"Португалия","PW":"Палау","PY":"Парагвай","QA":"Катар","RE":"Реюнион","RO":"Румъния","RS":"Сърбия","RU":"Русия","RW":"Руанда","SA":"Саудитска Арабия","SB":"Соломонови острови","SC":"Сейшели","SD":"Судан","SE":"Швеция","SG":"Сингапур","SH":"Света Елена","SI":"Словения","SJ":"Свалбард и Ян Майен","SK":"Словакия","SL":"Сиера Леоне","SM":"Сан Марино","SN":"Сенегал","SO":"Сомалия","SR":"Суринам","SS":"Южен Судан","ST":"Сао Томе и Принсипи","SV":"Салвадор","SX":"Синт Мартен","SY":"Сирия","SZ":"Свазиленд","TC":"острови Търкс и Кайкос","TD":"Чад","TF":"Френски южни територии","TG":"Того","TH":"Тайланд","TJ":"Таджикистан","TK":"Токелау","TL":"Източен Тимор","TM":"Туркменистан","TN":"Тунис","TO":"Тонга","TR":"Турция","TT":"Тринидад и Тобаго","TV":"Тувалу","TW":"Тайван","TZ":"Танзания","UA":"Украйна","UG":"Уганда","UM":"Отдалечени острови на САЩ","US":"Съединени щати","UY":"Уругвай","UZ":"Узбекистан","VA":"Ватикан","VC":"Сейнт Винсънт и Гренадини","VE":"Венецуела","VG":"Британски Вирджински острови","VI":"Американски Вирджински острови","VN":"Виетнам","VU":"Вануату","WF":"Уолис и Футуна","WS":"Самоа","XK":"Косово","YE":"Йемен","YT":"Майот","ZA":"Южна Африка","ZM":"Замбия","ZW":"Зимбабве"}}'))},59934,a=>{a.v(JSON.parse('{"locale":"bn","countries":{"AD":"অ্যান্ডোরা","AE":"সংযুক্ত আরব আমিরাত","AF":"আফগানিস্তান","AG":"অ্যান্টিগুয়া ও বার্বুডা","AI":"এ্যাঙ্গুইলা","AL":"আলবেনিয়া","AM":"আর্মেনিয়া","AO":"অ্যাঙ্গোলা","AQ":"অ্যান্টার্কটিকা","AR":"আর্জেন্টিনা","AS":"আমেরিকান সামোয়া","AT":"অস্ট্রিয়া","AU":"অস্ট্রেলিয়া","AW":"আরুবা","AX":"অলান্দ দ্বীপপুঞ্জ","AZ":"আজারবাইজান","BA":"বসনিয়া ও হার্জেগোভিনা","BB":"বার্বাডোস","BD":"বাংলাদেশ","BE":"বেলজিয়াম","BF":"বুর্কিনা ফাসো","BG":"বুলগেরিয়া","BH":"বাহরাইন","BI":"বুরুন্ডি","BJ":"বেনিন","BL":"সেন্ট বার্থলেমি","BM":"বারমুডা","BN":"ব্রুনাই দারুসালাম","BO":"বলিভিয়া, বহুজাতিক রাষ্ট্র","BQ":"ক্যারিবীয় নেদারল্যান্ডস","BR":"ব্রাজিল","BS":"বাহামা দ্বীপপুঞ্জ","BT":"ভূটান","BV":"বোভেট দ্বীপ","BW":"বতসোয়ানা","BY":"বেলারুশ","BZ":"বেলিজ","CA":"কানাডা","CC":"কোকোস (কিলিং) দ্বীপপুঞ্জ","CD":"গণতান্ত্রিক কঙ্গো প্রজাতন্ত্র","CF":"মধ্য আফ্রিকান প্রজাতন্ত্র","CG":"কঙ্গো প্রজাতন্ত্র","CH":"সুইজারল্যান্ড","CI":"কোত দিভোয়ার","CK":"কুক দ্বীপপুঞ্জ","CL":"চিলি","CM":"ক্যামেরুন","CN":"গণচীন","CO":"কলম্বিয়া","CR":"কোস্টা রিকা","CU":"কিউবা","CV":"কেপ ভার্দ","CW":"কিউরাসাও","CX":"ক্রিস্টমাস দ্বীপ","CY":"সাইপ্রাস","CZ":"চেক প্রজাতন্ত্র","DE":"জার্মানি","DJ":"জিবুতি","DK":"ডেনমার্ক","DM":"ডোমিনিকা","DO":"ডোমিনিকান প্রজাতন্ত্র","DZ":"আলজেরিয়া","EC":"ইকুয়েডর","EE":"এস্তোনিয়া","EG":"মিশর","EH":"পশ্চিম সাহারা","ER":"ইরিত্রিয়া","ES":"স্পেন","ET":"ইথিওপিয়া","FI":"ফিনল্যান্ড","FJ":"ফিজি","FK":"ফক্‌ল্যান্ড দ্বীপপুঞ্জ (মালভিনাস)","FM":"মাইক্রোনেশিয়া যুক্তরাজ্য","FO":"ফারো দ্বীপপুঞ্জ","FR":"ফ্রান্স","GA":"গাবন","GB":"যুক্তরাজ্য এবং উত্তর আয়ারল্যান্ড","GD":"গ্রানাডা","GE":"জর্জিয়া","GF":"ফরাসি গায়ানা","GG":"Guernsey","GH":"ঘানা","GI":"জিব্রাল্টার","GL":"গ্রিনল্যান্ড","GM":"গাম্বিয়া","GN":"গিনি","GP":"গুয়াদলুপ","GQ":"বিষুবীয় গিনি","GR":"গ্রিস","GS":"দক্ষিণ জর্জিয়া ও দক্ষিণ স্যান্ডউইচ দ্বীপপুঞ্জ","GT":"গুয়াতেমালা","GU":"গুয়াম","GW":"গিনি-বিসাউ","GY":"গায়ানা","HK":"হংকং","HM":"হার্ড দ্বীপ এবং ম্যাকডোনাল্ড দ্বীপপুঞ্জ","HN":"হন্ডুরাস","HR":"ক্রোয়েশিয়া","HT":"হাইতি","HU":"হাঙ্গেরি","ID":"ইন্দোনেশিয়া","IE":"প্রজাতন্ত্রী আয়ারল্যান্ড","IL":"ইসরায়েল","IM":"আইল অব ম্যান","IN":"ভারত","IO":"ব্রিটিশ ভারত মহাসাগরীয় এলাকা","IQ":"ইরাক","IR":"ইরান","IS":"আইসল্যান্ড","IT":"ইতালি","JE":"Jersey","JM":"জামাইকা","JO":"জর্দান","JP":"জাপান","KE":"কেনিয়া","KG":"কির্গিজস্তান","KH":"কম্বোডিয়া","KI":"কিরিবাস","KM":"কোমোরোস","KN":"সেন্ট কিট্‌স ও নেভিস","KP":"কোরিয়া গণতান্ত্রিক গণপ্রজাতন্ত্রী","KR":"কোরিয়া প্রজাতন্ত্র","KW":"কুয়েত","KY":"কেইম্যান দ্বীপপুঞ্জ","KZ":"কাজাখস্তান","LA":"গণতান্ত্রিক গণপ্রজাতন্ত্রী লাওস","LB":"লেবানন","LC":"সেন্ট লুসিয়া","LI":"লিশটেনস্টাইন","LK":"শ্রীলঙ্কা","LR":"লাইবেরিয়া","LS":"লেসোথো","LT":"লিথুয়ানিয়া","LU":"লুক্সেমবুর্গ","LV":"লাতভিয়া","LY":"লিবিয়া","MA":"মরোক্কো","MC":"মোনাকো","MD":"মলদোভা প্রজাতন্ত্র","ME":"মন্টিনিগ্রো","MF":"সেন্ট মার্টিন (ফরাসি অংশ)","MG":"মাদাগাস্কার","MH":"মার্শাল দ্বীপপুঞ্জ","MK":"ম্যাসেডোনিয়ার প্রাক্তন যুগোস্লাভ প্রজাতন্ত্র","ML":"মালি","MM":"মায়ানমার","MN":"মঙ্গোলিয়া","MO":"মাকাও","MP":"উত্তর মারিয়ানা দ্বীপপুঞ্জ","MQ":"মার্তিনিক","MR":"মৌরিতানিয়া","MS":"মন্টসেরাট","MT":"মাল্টা","MU":"মরিশাস","MV":"মালদ্বীপ","MW":"মালাউই","MX":"মেক্সিকো","MY":"মালয়েশিয়া","MZ":"মোজাম্বিক","NA":"নামিবিয়া","NC":"নিউ ক্যালিডোনিয়া","NE":"নাইজার","NF":"নরফোক দ্বীপ","NG":"নাইজেরিয়া","NI":"নিকারাগুয়া","NL":"নেদারল্যান্ডস","NO":"নরওয়ে","NP":"নেপাল","NR":"নাউরু","NU":"নিউয়ে","NZ":"নিউজিল্যান্ড","OM":"ওমান","PA":"পানামা","PE":"পেরু","PF":"ফরাসি পলিনেশিয়া","PG":"পাপুয়া নিউগিনি","PH":"ফিলিপাইন","PK":"পাকিস্তান","PL":"পোল্যান্ড","PM":"সাঁ পিয়ের ও মিক‌লোঁ","PN":"পিটকেয়ার্ন","PR":"পুয়ের্তো রিকো","PS":"ফিলিস্তিন রাষ্ট্র","PT":"পর্তুগাল","PW":"পালাউ","PY":"প্যারাগুয়ে","QA":"কাতার","RE":"রেউনিওঁ","RO":"রোমানিয়া","RS":"সার্বিয়া","RU":"রাশিয়া","RW":"রুয়ান্ডা","SA":"সৌদি আরব","SB":"সলোমন দ্বীপপুঞ্জ","SC":"সেশেল","SD":"সুদান","SE":"সুইডেন","SG":"সিঙ্গাপুর","SH":"সেন্ট হেলেনা, অ্যাসেনশন ও ত্রিস্তান দা কুনহা","SI":"স্লোভেনিয়া","SJ":"স্বালবার্ড ও জান মায়েন","SK":"স্লোভাকিয়া","SL":"সিয়েরা লিওন","SM":"সান মারিনো","SN":"সেনেগাল","SO":"সোমালিয়া","SR":"সুরিনাম","SS":"দক্ষিণ সুদান","ST":"সাঁউ তুমি ও প্রিন্সিপি","SV":"এল সালভাদোর","SX":"সিন্ট মার্টেন (ওলন্দাজ অংশ)","SY":"আরব প্রজাতন্ত্র সিরিয়া","SZ":"সোয়াজিল্যান্ড","TC":"টার্কস্‌ ও কেইকোস দ্বীপপুঞ্জ","TD":"চাদ","TF":"ফরাসি সাউদার্ন টেরিটোরিজ","TG":"টোগো","TH":"থাইল্যান্ড","TJ":"তাজিকিস্তান","TK":"টোকেলাউ","TL":"তিমোর্‌ ল্যেশ্ত্যি","TM":"তুর্কমেনিস্তান","TN":"তিউনিসিয়া","TO":"টোঙ্গা","TR":"তুরস্ক","TT":"ত্রিনিদাদ ও টোবাগো","TV":"টুভালু","TW":"তাইওয়ান, চীনের প্রদেশ","TZ":"তানজানিয়া যুক্তপ্রজাতন্ত্র","UA":"ইউক্রেন","UG":"উগান্ডা","UM":"মার্কিন যুক্তরাষ্ট্রের ক্ষুদ্র পার্শ্ববর্তী দ্বীপপুঞ্জ","US":"মার্কিন যুক্তরাষ্ট্র","UY":"উরুগুয়ে","UZ":"উজবেকিস্তান","VA":"ভ্যাটিকান সিটি","VC":"সেন্ট ভিনসেন্ট ও গ্রেনাডাইন দ্বীপপুঞ্জ","VE":"ভেনেজুয়েলার বোলিভিয় প্রজাতন্ত্র","VG":"ব্রিটিশ ভার্জিন দ্বীপপুঞ্জ","VI":"মার্কিন ভার্জিন দ্বীপপুঞ্জ ","VN":"ভিয়েত নাম","VU":"ভানুয়াটু","WF":"ওয়ালিম ও ফুটুনা দ্বীপপুঞ্জের","WS":"সামোয়া","XK":"কসোভো","YE":"ইয়েমেন","YT":"মায়োত","ZA":"দক্ষিণ আফ্রিকা","ZM":"জাম্বিয়া","ZW":"জিম্বাবুয়ে"}}'))},71899,a=>{a.v(JSON.parse('{"locale":"br","countries":{"AD":"Andorra","AE":"Emirelezhioù Arab Unanet","AF":"Afghanistan","AG":"Antigua ha Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antarktika","AR":"Arc\'hantina","AS":"Samoa Amerikan","AT":"Aostria","AU":"Aostralia","AW":"Aruba","AX":"Åland","AZ":"Azerbaidjan","BA":"Bosnia ha Herzegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgia","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrein","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Bonaire, Sint Eustatius ha Saba","BR":"Brazil","BS":"Bahamas","BT":"Bhoutan","BV":"Enez Bouvet","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Kanada","CC":"Inizi Cocos (Keeling)","CD":"Kongo-Kinshasa","CF":"Republik Kreizafrikan","CG":"Kongo-Brazzaville","CH":"Suis","CI":"Aod an Olifant","CK":"Inizi Cook","CL":"Chile","CM":"Kameroun","CN":"Sina","CO":"Kolombia","CR":"Costa Rica","CU":"Kuba","CV":"Kab Glas","CW":"Curaçao","CX":"Enez Christmas","CY":"Kiprenez","CZ":"Tchekia","DE":"Alamagn","DJ":"Djibouti","DK":"Danmark","DM":"Dominica","DO":"Republik Dominikan","DZ":"Aljeria","EC":"Ecuador","EE":"Estonia","EG":"Egipt","EH":"Sahara ar C\'hornôg","ER":"Eritrea","ES":"Spagn","ET":"Etiopia","FI":"Finland","FJ":"Fidji","FK":"Inizi Maloù","FM":"Mikronezia","FO":"Inizi Faero","FR":"Frañs","GA":"Gabon","GB":"Rouantelezh-Unanet","GD":"Grenada","GE":"Jorjia","GF":"Gwiana C\'hall","GG":"Gwernenez","GH":"Ghana","GI":"Jibraltar","GL":"Greunland","GM":"Gambia","GN":"Ginea","GP":"Gwadeloup","GQ":"Ginea ar C\'heheder","GR":"Gres","GS":"Georgia ar Su hag Inizi Sandwich ar Su","GT":"Guatemala","GU":"Guam","GW":"Ginea-Bissau","GY":"Guyana","HK":"Hong Kong","HM":"Inizi Heard ha McDonald","HN":"Honduras","HR":"Kroatia","HT":"Haiti","HU":"Hungaria","ID":"Indonezia","IE":"Iwerzhon","IL":"Israel","IM":"Enez Vanav","IN":"India","IO":"Tiriad breizhveurat Meurvor Indez","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italia","JE":"Jerzenez","JM":"Jamaika","JO":"Jordania","JP":"Japan","KE":"Kenya","KG":"Kirgizstan","KH":"Kambodja","KI":"Kiribati","KM":"Komorez","KN":"Saint Kitts ha Nevis","KP":"Korea an Norzh","KR":"Korea ar Su","KW":"Koweit","KY":"Inizi Cayman","KZ":"Kazakstan","LA":"Laos","LB":"Liban","LC":"Santez-Lusia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lituania","LU":"Luksembourg","LV":"Latvia","LY":"Libia","MA":"Maroko","MC":"Monaco","MD":"Moldova","ME":"Montenegro","MF":"Saint-Martin","MG":"Madagaskar","MH":"Inizi Marshall","MK":"Makedonia an Norzh","ML":"Mali","MM":"Myanmar","MN":"Mongolia","MO":"Makao","MP":"Inizi Mariana an Norzh","MQ":"Martinik","MR":"Maouritania","MS":"Montserrat","MT":"Malta","MU":"Moris","MV":"Maldivez","MW":"Malawi","MX":"Mec\'hiko","MY":"Malaysia","MZ":"Mozambik","NA":"Namibia","NC":"Kaledonia-Nevez","NE":"Niger","NF":"Enez Norfolk","NG":"Nigeria","NI":"Nicaragua","NL":"Izelvroioù","NO":"Norvegia","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Zeland-Nevez","OM":"Oman","PA":"Panama","PE":"Perou","PF":"Polinezia C\'hall","PG":"Papoua-Ginea Nevez","PH":"Filipinez","PK":"Pakistan","PL":"Polonia","PM":"Sant-Pêr-ha-Mikelon","PN":"Inizi Pitcairn","PR":"Puerto Rico","PS":"Palestina","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Katar","RE":"Reünion","RO":"Roumania","RS":"Serbia","RU":"Rusia","RW":"Rwanda","SA":"Arabia Saoudat","SB":"Inizi Salomon","SC":"Sechelez","SD":"Soudan","SE":"Sveden","SG":"Singapour","SH":"Saint Helena, Ascension, ha Tristan da Cunha","SI":"Slovenia","SJ":"Svalbard ha Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Surinam","SS":"Soudan ar Su","ST":"São Tomé ha Príncipe","SV":"El Salvador","SX":"Sint Maarten","SY":"Siria","SZ":"Eswatini","TC":"Inizi Turks ha Caicos","TD":"Tchad","TF":"Douaroù Aostral hag Antarktikel Frañs","TG":"Togo","TH":"Thailand","TJ":"Tadjikistan","TK":"Tokelau","TL":"Timor ar Reter","TM":"Turkmenistan","TN":"Tunizia","TO":"Tonga","TR":"Turkia","TT":"Trinidad ha Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraina","UG":"Ouganda","UM":"Inizi Minor A-bell Stadoù-Unanet","US":"Stadoù-Unanet","UY":"Uruguay","UZ":"Ouzbekistan","VA":"Vatikan","VC":"Sant Visant hag ar Grenadinez","VE":"Venezuela","VG":"Inizi Gwerc\'h Breizhveurat","VI":"Inizi Gwerc\'h ar Stadoù Unanet","VN":"Viêt Nam","VU":"Vanuatu","WF":"Wallis ha Futuna","WS":"Samoa","XK":"Kosovo","YE":"Yemen","YT":"Mayotte","ZA":"Suafrika","ZM":"Zambia","ZW":"Zimbabwe"}}'))},10571,a=>{a.v(JSON.parse('{"locale":"bs","countries":{"AD":"Andora","AE":"Ujedinjeni Arapski Emirati","AF":"Afganistan","AG":"Antigva i Barbuda","AI":"Angvila","AL":"Albanija","AM":"Armenija","AO":"Angola","AQ":"Antarktika","AR":"Argentina","AS":"Američka Samoa","AT":"Austrija","AU":"Australija","AW":"Aruba","AX":"Olandska Ostrva","AZ":"Azerbejdžan","BA":"Bosna i Hercegovina","BB":"Barbados","BD":"Bangladeš","BE":"Belgija","BF":"Burkina Faso","BG":"Bugarska","BH":"Bahrein","BI":"Burundi","BJ":"Benin","BL":"Sveti Bartolomej","BM":"Bermuda","BN":"Brunej","BO":"Bolivija","BQ":"Karipska Holandija","BR":"Brazil","BS":"Bahami","BT":"Butan","BV":"Ostrvo Buve","BW":"Bocvana","BY":"Bjelorusija","BZ":"Belize","CA":"Kanada","CC":"Kokosova (Kilingova) Ostrva","CD":"Demokratska Republika Kongo","CF":"Centralnoafrička Republika","CG":"Kongo","CH":"Švicarska","CI":"Obala Slonovače","CK":"Kukova Ostrva","CL":"Čile","CM":"Kamerun","CN":"Kina","CO":"Kolumbija","CR":"Kostarika","CU":"Kuba","CV":"Kape Verde","CW":"Kurasao","CX":"Božićna Ostrva","CY":"Kipar","CZ":"Češka","DE":"Njemačka","DJ":"Džibuti","DK":"Danska","DM":"Dominika","DO":"Dominikanska Republika","DZ":"Alžir","EC":"Ekvador","EE":"Estonija","EG":"Egipat","EH":"Zapadna Sahara","ER":"Eritreja","ES":"Španija","ET":"Etiopija","FI":"Finska","FJ":"Fidži","FK":"Folklandska Ostrva","FM":"Mikronezija","FO":"Farska Ostrva","FR":"Francuska","GA":"Gabon","GB":"Velika Britanija","GD":"Grenada","GE":"Gruzija","GF":"Francuska Gvajana","GG":"Gernzi","GH":"Gana","GI":"Gibraltar","GL":"Grenland","GM":"Gambija","GN":"Gvineja","GP":"Gvadalupe","GQ":"Ekvatorijalna Gvineja","GR":"Grčka","GS":"Južna Džordžija i Južna Sendvička Ostrva","GT":"Gvatemala","GU":"Guam","GW":"Gvineja-Bisao","GY":"Gvajana","HK":"Hong Kong (SAR Kina)","HM":"Herd i arhipelag MekDonald","HN":"Honduras","HR":"Hrvatska","HT":"Haiti","HU":"Mađarska","ID":"Indonezija","IE":"Irska","IL":"Izrael","IM":"Ostrvo Man","IN":"Indija","IO":"Britanska Teritorija u Indijskom Okeanu","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italija","JE":"Džerzi","JM":"Jamajka","JO":"Jordan","JP":"Japan","KE":"Kenija","KG":"Kirgistan","KH":"Kambodža","KI":"Kiribati","KM":"Komorska Ostrva","KN":"Sveti Kits i Nevis","KP":"Sjeverna Koreja","KR":"Južna Koreja","KW":"Kuvajt","KY":"Kajmanska Ostrva","KZ":"Kazahstan","LA":"Laos","LB":"Liban","LC":"Sveta Lucija","LI":"Lihtenštajn","LK":"Šri Lanka","LR":"Liberija","LS":"Lesoto","LT":"Litvanija","LU":"Luksemburg","LV":"Latvija","LY":"Libija","MA":"Maroko","MC":"Monako","MD":"Moldavija","ME":"Crna Gora","MF":"Sv. Martin","MG":"Madagaskar","MH":"Maršalova Ostrva","MK":"Sjeverna Makedonija","ML":"Mali","MM":"Mijanmar","MN":"Mongolija","MO":"Makao (SAR Kina)","MP":"Sjeverna Marijanska Ostrva","MQ":"Martinik","MR":"Mauritanija","MS":"Monserat","MT":"Malta","MU":"Mauricijus","MV":"Maldivi","MW":"Malavi","MX":"Meksiko","MY":"Malezija","MZ":"Mozambik","NA":"Namibija","NC":"Nova Kaledonija","NE":"Niger","NF":"Ostrvo Norfolk","NG":"Nigerija","NI":"Nikaragva","NL":"Holandija","NO":"Norveška","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Novi Zeland","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Francuska Polinezija","PG":"Papua Nova Gvineja","PH":"Filipini","PK":"Pakistan","PL":"Poljska","PM":"Sveti Petar i Mikelon","PN":"Pitkernska Ostrva","PR":"Porto Riko","PS":"Palestinska Teritorija","PT":"Portugal","PW":"Palau","PY":"Paragvaj","QA":"Katar","RE":"Reunion","RO":"Rumunija","RS":"Srbija","RU":"Rusija","RW":"Ruanda","SA":"Saudijska Arabija","SB":"Solomonska Ostrva","SC":"Sejšeli","SD":"Sudan","SE":"Švedska","SG":"Singapur","SH":"Sveta Helena","SI":"Slovenija","SJ":"Svalbard i Jan Majen","SK":"Slovačka","SL":"Sijera Leone","SM":"San Marino","SN":"Senegal","SO":"Somalija","SR":"Surinam","SS":"Južni Sudan","ST":"Sao Tome i Principe","SV":"Salvador","SX":"Sint Marten","SY":"Sirija","SZ":"Svazilend","TC":"Ostrva Turks i Kaikos","TD":"Čad","TF":"Francuske Južne Teritorije","TG":"Togo","TH":"Tajland","TJ":"Tadžikistan","TK":"Tokelau","TL":"Istočni Timor","TM":"Turkmenistan","TN":"Tunis","TO":"Tonga","TR":"Turska","TT":"Trinidad i Tobago","TV":"Tuvalu","TW":"Tajvan","TZ":"Tanzanija","UA":"Ukrajina","UG":"Uganda","UM":"Američka Vanjska Ostrva","US":"Sjedinjene Američke Države","UY":"Urugvaj","UZ":"Uzbekistan","VA":"Vatikan","VC":"Sveti Vinsent i Grenadin","VE":"Venecuela","VG":"Britanska Djevičanska Ostrva","VI":"Američka Djevičanska Ostrva","VN":"Vijetnam","VU":"Vanuatu","WF":"Ostrva Valis i Futuna","WS":"Samoa","XK":"Kosovo","YE":"Jemen","YT":"Majote","ZA":"Južnoafrička Republika","ZM":"Zambija","ZW":"Zimbabve"}}'))},19513,a=>{a.v(JSON.parse('{"locale":"ca","countries":{"AF":"Afganistan","AX":"Åland, illes","AL":"Albània","DE":"Alemanya","DZ":"Algèria","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antàrtida","AG":"Antigua i Barbuda","SA":"Aràbia Saudita","AR":"Argentina","AM":"Armènia","AW":"Aruba","AU":"Austràlia","AT":"Àustria","AZ":"Azerbaidjan","BS":"Bahames","BH":"Bahrain","BD":"Bangla Desh","BB":"Barbados","BE":"Bèlgica","BZ":"Belize","BJ":"Benín","BM":"Bermudes","BT":"Bhutan","BY":"Bielorússia","BO":"Bolívia","BQ":"Bonaire, Sint Eustatius i Saba","BA":"Bòsnia i Hercegovina","BW":"Botswana","BV":"Bouvet","BR":"Brasil","BN":"Brunei","BG":"Bulgària","BF":"Burkina Faso","BI":"Burundi","KY":"Caiman, illes","KH":"Cambodja","CM":"Camerun","CA":"Canadà","CV":"Cap Verd","CF":"Centreafricana, República","CX":"Christmas, illa","CC":"Cocos, illes","CO":"Colòmbia","KM":"Comores","CG":"Congo, República del","CD":"Congo, República Democràtica del","CK":"Cook, illes","KP":"Corea del Nord","KR":"Corea del Sud","CI":"Costa d\'Ivori","CR":"Costa Rica","HR":"Croàcia","CU":"Cuba","CW":"Curaçao","DK":"Dinamarca","DJ":"Djibouti","DM":"Dominica","DO":"Dominicana, República","EG":"Egipte","EC":"Equador","AE":"Emirats Àrabs Units","ER":"Eritrea","SK":"Eslovàquia","SI":"Eslovènia","ES":"Espanya","US":"Estats Units (EUA)","EE":"Estònia","ET":"Etiòpia","FO":"Fèroe, illes","FJ":"Fiji","PH":"Filipines","FI":"Finlàndia","FR":"França","GA":"Gabon","GM":"Gàmbia","GE":"Geòrgia","GS":"Geòrgia del Sud i Sandwich del Sud, illes","GH":"Ghana","GI":"Gibraltar","GR":"Grècia","GD":"Grenada","GL":"Groenlàndia","GP":"Guadeloupe","GF":"Guaiana Francesa","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"República de Guinea","GW":"Guinea Bissau","GQ":"Guinea Equatorial","GY":"Guyana","HT":"Haití","HM":"Heard, illa i McDonald, illes","HN":"Hondures","HK":"Hong Kong","HU":"Hongria","YE":"Iemen","IM":"Illa de Man","UM":"Illes Perifèriques Menors dels EUA","IN":"Índia","ID":"Indonèsia","IR":"Iran","IQ":"Iraq","IE":"Irlanda","IS":"Islàndia","IL":"Israel","IT":"Itàlia","JM":"Jamaica","JP":"Japó","JE":"Jersey","JO":"Jordània","KZ":"Kazakhstan","KE":"Kenya","KG":"Kirguizistan","KI":"Kiribati","KW":"Kuwait","LA":"Laos","LS":"Lesotho","LV":"Letònia","LB":"Líban","LR":"Libèria","LY":"Líbia","LI":"Liechtenstein","LT":"Lituània","LU":"Luxemburg","MO":"Macau","MK":"Macedònia del Nord","MG":"Madagascar","MY":"Malàisia","MW":"Malawi","MV":"Maldives","ML":"Mali","MT":"Malta","FK":"Malvines, illes","MP":"Mariannes Septentrionals, illes","MA":"Marroc","MH":"Marshall, illes","MQ":"Martinica","MU":"Maurici","MR":"Mauritània","YT":"Mayotte","MX":"Mèxic","FM":"Micronèsia, Estats Federats de","MZ":"Moçambic","MD":"Moldàvia","MC":"Mònaco","MN":"Mongòlia","ME":"Montenegro","MS":"Montserrat","MM":"Myanmar","NA":"Namíbia","NR":"Nauru","NP":"Nepal","NI":"Nicaragua","NE":"Níger","NG":"Nigèria","NU":"Niue","NF":"Norfolk, illa","NO":"Noruega","NC":"Nova Caledònia","NZ":"Nova Zelanda","OM":"Oman","NL":"Països Baixos","PK":"Pakistan","PW":"Palau","PS":"Palestina","PA":"Panamà","PG":"Papua Nova Guinea","PY":"Paraguai","PE":"Perú","PN":"Pitcairn, illes","PF":"Polinèsia Francesa","PL":"Polònia","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","GB":"Regne Unit","RE":"Reunió, illa de la","RO":"Romania","RU":"Rússia","RW":"Ruanda","EH":"Sàhara Occidental","KN":"Saint Kitts i Nevis","LC":"Saint Lucia","PM":"Saint-Pierre i Miquelon","VC":"Saint Vincent i les Grenadines","BL":"Saint-Barthélemy","MF":"Saint-Martin","SB":"Salomó","SV":"Salvador, El","WS":"Samoa","AS":"Samoa Nord-americana","SM":"San Marino","SH":"Santa Helena","ST":"São Tomé i Príncipe","SN":"Senegal","RS":"Sèrbia","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapur","SX":"Sint Maarten","SY":"Síria","SO":"Somàlia","LK":"Sri Lanka","ZA":"Sud-àfrica","SD":"Sudan","SS":"Sudan del Sud","SE":"Suècia","CH":"Suïssa","SR":"Surinam","SJ":"Svalbard i Jan Mayen","SZ":"Swazilàndia","TJ":"Tadjikistan","TH":"Tailàndia","TW":"Taiwan","TZ":"Tanzània","IO":"Territori Britànic de l\'Oceà Índic","TF":"Territoris Francesos del Sud","TL":"Timor Oriental","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinitat i Tobago","TN":"Tunísia","TM":"Turkmenistan","TC":"Turks i Caicos, illes","TR":"Turquia","TV":"Tuvalu","TD":"Txad","CZ":"Txèquia","UA":"Ucraïna","UG":"Uganda","UY":"Uruguai","UZ":"Uzbekistan","VU":"Vanuatu","VA":"Vaticà, Ciutat del","VE":"Veneçuela","VG":"Verges Britàniques, illes","VI":"Verges Nord-americanes, illes","VN":"Vietnam","WF":"Wallis i Futuna","CL":"Xile","CN":"Xina","CY":"Xipre","ZM":"Zàmbia","ZW":"Zimbabwe","XK":"Kosovo"}}'))},72726,a=>{a.v(JSON.parse('{"locale":"cs","countries":{"AF":"Afghánistán","AX":"Ålandy","AL":"Albánie","DZ":"Alžírsko","AS":"Americká Samoa","VI":"Americké Panenské ostrovy","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktida","AG":"Antigua a Barbuda","AR":"Argentina","AM":"Arménie","AW":"Aruba","AU":"Austrálie","AZ":"Ázerbájdžán","BS":"Bahamy","BH":"Bahrajn","BD":"Bangladéš","BB":"Barbados","BE":"Belgie","BZ":"Belize","BY":"Bělorusko","BJ":"Benin","BM":"Bermudy","BT":"Bhútán","BO":"Bolívie","BQ":"Bonaire, Svatý Eustach a Saba","BA":"Bosna a Hercegovina","BW":"Botswana","BV":"Bouvetův ostrov","BR":"Brazílie","IO":"Britské indickooceánské území","VG":"Britské Panenské ostrovy","BN":"Brunej","BG":"Bulharsko","BF":"Burkina Faso","BI":"Burundi","CK":"Cookovy ostrovy","CW":"Curaçao","TD":"Čad","ME":"Černá Hora","CZ":"Česká republika","CN":"Čína","DK":"Dánsko","CD":"Demokratická republika Kongo","DM":"Dominika","DO":"Dominikánská republika","DJ":"Džibutsko","EG":"Egypt","EC":"Ekvádor","ER":"Eritrea","EE":"Estonsko","ET":"Etiopie","FO":"Faerské ostrovy","FK":"Falklandy (Malvíny)","FJ":"Fidži","PH":"Filipíny","FI":"Finsko","FR":"Francie","GF":"Francouzská Guyana","TF":"Francouzská jižní a antarktická území","PF":"Francouzská Polynésie","GA":"Gabon","GM":"Gambie","GH":"Ghana","GI":"Gibraltar","GD":"Grenada","GL":"Grónsko","GE":"Gruzie","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea-Bissau","GG":"Guernsey","GY":"Guyana","HT":"Haiti","HM":"Heardův ostrov a McDonaldovy ostrovy","HN":"Honduras","HK":"Hongkong","CL":"Chile","HR":"Chorvatsko","IN":"Indie","ID":"Indonésie","IQ":"Irák","IR":"Írán","IE":"Irsko","IS":"Island","IT":"Itálie","IL":"Izrael","JM":"Jamajka","JP":"Japonsko","YE":"Jemen","JE":"Jersey","ZA":"Jihoafrická republika","GS":"Jižní Georgie a Jižní Sandwichovy ostrovy","KR":"Jižní Korea","SS":"Jižní Súdán","JO":"Jordánsko","KY":"Kajmanské ostrovy","KH":"Kambodža","CM":"Kamerun","CA":"Kanada","CV":"Kapverdy","QA":"Katar","KZ":"Kazachstán","KE":"Keňa","KI":"Kiribati","CC":"Kokosové ostrovy","CO":"Kolumbie","KM":"Komory","CG":"Kongo","CR":"Kostarika","CU":"Kuba","KW":"Kuvajt","CY":"Kypr","KG":"Kyrgyzstán","LA":"Laos","LS":"Lesotho","LB":"Libanon","LR":"Libérie","LY":"Libye","LI":"Lichtenštejnsko","LT":"Litva","LV":"Lotyšsko","LU":"Lucembursko","MO":"Macao","MG":"Madagaskar","HU":"Maďarsko","MY":"Malajsie","MW":"Malawi","MV":"Maledivy","ML":"Mali","MT":"Malta","IM":"Ostrov Man","MA":"Maroko","MH":"Marshallovy ostrovy","MQ":"Martinik","MU":"Mauricius","MR":"Mauritánie","YT":"Mayotte","UM":"Menší odlehlé ostrovy USA","MX":"Mexiko","FM":"Mikronésie","MD":"Moldavsko","MC":"Monako","MN":"Mongolsko","MS":"Montserrat","MZ":"Mosambik","MM":"Myanmar","NA":"Namibie","NR":"Nauru","DE":"Německo","NP":"Nepál","NE":"Niger","NG":"Nigérie","NI":"Nikaragua","NU":"Niue","NL":"Nizozemsko","NF":"Norfolk","NO":"Norsko","NC":"Nová Kaledonie","NZ":"Nový Zéland","OM":"Omán","PK":"Pákistán","PW":"Palau","PS":"Palestinská autonomie","PA":"Panama","PG":"Papua-Nová Guinea","PY":"Paraguay","PE":"Peru","PN":"Pitcairnovy ostrovy","CI":"Pobřeží slonoviny","PL":"Polsko","PR":"Portoriko","PT":"Portugalsko","AT":"Rakousko","RE":"Réunion","GQ":"Rovníková Guinea","RO":"Rumunsko","RU":"Rusko","RW":"Rwanda","GR":"Řecko","PM":"Saint-Pierre a Miquelon","SV":"Salvador","WS":"Samoa","SM":"San Marino","SA":"Saúdská Arábie","SN":"Senegal","KP":"Severní Korea","MK":"Severní Makedonie","MP":"Severní Mariany","SC":"Seychely","SL":"Sierra Leone","SG":"Singapur","SK":"Slovensko","SI":"Slovinsko","SO":"Somálsko","AE":"Spojené arabské emiráty","GB":"Spojené království","US":"Spojené státy americké","RS":"Srbsko","CF":"Středoafrická republika","SD":"Súdán","SR":"Surinam","SH":"Svatá Helena, Ascension a Tristan da Cunha","LC":"Svatá Lucie","BL":"Svatý Bartoloměj","KN":"Svatý Kryštof a Nevis","MF":"Svatý Martin (francouzská část)","SX":"Svatý Martin (nizozemská část)","ST":"Svatý Tomáš a Princův ostrov","VC":"Svatý Vincenc a Grenadiny","SZ":"Svazijsko","SY":"Sýrie","SB":"Šalamounovy ostrovy","ES":"Španělsko","SJ":"Špicberky a Jan Mayen","LK":"Šrí Lanka","SE":"Švédsko","CH":"Švýcarsko","TJ":"Tádžikistán","TZ":"Tanzanie","TH":"Thajsko","TW":"Tchaj-wan","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad a Tobago","TN":"Tunisko","TR":"Turecko","TM":"Turkmenistán","TC":"Turks a Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ukrajina","UY":"Uruguay","UZ":"Uzbekistán","CX":"Vánoční ostrov","VU":"Vanuatu","VA":"Vatikán","VE":"Venezuela","VN":"Vietnam","TL":"Východní Timor","WF":"Wallis a Futuna","ZM":"Zambie","EH":"Západní Sahara","ZW":"Zimbabwe","XK":"Kosovo"}}'))},16153,a=>{a.v(JSON.parse('{"locale":"cy","countries":{"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"Samoa Americanaidd","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua a Barbuda","AR":"Yr Ariannin","AM":"Armenia","AW":"Aruba","AU":"Awstralia","AT":"Awstria","AZ":"Azerbaijan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarus","BE":"Gwlad Belg","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolifia","BA":"Bosnia a Herzegovina","BW":"Botswana","BV":"Ynys Bouvet","BR":"Brasil","IO":"Tiriogaeth Cefnfor India Prydain","BN":"Brunei Darussalam","BG":"Bwlgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Cambodia","CM":"Camerŵn","CA":"Canada","CV":"Cape Verde","KY":"Ynysoedd Cayman","CF":"Gweriniaeth Canolbarth Affrica","TD":"Chad","CL":"Chile","CN":"China","CX":"Ynys y Nadolig","CC":"Ynysoedd Cocos (Keeling)","CO":"Colombia","KM":"Comoros","CG":"Congo","CD":"Congo, Gweriniaeth Ddemocrataidd y","CK":"Ynysoedd Cook","CR":"Costa Rica","CI":["Cote d\'Ivoire","Côte d\'Ivoire"],"HR":"Croatia","CU":"Cuba","CY":"Cyprus","CZ":"Gweriniaeth Tsiec","DK":"Denmarc","DJ":"Djibouti","DM":"Dominica","DO":"Gweriniaeth Ddominicaidd","EC":"Ecwador","EG":"Yr Aifft","SV":"El Salvador","GQ":"Gini Cyhydeddol","ER":"Eritrea","EE":"Estonia","ET":"Ethiopia","FK":"Ynysoedd y Falkland (Malvinas)","FO":"Ynysoedd Ffaro","FJ":"Ffiji","FI":"Y Ffindir","FR":"Ffrainc","GF":"Guiana Ffrengig","PF":"Polynesia Ffrainc","TF":"Tiriogaethau De Ffrainc","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Yr Almaen","GH":"Ghana","GI":"Gibraltar","GR":"Gwlad Groeg","GL":"Yr Ynys Las","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Gini","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Ynys Heard ac Ynysoedd McDonald","VA":"Holy See (Dinas-wladwriaeth y Fatican)","HN":"Honduras","HK":"Hong Kong","HU":"Hwngari","IS":"Gwlad yr Iâ","IN":"India","ID":"Indonesia","IR":"Iran, Gweriniaeth Islamaidd","IQ":"Irac","IE":"Iwerddon","IL":"Israel","IT":"Yr Eidal","JM":"Jamaica","JP":"Japan","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Gogledd Corea","KR":"De Korea","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Gweriniaeth Ddemocrataidd Pobl Lao","LV":"Latfia","LB":"Libanus","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithwania","LU":"Lwcsembwrg","MO":"Macao","MG":"Madagascar","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Ynysoedd Marshall","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mecsico","FM":"Micronesia, Gwladwriaethau Ffederal o","MD":"Moldofa, Gweriniaeth","MC":"Monaco","MN":"Mongolia","MS":"Montserrat","MA":"Moroco","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Yr Iseldiroedd","NC":"Caledonia Newydd","NZ":"Seland Newydd","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Ynys Norfolk","MK":"Gogledd Macedonia, Gweriniaeth","MP":"Ynysoedd Gogledd Mariana","NO":"Norwy","OM":"Oman","PK":"Pacistan","PW":"Palau","PS":["Cyflwr Palestina","Palestina"],"PA":"Panama","PG":"Gini Newydd Papua","PY":"Paraguay","PE":"Periw","PH":"Philippines","PN":"Pitcairn","PL":"Gwlad Pwyl","PT":"Portiwgal","PR":"Puerto Rico","QA":"Qatar","RE":"Aduniad","RO":"Rwmania","RU":["Ffederasiwn Rwseg","Rwsia"],"RW":"Rwanda","SH":"Saint Helena","KN":"Saint Kitts a Nevis","LC":"Saint Lucia","PM":"Saint Pierre a Miquelon","VC":"Saint Vincent and the Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome a Principe","SA":"Saudi Arabia","SN":"Senegal","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapore","SK":"Slofacia","SI":"Slofenia","SB":"Ynysoedd Solomon","SO":"Somalia","ZA":"De Affrica","GS":"De Georgia ac Ynysoedd De Sandwich","ES":"Sbaen","LK":"Sri Lanka","SD":"Sudan","SR":"Swrinam","SJ":"Svalbard a Jan Mayen","SZ":"Eswatini","SE":"Sweden","CH":"Y Swistir","SY":"Gweriniaeth Arabaidd Syria","TW":["Taiwan, Talaith China","Taiwan"],"TJ":"Tajikistan","TZ":"Tanzania, Gweriniaeth Unedig","TH":"Gwlad Thai","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad a Tobago","TN":"Tiwnisia","TR":"Twrci","TM":"Turkmenistan","TC":"Ynysoedd y Twrciaid ac Ynysoedd Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Wcráin","AE":"Emiradau Arabaidd Unedig","GB":["Y Deyrnas Unedig","DU","Prydain Fawr"],"US":["Unol Daleithiau America","UDA"],"UM":"Mân Ynysoedd Allanol yr Unol Daleithiau","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Fietnam","VG":"Ynysoedd Virgin, Prydeinig","VI":"Ynysoedd Virgin, U.S.","WF":"Wallis a Futuna","EH":"Sahara Gorllewinol","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Ynysoedd Åland","BQ":"Bonaire, Sint Eustatius a Saba","CW":"Curaçao","GG":"Guernsey","IM":"Ynys Manaw","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (rhan Ffrangeg)","RS":"Serbia","SX":"Sint Maarten (rhan Iseldireg)","SS":"De Swdan","XK":"Kosovo"}}'))},70483,a=>{a.v(JSON.parse('{"locale":"da","countries":{"AF":"Afghanistan","AL":"Albanien","DZ":"Algeriet","AS":"Amerikansk Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktis","AG":"Antigua og Barbuda","AR":"Argentina","AM":"Armenien","AW":"Aruba","AU":"Australien","AT":"Østrig","AZ":"Aserbajdsjan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Hviderusland","BE":"Belgien","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BA":"Bosnien-Hercegovina","BW":"Botswana","BV":"Bouvet Island","BR":"Brasilien","IO":"British Indian Ocean Territory","BN":"Brunei Darussalam","BG":"Bulgarien","BF":"Burkina Faso","BI":"Burundi","KH":"Cambodja","CM":"Cameroun","CA":"Canada","CV":"Kap Verde","KY":"Caymanøerne","CF":"Den Centralafrikanske Republik","TD":"Tchad","CL":"Chile","CN":"Kina","CX":"Juløen","CC":"Cocosøerne","CO":"Colombia","KM":"Comorerne","CG":"Congo","CD":"Demokratiske Republik Congo","CK":"Cookøerne","CR":"Costa Rica","CI":"Elfenbenskysten","HR":"Kroatien","CU":"Cuba","CY":"Cypern","CZ":"Tjekkiet","DK":"Danmark","DJ":"Djibouti","DM":"Dominica","DO":"Dominikanske Republik","EC":"Ecuador","EG":"Egypten","SV":"El Salvador","GQ":"Ækvatorialguinea","ER":"Eritrea","EE":"Estland","ET":"Etiopien","FK":"Falklandsøerne","FO":"Færøerne","FJ":"Fiji","FI":"Finland","FR":"Frankrig","GF":"Fransk Guiana","PF":"Fransk Polynesien","TF":"Franske Sydterritorier","GA":"Gabon","GM":"Gambia","GE":"Georgien","DE":"Tyskland","GH":"Ghana","GI":"Gibraltar","GR":"Grækenland","GL":"Grønland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard-øen og McDonald-øerne","VA":"Vatikanstaten","HN":"Honduras","HK":"Hong Kong","HU":"Ungarn","IS":"Island","IN":"Indien","ID":"Indonesien","IR":"Iran","IQ":"Irak","IE":"Irland","IL":"Israel","IT":"Italien","JM":"Jamaica","JP":"Japan","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Nordkorea","KR":"Sydkorea","KW":"Kuwait","KG":"Kirgisistan","LA":"Laos","LV":"Letland","LB":"Libanon","LS":"Lesotho","LR":"Liberia","LY":"Libyen","LI":"Liechtenstein","LT":"Litauen","LU":"Luxembourg","MO":"Macao","MK":"Nordmakedonien","MG":"Madagaskar","MW":"Malawi","MY":"Malaysia","MV":"Maldiverne","ML":"Mali","MT":"Malta","MH":"Marshalløerne","MQ":"Martinique","MR":"Mauretanien","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Mikronesien","MD":"Moldova","MC":"Monaco","MN":"Mongoliet","MS":"Montserrat","MA":"Marokko","MZ":"Mozambique","MM":"Myanmar (Burma)","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Holland","NC":"Ny Kaledonien","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolk Island","MP":"Nordmarianerne","NO":"Norge","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palæstina","PA":"Panama","PG":"Papua Ny Guinea","PY":"Paraguay","PE":"Peru","PH":"Filippinerne","PN":"Pitcairn","PL":"Polen","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","RE":"Réunion","RO":"Rumænien","RU":"Rusland","RW":"Rwanda","SH":"Sankt Helena","KN":"Saint Kitts og Nevis","LC":"Saint Lucia","PM":"Saint-Pierre og Miquelon","VC":"Saint Vincent og Grenadinerne","WS":"Samoa","SM":"San Marino","ST":"São Tomé og Príncipe","SA":"Saudi-Arabien","SN":"Senegal","SC":"Seychellerne","SL":"Sierra Leone","SG":"Singapore","SK":"Slovakiet","SI":"Slovenien","SB":"Salomonøerne","SO":"Somalia","ZA":"Sydafrika","GS":"South Georgia og South Sandwich Islands","ES":"Spanien","LK":"Sri Lanka","SD":"Sudan","SR":"Surinam","SJ":"Norge Svalbard og Jan Mayen","SZ":"Eswatini","SE":"Sverige","CH":"Schweiz","SY":"Syrien","TW":"Republikken Kina Taiwan","TJ":"Tadsjikistan","TZ":"Tanzania","TH":"Thailand","TL":"Østtimor","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad og Tobago","TN":"Tunesien","TR":"Tyrkiet","TM":"Turkmenistan","TC":"Turks- og Caicosøerne","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"Forenede Arabiske Emirater","GB":"Storbritannien","US":"USA","UM":"USA\'s ydre småøer","UY":"Uruguay","UZ":"Usbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Britiske Jomfruøer","VI":"Amerikanske Jomfruøer","WF":"Wallis og Futuna","EH":"Vestsahara","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Ålandsøerne","BQ":"Nederlandske Antiller","CW":"Curaçao","GG":"Guernsey","IM":"Isle of Man","JE":"Jersey","ME":"Montenegro","BL":"Saint-Barthélemy","MF":"Saint Martin (fransk side)","RS":"Serbien","SX":"Saint Martin (hollandsk side)","SS":"Sydsudan","XK":"Kosovo"}}'))},20037,a=>{a.v(JSON.parse('{"locale":"de","countries":{"AF":"Afghanistan","EG":"Ägypten","AX":"Åland","AL":"Albanien","DZ":"Algerien","AS":"Amerikanisch-Samoa","VI":"Amerikanische Jungferninseln","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktis","AG":"Antigua und Barbuda","GQ":"Äquatorialguinea","AR":"Argentinien","AM":"Armenien","AW":"Aruba","AZ":"Aserbaidschan","ET":"Äthiopien","AU":"Australien","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesch","BB":"Barbados","BY":"Belarus","BE":"Belgien","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivien","BQ":"Bonaire","BA":"Bosnien und Herzegowina","BW":"Botswana","BV":"Bouvetinsel","BR":"Brasilien","VG":"Britische Jungferninseln","IO":"Britisches Territorium im Indischen Ozean","BN":"Brunei Darussalam","BG":"Bulgarien","BF":"Burkina Faso","BI":"Burundi","CL":"Chile","CN":"China","CK":"Cookinseln","CR":"Costa Rica","CI":"Elfenbeinküste","CW":"Curaçao","DK":"Dänemark","DE":"Deutschland","DM":"Dominica","DO":"Dominikanische Republik","DJ":"Dschibuti","EC":"Ecuador","SV":"El Salvador","ER":"Eritrea","EE":"Estland","FK":"Falklandinseln","FO":"Färöer","FJ":"Fidschi","FI":"Finnland","FR":"Frankreich","GF":"Französisch-Guayana","PF":"Französisch-Polynesien","TF":"Französische Süd- und Antarktisgebiete","GA":"Gabun","GM":"Gambia","GE":"Georgien","GH":"Ghana","GI":"Gibraltar","GD":"Grenada","GR":"Griechenland","GL":"Grönland","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard und McDonaldinseln","HN":"Honduras","HK":["Hongkong","Hong Kong"],"IN":"Indien","ID":"Indonesien","IM":"Insel Man","IQ":"Irak","IR":"Iran","IE":"Irland","IS":"Island","IL":"Israel","IT":"Italien","JM":"Jamaika","JP":"Japan","YE":"Jemen","JE":"Jersey","JO":"Jordanien","KY":"Kaimaninseln","KH":"Kambodscha","CM":"Kamerun","CA":"Kanada","CV":"Kap Verde","KZ":"Kasachstan","QA":"Katar","KE":"Kenia","KG":"Kirgisistan","KI":"Kiribati","CC":"Kokosinseln","CO":"Kolumbien","KM":"Komoren","CD":"Kongo","KP":"Nordkorea","KR":"Südkorea","HR":"Kroatien","CU":"Kuba","KW":"Kuwait","LA":"Laos","LS":"Lesotho","LV":"Lettland","LB":"Libanon","LR":"Liberia","LY":"Libyen","LI":"Liechtenstein","LT":"Litauen","LU":"Luxemburg","MO":"Macao","MG":"Madagaskar","MW":"Malawi","MY":"Malaysia","MV":"Malediven","ML":"Mali","MT":"Malta","MA":"Marokko","MH":"Marshallinseln","MQ":"Martinique","MR":"Mauretanien","MU":"Mauritius","YT":"Mayotte","MX":"Mexiko","FM":"Mikronesien","MD":"Moldawien","MC":"Monaco","MN":"Mongolei","ME":"Montenegro","MS":"Montserrat","MZ":"Mosambik","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NC":"Neukaledonien","NZ":"Neuseeland","NI":"Nicaragua","NL":"Niederlande","NE":"Niger","NG":"Nigeria","NU":"Niue","MK":"Nordmazedonien","MP":"Nördliche Marianen","NF":"Norfolkinsel","NO":"Norwegen","OM":"Oman","AT":"Österreich","TL":"Osttimor","PK":"Pakistan","PS":"Staat Palästina","PW":"Palau","PA":"Panama","PG":"Papua-Neuguinea","PY":"Paraguay","PE":"Peru","PH":"Philippinen","PN":"Pitcairninseln","PL":"Polen","PT":"Portugal","PR":"Puerto Rico","TW":"Taiwan","CG":"Republik Kongo","RE":"Réunion","RW":"Ruanda","RO":"Rumänien","RU":["Russische Föderation","Russland"],"BL":"Saint-Barthélemy","MF":"Saint-Martin","SB":"Salomonen","ZM":"Sambia","WS":"Samoa","SM":"San Marino","ST":"São Tomé und Príncipe","SA":"Saudi-Arabien","SE":"Schweden","CH":"Schweiz","SN":"Senegal","RS":"Serbien","SC":"Seychellen","SL":"Sierra Leone","ZW":"Simbabwe","SG":"Singapur","SX":"Sint Maarten","SK":"Slowakei","SI":"Slowenien","SO":"Somalia","ES":"Spanien","LK":"Sri Lanka","SH":"St. Helena","KN":"St. Kitts und Nevis","LC":"St. Lucia","PM":"Saint-Pierre und Miquelon","VC":"St. Vincent und die Grenadinen","ZA":"Südafrika","SD":"Sudan","GS":"Südgeorgien und die Südlichen Sandwichinseln","SS":"Südsudan","SR":"Suriname","SJ":"Svalbard und Jan Mayen","SZ":"Eswatini","SY":"Syrien, Arabische Republik","TJ":"Tadschikistan","TZ":["Tansania, Vereinigte Republik","Tansania"],"TH":"Thailand","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad und Tobago","TD":"Tschad","CZ":["Tschechische Republik","Tschechien"],"TN":"Tunesien","TR":"Türkei","TM":"Turkmenistan","TC":"Turks- und Caicosinseln","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","HU":"Ungarn","UM":"United States Minor Outlying Islands","UY":"Uruguay","UZ":"Usbekistan","VU":"Vanuatu","VA":"Vatikanstadt","VE":"Venezuela","AE":"Vereinigte Arabische Emirate","US":["Vereinigte Staaten von Amerika","Vereinigte Staaten","USA"],"GB":["Vereinigtes Königreich","Großbritannien"],"VN":"Vietnam","WF":"Wallis und Futuna","CX":"Weihnachtsinsel","EH":"Westsahara","CF":"Zentralafrikanische Republik","CY":"Zypern","XK":"Kosovo"}}'))},27115,a=>{a.v(JSON.parse('{"locale":"dv","countries":{"AF":"އަފްޣާނިސްތާން","AL":"އަލްބޭނިއާ","DZ":"އަލްޖީރިއާ","AS":"އެމެރިކަން ސަމޯއާ","AD":"އެންޑޯރާ","AO":"އެންގޯލާ","AI":"އެންގުއިލާ","AQ":"އެންޓަރްޓިކަ","AG":"އެންޓިގުއާ އެންޑް ބަރބުޑާ","AR":"އާޖެންޓީނާ","AM":"އަރްމީނިއާ","AW":"އަރޫބާ (ހޮލެންޑު)","AU":"އޮސްޓްރޭލިއާ","AT":"އޮސްޓްރިއާ","AZ":"އަޒަރުބައިޖާން","BS":"ބަހާމަސް","BH":"ބަޙްރައިން","BD":"ބަންގާޅު","BB":"ބާބަޑޮސް","BY":"ބެލަރޫސް","BE":"ބެލްޖިއަމް","BZ":"ބެލީޒު","BJ":"ބެނިން","BM":"ބާމިއުޑާ (ޔުނައިޓެޑް ކިންގްޑަމް)","BT":"ބޫޓާން","BO":"ބޮލީވިއާ","BA":"ބޮސްނިއާ އެންޑް ހާޒެގޮވީނާ","BW":"ބޮސްވާނާ","BV":"ބުވި ޖަޒީރާ","BR":"ބްރެޒިލް","IO":"ބްރިޓިޝް ހިންދު ކަނޑު ބިން","BN":"ބުރުނައީ","BG":"ބަލްގޭރިއާ","BF":"ބުރުކީނާ ފާސޯ","BI":"ބުރުންޑީ","KH":"ކެމްބޯޑިއާ","CM":"ކެމަރޫން","CA":"ކެނެޑާ","CV":"ކޭޕް ވާޑޭ","KY":"ކޭމަން އައިލެންޑްސް","CF":"ސެންޓްރަލް އެފްރިކަން ރިޕަބްލިކް","TD":"ޗާޑް","CL":"ޗިލީ","CN":"ޗައިނާ","CX":"ކްރިސްޓްމަސް ޖަޒީރާ","CC":"ކުކް ޖަޒީރާ","CO":"ކޮލަންބިއާ","KM":"ކޮމޮރޯސް","CG":"ކޮންގޯ (ޖުމްހޫރިއްޔާ)","CD":"ކޮންގޯ (ދިމިޤްރާޠީ ޖުމްހޫރިއްޔާ)","CK":"ކޫކް އައިލަންޑްސް","CR":"ކޮސްޓަ ރީކާ","CI":"ކޯޓް ޑްލްވޮއަރ","HR":"ކްރޮއޭޝިއާ","CU":"ކިޔުބާ","CY":"ސައިޕްރަސް","CZ":"ޗެޗް ރިޕަބްލިކް","DK":"ޑެންމާކު","DJ":"ޑްޖިބޯޓި","DM":"ޑޮމިނިކާ","DO":"ޑޮމިނިކަން ރިޕަބްލިކް","EC":"އީކުއެޑޯ","EG":"މިޞްރު","SV":"އެލް ސަލްވަޑޯރ","GQ":"އީކުއޭޓޯރިއަލް ގުއީނިއާ","ER":"އެރިޓްރިއާ","EE":"އެސްޓޯނިއާ","ET":"އެތިއޯޕިއާ","FK":"ފޯކްލޭންޑް އައިލޭންޑްސް","FO":"ފަރޯ އައިލެންޑްސް","FJ":"ފިޖީ","FI":"ފިންލޭންޑް","FR":"ފަރަނސޭސިވިލާތް، ފަރަންސާ","GF":"ފަރަންސޭސީ ގިޔާނާ","PF":"ފްރެންޗް ޕޮލިނީސިއާ","TF":"ފްރެންތް ސަދާން ޓެރިޓޮރީސް","GA":"ގެބޮން","GM":"ގެމްބިއާ","GE":"ޖޯޖިއާ","DE":"ޖަރުމަނުވިލާތް","GH":"ގާނާ","GI":"ގިބްރަލްޓަރ","GR":"ގްރީސް","GL":"ގުރީންލޭންޑު (ޑެންމާކު)","GD":"ގްރެނަޑާ","GP":"ގުވަދެލޫޕު","GU":"ގުއާމު","GT":"ގުއަޓެމާލާ","GN":"ގުއީނިއާ","GW":"ގުއީނިއާ ބިއްސައު","GY":"ގުޔާނާ","HT":"ހެއިޓީ","HM":"ާހޑް އައިލެންޑްސް މެކްޑޮނާލްޑް އައިފެންޑްސް","VA":"ހޮލީ ސީ","HN":"ހޮންޑިއުރާސް","HK":"ހޮންކޮންގު","HU":"ހަންގޭރީ","IS":"އައިސްލޭންޑް","IN":"ހިންދުސްތާން","ID":"އިންޑޮނީޝިޔާ","IR":"އީރާން","IQ":"ޢިރާޤު","IE":"އަޔަލޭންޑުގެ ޖުމްހޫރިއްޔާ","IL":"އިސްރާއީލު","IT":"އިޓަލީ","JM":"ޖެމޭއިކާ","JP":" ޖަޕާނު ","JO":"ޖޯޑަން","KZ":"ކަޒަކިސްތާން","KE":"ކެންޔާ","KI":"ކިރިބަޓި","KP":"ޑިމޮކްރޭޓތިކް ޕީޕަލްސް ރިޕަބްލިކް އޮފް ކޮރެއާ","KR":"ރިޕަބްލިކް އޮފް ކޮރެއާ","KW":"ކުވެއިތު","KG":"ކިރިގިސްތާން","LA":"ޕީޕަލްސް ޑިމޮކްރޭޓިކް ރިޕަބްލިކް އޮފް ލާއޯ","LV":"ލަޓްވިއާ","LB":"ލުބުނާން","LS":"ލެސޯތޯ","LR":"ލައިބީރިއާ","LY":"ލީބިޔަން އަރަބް ޖަމާހިރިއްޔާ","LI":"ލިއެޗެންސްޓެއިން","LT":"ލިތުއޭނިއާ","LU":"ލަގްޒެމްބާގް","MO":"މަކާއޯ","MK":"ޔޫގޮސްލާވިއާ","MG":"މަޑަގަސްކަރ","MW":"މެލޭޝިޔާ","MY":"މެލޭޝިޔާ","MV":"މާލީ","ML":"މޯލްޓާ","MT":"މަލްޓާ","MH":"މާޝަލް އައިލެންޑްސް","MQ":"މަރުތިނީކު","MR":"މައުރިޓޭނިއާ","MU":"މައުރިޓިއަސް","YT":"މެކްސިކޯ","MX":"މައިކްރޮނޭޝިއާ","FM":"މޮލްޑޯވާ","MD":"މޮނާކޯ","MC":"މޮންގޯލިއާ","MN":"މޮންގޯލިއާ","MS":"މޮރޮކޯ","MA":"މޮރޮކޯ","MZ":"މޮޒަންބީކް","MM":"މިޔަންމާ","NA":"ނައުރޫ","NR":"ނޭޕާލް","NP":"ނެދަލޭންޑު","NL":"ނެދަލޭންޑްސް","NC":"ނިއު ކެލިޑޯނިއާ","NZ":"ނިކަރާގުއާ","NI":"ނިޖަރު","NE":"ނައިޖީރިއާ","NG":"ނީއު","NU":"ނިއޫ","NF":"ނޯފޯކް އައިލެންޑް","MP":"ނޮދާން މަރިއާނާ އައިލަންޑްސް","NO":"ނޫރުވޭޖިއާ","OM":"އޯމާން","PK":"ޕާކިސްތާން","PW":"ޕަލާއޫ","PS":"ފަލަސްޠީނުގެ ދައުލަތް","PA":"ޕެނަމާ","PG":"ޕައުޕާ ނިއުގީނިއާ","PY":"ޕަރަގުއޭއީ","PE":"ޕެރޫ","PH":"ފިލިޕީންސް","PN":"ޕިޓްކެއާން","PL":"ޕޮލޭންޑް","PT":"ޕޯޗުގަލް","PR":"ޕުއަރޓޯ ރީކޯ","QA":"ޤަޠަރު","RE":"ރިޔޫނިއަން (ފަރަންސޭސިވިލާތް)","RO":"ރޮމޭނިއާ","RU":"ރަޝިއަން ފެޑޭރޭޝަން","RW":"ރުވާންޑާ","SH":"ސަންތި ހެލީނާ (ޔުނައިޓެޑް ކިންގްޑަމް)","KN":"ސައިންޓް ކިޓްސް އެންޑް ނެވީސް","LC":"ސައިންޓް ލޫސިއާ","PM":"ސަންތި ޕިއޭރޭ އާއި މިކުއެލޯން (ފަރަންސޭސިވިލާތް)","VC":"ސައިންޓް ވިންސެންޓް އެންޑް ދަ ގޮރެނޭޑިންސް","WS":"ސަމޯއާ","SM":"ސަން މެރީނޯ","ST":"ސައޯ ޓޯމީ އެންޑް ޕްރިންސިޕީ","SA":"ސައުދީ އެރޭބިއާ","SN":"ސެނެގާލް","SC":"ސީޝެލްސް","SL":"ސެރެލިއޯން","SG":"ސިންގަޕޯރ","SK":"ސްލޮވާކިއާ","SI":"ސްލޮވީނިއާ","SB":"ސޮލޮމޮން އައިލަންޑްސް","SO":"ސޯމާލިއާ","ZA":"ސައުތު އެފްރިކާ","GS":"ސައުތު ޖޯޖިއާ އަންޑް ދަ ސައުތު ސޭންޑްވިޗް އައިލެންޑްސް","ES":"ސްޕެއިން","LK":"އޮޅުދޫކަރަ","SD":"ސޫދާން","SR":"ސުރިނާމް","SJ":"ސްވަ ލްބަރްޑް އެންޑް ޖަން މަޔިން","SZ":"ސުވާޒިލޭންޑު","SE":"ސްވީޑަން","CH":"ސްވިޒަރލޭންޑް","SY":"ސީރިއަން އަރަބް ރިޕަބްލިކް","TW":"ޓައިވާން","TJ":"ޓަޖިކިސްތާން","TZ":"ޓާންޒޭނިއާ","TH":"ތައިލެންޑް","TL":"ޓީމޯ ލެސްޓޭ","TG":"ޓޯގޯ","TK":"ތޮކެލާއު","TO":"ޓޮންގާ","TT":"ޓްރިނިޑެޑް އެންޑް ޓޮބޭގޯ","TN":"ޓިއުނީޝިއާ","TR":"ތުރުކީވިލާތް","TM":"ތުރުކުމެނިސްތާން","TC":"ޓާކްސް އެންޑް ކެއިކޯސް އައިލެންޑްސް","TV":"ތުވާލޫ","UG":"ޔުގެންޑާ","UA":"ޔޫކްރޭން","AE":"އެކުވެރި ޢަރަބި އިމާރާތ","GB":"ޔުނައިޓަޑް ކިންގްޑޮމް","US":"ޔުނައިޓަޑް ސްޓޭޓްސް","UM":"ޔުނައިޓަޑް ސްޓޭޓްސް ކުޑާ ދެރެން އައިލޭންޑްސް","UY":"އުރުގުއޭއީ","UZ":"އުޒްބެކިސްތާން","VU":"ވަނުއާޓޫ","VE":"ވެނެޒުއޭލާ","VN":"ވިއެޓުނާމު","VG":"ވާރޖިން އައިލޭންޑްސް ބްރިޓިޝް","VI":"ވާރޖިން އައިލޭންޑްސް ޔޫއެސް","WF":"ވޯލިސް އެންޑް ފުޓުނަ","EH":"ހުޅަނގު ސަހަރާ","YE":"ޔަމަން","ZM":"ޒެމްބިއާ","ZW":"ޒިމްބާބުވޭ","AX":"އަލޭންޑް އައިލެންޑްސް","BQ":"ބުނިރް، ސިންޓް ޔުސްޓަޒިއުސ އެންޑް ސަބަ","CW":"ކުރަކާއޯ","GG":"ގުއާންސޭ (ބިރިޓިޝް ތާޖުގެ ހިޔާވަހިކަމުގައި)","IM":"އައިޒަލް އޮފް މޭން (ބިރިޓިޝް ތާޖުގެ ހިޔާވަހިކަމުގައި)","JE":"ޖާސޭ (ބިރިޓިޝް ތާޖުގެ ހިޔާވަހިކަމުގައި)","ME":"ކަޅުފަރުބަދަ","BL":"ސެއިންޓް ބާތެލެމީ","MF":"ސެއިންޓް މާޓީން","RS":"ސިރިބިއާ، ސިރިބިސްތާން، ސިރިބިވިލާތް","SX":"ސިންޓް މާޓީން","SS":"ސައުތު ސޫދާން","XK":"ކޮސޮވާ"}}'))},85944,a=>{a.v(JSON.parse('{"locale":"el","countries":{"AF":"Αφγανιστάν","AL":"Αλβανία","DZ":"Αλγερία","AS":"Αμερικανική Σαμόα","AD":"Ανδόρρα","AO":"Ανγκόλα","AI":"Ανγκουίλα","AQ":"Ανταρκτική","AG":"Αντίγκουα και Μπαρμπούντα","AR":"Αργεντινή","AM":"Αρμενία","AW":"Αρούμπα","AU":"Αυστραλία","AT":"Αυστρία","AZ":"Αζερμπαϊτζάν","BS":"Μπαχάμες","BH":"Μπαχρέιν","BD":"Μπανγκλαντές","BB":"Μπαρμπάντος","BY":"Λευκορωσία","BE":"Βέλγιο","BZ":"Μπελίζ","BJ":"Μπενίν","BM":"Βερμούδες","BT":"Μπουτάν","BO":"Βολιβία","BA":"Βοσνία και Ερζεγοβίνη","BW":"Μποτσουάνα","BV":"Μπουβέ","BR":"Βραζιλία","IO":"Βρετανικό Έδαφος Ινδικού Ωκεανού","BN":"Σουλτανάτο του Μπρουνέι","BG":"Βουλγαρία","BF":"Μπουρκίνα Φάσο","BI":"Μπουρουντί","KH":"Καμπότζη","CM":"Καμερούν","CA":"Καναδάς","CV":["Δημοκρατία του Πράσινου Ακρωτηρίου","Πράσινο Ακρωτήριο"],"KY":"Κέιμαν Νήσοι","CF":"Κεντροαφρικανική Δημοκρατία","TD":"Τσάντ","CL":"Χιλή","CN":"Κίνα","CX":"Νήσος των Χριστουγέννων","CC":"Νησιά Κόκος","CO":"Κολομβία","KM":"Ένωση των Κομορών","CG":["Δημοκρατία του Κονγκό","Κονγκό"],"CD":"Λαϊκή Δημοκρατία του Κονγκό","CK":"Νήσοι Κουκ","CR":"Κόστα Ρίκα","CI":"Ακτή Ελεφαντοστού","HR":"Κροατία","CU":"Κούβα","CY":"Κύπρος","CZ":["Τσεχική Δημοκρατία","Τσεχία"],"DK":"Δανία","DJ":"Τζιμπουτί","DM":["Κοινοπολιτεία της Δομινίκας","Ντομίνικα"],"DO":"Δομινικανή Δημοκρατία","EC":"Εκουαδόρ","EG":"Αίγυπτος","SV":"Ελ Σαλβαδόρ","GQ":"Ισημερινή-Γουινέα","ER":["Κράτος της Ερυθραίας","Ερυθραία"],"EE":"Εσθονία","ET":"Αιθιοπία","FK":"Νήσοι Φώκλαντ (Μαλβίνας)","FO":"Νήσοι Φερόες","FJ":"Δημοκρατία των Φίτζι","FI":"Φινλανδία","FR":"Γαλλία","GF":"Γαλλική Γουιάνα","PF":"Γαλλική Πολυνησία","TF":"Γαλλικά Νότια και Ανταρκτικά Εδάφη","GA":"Γκαμπόν","GM":"Γκάμπια","GE":"Γεωργία","DE":"Γερμανία","GH":"Γκάνα","GI":"Γιβραλτάρ","GR":"Ελλάδα","GL":"Γροιλανδία","GD":"Γρενάδα","GP":"Γουαδελούπη","GU":"Γκουάμ","GT":"Γουατεμάλα","GN":"Γουινέα","GW":"Γουινέα-Μπισσάου","GY":"Γουιάνα","HT":"Αϊτη","HM":"Νήσοι Χερντ και Μακντόναλντ","VA":["Κράτος της Πόλης του Βατικανού","Βατικανό"],"HN":"Ονδούρα","HK":"Χονγκ Κόνγκ","HU":"Ουγγαρία","IS":"Ισλανδία","IN":"Ινδία","ID":"Ινδονησία","IR":["Ισλαμική Δημοκρατία του Ιράν","Ιράν"],"IQ":"Ιράκ","IE":"Ιρλανδία","IL":"Ισραήλ","IT":"Ιταλία","JM":"Τζαμάικα","JP":"Ιαπωνία","JO":"Ιορδανία","KZ":"Καζακστάν","KE":"Κένυα","KI":"Κιριμπάτι","KP":["Λαοκρατική Δημοκρατία της Κορέας","Βόρεια Κορέα"],"KR":["Δημοκρατία της Κορέας","Νότια Κορέα"],"KW":"Κουβέιτ","KG":"Κιργιζία","LA":["Λαϊκή Δημοκρατία του Λάος","Λάος"],"LV":"Λετονία","LB":"Λίβανο","LS":["Βασίλειο του Λεσότο","Λεσότο"],"LR":"Λιβερία","LY":["Κράτος της Λιβύης","Λιβύη"],"LI":["Πριγκιπάτο του Λίχτενσταϊν","Λίχτενσταϊν"],"LT":"Λιθουανία","LU":"Λουξεμβούργο","MO":"Μακάου","MK":["Δημοκρατία της Βόρειας Μακεδονίας","Βόρεια Μακεδονία"],"MG":"Μαδαγασκάρη","MW":"Μαλάουι","MY":"Μαλαισία","MV":"Μαλβίδες","ML":"Μαλί","MT":"Μάλτα","MH":"Νήσοι Μάρσαλ","MQ":"Μαρτινίκα","MR":"Μαυριτανία","MU":"Μαυρίκιος","YT":"Μαγιότ","MX":"Μεξικό","FM":["Ομόσπονδες Πολιτείες της Μικρονησίας","Μικρονησία"],"MD":["Δημοκρατία της Μολδαβίας","Μολδαβία"],"MC":["Πριγκιπάτο του Μονακό","Μονακό"],"MN":"Μογγολία","MS":"Μοντσερράτ","MA":"Μαρόκο","MZ":"Μοζαμβίκη","MM":"Μιανμάρ","NA":"Ναμίμπια","NR":"Ναουρού","NP":"Νεπάλ","NL":"Ολλανδία","NC":"Νέα Καληδονία","NZ":"Νέα Ζηλανδία","NI":"Νικαράγουα","NE":"Νίγηρας","NG":"Νιγηρία","NU":"Νιούε","NF":"Νησί Νόρφολκ","MP":"Βόρειες Μαριάνες Νήσοι","NO":"Νορβηγία","OM":"Ομάν","PK":"Πακιστάν","PW":"Παλάου","PS":["Κράτος της Παλαιστίνης","Παλαιστίνη"],"PA":"Παναμάς","PG":"Παπούα Νέα Γουινέα","PY":"Παραγουάη","PE":"Περού","PH":"Φιλιππίνες","PN":"Νήσοι Πίτκαιρν","PL":"Πολωνία","PT":"Πορτογαλία","PR":"Πουέρτο Ρίκο","QA":"Κατάρ","RE":"Ρεϋνιόν","RO":"Ρουμανία","RU":["Ρωσική Ομοσπονδία","Ρωσία"],"RW":"Ρουάντα","SH":"Νήσος Αγίας Ελένης","KN":"Ομοσπονδία Αγίου Χριστόφορου και Νέβις","LC":"Αγία Λουκία","PM":"Σαιν Πιερ και Μικελόν","VC":"Άγιος Βικέντιος και Γρεναδίνες","WS":"Σαμόα","SM":"Άγιος Μαρίνος","ST":"Σάο Τομέ και Πρίνσιπε","SA":"Σαουδική Αραβία","SN":"Σενεγάλη","SC":"Σεϋχέλλες","SL":"Σιέρα Λεόνε","SG":"Σιγκαπούρη","SK":"Σλοβακία","SI":"Σλοβενία","SB":"Νήσοι Σολομώντα","SO":"Σομαλία","ZA":"Νότια Αφρική","GS":"Νότιος Γεωργία και Νότιοι Σάντουιτς Νήσοι","ES":"Ισπανία","LK":"Σρι Λάνκα","SD":"Σουδάν","SR":"Σουρινάμ","SJ":"Σβάλμπαρντ και Γιαν Μαγιέν","SZ":"Σουαζιλάνδη","SE":"Σουηδία","CH":"Ελβετία","SY":["Αραβική Δημοκρατία της Συρίας","Συρία"],"TW":"Δημοκρατία της Κίνας","TJ":"Τατζικιστάν","TZ":["Ενωμένη Δημοκρατία της Τανζανίας","Τανζανία"],"TH":"Ταϊλάνδη","TL":"Ανατολικό Τιμόρ","TG":"Τογκό","TK":"Τοκελάου","TO":"Τόνγκα","TT":"Τρινιντάντ και Τομπάγκο","TN":"Τυνησία","TR":"Τουρκία","TM":"Τουρκμενιστάν","TC":"Τερκς και Κέικος","TV":"Τουβαλού","UG":"Ουγκάντα","UA":"Ουκρανια","AE":"Ηνωμένα Αραβικά Εμιράτα","GB":"Ηνωμένο Βασίλειο","US":["Ηνωμένες Πολιτείες Αμερικής","Αμερική","ΗΠΑ"],"UM":"Απομακρυσμένες Νησίδες των Ηνωμένων Πολιτειών","UY":"Ουρουγουάη","UZ":"Ουζμπεκιστάν","VU":"Βανουάτου","VE":"Βενεζουέλα","VN":"Βιετνάμ","VG":"Βρετανικές Παρθένοι Νήσοι","VI":"Αμερικανικές Παρθένοι Νήσοι","WF":"Ουαλίς και Φουτουνά","EH":"Δυτική Σαχάρα","YE":"Υεμένη","ZM":"Ζάμπια","ZW":"Ζιμπάμπουε","AX":"Νήσοι Ώλαντ","BQ":"Μποναίρ, Άγιος Ευστάθιος και Σάμπα","CW":"Κουρασάο","GG":"Γκουέρνσεϊ","IM":"Νήσος του Μαν","JE":"Βαϊλάτο του Τζέρσεϊ","ME":"Μαυροβούνιο","BL":"Άγιος Βαρθολομαίος","MF":"Άγιος Μαρτίνος (Γαλλία)","RS":"Σερβία","SX":"Άγιος Μαρτίνος (Ολλανδία)","SS":"Νότιο Σουδάν","XK":"Κόσοβο"}}'))},68830,a=>{a.v(JSON.parse('{"locale":"es","countries":{"AF":"Afganistán","AL":"Albania","DZ":"Argelia","AS":"Samoa Americana","AD":"Andorra","AO":"Angola","AI":"Anguila","AQ":"Antártida","AG":"Antigua y Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azerbaiyán","BS":"Bahamas","BH":"Bahrein","BD":"Bangladesh","BB":"Barbados","BY":"Bielorrusia","BE":"Bélgica","BZ":"Belice","BJ":"Benin","BM":"Bermudas","BT":"Bután","BO":"Bolivia","BA":"Bosnia y Herzegovina","BW":"Botswana","BV":"Isla Bouvet","BR":"Brasil","IO":"Territorio Británico del Océano Índico","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Camboya","CM":"Camerún","CA":"Canadá","CV":"Cabo Verde","KY":"Islas Caimán","CF":"República Centroafricana","TD":"Chad","CL":"Chile","CN":"China","CX":"Isla de Navidad","CC":"Islas Cocos (Keeling)","CO":"Colombia","KM":"Comoras","CG":"Congo","CD":"Congo (República Democrática del)","CK":"Islas Cook","CR":"Costa Rica","CI":"Costa de Marfil","HR":"Croacia","CU":"Cuba","CY":"Chipre","CZ":"República Checa","DK":"Dinamarca","DJ":"Yibuti","DM":"Dominica","DO":"República Dominicana","EC":"Ecuador","EG":"Egipto","SV":"El Salvador","GQ":"Guinea Ecuatorial","ER":"Eritrea","EE":"Estonia","ET":"Etiopía","FK":"Islas Malvinas","FO":"Islas Feroe","FJ":"Fiji","FI":"Finlandia","FR":"Francia","GF":"Guayana Francesa","PF":"Polinesia Francesa","TF":"Tierras Australes Francesas","GA":"Gabón","GM":"Gambia","GE":"Georgia","DE":"Alemania","GH":"Ghana","GI":"Gibraltar","GR":"Grecia","GL":"Groenlandia","GD":"Granada","GP":"Guadalupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea Bissau","GY":"Guyana","HT":"Haití","HM":"Heard e Islas McDonald","VA":"Santa Sede","HN":"Honduras","HK":"Hong Kong","HU":"Hungría","IS":"Islandia","IN":"India","ID":"Indonesia","IR":["Irán","República Islámica de Irán"],"IQ":"Iraq","IE":"Irlanda","IL":"Israel","IT":"Italia","JM":"Jamaica","JP":"Japón","JO":"Jordania","KZ":"Kazajistán","KE":"Kenia","KI":"Kiribati","KP":"República Popular Democrática de Corea","KR":"República de Corea","KW":"Kuwait","KG":"Kirguistán","LA":"República Democrática Popular de Lao","LV":"Letonia","LB":"Líbano","LS":"Lesoto","LR":"Liberia","LY":"Libia","LI":"Liechtenstein","LT":"Lituania","LU":"Luxemburgo","MO":"Macao","MK":"Macedonia del Norte","MG":"Madagascar","MW":"Malaui","MY":"Malasia","MV":"Maldivas","ML":"Malí","MT":"Malta","MH":"Islas Marshall","MQ":"Martinica","MR":"Mauritania","MU":"Mauricio","YT":"Mayotte","MX":"México","FM":"Micronesia","MD":"Moldavia","MC":"Mónaco","MN":"Mongolia","MS":"Montserrat","MA":"Marruecos","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Países Bajos","NC":"Nueva Caledonia","NZ":"Nueva Zelanda","NI":"Nicaragua","NE":"Níger","NG":"Nigeria","NU":"Niue","NF":"Isla Norfolk","MP":"Islas Marianas del Norte","NO":"Noruega","OM":"Omán","PK":"Pakistán","PW":"Palau","PS":"Palestina","PA":"Panamá","PG":"Papua Nueva Guinea","PY":"Paraguay","PE":"Perú","PH":"Filipinas","PN":"Pitcairn","PL":"Polonia","PT":"Portugal","PR":"Puerto Rico","QA":"Catar","RE":"Reunión","RO":"Rumanía","RU":"Rusia","RW":"Ruanda","SH":"Santa Helena, Ascensión y Tristán de Acuña","KN":"Saint Kitts y Nevis","LC":"Santa Lucía","PM":"San Pedro y Miquelón","VC":"San Vicente y las Granadinas","WS":"Samoa","SM":"San Marino","ST":"Santo Tomé y Príncipe","SA":"Arabia Saudita","SN":"Senegal","SC":"Seychelles","SL":"Sierra Leona","SG":"Singapur","SK":"Eslovaquia","SI":"Eslovenia","SB":"Islas Salomón","SO":"Somalia","ZA":"Sudáfrica","GS":"Georgia del Sur y las Islas Sandwich del Sur","ES":"España","LK":"Sri Lanka","SD":"Sudán","SR":"Suriname","SJ":"Svalbard y Jan Mayen","SZ":"Esuatini","SE":"Suecia","CH":"Suiza","SY":"República Árabe Siria","TW":"Taiwán","TJ":"Tayikistán","TZ":"Tanzania","TH":"Tailandia","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad y Tobago","TN":"Túnez","TR":"Turquía","TM":"Turkmenistán","TC":"Islas Turcas y Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ucrania","AE":"Emiratos Árabes Unidos","GB":"Reino Unido","US":"Estados Unidos","UM":"Islas Ultramarinas Menores de los Estados Unidos","UY":"Uruguay","UZ":"Uzbekistán","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Islas Vírgenes británicas","VI":"Islas Vírgenes de los Estados Unidos","WF":"Wallis y Futuna","EH":"Sahara Occidental","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabue","AX":"Islas Åland","BQ":"Bonaire, San Eustaquio y Saba","CW":"Curaçao","GG":"Guernsey","IM":"Isla de Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (francesa)","RS":"Serbia","SX":"Sint Maarten (neerlandesa)","SS":"Sudán del Sur","XK":"Kosovo"}}'))},71132,a=>{a.v(JSON.parse('{"locale":"et","countries":{"AF":"Afganistan","AX":"Ahvenamaa","AL":"Albaania","DZ":"Alžeeria","AS":"Ameerika Samoa","US":"Ameerika Ühendriigid","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktis","AG":"Antigua ja Barbuda","MO":"Aomen - Hiina erihalduspiirkond","AE":"Araabia Ühendemiraadid","AR":"Argentina","AM":"Armeenia","AW":"Aruba","AZ":"Aserbaidžaan","AU":"Austraalia","AT":"Austria","BS":"Bahama","BH":"Bahrein","BD":"Bangladesh","BB":"Barbados","PW":"Belau","BE":"Belgia","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Boliivia","BA":"Bosnia ja Hertsegoviina","BW":"Botswana","BV":"Bouvet’i saar","BR":"Brasiilia","BQ":"Bonaire, Sint Eustatius ja Saba","IO":"Briti India ookeani ala","VG":"Briti Neitsisaared","BN":"Brunei","BG":"Bulgaaria","BF":"Burkina Faso","BI":"Burundi","CO":"Colombia","CK":"Cooki saared","CR":"Costa Rica","CI":"Côte d\'Ivoire","CW":"Curaçao","DJ":"Djibouti","DM":"Dominica","DO":"Dominikaani Vabariik","EC":"Ecuador","EE":"Eesti","EG":"Egiptus","GQ":"Ekvatoriaal-Guinea","SV":"El Salvador","ER":"Eritrea","ET":"Etioopia","FK":"Falklandi saared","FJ":"Fidži","PH":"Filipiinid","FO":"Fääri saared","GA":"Gabon","GM":"Gambia","GH":"Ghana","GI":"Gibraltar","GD":"Grenada","GE":"Gruusia","GL":"Gröönimaa","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard ja McDonald saared","CN":"Hiina","ES":"Hispaania","NL":"Holland","HN":"Honduras","HK":"Hongkong - Hiina erihalduspiirkond","HR":"Horvaatia","TL":"Ida-Timor","IE":"Iirimaa","IL":"Iisrael","IN":"India","ID":"Indoneesia","IQ":"Iraak","IR":"Iraan","IS":"Island","IT":"Itaalia","JP":"Jaapan","JM":"Jamaica","YE":"Jeemen","JE":"Jersey","JO":"Jordaania","CX":"Jõulusaar","KY":"Kaimanisaared","KH":"Kambodža","CM":"Kamerun","CA":"Kanada","KZ":"Kasahstan","QA":"Katar","KE":"Kenya","CF":"Kesk-Aafrika Vabariik","KI":"Kiribati","KM":"Komoorid","CD":"Kongo DV","CG":"Kongo-Brazzaville","CC":"Kookossaared","GR":"Kreeka","CU":"Kuuba","KW":"Kuveit","KG":"Kõrgõzstan","CY":"Küpros","LA":"Laos","LT":"Leedu","LS":"Lesotho","LR":"Libeeria","LI":"Liechtenstein","LB":"Liibanon","LY":"Liibüa","LU":"Luksemburg","ZA":"Lõuna-Aafrika Vabariik","GS":"Lõuna-Georgia ja Lõuna-Sandwichi saared","KR":"Lõuna-Korea","LV":"Läti","EH":"Lääne-Sahara","MG":"Madagaskar","MY":"Malaisia","MW":"Malawi","MV":"Maldiivid","ML":"Mali","MT":"Malta","IM":"Mani saar","MA":"Maroko","MH":"Marshalli saared","MQ":"Martinique","MR":"Mauritaania","MU":"Mauritius","YT":"Mayotte","MX":"Mehhiko","FM":"Mikroneesia Liiduriigid","MD":"Moldova","MC":"Monaco","MN":"Mongoolia","ME":"Montenegro","MS":"Montserrat","MZ":"Mosambiik","MM":"Myanmar","NA":"Namiibia","NR":"Nauru","NP":"Nepal","NI":"Nicaragua","NG":"Nigeeria","NE":"Niger","NU":"Niue","NF":"Norfolk","NO":"Norra","OM":"Omaan","PG":"Paapua Uus-Guinea","PK":"Pakistan","PS":"Palestiina ala","PA":"Panama","PY":"Paraguay","PE":"Peruu","PN":"Pitcairn","PL":"Poola","PT":"Portugal","GF":"Prantsuse Guajaana","TF":"Prantsuse Lõunaalad","PF":"Prantsuse Polüneesia","FR":"Prantsusmaa","PR":"Puerto Rico","KP":"Põhja-Korea","MK":"Põhja-Makedoonia","MP":"Põhja-Mariaanid","RE":"Réunion","CV":"Roheneemesaared","SE":"Rootsi","SX":"Sint Maarten","RO":"Rumeenia","RW":"Rwanda","SB":"Saalomoni Saared","BL":"Saint Barthélemy","SH":"Saint Helena","KN":"Saint Kitts ja Nevis","LC":"Saint Lucia","MF":"Saint Martin","PM":"Saint Pierre ja Miquelon","VC":"Saint Vincent ja Grenadiinid","DE":"Saksamaa","ZM":"Sambia","WS":"Samoa","SM":"San Marino","ST":"São Tomé ja Príncipe","SA":"Saudi Araabia","SC":"Seišellid","SN":"Senegal","RS":"Serbia","SL":"Sierra Leone","SG":"Singapur","SK":"Slovakkia","SI":"Sloveenia","SO":"Somaalia","FI":"Soome","LK":"Sri Lanka","SD":"Sudaan","SS":"Lõuna-Sudaan","SR":"Suriname","GB":"Suurbritannia","SZ":"Svaasimaa","SJ":"Svalbard ja Jan Mayen","SY":"Süüria","CH":"Šveits","ZW":"Zimbabwe","DK":"Taani","TJ":"Tadžikistan","TH":"Tai","TW":"Taiwan","TZ":"Tansaania","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad ja Tobago","TD":"Tšaad","CZ":"Tšehhi","CL":"Tšiili","TN":"Tuneesia","TC":"Turks ja Caicos","TV":"Tuvalu","TR":"Türgi","TM":"Türkmenistan","UG":"Uganda","UA":"Ukraina","HU":"Ungari","UY":"Uruguay","VI":"USA Neitsisaared","UZ":"Usbekistan","NC":"Uus-Kaledoonia","NZ":"Uus-Meremaa","BY":"Valgevene","WF":"Wallis ja Futuna","VU":"Vanuatu","VA":"Vatikan","RU":"Venemaa","VE":"Venezuela","VN":"Vietnam","UM":"Ühendriikide hajasaared","XK":"Kosovo"}}'))},63782,a=>{a.v(JSON.parse('{"locale":"eu","countries":{"AF":"Afganistan","AL":"Albania","DZ":"Aljeria","AS":"Samoa Estatubatuarra","AD":"Andorra","AO":"Angola","AI":"Aingira","AQ":"Antartika","AG":"Antigua eta Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azerbaijan","BS":"Bahamak","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Bielorrusia","BE":"Belgika","BZ":"Belize","BJ":"Benin","BM":"Bermudas","BT":"Bhutan","BO":"Bolivia","BA":"Bosnia-Herzegovina","BW":"Botswana","BV":"Bouvet uhartea","BR":"Brasil","IO":"Indiako Ozeanoko Britainiar Lurraldea","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Kanbodia","CM":"Kamerun","CA":"Kanada","CV":"Cabo Verde","KY":"Kaiman uharteak","CF":"Afrika Erdiko Errepublika","TD":"Txad","CL":"Txile","CN":"Txina","CX":"Christmas uhartea","CC":"Cocosak (Keeling uharteak)","CO":"Kolonbia","KM":"Komoreak","CG":"Kongo","CD":"Kongoko Errepublika Demokratikoa","CK":"Cook uharteak","CR":"Costa Rica","CI":"Boli Kosta","HR":"Kroazia","CU":"Kuba","CY":"Zipre","CZ":"Txekia","DK":"Danimarka","DJ":"Djibuti","DM":"Dominika","DO":"Dominikar Errepublika","EC":"Ekuador","EG":"Egipto","SV":"El Salvador","GQ":"Ekuatore Ginea","ER":"Eritrea","EE":"Estonia","ET":"Etiopia","FK":"Malvinak","FO":"Faroe uharteak","FJ":"Fiji","FI":"Finlandia","FR":"Frantzia","GF":"Guyana Frantsesa","PF":"Polinesia Frantsesa","TF":"Frantziaren Lurralde Australak","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Alemania","GH":"Ghana","GI":"Gibraltar","GR":"Grezia","GL":"Groenlandia","GD":"Grenada","GP":"Guadalupe","GU":"Guam","GT":"Guatemala","GN":"Ginea","GW":"Ginea Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard eta McDonald uharteak","VA":"Vatikanoa (Egoitza Santua)","HN":"Honduras","HK":"Hong Kong","HU":"Hungaria","IS":"Islandia","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Irak","IE":"Irlanda","IL":"Israel","IT":"Italia","JM":"Jamaika","JP":"Japonia","JO":"Jordania","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Ipar Korea","KR":"Hego Korea","KW":"Kuwait","KG":"Kirgizistan","LA":"Laos","LV":"Letonia","LB":"Libano","LS":"Lesotho","LR":"Liberia","LY":"Libia","LI":"Liechtenstein","LT":"Lituania","LU":"Luxenburgo","MO":"Macao","MK":"Ipar Mazedonia","MG":"Madagaskar","MW":"Malawi","MY":"Malaysia","MV":"Maldivak","ML":"Mali","MT":"Malta","MH":"Marshall Uharteak","MQ":"Martinika","MR":"Mauritania","MU":"Maurizio","YT":"Mayotte","MX":"Mexico","FM":"Mikronesia","MD":"Moldavia","MC":"Monako","MN":"Mongolia","MS":"Montserrat","MA":"Maroko","MZ":"Mozambike","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Herbehereak","NC":"Kaledonia Berria","NZ":"Zeelanda Berria","NI":"Nikaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolk uhartea","MP":"Ipar Marianak","NO":"Norvegia","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestina","PA":"Panama","PG":"Papua Ginea Berria","PY":"Paraguai","PE":"Peru","PH":"Filipinak","PN":"Pitcairn uharteak","PL":"Polonia","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","RE":"Réunion","RO":"Errumania","RU":"Errusia","RW":"Ruanda","SH":"Santa Helena, Ascension eta Tristan da Cunha","KN":"Saint Kitts eta Nevis","LC":"Santa Luzia","PM":"Saint-Pierre eta Mikelune","VC":"Saint Vincent eta Grenadinak","WS":"Samoa","SM":"San Marino","ST":"Sao Tome eta Principe","SA":"Saudi Arabia","SN":"Senegal","SC":"Seychelleak","SL":"Sierra Leona","SG":"Singapur","SK":"Eslovakia","SI":"Eslovenia","SB":"Salomon Uharteak","SO":"Somalia","ZA":"Hegoafrika","GS":"Hegoaldeko Georgiak eta Hegoaldeko Sandwichak","ES":"Espainia","LK":"Sri Lanka","SD":"Sudan","SR":"Surinam","SJ":"Svalbard eta Jan Mayen","SZ":"Swazilandia","SE":"Suedia","CH":"Suitza","SY":"Siriako Arabiar Errepublika","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzania","TH":"Thailandia","TL":"Ekialdeko Timor","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad eta Tobago","TN":"Tunisia","TR":"Turkia","TM":"Turkmenistan","TC":"Turkak eta Caicoak","TV":"Tuvalu","UG":"Uganda","UA":"Ukraina","AE":"Arabiar Emirerri Batuak","GB":"Erresuma Batua","US":"Estatu Batuak","UM":"Ameriketako Estatu Batuetako itsasoz haraindiko uharteak","UY":"Uruguai","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Birjina britainiar uharteak","VI":"Birjina Uharte Estatubatuarrak","WF":"Wallis eta Futuna","EH":"Mendebaldeko Sahara","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Åland uharteak","BQ":"Bonaire, San Eustakio eta Saba","CW":"Curaçao","GG":"Guernsey","IM":"Man uhartea","JE":"Jersey","ME":"Montenegro","BL":"San Bartolome","MF":"San Martin (frantsesa)","RS":"Serbia","SX":"San Martin (herbeheretarra)","SS":"Hego Sudan","XK":"Kosovo"}}'))},2558,a=>{a.v(JSON.parse('{"locale":"fa","countries":{"AD":"آندورا","AE":"امارات متحدهٔ عربی","AF":"افغانستان","AG":"آنتیگوا و باربودا","AI":"آنگویلا","AL":"آلبانی","AM":"ارمنستان","AO":"آنگولا","AQ":"جنوبگان","AR":"آرژانتین","AS":"ساموآی امریکا","AT":"اتریش","AU":"استرالیا","AW":"آروبا","AX":"جزایر آلاند","AZ":"جمهوری آذربایجان","BA":"بوسنی و هرزگوین","BB":"باربادوس","BD":"بنگلادش","BE":"بلژیک","BF":"بورکینافاسو","BG":"بلغارستان","BH":"بحرین","BI":"بوروندی","BJ":"بنین","BL":"سن بارتلمی","BM":"برمودا","BN":"برونئی","BO":"بولیوی","BQ":"جزایر کارائیب هلند","BR":"برزیل","BS":"باهاما","BT":"بوتان","BV":"جزیرهٔ بووه","BW":"بوتسوانا","BY":"بلاروس","BZ":"بلیز","CA":"کانادا","CC":"جزایر کوکوس","CD":"کنگو - کینشاسا","CF":"جمهوری افریقای مرکزی","CG":"کنگو - برازویل","CH":"سوئیس","CI":"ساحل عاج","CK":"جزایر کوک","CL":"شیلی","CM":"کامرون","CN":"چین","CO":"کلمبیا","CR":"کاستاریکا","CU":"کوبا","CV":"کیپ‌ورد","CW":"کوراسائو","CX":"جزیرهٔ کریسمس","CY":"قبرس","CZ":"جمهوری چک","DE":"آلمان","DJ":"جیبوتی","DK":"دانمارک","DM":"دومینیکا","DO":"جمهوری دومینیکن","DZ":"الجزایر","EC":"اکوادور","EE":"استونی","EG":"مصر","EH":"صحرای غربی","ER":"اریتره","ES":"اسپانیا","ET":"اتیوپی","FI":"فنلاند","FJ":"فیجی","FK":"جزایر فالکلند","FM":"میکرونزی","FO":"جزایر فارو","FR":"فرانسه","GA":"گابن","GB":"بریتانیا","GD":"گرنادا","GE":"گرجستان","GF":"گویان فرانسه","GG":"گرنزی","GH":"غنا","GI":"جبل‌الطارق","GL":"گرینلند","GM":"گامبیا","GN":"گینه","GP":"گوادلوپ","GQ":"گینهٔ استوایی","GR":"یونان","GS":"جزایر جورجیای جنوبی و ساندویچ جنوبی","GT":"گواتمالا","GU":"گوام","GW":"گینهٔ بیسائو","GY":"گویان","HK":"هنگ‌کنگ","HM":"جزیرهٔ هرد و جزایر مک‌دونالد","HN":"هندوراس","HR":"کرواسی","HT":"هائیتی","HU":"مجارستان","ID":"اندونزی","IE":"ایرلند","IL":"اسرائیل","IM":"جزیرهٔ من","IN":"هند","IO":"قلمرو بریتانیا در اقیانوس هند","IQ":"عراق","IR":"ایران","IS":"ایسلند","IT":"ایتالیا","JE":"جرزی","JM":"جامائیکا","JO":"اردن","JP":"ژاپن","KE":"کنیا","KG":"قرقیزستان","KH":"کامبوج","KI":"کیریباتی","KM":"کومورو","KN":"سنت کیتس و نویس","KP":"کرهٔ شمالی","KR":"کرهٔ جنوبی","KW":"کویت","KY":"جزایر کِیمن","KZ":"قزاقستان","LA":"لائوس","LB":"لبنان","LC":"سنت لوسیا","LI":"لیختن‌اشتاین","LK":"سری‌لانکا","LR":"لیبریا","LS":"لسوتو","LT":"لیتوانی","LU":"لوکزامبورگ","LV":"لتونی","LY":"لیبی","MA":"مراکش","MC":"موناکو","MD":"مولداوی","ME":"مونته‌نگرو","MF":"سنت مارتین","MG":"ماداگاسکار","MH":"جزایر مارشال","MK":"مقدونیه شمالی","ML":"مالی","MM":"میانمار (برمه)","MN":"مغولستان","MO":"ماکائو","MP":"جزایر ماریانای شمالی","MQ":"مارتینیک","MR":"موریتانی","MS":"مونت‌سرات","MT":"مالت","MU":"موریس","MV":"مالدیو","MW":"مالاوی","MX":"مکزیک","MY":"مالزی","MZ":"موزامبیک","NA":"نامیبیا","NC":"کالدونیای جدید","NE":"نیجر","NF":"جزیرهٔ نورفولک","NG":"نیجریه","NI":"نیکاراگوئه","NL":"هلند","NO":"نروژ","NP":"نپال","NR":"نائورو","NU":"نیوئه","NZ":"نیوزیلند","OM":"عمان","PA":"پاناما","PE":"پرو","PF":"پلی‌نزی فرانسه","PG":"پاپوا گینهٔ نو","PH":"فیلیپین","PK":"پاکستان","PL":"لهستان","PM":"سن پیر و میکلن","PN":"جزایر پیت‌کرن","PR":"پورتوریکو","PS":"سرزمین‌های فلسطینی","PT":"پرتغال","PW":"پالائو","PY":"پاراگوئه","QA":"قطر","RE":"رئونیون","RO":"رومانی","RS":"صربستان","RU":"روسیه","RW":"رواندا","SA":"عربستان سعودی","SB":"جزایر سلیمان","SC":"سیشل","SD":"سودان","SE":"سوئد","SG":"سنگاپور","SH":"سنت هلن","SI":"اسلوونی","SJ":"اسوالبارد و جان‌ماین","SK":"اسلواکی","SL":"سیرالئون","SM":"سان‌مارینو","SN":"سنگال","SO":"سومالی","SR":"سورینام","SS":"سودان جنوبی","ST":"سائوتومه و پرینسیپ","SV":"السالوادور","SX":"سنت مارتن","SY":"سوریه","SZ":"سوازیلند","TC":"جزایر تورکس و کایکوس","TD":"چاد","TF":"قلمروهای جنوبی فرانسه","TG":"توگو","TH":"تایلند","TJ":"تاجیکستان","TK":"توکلائو","TL":"تیمور-لسته","TM":"ترکمنستان","TN":"تونس","TO":"تونگا","TR":"ترکیه","TT":"ترینیداد و توباگو","TV":"تووالو","TW":"تایوان","TZ":"تانزانیا","UA":"اوکراین","UG":"اوگاندا","UM":"جزایر دورافتادهٔ ایالات متحده","US":"ایالات متحده","UY":"اروگوئه","UZ":"ازبکستان","VA":"واتیکان","VC":"سنت وینسنت و گرنادین","VE":"ونزوئلا","VG":"جزایر ویرجین بریتانیا","VI":"جزایر ویرجین ایالات متحده","VN":"ویتنام","VU":"وانواتو","WF":"والیس و فوتونا","WS":"ساموآ","XK":"کوزوو","YE":"یمن","YT":"مایوت","ZA":"افریقای جنوبی","ZM":"زامبیا","ZW":"زیمبابوه"}}'))},21842,a=>{a.v(JSON.parse('{"locale":"fi","countries":{"AF":"Afganistan","AX":"Ahvenanmaa","NL":"Alankomaat","AL":"Albania","DZ":"Algeria","AS":"Amerikan Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktis","AG":"Antigua ja Barbuda","AE":"Arabiemiirikunnat","AR":"Argentiina","AM":"Armenia","AW":"Aruba","AU":"Australia","AZ":"Azerbaidžan","BS":"Bahama","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BE":"Belgia","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BQ":"Bonaire, Sint Eustatius ja Saba","BA":"Bosnia ja Hertsegovina","BW":"Botswana","BV":"Bouvet’nsaari","BR":"Brasilia","IO":"Brittiläinen Intian valtameren alue","VG":"Brittiläiset Neitsytsaaret","BN":"Brunei","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KY":"Caymansaaret","CL":"Chile","CK":"Cookinsaaret","CR":"Costa Rica","CW":"Curaçao","DJ":"Djibouti","DM":"Dominica","DO":"Dominikaaninen tasavalta","EC":"Ecuador","EG":"Egypti","SV":"El Salvador","ER":"Eritrea","ES":"Espanja","ET":"Etiopia","ZA":"Etelä-Afrikka","GS":"Etelä-Georgia ja Eteläiset Sandwichsaaret","SS":"Etelä-Sudan","FK":"Falklandinsaaret","FO":"Färsaaret","FJ":"Fidži","PH":"Filippiinit","GA":"Gabon","GM":"Gambia","GE":"Georgia","GH":"Ghana","GI":"Gibraltar","GD":"Grenada","GL":"Grönlanti","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard ja McDonaldinsaaret","HN":"Honduras","HK":"Hongkong","ID":"Indonesia","IN":"Intia","IQ":"Irak","IR":"Iran","IE":"Irlanti","IS":"Islanti","IL":"Israel","IT":"Italia","TL":"Itä-Timor","AT":"Itävalta","JM":"Jamaika","JP":"Japani","YE":"Jemen","JE":"Jersey","JO":"Jordania","CX":"Joulusaari","KH":"Kambodža","CM":"Kamerun","CA":"Kanada","CV":"Kap Verde","KZ":"Kazakstan","KE":"Kenia","CF":"Keski-Afrikan tasavalta","CN":"Kiina","KG":"Kirgisia","KI":"Kiribati","CO":"Kolumbia","KM":"Komorit","CD":"Kongon demokraattinen tasavalta","CG":"Kongon tasavalta","CC":"Kookossaaret","KP":"Korean demokraattinen kansantasavalta","KR":"Korean tasavalta","GR":"Kreikka","HR":"Kroatia","CU":"Kuuba","KW":"Kuwait","CY":"Kypros","LA":"Laos","LV":"Latvia","LS":"Lesotho","LB":"Libanon","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Liettua","LU":"Luxemburg","EH":"Länsi-Sahara","MO":"Macao","MG":"Madagaskar","MW":"Malawi","MV":"Malediivit","MY":"Malesia","ML":"Mali","MT":"Malta","IM":"Mansaari","MA":"Marokko","MH":"Marshallinsaaret","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Meksiko","FM":"Mikronesian liittovaltio","MD":"Moldova","MC":"Monaco","MN":"Mongolia","ME":"Montenegro","MS":"Montserrat","MZ":"Mosambik","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolkinsaari","NO":"Norja","CI":"Norsunluurannikko","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestiina","PA":"Panama","PG":"Papua-Uusi-Guinea","PY":"Paraguay","PE":"Peru","MK":"Pohjois-Makedonia","MP":"Pohjois-Mariaanit","PN":"Pitcairn","PT":"Portugali","PR":"Puerto Rico","PL":"Puola","GQ":"Päiväntasaajan Guinea","QA":"Qatar","FR":"Ranska","TF":"Ranskan eteläiset alueet","GF":"Ranskan Guayana","PF":"Ranskan Polynesia","RE":"Réunion","RO":"Romania","RW":"Ruanda","SE":"Ruotsi","BL":"Saint-Barthélemy","SH":"Saint Helena","KN":"Saint Kitts ja Nevis","LC":"Saint Lucia","MF":"Saint-Martin","PM":"Saint-Pierre ja Miquelon","VC":"Saint Vincent ja Grenadiinit","DE":"Saksa","SB":"Salomonsaaret","ZM":"Sambia","WS":"Samoa","SM":"San Marino","ST":"São Tomé ja Príncipe","SA":"Saudi-Arabia","SN":"Senegal","RS":"Serbia","SC":"Seychellit","SL":"Sierra Leone","SG":"Singapore","SX":"Sint Maarten","SK":"Slovakia","SI":"Slovenia","SO":"Somalia","LK":"Sri Lanka","SD":"Sudan","FI":"Suomi","SR":"Suriname","SJ":"Svalbard ja Jan Mayen","SZ":"Swazimaa","CH":"Sveitsi","SY":"Syyria","TJ":"Tadžikistan","TW":"Taiwan","TZ":"Tansania","DK":"Tanska","TH":"Thaimaa","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad ja Tobago","TD":"Tšad","CZ":"Tšekki","TN":"Tunisia","TR":"Turkki","TM":"Turkmenistan","TC":"Turks- ja Caicossaaret","TV":"Tuvalu","UG":"Uganda","UA":"Ukraina","HU":"Unkari","UY":"Uruguay","NC":"Uusi-Kaledonia","NZ":"Uusi-Seelanti","UZ":"Uzbekistan","BY":"Valko-Venäjä","VU":"Vanuatu","VA":"Vatikaanivaltio","VE":"Venezuela","RU":"Venäjä","VN":"Vietnam","EE":"Viro","WF":"Wallis ja Futunasaaret","GB":"Yhdistynyt kuningaskunta","US":"Yhdysvallat","VI":"Yhdysvaltain Neitsytsaaret","UM":"Yhdysvaltain pienet erillissaaret","ZW":"Zimbabwe","XK":"Kosovo"}}'))},36560,a=>{a.v(JSON.parse('{"locale":"fr","countries":{"AF":"Afghanistan","AL":"Albanie","DZ":"Algérie","AS":"Samoa américaines","AD":"Andorre","AO":"Angola","AI":"Anguilla","AQ":"Antarctique","AG":"Antigua-et-Barbuda","AR":"Argentine","AM":"Arménie","AW":"Aruba","AU":"Australie","AT":"Autriche","AZ":"Azerbaïdjan","BS":"Bahamas","BH":"Bahreïn","BD":"Bangladesh","BB":"Barbade","BY":"Biélorussie","BE":"Belgique","BZ":"Belize","BJ":"Bénin","BM":"Bermudes","BT":"Bhoutan","BO":"Bolivie","BA":"Bosnie-Herzégovine","BW":"Botswana","BV":"Île Bouvet","BR":"Brésil","IO":"Océan Indien Britannique","BN":"Brunei Darussalam","BG":"Bulgarie","BF":"Burkina Faso","BI":"Burundi","KH":"Cambodge","CM":"Cameroun","CA":"Canada","CV":"Cap-Vert","KY":"Îles Caïmans","CF":"République Centrafricaine","TD":"Tchad","CL":"Chili","CN":"Chine","CX":"Île Christmas","CC":"Îles Cocos","CO":"Colombie","KM":"Comores","CG":"République du Congo","CD":"République démocratique du Congo","CK":"Îles Cook","CR":"Costa Rica","CI":"Côte-d\'Ivoire","HR":"Croatie","CU":"Cuba","CY":"Chypre","CZ":"République Tchèque","DK":"Danemark","DJ":"Djibouti","DM":"Dominique","DO":"République Dominicaine","EC":"Équateur","EG":"Égypte","SV":"El Salvador","GQ":"Guinée équatoriale","ER":"Érythrée","EE":"Estonie","ET":"Éthiopie","FK":"Îles Malouines","FO":"Îles Féroé","FJ":"Fidji","FI":"Finlande","FR":"France","GF":"Guyane française","PF":"Polynésie française","TF":"Terres australes françaises","GA":"Gabon","GM":"Gambie","GE":"Géorgie","DE":"Allemagne","GH":"Ghana","GI":"Gibraltar","GR":"Grèce","GL":"Groenland","GD":"Grenade","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinée","GW":"Guinée-Bissau","GY":"Guyana","HT":"Haïti","HM":"Îles Heard-et-MacDonald","VA":"Saint-Siège (Vatican)","HN":"Honduras","HK":"Hong Kong","HU":"Hongrie","IS":"Islande","IN":"Inde","ID":"Indonésie","IR":"Iran","IQ":"Irak","IE":"Irlande","IL":"Israël","IT":"Italie","JM":"Jamaïque","JP":"Japon","JO":"Jordanie","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Corée du Nord","KR":"Corée du Sud","KW":"Koweït","KG":"Kirghizistan","LA":"Laos","LV":"Lettonie","LB":"Liban","LS":"Lesotho","LR":"Libéria","LY":"Libye","LI":"Liechtenstein","LT":"Lituanie","LU":"Luxembourg","MO":"Macao","MK":"Macédoine du Nord","MG":"Madagascar","MW":"Malawi","MY":"Malaisie","MV":"Maldives","ML":"Mali","MT":"Malte","MH":"Îles Marshall","MQ":"Martinique","MR":"Mauritanie","MU":"Maurice","YT":"Mayotte","MX":"Mexique","FM":"Micronésie","MD":"Moldavie","MC":"Monaco","MN":"Mongolie","MS":"Montserrat","MA":"Maroc","MZ":"Mozambique","MM":"Myanmar","NA":"Namibie","NR":"Nauru","NP":"Népal","NL":"Pays-Bas","NC":"Nouvelle-Calédonie","NZ":"Nouvelle-Zélande","NI":"Nicaragua","NE":"Niger","NG":"Nigéria","NU":"Niué","NF":"Île Norfolk","MP":"Îles Mariannes du Nord","NO":"Norvège","OM":"Oman","PK":"Pakistan","PW":"Palaos","PS":"Palestine","PA":"Panama","PG":"Papouasie-Nouvelle-Guinée","PY":"Paraguay","PE":"Pérou","PH":"Philippines","PN":"Îles Pitcairn","PL":"Pologne","PT":"Portugal","PR":"Porto Rico","QA":"Qatar","RE":"Réunion","RO":"Roumanie","RU":"Russie","RW":"Rwanda","SH":"Sainte-Hélène","KN":"Saint-Christophe-et-Niévès","LC":"Sainte-Lucie","PM":"Saint-Pierre-et-Miquelon","VC":"Saint-Vincent-et-les-Grenadines","WS":"Samoa","SM":"Saint-Marin","ST":"São Tomé-et-Principe","SA":"Arabie Saoudite","SN":"Sénégal","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapour","SK":"Slovaquie","SI":"Slovénie","SB":"Îles Salomon","SO":"Somalie","ZA":"Afrique du Sud","GS":"Géorgie du Sud-et-les Îles Sandwich du Sud","ES":"Espagne","LK":"Sri Lanka","SD":"Soudan","SR":"Suriname","SJ":"Svalbard et Île Jan Mayen","SZ":"Royaume d\'Eswatini","SE":"Suède","CH":"Suisse","SY":"Syrie","TW":"Taïwan","TJ":"Tadjikistan","TZ":"République unie de Tanzanie","TH":"Thaïlande","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinité-et-Tobago","TN":"Tunisie","TR":"Turquie","TM":"Turkménistan","TC":"Îles Turques-et-Caïques","TV":"Tuvalu","UG":"Ouganda","UA":"Ukraine","AE":"Émirats Arabes Unis","GB":"Royaume-Uni","US":"États-Unis d\'Amérique","UM":"Îles mineures éloignées des États-Unis","UY":"Uruguay","UZ":"Ouzbékistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Îles vierges britanniques","VI":"Îles vierges américaines","WF":"Wallis-et-Futuna","EH":"Sahara occidental","YE":"Yémen","ZM":"Zambie","ZW":"Zimbabwe","AX":"Åland","BQ":"Bonaire, Saint-Eustache et Saba","CW":"Curaçao","GG":"Guernesey","IM":"Île de Man","JE":"Jersey","ME":"Monténégro","BL":"Saint-Barthélemy","MF":"Saint-Martin (partie française)","RS":"Serbie","SX":"Saint-Martin (partie néerlandaise)","SS":"Soudan du Sud","XK":"Kosovo"}}'))},64950,a=>{a.v(JSON.parse('{"locale":"ga","countries":{"AF":"An Afganastáin","AL":"An Albáin","DZ":"An Ailgéir","AS":"Samó Meiriceánach","AD":"Andóra","AO":"Angóla","AI":"Anguilla","AQ":"An Antartaice","AG":"Antigua agus Barbúda","AR":"An Airgintín","AM":"An Airméin","AW":"Arúba","AU":"An Astráil","AT":"An Ostair","AZ":"An Asarbaiseáin","BS":"Na Bahámaí","BH":"Bairéin","BD":"An Bhanglaidéis","BB":"Barbadós","BY":"An Bhealarúis","BE":"An Bheilg","BZ":"An Bheilís","BJ":"Beinin","BM":"Beirmiúda","BT":"An Bhútáin","BO":"An Bholaiv","BA":"An Bhoisnia agus An Heirseagaivéin","BW":"An Bhotsuáin","BV":"Oileán Bouvet","BR":"An Bhrasaíl","IO":"Críoch Aigéan Indiach na Breataine","BN":"Brúiné","BG":"An Bhulgáir","BF":"Buircíne Fasó","BI":"An Bhurúin","KH":"An Chambóid","CM":"Camarún","CA":"Ceanada","CV":"Rinn Verde","KY":"Oileáin Cayman","CF":"Poblacht na hAfraice Láir","TD":"Sead","CL":"An tSile","CN":["Poblacht na Síne","An tSín"],"CX":"Oileán na Nollag","CC":"Oileáin Cocos (Keeling)","CO":"An Cholóim","KM":"Oileáin Chomóra","CG":["Poblacht an Chongó","An Congó"],"CD":["Poblacht Dhaonlathach an Chongó","An Congó"],"CK":"Oileáin Cook","CR":"Cósta Ríce","CI":["Cósta Eabhair","An Cósta Eabhair","Côte d\'Ivoire"],"HR":"An Chróit","CU":"Cúba","CY":"An Chipir","CZ":["Poblacht na Seice","An tSeicia"],"DK":"An Danmhairg","DJ":"Djibouti","DM":"Doiminice","DO":"Poblacht Dhoiminiceach","EC":"Eacuadór","EG":"An Éigipt","SV":"An tSalvadóir","GQ":"An Ghuine Mheánchiorclach","ER":"An Eiritré","EE":"An Eastóin","ET":"An Aetóip","FK":"Oileáin Fháclainne (Malvinas)","FO":"Oileáin Fharó","FJ":"Fidsí","FI":"An Fhionlainn","FR":"An Fhrainc","GF":"Guáin na Fraince","PF":"Polainéis na Fraince","TF":"Críocha Deisceartacha na Fraince","GA":"An Ghabúin","GM":["Poblacht na Gaimbia","An Ghaimbia"],"GE":"An tSeoirsia","DE":"An Ghearmáin","GH":"Gána","GI":"Giobráltar","GR":"An Ghréig","GL":"An Ghraonlainn","GD":"Greanáda","GP":"Guadalúip","GU":"Guam","GT":"Guatamala","GN":"An Ghuine","GW":"Guine Bissau","GY":"An Ghuáin","HT":"Háití","HM":"Oileán Heard agus Oileáin McDonald","VA":"Cathair na Vatacáine","HN":"Hondúras","HK":"Hong Cong","HU":"An Ungáir","IS":"An Íoslainn","IN":"An India","ID":"An Indinéis","IR":["Poblacht Ioslamach na hIaráine","An Iaráin"],"IQ":"An Iaráic","IE":"Éire","IL":"Iosrael","IT":"An Iodáil","JM":"Iamáice","JP":"An tSeapáin","JO":"An Iordáin","KZ":"An Chasacstáin","KE":"An Chéinia","KI":"Cireabaití","KP":"An Chóiré Thuaidh","KR":["An Chóiré Theas","Poblacht na Cóiré","An Chóiré"],"KW":"Cuáit","KG":"An Chirgeastáin","LA":"Poblacht Dhaonlathach na Laoise","LV":"An Laitvia","LB":"An Liobáin","LS":"Leosóta","LR":"An Libéir","LY":"An Libia","LI":"Lichtinstéin","LT":"An Liotuáin","LU":"Lucsamburg","MO":"Macao","MG":"Madagascar","MW":"An Mhaláiv","MY":"An Mhalaeisia","MV":"Oileáin Mhaildíve","ML":"Mailí","MT":"Málta","MH":"Oileáin Marshall","MQ":"Martinique","MR":"An Mháratáin","MU":"Oileán Mhuirís","YT":"Mayotte","MX":"Meicsiceo","FM":"Micrinéis, Stáit Chónaidhme","MD":"An Mholdóiv","MC":"Monacó","MN":"An Mhongóil","MS":"Montsarat","MA":"Maracó","MZ":"Mósaimbíc","MM":"Maenmar (Burma)","NA":"An Namaib","NR":"Nárú","NP":"Neipeal","NL":"An Ísiltír","NC":"An Nua-Chaladóin","NZ":"An Nua-Shéalainn","NI":"Nicearagua","NE":"An Nígir","NG":"An Nigéir","NU":"Niue","NF":"Oileán Norfolk","MK":["Poblacht Iarthar na Macadóine","An Mhacadóin Thuaidh"],"MP":"Oileáin Mariana Thuaidh","NO":"An Iorua","OM":"Óman","PK":"An Phacastáin","PW":"Palau","PS":["Stát na Palaistíne","An Phalaistín"],"PA":"Panama","PG":"Nua-Ghuine Phapua","PY":"Paragua","PE":"Peiriú","PH":"Na hOileáin Fhilipíneacha","PN":["Oileáin Pitcairn","Pitcairn"],"PL":"An Pholainn","PT":"An Phortaingéil","PR":"Pórtó Ríce","QA":"Catar","RE":"Réunion","RO":"An Rómáin","RU":["An Rúis","Cónaidhm na Rúise"],"RW":"Ruanda","SH":"Saint Helena","KN":"Saint Kitts agus Nevis","LC":"Saint Lucia","PM":"Saint Pierre agus Miquelon","VC":"Saint Vincent agus na Greanáidíní","WS":"Samó","SM":"San Mairíne","ST":"São Tomé agus Príncipe","SA":"An Araib Shádach","SN":"An tSeineagáil","SC":"Na Séiséil","SL":"Siarra Leon","SG":"Singeapór","SK":"An tSlóvaic","SI":"An tSlóivéin","SB":"Oileáin Sholamón","SO":"An tSomáil","ZA":"An Afraic Theas","GS":"An tSeoirsia Theas agus Oileáin Sandwich Theas","ES":"An Spáinn","LK":"Srí Lanca","SD":"An tSúdáin","SR":"Suranam","SJ":"Svalbard agus Jan Mayen","SZ":"An tSuasalainn","SE":"An tSualainn","CH":"An Eilvéis","SY":"Poblacht Arabach na Siria","TW":["Taiwan, Cúige na Síne","Taiwan"],"TJ":"An Táidsíceastáin","TZ":["Poblacht Aontaithe na Tansáine","An Tansáin"],"TH":"An Téalainn","TL":"Tíomór-Leste","TG":"Tóga","TK":"Tokelau","TO":"Tonga","TT":"Oileáin na Tríonóide agus Tobága","TN":"An Túinéis","TR":["An Tuirc","Tuirc"],"TM":"An Tuircméanastáin","TC":"Oileáin na dTurcach agus Caicos","TV":"Tuvalu","UG":"Uganda","UA":"An Úcráin","AE":"Aontas na nÉimíríochtaí Arabacha","GB":["An Ríocht Aontaithe","An Bhreatain Mhór","An Ríocht Aontaithe"],"US":["Stáit Aontaithe Mheiriceá","Stáit Aontaithe","SAM","S.A.M.","US","S.A."],"UM":"Oileáin Imeallacha Stáit Aontaithe","UY":"Uragua","UZ":"An Úisbéiceastáin","VU":"Vanuatú","VE":"Veiniséala","VN":"Vítneam","VG":"Oileáin Bhriotanacha na Maighdean","VI":"Oileáin Mheiriceánacha na Maighdean","WF":"Wallis agus Futuna","EH":"An Sahára Thiar","YE":"Éimin","ZM":"An tSaimbia","ZW":"An tSiombáib","AX":["Oileáin Åland","Oileáin Aland"],"BQ":"Bonaire, Sint Eustatius agus Saba","CW":"Curaçao","GG":"Geansaí","IM":"Oileán Mhanann","JE":"Geirsí","ME":"Montainéagró","BL":"Saint Barthélemy","MF":"Saint Martin (cuid na Fraince)","RS":"An tSeirbia","SX":"Sint Maarten (cuid na hÍsiltíre)","SS":"An tSúdáin Theas","XK":"An Chosaiv"}}'))},42027,a=>{a.v(JSON.parse('{"locale":"gl","countries":{"AF":"Afganistán","AL":"Albania","DZ":"Alxeria","AS":"Samoa Americana","AD":"Andorra","AO":"Angola","AI":"Anguila","AQ":"Antártida","AG":"Antiga e Barbuda","AR":"Arxentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Acerbaixán","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarús","BE":"Bélxica","BZ":"Belize","BJ":"Benín","BM":"Bermudas","BT":"Bhután","BO":"Bolivia","BA":"Bosnia e Hercegovina","BW":"Botswana","BV":"Illa Bouvet","BR":"Brasil","IO":"Territorio Británico do Océano Índico","BN":"Brunei","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Camboxa","CM":"Camerún","CA":"Canadá","CV":"Cabo Verde","KY":"Illas Caimán","CF":"República Centroafricana","TD":"Chad","CL":"Chile","CN":"China","CX":"Territorio da Illa de Nadal","CC":"Illas Cocos (Keeling)","CO":"Colombia","KM":"Comores","CG":"Congo","CD":"Congo (República Democrática do)","CK":"Illas Cook","CR":"Costa Rica","CI":"Costa do Marfil","HR":"Croacia","CU":"Cuba","CY":"Chipre","CZ":"República Checa","DK":"Dinamarca","DJ":"Djibuti","DM":"Mancomunidade de Dominica","DO":"República Dominicana","EC":"Ecuador","EG":"Exipto","SV":"O Salvador","GQ":"Guinea Ecuatorial","ER":"Eritrea","EE":"Estonia","ET":"Etiopía","FK":"Illas Malvinas","FO":"Illas Feroe","FJ":"Fidxi","FI":"Finlandia","FR":"Francia","GF":"Güiana Francesa","PF":"Polinesia Francesa","TF":"Territorios Austrais Franceses","GA":"Gabón","GM":"Gambia","GE":"Xeorxia","DE":"Alemaña","GH":"Ghana","GI":"Xibraltar","GR":"Grecia","GL":"Groenlandia","GD":"Granada","GP":"Guadalupe","GU":"Territorio de Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea-Bissau","GY":"Güiana","HT":"República de Haití","HM":"Illas Heard e McDonald","VA":"Santa Sé","HN":"Honduras","HK":"Hong Kong","HU":"Hungría","IS":"Islandia","IN":"India","ID":"Indonesia","IR":"Irán (República Islámica de)","IQ":"Iraq","IE":"Irlanda","IL":"Israel","IT":"Italia","JM":"Xamaica","JP":"Xapón","JO":"Xordania","KZ":"Casaquistán","KE":"Kenya","KI":"Kiribati","KP":"República Popular e Democrática de Corea","KR":"Corea do Sur","KW":"Kuwait","KG":"Kirguizistán","LA":"República Democrática Popular Lao","LV":"Letonia","LB":"Líbano","LS":"Lesoto","LR":"Liberia","LY":"Libia","LI":"Liechtenstein","LT":"Lituania","LU":"Luxemburgo","MO":"Macau","MK":"Macedonia do Norte","MG":"Madagascar","MW":"Malawi","MY":"Malaisia","MV":"República das Maldivas","ML":"Malí","MT":"Malta","MH":"República das Illas Marshall","MQ":"Martinica","MR":"Mauritania","MU":"Mauricio","YT":"Mayotte","MX":"México","FM":"Estados Federados de Micronesia","MD":"Moldova","MC":"Mónaco","MN":"Mongolia","MS":"Montserrat","MA":"Marrocos","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Países Baixos","NC":"Nova Caledonia","NZ":"Nova Zelandia","NI":"Nicaragua","NE":"Níxer","NG":"Nixeria","NU":"Niue","NF":"Illa Norfolk","MP":"Marianas do Norte","NO":"Noruega","OM":"Omán","PK":"Paquistán","PW":"Palau","PS":"Palestina","PA":"Panamá","PG":"Papúa Nova Guinea","PY":"Paraguai","PE":"Perú","PH":"Filipinas","PN":"Illas Pitcairn","PL":"Polonia","PT":"Portugal","PR":"Porto Rico","QA":"Qatar","RE":"Reunión","RO":"Romanía","RU":"Rusia","RW":"Ruanda","SH":"Santa Helena, Ascensión e Tristan da Cunha","KN":"Saint Kitts e Nevis","LC":"Santa Lucía","PM":"San Pedro e Miquelón","VC":"San Vicente e as Granadinas","WS":"Samoa","SM":"San Marino","ST":"San Tomé e Príncipe","SA":"Arabia Saudita","SN":"Senegal","SC":"Seychelles","SL":"Serra Leoa","SG":"Singapur","SK":"Eslovaquia","SI":"Eslovenia","SB":"Illas Salomón","SO":"Somalia","ZA":"Suráfrica","GS":"Illas Xeorxia do Sur e Sandwich do Sur","ES":"España","LK":"Sri Lanka","SD":"Sudán","SR":"Suriname","SJ":"Svalbard e Jan Mayen","SZ":"Swazilandia","SE":"Suecia","CH":"Suiza","SY":"República Árabe Siria","TW":"Taiwán","TJ":"Taxicon","TZ":"Tanzania","TH":"Tailandia","TL":"Timor Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad e Tobago","TN":"Tunisia","TR":"Turquía","TM":"Turkmenistán","TC":"Illas Turks e Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ucraína","AE":"Emiratos Árabes Unidos","GB":"Reino Unido","US":"Estados Unidos","UM":"Illas Ultramarinas Menores dos Estados Unidos","UY":"Uruguai","UZ":"Uzbekistán","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Illas Virxes Británicas","VI":"Illas Virxes dos Estados Unidos","WF":"Wallis e Futuna","EH":"Sáhara Occidental","YE":"Iemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Illas Åland","BQ":"Bonaire, San Eustaquio e Saba","CW":"Curaçao","GG":"Guernsey","IM":"Illa de Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"San Martiño (francesa)","RS":"Serbia","SX":"Sint Maarten (neerlandesa)","SS":"Sudán do Sur","XK":"Kosovo"}}'))},75932,a=>{a.v(JSON.parse('{"locale":"ha","countries":{"AF":"Afaganistan","AL":"Albaniya","DZ":"Aljeriya","AS":"Samowa Ta Amurka","AD":"Andora","AO":"Angola","AI":"Angila","AQ":"Antarctica","AG":"Antigwa da Barbuba","AR":"Arjantiniya","AM":"Armeniya","AW":"Aruba","AU":"Ostareliya","AT":"Ostiriya","AZ":"Azarbaijan","BS":"Bahamas","BH":"Baharan","BD":"Bangiladas","BB":"Barbadas","BY":"Belarus","BE":"Belgiyom","BZ":"Beliz","BJ":"Binin","BM":"Barmuda","BT":"Butan","BO":"Bolibiya","BA":"Bosniya Harzagobina","BW":"Baswana","BV":"Tsibirin Bouvet","BR":"Birazil","IO":"Yankin Birtaniya Na Tekun Indiya","BN":"Burune","BG":"Bulgariya","BF":"Burkina Faso","BI":"Burundi","KH":"Kambodiya","CM":"Kamaru","CA":"Kanada","CV":"Tsibiran Kap Barde","KY":"Tsibiran Kaiman","CF":"Jamhuriyar Afirka Ta Tsakiya","TD":"Cadi","CL":"Cayile","CN":"Caina, Sin","CX":"Tsibirin Kirsimeti","CC":"Tsibiran Cocos (Keeling)","CO":"Kolambiya","KM":"Kwamoras","CG":"Kongo","CD":"Jamhuriyar Dimokuraɗiyyar Kongo","CK":"Tsibiran Kuku","CR":"Kwasta Rika","CI":"Aibari Kwas","HR":"Kurowaishiya","CU":"Kyuba","CY":"Sifurus","CZ":"Jamhuriyar Cak","DK":"Danmark","DJ":"Jibuti","DM":"Dominika","DO":"Jamhuriyar Dominika","EC":"Ekwador","EG":"Masar, Misira","SV":"El Salbador","GQ":"Gini Ta Ikwaita","ER":"Eritireya","EE":"Estoniya","ET":"Habasha","FK":"Tsibiran Falkilan","FO":"Tsibirin Faroe","FJ":"Fiji","FI":"Finlan","FR":"Faransa","GF":"Gini Ta Faransa","PF":"Folinesiya Ta Faransa","TF":"Southernasashen Kudancin Faransa","GA":"Gabon","GM":"Gambiya","GE":"Jiwarjiya","DE":"Jamus","GH":"Gana","GI":"Jibaraltar","GR":"Girka","GL":"Grinlan","GD":"Girnada","GP":"Gwadaluf","GU":"Gwam","GT":"Gwatamala","GN":"Gini","GW":"Gini Bisau","GY":"Guyana","HT":"Haiti","HM":"Tsibirin Heard da McDonald","VA":"Batikan","HN":"Honduras","HK":"Hong Kong","HU":"Hungari","IS":"Aisalan","IN":"Indiya","ID":"Indunusiya","IR":"Iran","IQ":"Iraƙi","IE":"Ayalan","IL":"Iziraʼila","IT":"Italiya","JM":"Jamaika","JP":"Japan","JO":"Jordan","KZ":"Kazakistan","KE":"Kenya","KI":"Kiribati","KP":"Koreya Ta Arewa","KR":"Koreya Ta Kudu","KW":"Kwiyat","KG":"Kirgizistan","LA":"Lawas","LV":"latibiya","LB":"Labanan","LS":"Lesoto","LR":"Laberiya","LY":"Libiya","LI":"Licansitan","LT":"Lituweniya","LU":"Lukusambur","MO":"Macao","MG":"Madagaskar","MW":"Malawi","MY":"Malaisiya","MV":"Maldibi","ML":"Mali","MT":"Malta","MH":"Tsibiran Marshal","MQ":"Martinik","MR":"Moritaniya","MU":"Moritus","YT":"Mayoti","MX":"Makasiko","FM":"Mikuronesiya","MD":"Maldoba","MC":"Monako","MN":"Mangoliya","MS":"Manserati","MA":"Maroko","MZ":"Mozambik","MM":"Burma, Miyamar","NA":"Namibiya","NR":"Nauru","NP":"Nefal","NL":"Holan","NC":"Kaledoniya Sabuwa","NZ":"Nuzilan","NI":"Nikaraguwa","NE":"Nijar","NG":"Najeriya","NU":"Niyu","NF":"Tsibirin Narfalk","MK":"Masedoniya","MP":"Tsibiran Mariyana Na Arewa","NO":"Norwe","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palasɗinu","PA":"Panama","PG":"Papuwa Nugini","PY":"Paragai","PE":"Peru","PH":"Filipin","PN":"Pitakarin","PL":"Polan","PT":"Portugal","PR":"Porto Riko","QA":"Kwatar","RE":"Rawuniyan","RO":"Romaniya","RU":"Rasha","RW":"Ruwanda","SH":"San Helena","KN":"San Kiti Da Nebis","LC":"San Lusiya","PM":"San Piyar Da Mikelan","VC":"San Binsan Da Girnadin","WS":"Samowa","SM":"San Marino","ST":"Sawo Tome Da Paransip","SA":"Ƙasar Makka","SN":"Sinigal","SC":"Saishal","SL":"Salewo","SG":"Singapur","SK":"Sulobakiya","SI":"Sulobeniya","SB":"Tsibiran Salaman","SO":"Somaliya","ZA":"Afirka Ta Kudu","GS":"Kudancin Georgia da Kudancin Sandwich Island","ES":"Sipen","LK":"Siri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard da Jan Mayen","SZ":"Suwazilan","SE":"Suwedan","CH":"Suwizalan","SY":"Sham, Siriya","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzaniya","TH":"Tailan","TL":"Timor Ta Gabas","TG":"Togo","TK":"Takelau","TO":"Tanga","TT":"Tirinidad Da Tobago","TN":"Tunisiya","TR":"Turkiyya","TM":"Turkumenistan","TC":"Turkis Da Tsibiran Kaikwas","TV":"Tubalu","UG":"Yuganda","UA":"Yukaran","AE":"Haɗaɗɗiyar Daular Larabawa","GB":"Birtaniya","US":"Amurka","UM":"Kananan Tsibiran Amurka","UY":"Yurugai","UZ":"Uzubekistan","VU":"Banuwatu","VE":"Benezuwela","VN":"Biyetinam","VG":"Tsibirin Birjin Na Birtaniya","VI":"Tsibiran Birjin Ta Amurka","WF":"Walis Da Futuna","EH":"Yammacin Sahara","YE":"Yamal","ZM":"Zambiya","ZW":"Zimbabuwe","AX":"Tsibirin Åland","BQ":"Bonaire, Sint Eustatius da Saba","CW":"Curaçao","GG":"Guernsey","IM":"Isle na Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (Bangaren Faransa)","RS":"Sabiya","SX":"Sint Maarten (Sashin Yaren mutanen Holland)","SS":"Sudan ta Kudu","XK":"Kosovo"}}'))},69795,a=>{a.v(JSON.parse('{"locale":"he","countries":{"AF":"אפגניסטן","AX":"איי אולנד","AL":"אלבניה","DZ":"אלג׳יריה","AS":"סמואה האמריקנית","AD":"אנדורה","AO":"אנגולה","AI":"אנגילה","AQ":"אנטארקטיקה","AG":"אנטיגואה וברבודה","AR":"ארגנטינה","AM":"ארמניה","AW":"ארובה","AU":"אוסטרליה","AT":"אוסטריה","AZ":"אזרבייג׳ן","BS":"איי בהאמה","BH":"בחריין","BD":"בנגלדש","BB":"ברבדוס","BY":"בלארוס","BE":"בלגיה","BZ":"בליז","BJ":"בנין","BM":"ברמודה","BT":"בהוטן","BO":"בוליביה","BQ":"האיים הקריביים ההולנדיים","BA":"בוסניה והרצגובינה","BW":"בוצוואנה","BV":"איי בובה","BR":"ברזיל","IO":"הטריטוריה הבריטית באוקיינוס ההודי","BN":"ברוניי","BG":"בולגריה","BF":"בורקינה פאסו","BI":"בורונדי","KH":"קמבודיה","CM":"קמרון","CA":"קנדה","CV":"כף ורדה","KY":"איי קיימן","CF":"הרפובליקה של מרכז אפריקה","TD":"צ׳אד","CL":"צ׳ילה","CN":"סין","CX":"האי כריסטמס","CC":"איי קוקוס (קילינג)","CO":"קולומביה","KM":"קומורו","CG":"קונגו - ברזאויל","CD":"קונגו - קינשאסה","CK":"איי קוק","CR":"קוסטה ריקה","CI":"חוף השנהב","HR":"קרואטיה","CU":"קובה","CW":"קוראסאו","CY":"קפריסין","CZ":"צ׳כיה","DK":"דנמרק","DJ":"ג׳יבוטי","DM":"דומיניקה","DO":"הרפובליקה הדומיניקנית","EC":"אקוודור","EG":"מצרים","SV":"אל סלבדור","GQ":"גינאה המשוונית","ER":"אריתריאה","EE":"אסטוניה","ET":"אתיופיה","FK":"איי פוקלנד","FO":"איי פארו","FJ":"פיג׳י","FI":"פינלנד","FR":"צרפת","GF":"גיאנה הצרפתית","PF":"פולינזיה הצרפתית","TF":"הטריטוריות הדרומיות של צרפת","GA":"גבון","GM":"גמביה","GE":"גאורגיה","DE":"גרמניה","GH":"גאנה","GI":"גיברלטר","GR":"יוון","GL":"גרינלנד","GD":"גרנדה","GP":"גוואדלופ","GU":"גואם","GT":"גואטמלה","GG":"גרנסי","GN":"גינאה","GW":"גינאה ביסאו","GY":"גיאנה","HT":"האיטי","HM":"איי הרד ומקדונלד","VA":"הוותיקן","HN":"הונדורס","HK":"הונג קונג (מחוז מנהלי מיוחד של סין)","HU":"הונגריה","IS":"איסלנד","IN":"הודו","ID":"אינדונזיה","IR":"איראן","IQ":"עיראק","IE":"אירלנד","IM":"האי מאן","IL":"ישראל","IT":"איטליה","JM":"ג׳מייקה","JP":"יפן","JE":"ג׳רסי","JO":"ירדן","KZ":"קזחסטן","KE":"קניה","KI":"קיריבאטי","KP":"קוריאה הצפונית","KR":"קוריאה הדרומית","KW":"כווית","KG":"קירגיזסטן","LA":"לאוס","LV":"לטביה","LB":"לבנון","LS":"לסוטו","LR":"ליבריה","LY":"לוב","LI":"ליכטנשטיין","LT":"ליטא","LU":"לוקסמבורג","MO":"מקאו (מחוז מנהלי מיוחד של סין)","MK":"מקדוניה הצפונית","MG":"מדגסקר","MW":"מלאווי","MY":"מלזיה","MV":"האיים המלדיביים","ML":"מאלי","MT":"מלטה","MH":"איי מרשל","MQ":"מרטיניק","MR":"מאוריטניה","MU":"מאוריציוס","YT":"מאיוט","MX":"מקסיקו","FM":"מיקרונזיה","MD":"מולדובה","MC":"מונקו","MN":"מונגוליה","ME":"מונטנגרו","MS":"מונסראט","MA":"מרוקו","MZ":"מוזמביק","MM":"מיאנמר (בורמה)","NA":"נמיביה","NR":"נאורו","NP":"נפאל","NL":"הולנד","NC":"קלדוניה החדשה","NZ":"ניו זילנד","NI":"ניקרגואה","NE":"ניז׳ר","NG":"ניגריה","NU":"ניווה","NF":"איי נורפוק","MP":"איי מריאנה הצפוניים","NO":"נורווגיה","OM":"עומאן","PK":"פקיסטן","PW":"פלאו","PS":"השטחים הפלסטיניים","PA":"פנמה","PG":"פפואה גינאה החדשה","PY":"פרגוואי","PE":"פרו","PH":"הפיליפינים","PN":"איי פיטקרן","PL":"פולין","PT":"פורטוגל","PR":"פוארטו ריקו","QA":"קטאר","RE":"ראוניון","RO":"רומניה","RU":"רוסיה","RW":"רואנדה","BL":"סנט ברתולומיאו","SH":"סנט הלנה","KN":"סנט קיטס ונוויס","LC":"סנט לוסיה","MF":"סן מרטן","PM":"סנט פייר ומיקלון","VC":"סנט וינסנט והגרנדינים","WS":"סמואה","SM":"סן מרינו","ST":"סאו טומה ופרינסיפה","SA":"ערב הסעודית","SN":"סנגל","RS":"סרביה","SC":"איי סיישל","SL":"סיירה לאונה","SG":"סינגפור","SX":"סנט מארטן","SK":"סלובקיה","SI":"סלובניה","SB":"איי שלמה","SO":"סומליה","ZA":"דרום אפריקה","GS":"ג׳ורג׳יה הדרומית ואיי סנדוויץ׳ הדרומיים","SS":"דרום סודן","ES":"ספרד","LK":"סרי לנקה","SD":"סודן","SR":"סורינם","SJ":"סוולבארד ויאן מאיין","SZ":"סווזילנד","SE":"שוודיה","CH":"שווייץ","SY":"סוריה","TW":"טייוואן","TJ":"טג׳יקיסטן","TZ":"טנזניה","TH":"תאילנד","TL":"טימור לסטה","TG":"טוגו","TK":"טוקלאו","TO":"טונגה","TT":"טרינידד וטובגו","TN":"טוניסיה","TR":"טורקיה","TM":"טורקמניסטן","TC":"איי טורקס וקאיקוס","TV":"טובאלו","UG":"אוגנדה","UA":"אוקראינה","AE":["איחוד האמירויות הערביות","איחוד האמירויות"],"GB":"הממלכה המאוחדת","US":["ארצות הברית","ארהב","ארה״ב"],"UM":"האיים המרוחקים הקטנים של ארה״ב","UY":"אורוגוואי","UZ":"אוזבקיסטן","VU":"ונואטו","VE":"ונצואלה","VN":"וייטנאם","VG":"איי הבתולה הבריטיים","VI":"איי הבתולה של ארצות הברית","WF":"איי ווליס ופוטונה","EH":"סהרה המערבית","YE":"תימן","ZM":"זמביה","ZW":"זימבבואה","XK":"קוסובו"}}'))},72187,a=>{a.v(JSON.parse('{"locale":"hi","countries":{"AD":"अंडोरा","AE":"संयुक्त अरब अमीरात","AF":"अफगानिस्तान","AG":"एंटीगुआ और बारबूडा","AI":"अंग्विला","AL":"अल्बानिया","AM":"अर्मेनिया","AO":"अंगोला","AQ":"अंटार्टिका","AR":"अर्जेंटिना","AS":"अमेरिकान सामोआ","AT":"आस्ट्रिया","AU":"आस्ट्रेलिया","AW":"अरुबा","AX":"ऑलैण्ड द्वीपसमूह","AZ":"अजरबेजान","BA":"बोस्निया हर्जेगोविना","BB":"बार्बाडोस","BD":"बांग्लादेश","BE":"बेल्जियम","BF":"बुर्किना फासो","BG":"बल्गारिया","BH":"बहरीन","BI":"बुरुंडी","BJ":"बानिन","BL":"सेंट_बार्थेलेमी","BM":"बर्मूडा","BN":"ब्रुनेई","BO":"बोलिविया","BQ":"कैरिबियन नीदरलैंड","BR":"ब्राजील","BS":"बहामास","BT":"भूटान","BV":"बाउवेट","BW":"बोत्सवाना","BY":"बेलारुस","BZ":"बेलिजे","CA":"कनाडा","CC":"कोकोस (कीलिंग) द्वीप","CD":"कांगो लोकतान्त्रिक गणराज्य","CF":"सेंट्रल अफ्रीका गणतंत्र","CG":"कांगो","CH":"स्विट्जरलैंड","CI":"आइवरी कोस्ट","CK":"कुक द्वीप","CL":"चिली","CM":"कैमरून","CN":"चीन","CO":"कोलंबिया","CR":"कोस्टा रिका","CU":"क्यूबा","CV":"केप वर्दे","CW":"कुराकाओ","CX":"क्रिसमस द्वीप","CY":"साइप्रस","CZ":"चेक","DE":"जर्मनी","DJ":"जिबॉती","DK":"डैनमार्क","DM":"डोमिनिक","DO":"डोमिनिक गणतंत्र","DZ":"अल्जीरिया","EC":"इक्वाडोर","EE":"एस्तोनिया","EG":"मिस्र","EH":"पश्चिमी सहारा","ER":"एरिट्रेया","ES":"स्पेन","ET":"इथियोपिया","FI":"फिनलैंड","FJ":"फिजी","FK":"फाकलैंड द्वीप समूह (मालविनास)","FM":"माइक्रोनेशिया","FO":"फराओ द्वीप समूह","FR":"फ्रांस","GA":"गैबोन","GB":"ग्रेट ब्रिटेन","GD":"ग्रेनेडा","GE":"जॉर्जिया","GF":"फ्रेंच गुआना","GG":"ग्वेर्नसे","GH":"घाना","GI":"जिब्राल्टर","GL":"ग्रीनलैंड","GM":"गाम्बिया","GN":"गिनी","GP":"ग्वाडेलोप","GQ":"एक्वेटोरियल गिनी","GR":"यूनान","GS":"दक्षिण जॉर्जिया और दक्षिण सैंडविच द्वीप समूह","GT":"ग्वाटेमाला","GU":"ग्वाम","GW":"गिनी-बिसाउ","GY":"गुआना","HK":"हांग कांग","HM":"हर्ड एंड मैकडोनाल्ड द्वीपसमूह","HN":"होंडुरास","HR":"क्रोएशिया","HT":"हैती","HU":"हंगरी","ID":"इंडोनेशिया","IE":"आयरलैंड","IL":"इजराइल","IM":"आइसल ऑफ मैन","IN":"भारत","IO":"ब्रितानी हिंद महासागरीय क्षेत्र","IQ":"इराक","IR":"ईरान","IS":"आइसलैंड","IT":"इटली","JE":"जर्सी","JM":"जमैका","JO":"जॉर्डन","JP":"जापान","KE":"केन्या","KG":"किर्जिस्तान","KH":"कंबोडिया","KI":"किरिबिती","KM":"कोमोरोस","KN":"सेंट किट्स एंड नेविस","KP":"उत्तर कोरिया","KR":"दक्षिण कोरिया","KW":"कुवैत","KY":"केमैन आइसलैंड्स","KZ":"कज़ाखिस्तान","LA":"लाओस","LB":"लेबनान","LC":"सेंट लुसिया","LI":"लिक्टेनिस्टीन","LK":"श्री लंका","LR":"लाइबेरिया","LS":"लेसोथो","LT":"लिथुआनिया","LU":"लक्जमबर्ग","LV":"लात्विया","LY":"लीबिया","MA":"मोरक्को","MC":"मोनाको","MD":"मोलदोवा","ME":"मोंटेनेग्रो","MF":"सेंट मार्टिन की सामूहिकता","MG":"मैडागास्कर","MH":"मार्शल द्वीपसमूह","MK":"मकदूनिया","ML":"माली","MM":"म्यामांर (बर्मा)","MN":"मंगोलिया","MO":"मकाओ","MP":"उत्तर मैरिना द्वीपसमूह","MQ":"मार्टिनिक","MR":"मॉरितानिया","MS":"मोंटसेराट","MT":"माल्टा","MU":"मारीशस","MV":"मालदीव","MW":"मालावी","MX":"मेक्सिको","MY":"मलयेशिया","MZ":"मोजांबिक","NA":"नामीबिया","NC":"न्यू कैलेडोनिया","NE":"नाइजर","NF":"नोरफॉक द्वीप","NG":"नाइजीरिया","NI":"निकारागुआ","NL":"नीदरलैंड्स","NO":"नॉर्वे","NP":"नेपाल","NR":"नाउरू","NU":"नियू","NZ":"न्यूजीलैंड","OM":"ओमान","PA":"पनामा","PE":"पेरू","PF":"फ्रैंच गुआना","PG":"पापुआ न्यू गिनी","PH":"फिलीपींस","PK":"पाकिस्तान","PL":"पोलैंड","PM":"सेंट पिएरे एंड मिक्वेलॉन","PN":"पिटकैर्न द्वीपसमूह","PR":"पुएर्तो रिको","PS":"फिलिस्तीन राज्य","PT":"पुर्तगाल","PW":"पलाउ","PY":"पराग्वे","QA":"क़तार","RE":"रीयूनियन","RO":"रोमानिया","RS":"सर्बिया","RU":"रूस","RW":"रवांडा","SA":"सऊदी अरब","SB":"सोलोमन द्वीपसमूह","SC":"सेशेल्स","SD":"सूडान","SE":"स्वीडन","SG":"सिंगापुर","SH":"सेंट हेलेना","SI":"स्लोवानिया","SJ":"स्यालबार्ड (स्यालबार्ड एंड जन मावेम)","SK":"स्लोवाकिया","SL":"सियारा लिओन","SM":"सैन मारिनो","SN":"सेनेगल","SO":"सोमालिया","SR":"सूरीनाम","SS":"दक्षिण सूडान","ST":"साओ टॉम एंड प्रिंसिपी","SV":"सल्वाडोर","SX":"सिण्ट मार्टेन","SY":"सीरिया","SZ":"स्वाजीलैंड","TC":"तुर्क एंड कैकोस द्वीपसमूह","TD":"चाड","TF":"फ्रांसीसी दक्षिणी क्षेत्र","TG":"टोगो","TH":"थाईलैंड","TJ":"तज़ाकिस्तान","TK":"टोकेलू","TL":"पूर्वी तिमोर","TM":"तुर्कमेनिस्तान","TN":"ट्यूनीशिया","TO":"टोंगा","TR":"तुर्की","TT":"ट्रिनिडाड एंड टोबैगो","TV":"तुवालू","TW":"ताइवान","TZ":"तंजानिया","UA":"उक्रेन","UG":"उगांडा","UM":"यूएस माइनर आउटलाइंग द्वीपसमूह","US":"यूएसए (संयुक्त राज्य अमेरिका)","UY":"उरुग्वे","UZ":"उजबेकिस्तान","VA":"वेटिकन","VC":"सेंट विंसेंट एंड द ग्रेनेंडाइन्स","VE":"वेनेजुएला","VG":"ब्रितानी वर्जिन द्वीपसमूह","VI":"अमेरिकी वर्जिन द्वीपसमूह","VN":"विएतनाम","VU":"वनातू","WF":"वालीज एंड फुटुना","WS":"पश्चिमी सामोआ","XK":"कोसोवो","YE":"यमन","YT":"मायोते","ZA":"दक्षिण अफ्रीका","ZM":"जाम्बिया","ZW":"जिंबावे"}}'))},98097,a=>{a.v(JSON.parse('{"locale":"hr","countries":{"AD":"Andora","AE":"Ujedinjeni Arapski Emirati","AF":"Afganistan","AG":"Antigva i Barbuda","AI":"Angvila","AL":"Albanija","AM":"Armenija","AO":"Angola","AQ":"Antarktika","AR":"Argentina","AS":"Američka Samoa","AT":"Austrija","AU":"Australija","AW":"Aruba","AX":"Ålandski otoci","AZ":"Azerbajdžan","BA":"Bosna i Hercegovina","BB":"Barbados","BD":"Bangladeš","BE":"Belgija","BF":"Burkina Faso","BG":"Bugarska","BH":"Bahrein","BI":"Burundi","BJ":"Benin","BL":"Saint Barthélemy","BM":"Bermudi","BN":"Brunej","BO":"Bolivija","BQ":"Karipski otoci Nizozemske","BR":"Brazil","BS":"Bahami","BT":"Butan","BV":"Otok Bouvet","BW":"Bocvana","BY":"Bjelorusija","BZ":"Belize","CA":"Kanada","CC":"Kokosovi (Keelingovi) otoci","CD":"Kongo - Kinshasa","CF":"Srednjoafrička Republika","CG":"Kongo - Brazzaville","CH":"Švicarska","CI":"Obala Bjelokosti","CK":"Cookovi Otoci","CL":"Čile","CM":"Kamerun","CN":"Kina","CO":"Kolumbija","CR":"Kostarika","CU":"Kuba","CV":"Zelenortska Republika","CW":"Curaçao","CX":"Božićni otok","CY":"Cipar","CZ":"Češka","DE":"Njemačka","DJ":"Džibuti","DK":"Danska","DM":"Dominika","DO":"Dominikanska Republika","DZ":"Alžir","EC":"Ekvador","EE":"Estonija","EG":"Egipat","EH":"Zapadna Sahara","ER":"Eritreja","ES":"Španjolska","ET":"Etiopija","FI":"Finska","FJ":"Fidži","FK":"Falklandski otoci","FM":"Mikronezija","FO":"Farski otoci","FR":"Francuska","GA":"Gabon","GB":"Ujedinjeno Kraljevstvo","GD":"Grenada","GE":"Gruzija","GF":"Francuska Gijana","GG":"Guernsey","GH":"Gana","GI":"Gibraltar","GL":"Grenland","GM":"Gambija","GN":"Gvineja","GP":"Guadalupe","GQ":"Ekvatorska Gvineja","GR":"Grčka","GS":"Južna Georgija i Južni Sendvički Otoci","GT":"Gvatemala","GU":"Guam","GW":"Gvineja Bisau","GY":"Gvajana","HK":"PUP Hong Kong Kina","HM":"Otoci Heard i McDonald","HN":"Honduras","HR":"Hrvatska","HT":"Haiti","HU":"Mađarska","ID":"Indonezija","IE":"Irska","IL":"Izrael","IM":"Otok Man","IN":"Indija","IO":"Britanski Indijskooceanski teritorij","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italija","JE":"Jersey","JM":"Jamajka","JO":"Jordan","JP":"Japan","KE":"Kenija","KG":"Kirgistan","KH":"Kambodža","KI":"Kiribati","KM":"Komori","KN":"Sveti Kristofor i Nevis","KP":"Sjeverna Koreja","KR":"Južna Koreja","KW":"Kuvajt","KY":"Kajmanski otoci","KZ":"Kazahstan","LA":"Laos","LB":"Libanon","LC":"Sveta Lucija","LI":"Lihtenštajn","LK":"Šri Lanka","LR":"Liberija","LS":"Lesoto","LT":"Litva","LU":"Luksemburg","LV":"Latvija","LY":"Libija","MA":"Maroko","MC":"Monako","MD":"Moldavija","ME":"Crna Gora","MF":"Saint Martin","MG":"Madagaskar","MH":"Maršalovi Otoci","MK":"Sjeverna Makedonija","ML":"Mali","MM":"Mjanmar (Burma)","MN":"Mongolija","MO":"PUP Makao Kina","MP":"Sjevernomarijanski otoci","MQ":"Martinique","MR":"Mauretanija","MS":"Montserrat","MT":"Malta","MU":"Mauricijus","MV":"Maldivi","MW":"Malavi","MX":"Meksiko","MY":"Malezija","MZ":"Mozambik","NA":"Namibija","NC":"Nova Kaledonija","NE":"Niger","NF":"Otok Norfolk","NG":"Nigerija","NI":"Nikaragva","NL":"Nizozemska","NO":"Norveška","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Novi Zeland","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Francuska Polinezija","PG":"Papua Nova Gvineja","PH":"Filipini","PK":"Pakistan","PL":"Poljska","PM":"Saint-Pierre-et-Miquelon","PN":"Otoci Pitcairn","PR":"Portoriko","PS":"Palestinsko Područje","PT":"Portugal","PW":"Palau","PY":"Paragvaj","QA":"Katar","RE":"Réunion","RO":"Rumunjska","RS":"Srbija","RU":"Rusija","RW":"Ruanda","SA":"Saudijska Arabija","SB":"Salomonski Otoci","SC":"Sejšeli","SD":"Sudan","SE":"Švedska","SG":"Singapur","SH":"Sveta Helena","SI":"Slovenija","SJ":"Svalbard i Jan Mayen","SK":"Slovačka","SL":"Sijera Leone","SM":"San Marino","SN":"Senegal","SO":"Somalija","SR":"Surinam","SS":"Južni Sudan","ST":"Sveti Toma i Princip","SV":"Salvador","SX":"Sint Maarten","SY":"Sirija","SZ":"Svazi","TC":"Otoci Turks i Caicos","TD":"Čad","TF":"Francuski južni i antarktički teritoriji","TG":"Togo","TH":"Tajland","TJ":"Tadžikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunis","TO":"Tonga","TR":"Turska","TT":"Trinidad i Tobago","TV":"Tuvalu","TW":"Tajvan","TZ":"Tanzanija","UA":"Ukrajina","UG":"Uganda","UM":"Mali udaljeni otoci SAD-a","US":"Sjedinjene Američke Države","UY":"Urugvaj","UZ":"Uzbekistan","VA":"Vatikanski Grad","VC":"Sveti Vincent i Grenadini","VE":"Venezuela","VG":"Britanski Djevičanski otoci","VI":"Američki Djevičanski otoci","VN":"Vijetnam","VU":"Vanuatu","WF":"Wallis i Futuna","WS":"Samoa","XK":"Kosovo","YE":"Jemen","YT":"Mayotte","ZA":"Južnoafrička Republika","ZM":"Zambija","ZW":"Zimbabve"}}'))},2728,a=>{a.v(JSON.parse('{"locale":"hu","countries":{"AF":"Afganisztán","AL":"Albánia","DZ":"Algéria","AS":"Amerikai Szamoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktisz","AG":"Antigua és Barbuda","AR":"Argentína","AM":"Örményország","AW":"Aruba","AU":"Ausztrália","AT":"Ausztria","AZ":"Azerbajdzsán","BS":"Bahama-szigetek","BH":"Bahrein","BD":"Banglades","BB":"Barbados","BY":"Fehéroroszország","BE":"Belgium","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhután","BO":"Bolívia","BA":"Bosznia-Hercegovina","BW":"Botswana","BV":"Bouvet-sziget","BR":"Brazília","IO":"Brit Indiai-óceáni Terület","BN":"Brunei","BG":"Bulgária","BF":"Burkina Faso","BI":"Burundi","KH":"Kambodzsa","CM":"Kamerun","CA":"Kanada","CV":"Zöld-foki Köztársaság","KY":"Kajmán-szigetek","CF":"Közép-afrikai Köztársaság","TD":"Csád","CL":"Chile","CN":"Kína","CX":"Karácsony-sziget","CC":"Kókusz (Keeling)-szigetek","CO":"Kolumbia","KM":"Comore-szigetek","CG":"Kongói Köztársaság","CD":"Kongói Demokratikus Köztársaság","CK":"Cook-szigetek","CR":"Costa Rica","CI":"Elefántcsontpart","HR":"Horvátország","CU":"Kuba","CY":"Ciprus","CZ":"Csehország","DK":"Dánia","DJ":"Dzsibuti","DM":"Dominikai Közösség","DO":"Dominikai Köztársaság","EC":"Ecuador","EG":"Egyiptom","SV":"Salvador","GQ":"Egyenlítői-Guinea","ER":"Eritrea","EE":"Észtország","ET":"Etiópia","FK":"Falkland-szigetek","FO":"Feröer","FJ":"Fidzsi-szigetek","FI":"Finnország","FR":"Franciaország","GF":"Francia Guyana","PF":"Francia Polinézia","TF":"Francia déli területek","GA":"Gabon","GM":"Gambia","GE":"Grúzia","DE":"Németország","GH":"Ghána","GI":"Gibraltár","GR":"Görögország","GL":"Grönland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Bissau-Guinea","GY":"Guyana","HT":"Haiti","HM":"Heard-sziget és McDonald-szigetek","VA":"Vatikán","HN":"Honduras","HK":"Hong Kong","HU":"Magyarország","IS":"Izland","IN":"India","ID":"Indonézia","IR":"Irán","IQ":"Irak","IE":"Írország","IL":"Izrael","IT":"Olaszország","JM":"Jamaica","JP":"Japán","JO":"Jordánia","KZ":"Kazahsztán","KE":"Kenya","KI":"Kiribati","KP":"Észak-Korea","KR":"Dél-Korea","KW":"Kuvait","KG":"Kirgizisztán","LA":"Laosz","LV":"Lettország","LB":"Libanon","LS":"Lesotho","LR":"Libéria","LY":"Líbia","LI":"Liechtenstein","LT":"Litvánia","LU":"Luxemburg","MO":"Makao","MK":"Észak-Macedónia","MG":"Madagaszkár","MW":"Malawi","MY":"Malajzia","MV":"Maldív-szigetek","ML":"Mali","MT":"Málta","MH":"Marshall-szigetek","MQ":"Martinique","MR":"Mauritánia","MU":"Mauritius","YT":"Mayotte","MX":"Mexikó","FM":"Mikronéziai Szövetségi Államok","MD":"Moldova","MC":"Monaco","MN":"Mongólia","MS":"Montserrat","MA":"Marokkó","MZ":"Mozambik","MM":"Mianmar","NA":"Namíbia","NR":"Nauru","NP":"Nepál","NL":"Hollandia","NC":"Új-Kaledónia","NZ":"Új-Zéland","NI":"Nicaragua","NE":"Niger","NG":"Nigéria","NU":"Niue","NF":"Norfolk-sziget","MP":"Északi-Mariana-szigetek","NO":"Norvégia","OM":"Omán","PK":"Pakisztán","PW":"Palau","PS":"Palesztina","PA":"Panama","PG":"Pápua Új-Guinea","PY":"Paraguay","PE":"Peru","PH":"Fülöp-szigetek","PN":"Pitcairn-szigetek","PL":"Lengyelország","PT":"Portugália","PR":"Puerto Rico","QA":"Katar","RE":"Réunion","RO":"Románia","RU":"Oroszország","RW":"Ruanda","SH":"Saint Helena","KN":"Saint Kitts és Nevis","LC":"Saint Lucia","PM":"Saint Pierre and Miquelon","VC":"Saint Vincent és a Grenadine-szigetek","WS":"Szamoa","SM":"San Marino","ST":"São Tomé és Príncipe","SA":"Szaudi-Arábia","SN":"Szenegál","SC":"Seychelle-szigetek","SL":"Sierra Leone","SG":"Szingapúr","SK":"Szlovákia","SI":"Szlovénia","SB":"Salamon-szigetek","SO":"Szomália","ZA":"Dél-Afrika","GS":"Déli-Georgia és Déli-Sandwich-szigetek","ES":"Spanyolország","LK":"Sri Lanka","SD":"Szudán","SR":"Suriname","SJ":"Spitzbergák és Jan Mayen","SZ":"Szváziföld","SE":"Svédország","CH":"Svájc","SY":"Szíria","TW":"Tajvan","TJ":"Tádzsikisztán","TZ":"Tanzánia","TH":"Thaiföld","TL":"Kelet-Timor","TG":"Togo","TK":"Tokelau-szigetek","TO":"Tonga","TT":"Trinidad és Tobago","TN":"Tunézia","TR":"Törökország","TM":"Türkmenisztán","TC":"Turks- és Caicos-szigetek","TV":"Tuvalu","UG":"Uganda","UA":"Ukrajna","AE":"Egyesült Arab Emírségek","GB":"Egyesült Királyság","US":"Amerikai Egyesült Államok","UM":"Az Amerikai Egyesült Államok lakatlan külbirtokai","UY":"Uruguay","UZ":"Üzbegisztán","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Brit Virgin-szigetek","VI":"Amerikai Virgin-szigetek","WF":"Wallis és Futuna","EH":"Nyugat-Szahara","YE":"Jemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Åland","BQ":"Karibi Hollandia","CW":"Curaçao","GG":"Guernsey","IM":"Man-sziget","JE":"Jersey","ME":"Montenegró","BL":"Saint Barthélemy","MF":"Szent Márton-sziget (francia rész)","RS":"Szerbia","SX":"Szent Márton-sziget (holland rész)","SS":"Dél-Szudán","XK":"Koszovó"}}'))},58069,a=>{a.v(JSON.parse('{"locale":"hy","countries":{"AD":"Անդորրա","AE":"Արաբական Միացյալ Էմիրություններ","AF":"Աֆղանստան","AG":"Անտիգուա և Բարբուդա","AI":"Անգուիլա","AL":"Ալբանիա","AM":"Հայաստան","AO":"Անգոլա","AQ":"Անտարկտիդա","AR":"Արգենտինա","AS":"Ամերիկյան Սամոա","AT":"Ավստրիա","AU":"Ավստրալիա","AW":"Արուբա","AX":"Ալանդյան կղզիներ","AZ":"Ադրբեջան","BA":"Բոսնիա և Հերցեգովինա","BB":"Բարբադոս","BD":"Բանգլադեշ","BE":"Բելգիա","BF":"Բուրկինա Ֆասո","BG":"Բուլղարիա","BH":"Բահրեյն","BI":"Բուրունդի","BJ":"Բենին","BL":"Սեն Բարտելմի","BM":"Բերմուդներ","BN":"Բրունեյ","BO":"Բոլիվիա","BQ":"Կարիբյան Նիդեռլանդներ","BR":"Բրազիլիա","BS":"Բահամաներ","BT":"Բութան","BV":"Բուվե կղզի","BW":"Բոթսվանա","BY":"Բելառուս","BZ":"Բելիզ","CA":"Կանադա","CC":"Կոկոսյան (Քիլինգ) կղզիներ","CD":"Կոնգո - Կինշասա","CF":"Կենտրոնական Աֆրիկյան Հանրապետություն","CG":"Կոնգո - Բրազավիլ","CH":"Շվեյցարիա","CI":"Կոտ դ’Իվուար","CK":"Կուկի կղզիներ","CL":"Չիլի","CM":"Կամերուն","CN":"Չինաստան","CO":"Կոլումբիա","CR":"Կոստա Ռիկա","CU":"Կուբա","CV":"Կաբո Վերդե","CW":"Կյուրասաո","CX":"Սուրբ Ծննդյան կղզի","CY":"Կիպրոս","CZ":"Չեխիա","DE":"Գերմանիա","DJ":"Ջիբութի","DK":"Դանիա","DM":"Դոմինիկա","DO":"Դոմինիկյան Հանրապետություն","DZ":"Ալժիր","EC":"Էկվադոր","EE":"Էստոնիա","EG":"Եգիպտոս","EH":"Արևմտյան Սահարա","ER":"Էրիթրեա","ES":"Իսպանիա","ET":"Եթովպիա","FI":"Ֆինլանդիա","FJ":"Ֆիջի","FK":"Ֆոլքլենդյան կղզիներ","FM":"Միկրոնեզիա","FO":"Ֆարերյան կղզիներ","FR":"Ֆրանսիա","GA":"Գաբոն","GB":"Միացյալ Թագավորություն","GD":"Գրենադա","GE":"Վրաստան","GF":"Ֆրանսիական Գվիանա","GG":"Գերնսի","GH":"Գանա","GI":"Ջիբրալթար","GL":"Գրենլանդիա","GM":"Գամբիա","GN":"Գվինեա","GP":"Գվադելուպա","GQ":"Հասարակածային Գվինեա","GR":"Հունաստան","GS":"Հարավային Ջորջիա և Հարավային Սենդվիչյան կղզիներ","GT":"Գվատեմալա","GU":"Գուամ","GW":"Գվինեա-Բիսսաու","GY":"Գայանա","HK":"Հոնկոնգի ՀՎՇ","HM":"Հերդ կղզի և ՄակԴոնալդի կղզիներ","HN":"Հոնդուրաս","HR":"Խորվաթիա","HT":"Հայիթի","HU":"Հունգարիա","ID":"Ինդոնեզիա","IE":"Իռլանդիա","IL":"Իսրայել","IM":"Մեն կղզի","IN":"Հնդկաստան","IO":"Բրիտանական Տարածք Հնդկական Օվկիանոսում","IQ":"Իրաք","IR":"Իրան","IS":"Իսլանդիա","IT":"Իտալիա","JE":"Ջերսի","JM":"Ճամայկա","JO":"Հորդանան","JP":"Ճապոնիա","KE":"Քենիա","KG":"Ղրղզստան","KH":"Կամբոջա","KI":"Կիրիբատի","KM":"Կոմորյան կղզիներ","KN":"Սենտ Քիտս և Նևիս","KP":"Հյուսիսային Կորեա","KR":"Հարավային Կորեա","KW":"Քուվեյթ","KY":"Կայմանյան կղզիներ","KZ":"Ղազախստան","LA":"Լաոս","LB":"Լիբանան","LC":"Սենթ Լյուսիա","LI":"Լիխտենշտեյն","LK":"Շրի Լանկա","LR":"Լիբերիա","LS":"Լեսոտո","LT":"Լիտվա","LU":"Լյուքսեմբուրգ","LV":"Լատվիա","LY":"Լիբիա","MA":"Մարոկկո","MC":"Մոնակո","MD":"Մոլդովա","ME":"Չեռնոգորիա","MF":"Սեն Մարտեն","MG":"Մադագասկար","MH":"Մարշալյան կղզիներ","MK":"Հյուսիսային Մակեդոնիա","ML":"Մալի","MM":"Մյանմա (Բիրմա)","MN":"Մոնղոլիա","MO":"Չինաստանի Մակաո ՀՎՇ","MP":"Հյուսիսային Մարիանյան կղզիներ","MQ":"Մարտինիկա","MR":"Մավրիտանիա","MS":"Մոնսեռատ","MT":"Մալթա","MU":"Մավրիկիոս","MV":"Մալդիվներ","MW":"Մալավի","MX":"Մեքսիկա","MY":"Մալայզիա","MZ":"Մոզամբիկ","NA":"Նամիբիա","NC":"Նոր Կալեդոնիա","NE":"Նիգեր","NF":"Նորֆոլկ կղզի","NG":"Նիգերիա","NI":"Նիկարագուա","NL":"Նիդեռլանդներ","NO":"Նորվեգիա","NP":"Նեպալ","NR":"Նաուրու","NU":"Նիուե","NZ":"Նոր Զելանդիա","OM":"Օման","PA":"Պանամա","PE":"Պերու","PF":"Ֆրանսիական Պոլինեզիա","PG":"Պապուա Նոր Գվինեա","PH":"Ֆիլիպիններ","PK":"Պակիստան","PL":"Լեհաստան","PM":"Սեն Պիեռ և Միքելոն","PN":"Պիտկեռն կղզիներ","PR":"Պուերտո Ռիկո","PS":"Պաղեստինյան տարածքներ","PT":"Պորտուգալիա","PW":"Պալաու","PY":"Պարագվայ","QA":"Կատար","RE":"Ռեյունիոն","RO":"Ռումինիա","RS":"Սերբիա","RU":"Ռուսաստան","RW":"Ռուանդա","SA":"Սաուդյան Արաբիա","SB":"Սողոմոնյան կղզիներ","SC":"Սեյշելներ","SD":"Սուդան","SE":"Շվեդիա","SG":"Սինգապուր","SH":"Սուրբ Հեղինեի կղզի","SI":"Սլովենիա","SJ":"Սվալբարդ և Յան Մայեն","SK":"Սլովակիա","SL":"Սիեռա Լեոնե","SM":"Սան Մարինո","SN":"Սենեգալ","SO":"Սոմալի","SR":"Սուրինամ","SS":"Հարավային Սուդան","ST":"Սան Տոմե և Փրինսիպի","SV":"Սալվադոր","SX":"Սինտ Մարտեն","SY":"Սիրիա","SZ":"Սվազիլենդ","TC":"Թըրքս և Կայկոս կղզիներ","TD":"Չադ","TF":"Ֆրանսիական Հարավային Տարածքներ","TG":"Տոգո","TH":"Թայլանդ","TJ":"Տաջիկստան","TK":"Տոկելաու","TL":"Թիմոր Լեշտի","TM":"Թուրքմենստան","TN":"Թունիս","TO":"Տոնգա","TR":"Թուրքիա","TT":"Տրինիդադ և Տոբագո","TV":"Տուվալու","TW":"Թայվան","TZ":"Տանզանիա","UA":"Ուկրաինա","UG":"Ուգանդա","UM":"Արտաքին կղզիներ (ԱՄՆ)","US":"Միացյալ Նահանգներ","UY":"Ուրուգվայ","UZ":"Ուզբեկստան","VA":"Վատիկան","VC":"Սենթ Վինսենթ և Գրենադիններ","VE":"Վենեսուելա","VG":"Բրիտանական Վիրջինյան կղզիներ","VI":"ԱՄՆ Վիրջինյան կղզիներ","VN":"Վիետնամ","VU":"Վանուատու","WF":"Ուոլիս և Ֆուտունա","WS":"Սամոա","XK":"Կոսովո","YE":"Եմեն","YT":"Մայոտ","ZA":"Հարավաֆրիկյան Հանրապետություն","ZM":"Զամբիա","ZW":"Զիմբաբվե"}}'))},67684,a=>{a.v(JSON.parse('{"locale":"id","countries":{"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"Samoa Amerika","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua dan Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azerbaijan","BS":"Bahama","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarusia","BE":"Belgia","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BA":"Bosnia dan Herzegovina","BW":"Botswana","BV":"Kepulauan Bouvet","BR":"Brasil","IO":"Teritori Samudra Hindia Britania","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Kamboja","CM":"Kamerun","CA":"Kanada","CV":"Tanjung Verde","KY":"Kepulauan Cayman","CF":"Afrika Tengah","TD":"Chad","CL":"Chile","CN":"China","CX":"Pulau Natal","CC":"Kepulauan Cocos (Keeling)","CO":"Kolombia","KM":"Komoro","CG":"Kongo","CD":"Republik Demokratik Kongo","CK":"Kepulauan Cook","CR":"Kosta Rika","CI":"Pantai Gading","HR":"Kroasia","CU":"Kuba","CY":"Siprus","CZ":"Republik Ceko","DK":"Denmark","DJ":"Djibouti","DM":"Dominika","DO":"Republik Dominika","EC":"Ekuador","EG":"Mesir","SV":"El Salvador","GQ":"Guinea Khatulistiwa","ER":"Eritrea","EE":"Estonia","ET":"Ethiopia","FK":"Kepulauan Falkland(Malvinas)","FO":"Kepulauan Faroe","FJ":"Fiji","FI":"Finlandia","FR":"Perancis","GF":"Guyana Perancis","PF":"Polinesia Perancis","TF":"Antartika Perancis","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Jerman","GH":"Ghana","GI":"Gibraltar","GR":"Yunani","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatamala","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Pulau Heard dan Kepulauan McDonald","VA":"Vatikan","HN":"Honduras","HK":"Hong Kong","HU":"Hungaria","IS":"Islandia","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Irak","IE":"Irlandia","IL":"Israel","IT":"Italia","JM":"Jamaika","JP":"Jepang","JO":"Yordania","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Korea Utara","KR":"Korea Selatan","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Laos","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxemburg","MO":"Makau","MK":"Makedonia Utara","MG":"Madagaskar","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Kepulauan Marshall","MQ":"Martinik","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Meksiko","FM":"Federasi Mikronesia","MD":"Moldova","MC":"Monako","MN":"Mongolia","MS":"Montserrat","MA":"Moroko","MZ":"Mozambik","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Belanda","NC":"Kaledonia Baru","NZ":"Selandia Baru","NI":"Nikaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Kepulauan Norfolk","MP":"Kepulauan Mariana Utara","NO":"Norwegia","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestina","PA":"Panama","PG":"Papua Nugini","PY":"Paraguay","PE":"Peru","PH":"Filipina","PN":"Pitcairn","PL":"Polandia","PT":"Portugal","PR":"Puerto Riko","QA":"Qatar","RE":"Reunion","RO":"Rumania","RU":"Rusia","RW":"Rwanda","SH":"Saint Helena","KN":"Saint Kitts dan Nevis","LC":"Saint Lucia","PM":"Saint Pierre dan Miquelon","VC":"Saint Vincent dan the Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome dan Principe","SA":"Arab Saudi","SN":"Senegal","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapura","SK":"Slovakia","SI":"Slovenia","SB":"Kepulauan Solomon","SO":"Somalia","ZA":"Afrika Selatan","GS":"Georgia Selatan dan Kepulauan Sandwich Selatan","ES":"Spanyol","LK":"Sri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard dan Jan Mayen","SZ":"Eswatini","SE":"Sweden","CH":"Swiss","SY":"Suriah","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzania","TH":"Thailand","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad dan Tobago","TN":"Tunisia","TR":"Turki","TM":"Turkmenistan","TC":"Turks dan Caicos Islands","TV":"Tuvalu","UG":"Uganda","UA":"Ukraina","AE":"Uni Emirat Arab","GB":"Britania Raya","US":"Amerika Serikat","UM":"United States Minor Outlying Islands","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Viet Nam","VG":"Virgin Islands, British","VI":"Virgin Islands, U.S.","WF":"Wallis and Futuna","EH":"Sahara Barat","YE":"Yaman","ZM":"Zambia","ZW":"Zimbabwe","AX":"Åland Islands","BQ":"Bonaire, Sint Eustatius and Saba","CW":"Curaçao","GG":"Guernsey","IM":"Isle of Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (French part)","RS":"Serbia","SX":"Sint Maarten (Dutch part)","SS":"Sudan Selatan","XK":"Kosovo"}}'))},50381,a=>{a.v(JSON.parse('{"locale":"is","countries":{"AD":"Andorra","AE":"Sameinuðu arabísku furstadæmin","AF":"Afganistan","AG":"Antígva og Barbúda","AI":"Angvilla","AL":"Albanía","AM":"Armenía","AO":"Angóla","AQ":"Suðurskautslandið","AR":"Argentína","AS":"Bandaríska Samóa","AT":"Austurríki","AU":"Ástralía","AW":"Arúba","AX":"Álandseyjar","AZ":"Aserbaísjan","BA":"Bosnía og Hersegóvína","BB":"Barbados","BD":"Bangladess","BE":"Belgía","BF":"Búrkína Fasó","BG":"Búlgaría","BH":"Barein","BI":"Búrúndí","BJ":"Benín","BL":"Saint-Barthélemy","BM":"Bermúda","BN":"Brúnei","BO":"Bólivía","BQ":"Bonaire","BR":"Brasilía","BS":"Bahamas","BT":"Bútan","BV":"Bouveteyja","BW":"Botsvana","BY":"Hvíta-Rússland","BZ":"Belís","CA":"Kanada","CC":"Kókoseyjar","CD":"Lýðstjórnarlýðveldið Kongó","CF":"Mið-Afríkulýðveldið","CG":"Kongó","CH":"Sviss","CI":"Fílabeinsströndin","CK":"Cooks-eyjar","CL":"Síle","CM":"Kamerún","CN":"Kína","CO":"Kólumbía","CR":"Kosta Ríka","CU":"Kúba","CV":"Grænhöfðaeyjar","CW":"Curaçao","CX":"Jólaeyja","CY":"Kípur","CZ":"Tékkland","DE":"Þýskaland","DJ":"Djibútí","DK":"Danmörk","DM":"Dóminíka","DO":"Dóminíska lýðveldið","DZ":"Alsír","EC":"Ekvador","EE":"Eistland","EG":"Egyptaland","EH":"Vestur-Sahara","ER":"Eritrea","ES":"Spánn","ET":"Eþíópía","FI":"Finnland","FJ":"Fídjíeyjar","FK":"Falklandseyjar","FM":"Míkrónesía","FO":"Færeyjar","FR":"Frakkland","GA":"Gabon","GB":"Bretland","GD":"Grenada","GE":"Georgía","GF":"Franska Gvæjana","GG":"Guernsey","GH":"Gana","GI":"Gíbraltar","GL":"Grænland","GM":"Gambía","GN":"Gínea","GP":"Gvadelúpeyjar","GQ":"Miðbaugs-Gínea","GR":"Grikkland","GS":"Suður-Georgía og Suður-Sandvíkureyjar","GT":"Gvatemala","GU":"Gvam","GW":"Gínea-Bissá","GY":"Gvæjana","HK":"Hong Kong","HM":"Heard og McDonaldseyjar","HN":"Hondúras","HR":"Króatía","HT":"Haítí","HU":"Ungverjaland","ID":"Indónesía","IE":"Írland","IL":"Ísrael","IM":"Mön","IN":"Indland","IO":"Bresku Indlandshafseyjar","IQ":"Írak","IR":"Íran","IS":"Ísland","IT":"Ítalía","JE":"Jersey","JM":"Jamaíka","JO":"Jórdanía","JP":"Japan","KE":"Kenía","KG":"Kirgistan","KH":"Kambódía","KI":"Kíribatí","KM":"Kómoreyjar","KN":"Sankti Kristófer og Nevis","KP":"Norður-Kórea","KR":"Suður-Kórea","KW":"Kúveit","KY":"Cayman-eyjar","KZ":"Kasakstan","LA":"Laos","LB":"Líbanon","LC":"Sankti Lúsía","LI":"Liechtenstein","LK":"Srí Lanka","LR":"Líbería","LS":"Lesótó","LT":"Litháen","LU":"Lúxemborg","LV":"Lettland","LY":"Líbía","MA":"Marokkó","MC":"Mónakó","MD":"Moldóva","ME":"Svartfjallaland","MF":"Saint-Martin","MG":"Madagaskar","MH":"Marshalleyjar","MK":"Norður-Makedónía","ML":"Malí","MM":"Mjanmar","MN":"Mongólía","MO":"Makaó","MP":"Norður-Maríanaeyjar","MQ":"Martinique","MR":"Máritanía","MS":"Montserrat","MT":"Malta","MU":"Máritíus","MV":"Maldívur","MW":"Malaví","MX":"Mexíkó","MY":"Malasía","MZ":"Mósambík","NA":"Namibía","NC":"Nýja-Kaledónía","NE":"Níger","NF":"Norfolkeyja","NG":"Nígería","NI":"Níkaragva","NL":"Holland","NO":"Noregur","NP":"Nepal","NR":"Naúrú","NU":"Niue","NZ":"Nýja-Sjáland","OM":"Óman","PA":"Panama","PE":"Perú","PF":"Franska Pólýnesía","PG":"Papúa Nýja-Gínea","PH":"Filippseyjar","PK":"Pakistan","PL":"Pólland","PM":"Sankti Pierre og Miquelon","PN":"Pitcairn","PR":"Púertó Ríkó","PS":"Palestína","PT":"Portúgal","PW":"Palá","PY":"Paragvæ","QA":"Katar","RE":"Réunion","RO":"Rúmenía","RS":"Serbía","RU":"Rússland","RW":"Rúanda","SA":"Sádi-Arabía","SB":"Salómonseyjar","SC":"Seychelles-eyjar","SD":"Súdan","SE":"Svíþjóð","SG":"Singapúr","SH":"Sankti Helena","SI":"Slóvenía","SJ":"Svalbarði","SK":"Slóvakía","SL":"Síerra Leóne","SM":"San Marínó","SN":"Senegal","SO":"Sómalía","SR":"Súrínam","SS":"Suður-Súdan","ST":"Saó Tóme og Prinsípe","SV":"El Salvador","SX":"Sint Maarten","SY":"Sýrland","SZ":"Esvatíní","TC":"Turks- og Caicoseyjar","TD":"Tjad","TF":"Frönsku suðlægu landsvæðin","TG":"Tógó","TH":"Taíland","TJ":"Tadsíkistan","TK":"Tókelá","TL":"Austur-Tímor","TM":"Túrkmenistan","TN":"Túnis","TO":"Tonga","TR":"Tyrkland","TT":"Trínidad og Tóbagó","TV":"Túvalú","TW":"Taívan","TZ":"Tansanía","UA":"Úkraína","UG":"Úganda","UM":"Smáeyjar Bandaríkjanna","US":"Bandaríkin","UY":"Úrúgvæ","UZ":"Úsbekistan","VA":"Vatíkanið","VC":"Sankti Vinsent og Grenadínur","VE":"Venesúela","VG":"Bresku Jómfrúaeyjar","VI":"Bandarísku Jómfrúaeyjar","VN":"Víetnam","VU":"Vanúatú","WF":"Wallis- og Fútúnaeyjar","WS":"Samóa","XK":"Kósovó","YE":"Jemen","YT":"Mayotte","ZA":"Suður-Afríka","ZM":"Sambía","ZW":"Simbabve"}}'))},6586,a=>{a.v(JSON.parse('{"locale":"it","countries":{"AD":"Andorra","AE":"Emirati Arabi Uniti","AF":"Afghanistan","AG":"Antigua e Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antartide","AR":"Argentina","AS":"Samoa Americane","AT":"Austria","AU":"Australia","AW":"Aruba","AX":"Isole Åland","AZ":"Azerbaigian","BA":"Bosnia ed Erzegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgio","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Isole BES","BR":"Brasile","BS":"Bahamas","BT":"Bhutan","BV":"Isola Bouvet","BW":"Botswana","BY":"Bielorussia","BZ":"Belize","CA":"Canada","CC":"Isole Cocos e Keeling","CD":"Repubblica Democratica del Congo","CF":"Repubblica Centrafricana","CG":"Repubblica del Congo","CH":"Svizzera","CI":"Costa d\'Avorio","CK":"Isole Cook","CL":"Cile","CM":"Camerun","CN":"Cina","CO":"Colombia","CR":"Costa Rica","CU":"Cuba","CV":"Capo Verde","CW":"Curaçao","CX":"Isola del Natale","CY":"Cipro","CZ":"Repubblica Ceca","DE":"Germania","DJ":"Gibuti","DK":"Danimarca","DM":"Dominica","DO":"Repubblica Dominicana","DZ":"Algeria","EC":"Ecuador","EE":"Estonia","EG":"Egitto","EH":"Sahara Occidentale","ER":"Eritrea","ES":"Spagna","ET":"Etiopia","FI":"Finlandia","FJ":"Figi","FK":"Isole Falkland","FM":"Stati Federati di Micronesia","FO":"Isole Fær Øer","FR":"Francia","GA":"Gabon","GB":"Regno Unito","GD":"Grenada","GE":"Georgia","GF":"Guyana Francese","GG":"Guernsey","GH":"Ghana","GI":"Gibilterra","GL":"Groenlandia","GM":"Gambia","GN":"Guinea","GP":"Guadalupa","GQ":"Guinea Equatoriale","GR":"Grecia","GS":"Georgia del Sud e isole Sandwich meridionali","GT":"Guatemala","GU":"Guam","GW":"Guinea-Bissau","GY":"Guyana","HK":"Hong Kong","HM":"Isole Heard e McDonald","HN":"Honduras","HR":"Croazia","HT":"Haiti","HU":"Ungheria","ID":"Indonesia","IE":"Irlanda","IL":"Israele","IM":"Isola di Man","IN":"India","IO":"Territori Britannici dell\'Oceano Indiano","IQ":"Iraq","IR":"Iran","IS":"Islanda","IT":"Italia","JE":"Jersey","JM":"Giamaica","JO":"Giordania","JP":"Giappone","KE":"Kenya","KG":"Kirghizistan","KH":"Cambogia","KI":"Kiribati","KM":"Comore","KN":"Saint Kitts e Nevis","KP":"Corea del Nord","KR":"Corea del Sud","KW":"Kuwait","KY":"Isole Cayman","KZ":"Kazakistan","LA":"Laos","LB":"Libano","LC":"Santa Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lituania","LU":"Lussemburgo","LV":"Lettonia","LY":"Libia","MA":"Marocco","MC":"Monaco","MD":"Moldavia","ME":"Montenegro","MF":"Saint-Martin","MG":"Madagascar","MH":"Isole Marshall","MK":"Macedonia del Nord","ML":"Mali","MM":"Birmania  Myanmar","MN":"Mongolia","MO":"Macao","MP":"Isole Marianne Settentrionali","MQ":"Martinica","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldive","MW":"Malawi","MX":"Messico","MY":"Malesia","MZ":"Mozambico","NA":"Namibia","NC":"Nuova Caledonia","NE":"Niger","NF":"Isola Norfolk","NG":"Nigeria","NI":"Nicaragua","NL":"Paesi Bassi","NO":"Norvegia","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Nuova Zelanda","OM":"Oman","PA":"Panamá","PE":"Perù","PF":"Polinesia Francese","PG":"Papua Nuova Guinea","PH":"Filippine","PK":"Pakistan","PL":"Polonia","PM":"Saint Pierre e Miquelon","PN":"Isole Pitcairn","PR":"Porto Rico","PS":"Stato di Palestina","PT":"Portogallo","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Réunion","RO":"Romania","RS":"Serbia","RU":"Russia","RW":"Ruanda","SA":"Arabia Saudita","SB":"Isole Salomone","SC":"Seychelles","SD":"Sudan","SE":"Svezia","SG":"Singapore","SH":"Sant\'Elena, Isola di Ascensione e Tristan da Cunha","SI":"Slovenia","SJ":"Svalbard e Jan Mayen","SK":"Slovacchia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Suriname","SS":"Sudan del Sud","ST":"São Tomé e Príncipe","SV":"El Salvador","SX":"Sint Maarten","SY":"Siria","SZ":"Eswatini","TC":"Isole Turks e Caicos","TD":"Ciad","TF":"Territori Francesi del Sud","TG":"Togo","TH":"Thailandia","TJ":"Tagikistan","TK":"Tokelau","TL":"Timor Est","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Turchia","TT":"Trinidad e Tobago","TV":"Tuvalu","TW":["Repubblica di Cina","Taiwan"],"TZ":"Tanzania","UA":"Ucraina","UG":"Uganda","UM":"Isole minori esterne degli Stati Uniti","US":"Stati Uniti d\'America","UY":"Uruguay","UZ":"Uzbekistan","VA":"Città del Vaticano","VC":"Saint Vincent e Grenadine","VE":"Venezuela","VG":"Isole Vergini Britanniche","VI":"Isole Vergini Americane","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis e Futuna","WS":"Samoa","YE":"Yemen","YT":"Mayotte","ZA":"Sudafrica","ZM":"Zambia","ZW":"Zimbabwe","XK":"Kosovo"}}'))},18606,a=>{a.v(JSON.parse('{"locale":"ja","countries":{"AF":"アフガニスタン","AL":"アルバニア","DZ":"アルジェリア","AS":"アメリカ領サモア","AD":"アンドラ","AO":"アンゴラ","AI":"アンギラ","AQ":"南極","AG":"アンティグア・バーブーダ","AR":"アルゼンチン","AM":"アルメニア","AW":"アルバ","AU":"オーストラリア","AT":"オーストリア","AZ":"アゼルバイジャン","BS":"バハマ","BH":"バーレーン","BD":"バングラデシュ","BB":"バルバドス","BY":"ベラルーシ","BE":"ベルギー","BZ":"ベリーズ","BJ":"ベナン","BM":"バミューダ","BT":"ブータン","BO":"ボリビア多民族国","BA":"ボスニア・ヘルツェゴビナ","BW":"ボツワナ","BV":"ブーベ島","BR":"ブラジル","IO":"イギリス領インド洋地域","BN":"ブルネイ・ダルサラーム","BG":"ブルガリア","BF":"ブルキナファソ","BI":"ブルンジ","KH":"カンボジア","CM":"カメルーン","CA":"カナダ","CV":"カーボベルデ","KY":"ケイマン諸島","CF":"中央アフリカ共和国","TD":"チャド","CL":"チリ","CN":"中華人民共和国","CX":"クリスマス島","CC":"ココス（キーリング）諸島","CO":"コロンビア","KM":"コモロ","CG":"コンゴ共和国","CD":"コンゴ民主共和国","CK":"クック諸島","CR":"コスタリカ","CI":"コートジボワール","HR":"クロアチア","CU":"キューバ","CY":"キプロス","CZ":"チェコ","DK":"デンマーク","DJ":"ジブチ","DM":"ドミニカ国","DO":"ドミニカ共和国","EC":"エクアドル","EG":"エジプト","SV":"エルサルバドル","GQ":"赤道ギニア","ER":"エリトリア","EE":"エストニア","ET":"エチオピア","FK":"フォークランド（マルビナス）諸島","FO":"フェロー諸島","FJ":"フィジー","FI":"フィンランド","FR":"フランス","GF":"フランス領ギアナ","PF":"フランス領ポリネシア","TF":"フランス領南方・南極地域","GA":"ガボン","GM":"ガンビア","GE":"ジョージア","DE":"ドイツ","GH":"ガーナ","GI":"ジブラルタル","GR":"ギリシャ","GL":"グリーンランド","GD":"グレナダ","GP":"グアドループ","GU":"グアム","GT":"グアテマラ","GN":"ギニア","GW":"ギニアビサウ","GY":"ガイアナ","HT":"ハイチ","HM":"ハード島とマクドナルド諸島","VA":"バチカン市国","HN":"ホンジュラス","HK":"香港","HU":"ハンガリー","IS":"アイスランド","IN":"インド","ID":"インドネシア","IR":"イラン・イスラム共和国","IQ":"イラク","IE":"アイルランド","IL":"イスラエル","IT":"イタリア","JM":"ジャマイカ","JP":"日本","JO":"ヨルダン","KZ":"カザフスタン","KE":"ケニア","KI":"キリバス","KP":"朝鮮民主主義人民共和国","KR":"大韓民国","KW":"クウェート","KG":"キルギス","LA":"ラオス人民民主共和国","LV":"ラトビア","LB":"レバノン","LS":"レソト","LR":"リベリア","LY":"リビア","LI":"リヒテンシュタイン","LT":"リトアニア","LU":"ルクセンブルク","MO":"マカオ","MG":"マダガスカル","MW":"マラウイ","MY":"マレーシア","MV":"モルディブ","ML":"マリ","MT":"マルタ","MH":"マーシャル諸島","MQ":"マルティニーク","MR":"モーリタニア","MU":"モーリシャス","YT":"マヨット","MX":"メキシコ","FM":"ミクロネシア連邦","MD":"モルドバ共和国","MC":"モナコ","MN":"モンゴル","MS":"モントセラト","MA":"モロッコ","MZ":"モザンビーク","MM":"ミャンマー","NA":"ナミビア","NR":"ナウル","NP":"ネパール","NL":"オランダ","NC":"ニューカレドニア","NZ":"ニュージーランド","NI":"ニカラグア","NE":"ニジェール","NG":"ナイジェリア","NU":"ニウエ","NF":"ノーフォーク島","MK":"北マケドニア","MP":"北マリアナ諸島","NO":"ノルウェー","OM":"オマーン","PK":"パキスタン","PW":"パラオ","PS":"パレスチナ","PA":"パナマ","PG":"パプアニューギニア","PY":"パラグアイ","PE":"ペルー","PH":"フィリピン","PN":"ピトケアン","PL":"ポーランド","PT":"ポルトガル","PR":"プエルトリコ","QA":"カタール","RE":"レユニオン","RO":"ルーマニア","RU":"ロシア連邦","RW":"ルワンダ","SH":"セントヘレナ・アセンションおよびトリスタンダクーニャ","KN":"セントクリストファー・ネイビス","LC":"セントルシア","PM":"サンピエール島・ミクロン島","VC":"セントビンセントおよびグレナディーン諸島","WS":"サモア","SM":"サンマリノ","ST":"サントメ・プリンシペ","SA":"サウジアラビア","SN":"セネガル","SC":"セーシェル","SL":"シエラレオネ","SG":"シンガポール","SK":"スロバキア","SI":"スロベニア","SB":"ソロモン諸島","SO":"ソマリア","ZA":"南アフリカ","GS":"サウスジョージア・サウスサンドウィッチ諸島","ES":"スペイン","LK":"スリランカ","SD":"スーダン","SR":"スリナム","SJ":"スヴァールバル諸島およびヤンマイエン島","SZ":"スワジランド","SE":"スウェーデン","CH":"スイス","SY":"シリア・アラブ共和国","TW":"台湾","TJ":"タジキスタン","TZ":"タンザニア","TH":"タイ","TL":"東ティモール","TG":"トーゴ","TK":"トケラウ","TO":"トンガ","TT":"トリニダード・トバゴ","TN":"チュニジア","TR":"トルコ","TM":"トルクメニスタン","TC":"タークス・カイコス諸島","TV":"ツバル","UG":"ウガンダ","UA":"ウクライナ","AE":"アラブ首長国連邦","GB":"イギリス","US":"アメリカ合衆国","UM":"合衆国領有小離島","UY":"ウルグアイ","UZ":"ウズベキスタン","VU":"バヌアツ","VE":"ベネズエラ・ボリバル共和国","VN":"ベトナム","VG":"イギリス領ヴァージン諸島","VI":"アメリカ領ヴァージン諸島","WF":"ウォリス・フツナ","EH":"西サハラ","YE":"イエメン","ZM":"ザンビア","ZW":"ジンバブエ","AX":"オーランド諸島","BQ":"ボネール、シント・ユースタティウスおよびサバ","CW":"キュラソー","GG":"ガーンジー","IM":"マン島","JE":"ジャージー","ME":"モンテネグロ","BL":"サン・バルテルミー","MF":"サン・マルタン（フランス領）","RS":"セルビア","SX":"シント・マールテン（オランダ領）","SS":"南スーダン","XK":"コソボ"}}'))},59341,a=>{a.v(JSON.parse('{"locale":"ka","countries":{"AD":"ანდორა","AE":"არაბთა გაერთიანებული საამიროები","AF":"ავღანეთი","AG":"ანტიგუა და ბარბუდა","AI":"ანგვილა","AL":"ალბანეთი","AM":"სომხეთი","AO":"ანგოლა","AQ":"ანტარქტიკა","AR":"არგენტინა","AS":"ამერიკის სამოა","AT":"ავსტრია","AU":"ავსტრალია","AW":"არუბა","AX":"ალანდის კუნძულები","AZ":"აზერბაიჯანი","BA":"ბოსნია და ჰერცეგოვინა","BB":"ბარბადოსი","BD":"ბანგლადეში","BE":"ბელგია","BF":"ბურკინა-ფასო","BG":"ბულგარეთი","BH":"ბაჰრეინი","BI":"ბურუნდი","BJ":"ბენინი","BL":"სენ-ბართელმი","BM":"ბერმუდა","BN":"ბრუნეი","BO":"ბოლივია","BQ":"კარიბის ნიდერლანდები","BR":"ბრაზილია","BS":"ბაჰამის კუნძულები","BT":"ბუტანი","BV":"ბუვე","BW":"ბოტსვანა","BY":"ბელარუსი","BZ":"ბელიზი","CA":"კანადა","CC":"ქოქოსის (კილინგის) კუნძულები","CD":"კონგო - კინშასა","CF":"ცენტრალური აფრიკის რესპუბლიკა","CG":"კონგო - ბრაზავილი","CH":"შვეიცარია","CI":"კოტ-დივუარი","CK":"კუკის კუნძულები","CL":"ჩილე","CM":"კამერუნი","CN":"ჩინეთი","CO":"კოლუმბია","CR":"კოსტა-რიკა","CU":"კუბა","CV":"კაბო-ვერდე","CW":"კიურასაო","CX":"შობის კუნძული","CY":"კვიპროსი","CZ":"ჩეხეთის რესპუბლიკა","DE":"გერმანია","DJ":"ჯიბუტი","DK":"დანია","DM":"დომინიკა","DO":"დომინიკელთა რესპუბლიკა","DZ":"ალჟირი","EC":"ეკვადორი","EE":"ესტონეთი","EG":"ეგვიპტე","EH":"დასავლეთ საჰარა","ER":"ერიტრეა","ES":"ესპანეთი","ET":"ეთიოპია","FI":"ფინეთი","FJ":"ფიჯი","FK":"ფოლკლენდის კუნძულები","FM":"მიკრონეზია","FO":"ფარერის კუნძულები","FR":"საფრანგეთი","GA":"გაბონი","GB":"გაერთიანებული სამეფო","GD":"გრენადა","GE":"საქართველო","GF":"საფრანგეთის გვიანა","GG":"გერნსი","GH":"განა","GI":"გიბრალტარი","GL":"გრენლანდია","GM":"გამბია","GN":"გვინეა","GP":"გვადელუპა","GQ":"ეკვატორული გვინეა","GR":"საბერძნეთი","GS":"სამხრეთ ჯორჯია და სამხრეთ სენდვიჩის კუნძულები","GT":"გვატემალა","GU":"გუამი","GW":"გვინეა-ბისაუ","GY":"გაიანა","HK":"ჰონკონგი","HM":"ჰერდი და მაკდონალდის კუნძულები","HN":"ჰონდურასი","HR":"ხორვატია","HT":"ჰაიტი","HU":"უნგრეთი","ID":"ინდონეზია","IE":"ირლანდია","IL":"ისრაელი","IM":"მენის კუნძული","IN":"ინდოეთი","IO":"ბრიტანეთის ტერიტორია ინდოეთის ოკეანეში","IQ":"ერაყი","IR":"ირანი","IS":"ისლანდია","IT":"იტალია","JE":"ჯერსი","JM":"იამაიკა","JO":"იორდანია","JP":"იაპონია","KE":"კენია","KG":"ყირგიზეთი","KH":"კამბოჯა","KI":"კირიბატი","KM":"კომორის კუნძულები","KN":"სენტ-კიტსი და ნევისი","KP":"ჩრდილოეთ კორეა","KR":"სამხრეთ კორეა","KW":"ქუვეითი","KY":"კაიმანის კუნძულები","KZ":"ყაზახეთი","LA":"ლაოსი","LB":"ლიბანი","LC":"სენტ-ლუსია","LI":"ლიხტენშტაინი","LK":"შრი-ლანკა","LR":"ლიბერია","LS":"ლესოთო","LT":"ლიტვა","LU":"ლუქსემბურგი","LV":"ლატვია","LY":"ლიბია","MA":"მაროკო","MC":"მონაკო","MD":"მოლდოვა","ME":"მონტენეგრო","MF":"სენ-მარტენი","MG":"მადაგასკარი","MH":"მარშალის კუნძულები","MK":"ჩრდილოეთი მაკედონია","ML":"მალი","MM":"მიანმარი (ბირმა)","MN":"მონღოლეთი","MO":"მაკაო","MP":"ჩრდილოეთ მარიანას კუნძულები","MQ":"მარტინიკა","MR":"მავრიტანია","MS":"მონსერატი","MT":"მალტა","MU":"მავრიკი","MV":"მალდივები","MW":"მალავი","MX":"მექსიკა","MY":"მალაიზია","MZ":"მოზამბიკი","NA":"ნამიბია","NC":"ახალი კალედონია","NE":"ნიგერი","NF":"ნორფოლკის კუნძული","NG":"ნიგერია","NI":"ნიკარაგუა","NL":"ნიდერლანდები","NO":"ნორვეგია","NP":"ნეპალი","NR":"ნაურუ","NU":"ნიუე","NZ":"ახალი ზელანდია","OM":"ომანი","PA":"პანამა","PE":"პერუ","PF":"საფრანგეთის პოლინეზია","PG":"პაპუა-ახალი გვინეა","PH":"ფილიპინები","PK":"პაკისტანი","PL":"პოლონეთი","PM":"სენ-პიერი და მიკელონი","PN":"პიტკერნის კუნძულები","PR":"პუერტო-რიკო","PS":"პალესტინის ტერიტორიები","PT":"პორტუგალია","PW":"პალაუ","PY":"პარაგვაი","QA":"კატარი","RE":"რეუნიონი","RO":"რუმინეთი","RS":"სერბეთი","RU":"რუსეთი","RW":"რუანდა","SA":"საუდის არაბეთი","SB":"სოლომონის კუნძულები","SC":"სეიშელის კუნძულები","SD":"სუდანი","SE":"შვედეთი","SG":"სინგაპური","SH":"წმინდა ელენეს კუნძული","SI":"სლოვენია","SJ":"შპიცბერგენი და იან-მაიენი","SK":"სლოვაკეთი","SL":"სიერა-ლეონე","SM":"სან-მარინო","SN":"სენეგალი","SO":"სომალი","SR":"სურინამი","SS":"სამხრეთ სუდანი","ST":"სან-ტომე და პრინსიპი","SV":"სალვადორი","SX":"სინტ-მარტენი","SY":"სირია","SZ":"სვაზილენდი","TC":"თერქს-ქაიქოსის კუნძულები","TD":"ჩადი","TF":"ფრანგული სამხრეთის ტერიტორიები","TG":"ტოგო","TH":"ტაილანდი","TJ":"ტაჯიკეთი","TK":"ტოკელაუ","TL":"ტიმორ-ლესტე","TM":"თურქმენეთი","TN":"ტუნისი","TO":"ტონგა","TR":"თურქეთი","TT":"ტრინიდადი და ტობაგო","TV":"ტუვალუ","TW":"ტაივანი","TZ":"ტანზანია","UA":"უკრაინა","UG":"უგანდა","UM":"აშშ-ის შორეული კუნძულები","US":"ამერიკის შეერთებული შტატები","UY":"ურუგვაი","UZ":"უზბეკეთი","VA":"ქალაქი ვატიკანი","VC":"სენტ-ვინსენტი და გრენადინები","VE":"ვენესუელა","VG":"ბრიტანეთის ვირჯინის კუნძულები","VI":"აშშ-ის ვირჯინის კუნძულები","VN":"ვიეტნამი","VU":"ვანუატუ","WF":"უოლისი და ფუტუნა","WS":"სამოა","XK":"კოსოვო","YE":"იემენი","YT":"მაიოტა","ZA":"სამხრეთ აფრიკის რესპუბლიკა","ZM":"ზამბია","ZW":"ზიმბაბვე"}}'))},30744,a=>{a.v(JSON.parse('{"locale":"kk","countries":{"AD":"Андорра","AE":"Біріккен Араб Әмірліктері","AF":"Ауғанстан","AG":"Антигуа және Барбуда","AI":"Ангилья","AL":"Албания","AM":"Армения","AO":"Ангола","AQ":"Антарктида","AR":"Аргентина","AS":"Америкалық Самоа","AT":"Австрия","AU":"Австралия","AW":"Аруба","AX":"Аланд аралдары","AZ":"Әзірбайжан","BA":"Босния және Герцеговина","BB":"Барбадос","BD":"Бангладеш","BE":"Бельгия","BF":"Буркина-Фасо","BG":"Болгария","BH":"Бахрейн","BI":"Бурунди","BJ":"Бенин","BL":"Сен-Бартелеми","BM":"Бермуд аралдары","BN":"Бруней","BO":"Боливия","BQ":"Кариб Нидерландысы","BR":"Бразилия","BS":"Багам аралдары","BT":"Бутан","BV":"Буве аралы","BW":"Ботсвана","BY":"Беларусь","BZ":"Белиз","CA":"Канада","CC":"Кокос (Килинг) аралдары","CD":"Конго","CF":"Орталық Африка Республикасы","CG":"Конго Республикасы","CH":"Швейцария","CI":"Кот-д’Ивуар","CK":"Кук аралдары","CL":"Чили","CM":"Камерун","CN":"Қытай","CO":"Колумбия","CR":"Коста-Рика","CU":"Куба","CV":"Кабо-Верде","CW":"Кюрасао","CX":"Рождество аралы","CY":"Кипр","CZ":"Чех Республикасы","DE":"Германия","DJ":"Джибути","DK":"Дания","DM":"Доминика","DO":"Доминикан Республикасы","DZ":"Алжир","EC":"Эквадор","EE":"Эстония","EG":"Мысыр","EH":"Батыс Сахара","ER":"Эритрея","ES":"Испания","ET":"Эфиопия","FI":"Финляндия","FJ":"Фиджи","FK":"Фолкленд аралдары","FM":"Микронезия","FO":"Фарер аралдары","FR":"Франция","GA":"Габон","GB":"Ұлыбритания","GD":"Гренада","GE":"Грузия","GF":"Француз Гвианасы","GG":"Гернси","GH":"Гана","GI":"Гибралтар","GL":"Гренландия","GM":"Гамбия","GN":"Гвинея","GP":"Гваделупа","GQ":"Экваторлық Гвинея","GR":"Грекия","GS":"Оңтүстік Георгия және Оңтүстік Сандвич аралдары","GT":"Гватемала","GU":"Гуам","GW":"Гвинея-Бисау","GY":"Гайана","HK":"Гонконг","HM":"Херд аралы және Макдональд аралдары","HN":"Гондурас","HR":"Хорватия","HT":"Гаити","HU":"Венгрия","ID":"Индонезия","IE":"Ирландия","IL":"Израиль","IM":"Мэн аралы","IN":"Үндістан","IO":"Үнді мұхитындағы Британ аймағы","IQ":"Ирак","IR":"Иран","IS":"Исландия","IT":"Италия","JE":"Джерси","JM":"Ямайка","JO":"Иордания","JP":"Жапония","KE":"Кения","KG":"Қырғызстан","KH":"Камбоджа","KI":"Кирибати","KM":"Комор аралдары","KN":"Сент-Китс және Невис","KP":"Солтүстік Корея","KR":"Оңтүстік Корея","KW":"Кувейт","KY":"Кайман аралдары","KZ":"Қазақстан","LA":"Лаос","LB":"Ливан","LC":"Сент-Люсия","LI":"Лихтенштейн","LK":"Шри-Ланка","LR":"Либерия","LS":"Лесото","LT":"Литва","LU":"Люксембург","LV":"Латвия","LY":"Ливия","MA":"Марокко","MC":"Монако","MD":"Молдова","ME":"Черногория","MF":"Сен-Мартен","MG":"Мадагаскар","MH":"Маршалл аралдары","MK":"Солтүстік Македония Республикасы","ML":"Мали","MM":"Мьянма (Бирма)","MN":"Моңғолия","MO":"Макао","MP":"Солтүстік Мариана аралдары","MQ":"Мартиника","MR":"Мавритания","MS":"Монтсеррат","MT":"Мальта","MU":"Маврикий","MV":"Мальдив аралдары","MW":"Малави","MX":"Мексика","MY":"Малайзия","MZ":"Мозамбик","NA":"Намибия","NC":"Жаңа Каледония","NE":"Нигер","NF":"Норфолк аралы","NG":"Нигерия","NI":"Никарагуа","NL":"Нидерланд","NO":"Норвегия","NP":"Непал","NR":"Науру","NU":"Ниуэ","NZ":"Жаңа Зеландия","OM":"Оман","PA":"Панама","PE":"Перу","PF":"Француз Полинезиясы","PG":"Папуа — Жаңа Гвинея","PH":"Филиппин","PK":"Пәкістан","PL":"Польша","PM":"Сен-Пьер және Микелон","PN":"Питкэрн аралдары","PR":"Пуэрто-Рико","PS":"Палестина аймақтары","PT":"Португалия","PW":"Палау","PY":"Парагвай","QA":"Катар","RE":"Реюньон","RO":"Румыния","RS":"Сербия","RU":"Ресей","RW":"Руанда","SA":"Сауд Арабиясы","SB":"Соломон аралдары","SC":"Сейшель аралдары","SD":"Судан","SE":"Швеция","SG":"Сингапур","SH":"Әулие Елена аралы","SI":"Словения","SJ":"Шпицберген және Ян-Майен","SK":"Словакия","SL":"Сьерра-Леоне","SM":"Сан-Марино","SN":"Сенегал","SO":"Сомали","SR":"Суринам","SS":"Оңтүстік Судан","ST":"Сан-Томе және Принсипи","SV":"Сальвадор","SX":"Синт-Мартен","SY":"Сирия","SZ":"Свазиленд","TC":"Теркс және Кайкос аралдары","TD":"Чад","TF":"Францияның оңтүстік аймақтары","TG":"Того","TH":"Тайланд","TJ":"Тәжікстан","TK":"Токелау","TL":"Тимор-Лесте","TM":"Түрікменстан","TN":"Тунис","TO":"Тонга","TR":"Түркия","TT":"Тринидад және Тобаго","TV":"Тувалу","TW":"Тайвань","TZ":"Танзания","UA":"Украина","UG":"Уганда","UM":"АҚШ-тың сыртқы кіші аралдары","US":"Америка Құрама Штаттары","UY":"Уругвай","UZ":"Өзбекстан","VA":"Ватикан","VC":"Сент-Винсент және Гренадин аралдары","VE":"Венесуэла","VG":"Британдық Виргин аралдары","VI":"АҚШ-тың Виргин аралдары","VN":"Вьетнам","VU":"Вануату","WF":"Уоллис және Футуна","WS":"Самоа","XK":"Косово","YE":"Йемен","YT":"Майотта","ZA":"Оңтүстік Африка Республикасы","ZM":"Замбия","ZW":"Зимбабве"}}'))},58665,a=>{a.v(JSON.parse('{"locale":"km","countries":{"AF":"អាហ្វហ្គានីស្ថាន","AL":"អាល់បានី","DZ":"អាល់ហ្សេរី","AS":"សាម័រអាមេរិក","AD":"អង់ដូរ៉ា","AO":"អង់ហ្គោឡា","AI":"អង់ហ្គីឡា","AQ":"អង់តាក់ទិក","AG":"អង់ទីហ្គានិងបាប៊ូដា","AR":"អាហ្សង់ទីន","AM":"អាមេនី","AW":"អារូបា","AU":"អូស្ត្រាលី","AT":"អូទ្រីស","AZ":"អាស៊ែបៃហ្សង់","BS":"បាហាម៉ា","BH":"បារ៉ែន","BD":"បង់ក្លាដែស","BB":"បាបាដុស","BY":"បេឡារុស","BE":"បែលហ្ស៊ីក","BZ":"បេលី","BJ":"បេណាំង","BM":"ប៊ែម៉ូដ","BT":"ប៊ូតង់","BO":"បូលីវី","BA":"បូស្នុីនិងហឺហ្សេហ្គូវីណា","BW":"បុតស្វាណា","BV":"កោះប៊ូវ៉េ","BR":"ប្រេស៊ីល","IO":"ដែនសមុទ្រ​ឥណ្ឌាអង់គ្លេស","BN":"ព្រុយណេ","BG":"ប៊ុលហ្គារី","BF":"បួគីណាហ្វាសូ​​","BI":"ប៊ូរុនឌី","KH":"កម្ពុជា","CM":"កាមេរូន","CA":"កាណាដា","CV":"កាប់វែរ","KY":"ប្រជុំកោះកេមេន","CF":"សាធារណរដ្ឋអាហ្វ្រីកកណ្ដាល​","TD":"ឆាដ","CL":"ស៊ីលី","CN":"ចិន","CX":"កោះគ្រីស្តម៉ាស់","CC":"ប្រជុំកោះកូកូ","CO":"កូឡុំប៊ី","KM":"កូម័រ","CG":"កុងហ្គោ","CD":"សាធារណរដ្ឋប្រជាធិបតេយ្យកុងហ្គោ","CK":"ប្រជុំកោះឃុក","CR":"កូស្តារីកា","CI":"កូតឌីវ៍រ","HR":"ក្រូអាស៊ី","CU":"គុយបា","CY":"ស៊ីប","CZ":"សាធារណរដ្ឋឆែក","DK":"ដាណឹម៉ាក","DJ":"ជីប៊ូទី","DM":"ដូមីនីក","DO":"សាធារណរដ្ឋដូមីនីក","EC":"អេក្វាទ័រ","EG":"អេហ្ស៊ីប","SV":"អែលសាល់វ៉ាឌ័រ","GQ":"ហ្គីណេអេក្វាទ័រ","ER":"អេរីត្រេ","EE":"អេស្តូនី","ET":"អេត្យូពី","FK":"ប្រជុំកោះម៉ាលូអុីន","FO":"ប្រជុំកោះហ្វារ៉ូ","FJ":"ហ្វុីជី","FI":"ហ្វាំងឡង់","FR":"បារាំង","GF":"ហ្គាយ៉ានបារាំង","PF":"ប៉ូលីណេស៊ីបារាំង","TF":"ប្រជុំដែនដីភាគខាងត្បូងបារាំង","GA":"ហ្គាបុង","GM":"ហ្គំប៊ី","GE":"ហ្សកហ្ស៊ី","DE":"អាល្លឺម៉ង់","GH":"ហ្គាណា","GI":"ហ្ស៊ីប្រាល់តា","GR":"ក្រិក","GL":"ហ្គ្រោអង់ឡង់","GD":"ហ្គ្រើណាដ","GP":"ហ្គួដាលូប","GU":"ហ្គាំ","GT":"ក្វាតេម៉ាឡា","GN":"ហ្គីណេ","GW":"ហ្គីណេប៊ីស្សូ","GY":"ហ្គីយ៉ាន","HT":"ហៃទី","HM":"ប្រជុំកោះហើរ៍ដនិងម៉ាកដូណាល់","VA":"បុរីវ៉ាទីកង់","HN":"ហុងឌូរ៉ាស","HK":"ហុងកុង","HU":"ហុងគ្រី","IS":"អុីស្លង់","IN":"ឥណ្ឌា","ID":"ឥណ្ឌូណេស៊ី","IR":"អុីរ៉ង់","IQ":"អុីរ៉ាក់","IE":"អៀរឡង់","IL":"អុីស្រាអែល","IT":"អុីតាលី","JM":"ហ្សាម៉ាអុីក","JP":"ជប៉ុន","JO":"ហ៊្សកដានី","KZ":"កាហ្សាក់ស្ថាន","KE":"កេនយ៉ា","KI":"គីរីបាទី","KP":["កូរ៉េខាងជើង","សាធារណរដ្ឋប្រជាធិបតេយ្យប្រជាមានិតកូរ៉េ"],"KR":["កូរ៉េខាងត្បូង","សាធារណរដ្ឋកូរ៉េ"],"KW":"កូវ៉ែត","KG":"កៀហ្ស៊ីស៊ីស្ថាន","LA":"សាធារណរដ្ឋប្រជាធិបតេយ្យប្រជាមានិតឡាវ","LV":"ឡេតូនី","LB":"លីបង់","LS":"ឡេសូតូ","LR":"លីបេរីយ៉ា","LY":"លីប៊ី","LI":"លិចតិនស្តាញ","LT":"លីទុយអានី","LU":"លុចសំបួ","MO":"ម៉ាកាវ","MG":"ម៉ាដាហ្គាស្កា","MW":"ម៉ាឡាវី","MY":"ម៉ាឡេស៊ី","MV":"ម៉ាល់ឌីវ","ML":"ម៉ាលី","MT":"ម៉ាល់ត៍","MH":"ប្រជុំកោះម៉ាស្សាល់","MQ":"ម៉ាទីនីក","MR":"ម៉ូរីតានី","MU":"ម៉ូរីស","YT":"ម៉ាយ៉ូត","MX":"មុិកស៊ិក","FM":"រដ្ឋសហព័ន្ធមីក្រូណេស៊ី","MD":"សាធារណរដ្ឋម៉ុលដាវី","MC":"ម៉ូណាកូ","MN":"ម៉ុងហ្គោលី","MS":"ម៉ុងស៊ែរ៉ា","MA":"ម៉ារ៉ុក","MZ":"ម៉ូសំប៊ិក","MM":["ភូមា","មីយ៉ានម៉ា"],"NA":"ណាមីប៊ី","NR":"ណូរូ","NP":"នេប៉ាល់","NL":"ហូឡង់","NC":"នូវែលកាឡេដូនី","NZ":"នូវែលសេឡង់","NI":"នីការ៉ាហ្គា","NE":"នីហ្សេ","NG":"នីហ្សេរីយ៉ា","NU":"នីអេ","NF":"កោះន័រហ្វុក","MK":"សាធារណរដ្ឋម៉ាសេដ្វានខាងជើង","MP":"ប្រជុំកោះម៉ារីយ៉ានខាងជើង","NO":"ន័រវែស","OM":"អូម៉ង់","PK":"បាគីស្ថាន","PW":"ប៉ាឡៅ","PS":"ដែនដីប៉ាឡេស្ទីន","PA":"ប៉ាណាម៉ា","PG":"ប៉ាពូអាស៊ីនូវែលហ្គីណេ","PY":"ប៉ារ៉ាហ្គាយ","PE":"ប៉េរូ","PH":"ហ្វីលីពីន","PN":"ពីតកែរ៍ន","PL":"ប៉ូឡូញ","PT":"ព័រទុយហ្គាល់","PR":"ព័រតូរីកូ","QA":"កាតា","RE":"រ៉េញ៊ូញ៊ុង","RO":"រូម៉ានី","RU":["សហព័ន្ធរុស្ស៊ី","រុស្ស៊ី"],"RW":"រវ៉ាន់ដា","SH":"សាំងតេលែន","KN":"សាំងគ្រីស្តុបនិងនីវែស","LC":"សាំងលូស៊ី","PM":"សាំងព្រែរ៍និងមីហ្គែឡុង","VC":"សាំងវ៉ាងស្សង់និងហ្គឺណាឌីន","WS":"សាម័រ","SM":"សាំងម៉ារ៊ាំង","ST":"សៅតូម៉េនិងប្រាំងស៊ីប","SA":"អារ៉ាប៊ីសាអូឌីត","SN":"សេណេហ្គាល់","SC":"សីស្ហែល","SL":"សៀរ៉ាឡេអូន","SG":"សិង្ហបុរី","SK":["សាធារណរដ្ឋស្លូវ៉ាគី","ស្លូវ៉ាគី"],"SI":"ស្លូវេនី","SB":"ប្រជុំកោះសាឡូម៉ុង","SO":"សូម៉ាលី","ZA":"អាហ្វ្រិកខាងត្បូង","GS":"ហ្សកហ្ស៊ីនិងប្រជុំកោះសាំងវុីចខាងត្បូង","ES":"អេស្ប៉ាញ","LK":"ស្រីលង្កា","SD":"ស៊ូដង់","SR":"សូរីណាម","SJ":"ស្វាល់ប៉ានិងកោះហ្សង់ម៉ាយ៉េន","SZ":"អ៊ែស្វាទីនី","SE":"ស៊ុយអែត","CH":"ស្វ៊ីស","SY":"សាធារណរដ្ឋស៊ីរី","TW":"តៃវ៉ាន់","TJ":"តាហ្ស៊ីគីស្ថាន","TZ":"តង់សានី","TH":"ថៃ","TL":"ទីម័រខាងកើត","TG":"តូហ្គោ","TK":"តូកេឡូ","TO":"តុងហ្គា","TT":"ទ្រីនីដាដនិងតូបាហ្គោ","TN":"ទុយនីស៊ី","TR":"តួកគី","TM":"តួកម៉េនីស្ថាន","TC":"ប្រជុំកោះទួកនិងកៃកេ","TV":"ទូវ៉ាលូ","UG":"អ៊ូហ្គង់ដា","UA":"អ៊ុយក្រែន","AE":"អេមីរ៉ាតអារ៉ាប់រួម","GB":"ចក្រភពអង់គ្លេស","US":"សហរដ្ឋអាមេរិក","UM":"ប្រជុំកោះមីន័រអេឡួញ៉េអាមេរិក","UY":"អ៊ុយរូហ្គាយ","UZ":"អ៊ូសបេគីស្ថាន","VU":"វ៉ានូទូ","VE":"វ៉េណេស៊ុយអេឡា","VN":"វៀតណាម","VG":"ប្រជុំកោះវីអ៊ែអង់គ្លេស","VI":"ប្រជុំកោះវីអ៊ែអាមេរិក","WF":"វ៉ាលីសនិងហ្វូតូណា","EH":"សាហារ៉ាខាងលិច","YE":"យេម៉ែន","ZM":"សំប៊ី","ZW":"ស៊ីមបាវ៉េ","AX":"ប្រជុំកោះអូឡង់","BQ":"បូនែរ៍ សាំងអឺស្ទាហ្សឺស និងសាបា","CW":"គុរ៉ាសៅ","GG":"ហ្គេនស៊ី","IM":"កោះម៉ាន","JE":"ហ្សែរ៍ស្ស៊ី","ME":"ម៉ុងតេណេហ្គ្រោ","BL":"សាំងប៉ាតេឡាមុី","MF":"សាំងម៉ាតាំង (បារាំង)","RS":"ស៊ែប៊ី","SX":"សាំងម៉ាតាំង (ហូឡង់)","SS":"ស៊ូដង់ខាងត្បូង","XK":"កូសូវ៉ូ"}}'))},3492,a=>{a.v(JSON.parse('{"locale":"ko","countries":{"AF":"아프가니스탄","AL":"알바니아","DZ":"알제리","AS":"아메리칸 사모아","AD":"안도라","AO":"앙골라","AI":"앙길라","AQ":"안타티카","AG":"안티구아 바부다","AR":"아르헨티나","AM":"아르메니아","AW":"아루바","AU":"호주","AT":"오스트리아","AZ":"아제르바이잔","BS":"바하마","BH":"바레인","BD":"방글라데시","BB":"바베이도스","BY":"벨라루스","BE":"벨기에","BZ":"벨리즈","BJ":"베냉","BM":"버뮤다","BT":"부탄","BO":"볼리비아","BA":"보스니아 헤르체고비나","BW":"보츠와나","BV":"부베섬","BR":"브라질","IO":"영인도 제도","BN":"브루나이","BG":"불가리아","BF":"부르키나파소","BI":"부룬디","KH":"캄보디아","CM":"카메룬","CA":"캐나다","CV":"카보 베르데","KY":"케이맨섬","CF":"중앙 아프리카","TD":"차드","CL":"칠레","CN":"중국","CX":"크리스마스섬","CC":"코코스 제도","CO":"콜롬비아","KM":"코모로","CG":"콩고","CD":"콩고 민주 공화국","CK":"쿡 제도","CR":"코스타리카","CI":"코트디부아르","HR":"크로아티아","CU":"쿠바","CY":"사이프러스","CZ":"체코공화국","DK":"덴마크","DJ":"지부티","DM":"도미니카 연방","DO":"도미니카 공화국","EC":"에콰도르","EG":"이집트","SV":"엘살바도르","GQ":"적도 기니","ER":"에리트레아","EE":"에스토니아","ET":"이디오피아","FK":"포클랜드섬","FO":"페로 군도","FJ":"피지","FI":"핀란드","FR":"프랑스","GF":"프랑스령 기아나","PF":"프랑스령 폴리네시아","TF":"프랑스 남부영토","GA":"가봉","GM":"감비아","GE":"그루지아","DE":"독일","GH":"가나","GI":"지브랄타","GR":"그리스","GL":"그린랜드","GD":"그레나다","GP":"과들루프","GU":"괌","GT":"과테말라","GN":"기니","GW":"기네비쏘","GY":"가이아나","HT":"아이티","HM":"허드 맥도날드 군도","VA":"바티칸","HN":"온두라스","HK":"홍콩","HU":"헝가리","IS":"아이슬란드","IN":"인도","ID":"인도네시아","IR":"이란","IQ":"이라크","IE":"아일랜드","IL":"이스라엘","IT":"이탈리아","JM":"자메이카","JP":"일본","JO":"요르단","KZ":"카자흐스탄","KE":"케냐","KI":"키르바시","KP":"북한","KR":"대한민국","KW":"쿠웨이트","KG":"키르키즈스탄","LA":"라오스","LV":"라트비아","LB":"레바논","LS":"레소토","LR":"라이베리아","LY":"리비아","LI":"리히텐슈타인","LT":"리투아니아","LU":"룩셈부르크","MO":"마카오","MG":"마다가스카르","MW":"말라위","MY":"말레이시아","MV":"몰디브","ML":"말리","MT":"몰타","MH":"마샬군도","MQ":"마르티니크","MR":"모리타니","MU":"모리셔스","YT":"마요트","MX":"멕시코","FM":"미크로네시아","MD":"몰도바","MC":"모나코","MN":"몽골","MS":"몬트세라트","MA":"모로코","MZ":"모잠비크","MM":"미얀마","NA":"나미비아","NR":"나우루","NP":"네팔","NL":"네덜란드","NC":"뉴칼레도니아","NZ":"뉴질랜드","NI":"니카라과","NE":"니제르","NG":"나이지리아","NU":"니우에","NF":"노퍽섬","MK":"마케도니아","MP":"북마리아나 군도","NO":"노르웨이","OM":"오만","PK":"파키스탄","PW":"팔라우","PS":"팔레스타인","PA":"파나마","PG":"파푸아 뉴기니","PY":"파라과이","PE":"페루","PH":"필리핀","PN":"핏케언 군도","PL":"폴랜드","PT":"포르투칼","PR":"푸에르토리코","QA":"카타르","RE":"리유니온","RO":"루마니아","RU":"러시아연방","RW":"르완다","SH":"세인트 헬레나","KN":"세인트 키츠 네비스","LC":"세인트 루시아","PM":"세인트리에르도,미괘론도","VC":"세인트 빈센트 그레나딘","WS":"사모아","SM":"산 마리노","ST":"상토메프린시페","SA":"사우디아라비아","SN":"세네갈","SC":"세이셸","SL":"시에라 리온","SG":"싱가포르","SK":"슬로바키아","SI":"슬로베니아","SB":"솔로몬 아일랜드","SO":"소말리아","ZA":"남아프리카","GS":"남조지아 군도","ES":"스페인","LK":"스리랑카","SD":"수단","SR":"수리남","SJ":"스발바드, 잠마엔도","SZ":"스와질란드","SE":"스웨덴","CH":"스위스","SY":"시리아","TW":"중화민국","TJ":"타지키스탄","TZ":"탄자니아","TH":"태국","TL":"동티모르","TG":"토고","TK":"토켈로","TO":"통가","TT":"트리니다드 토바고","TN":"튀니지아","TR":"터키","TM":"트르크메니스탄","TC":"터크스","TV":"트발루","UG":"우간다","UA":"우크라이나","AE":"아랍에미리트연합","GB":"영국","US":"미국","UM":"미국령 소군도","UY":"우루과이","UZ":"우즈베키스탄","VU":"바누아투","VE":"베네수엘라","VN":"베트남","VG":"영국령 버진아일랜드","VI":"미국령 버진아일랜드","WF":"월리스 후트나","EH":"서사하라","YE":"예멘","ZM":"잠비아","ZW":"짐바브웨 공화국","AX":"올란드 제도","BQ":"보네르,신트유스타티우스,사바","CW":"큐라소","GG":"건지","IM":"맨섬","JE":"저지","ME":"몬테네그로","BL":"생 바르 텔레 미","MF":"세인트 마틴 (프랑스어 부분)","RS":"세르비아","SX":"신트마르텐","SS":"남수단","XK":"코소보"}}'))},501,a=>{a.v(JSON.parse('{"locale":"ku","countries":{"AF":"Efxanistan","AL":"Albanya","DZ":"Cezayir","AS":"Samoaya Amerîkanî","AD":"Andorra","AO":"Angola","AI":"Anguîla","AQ":"Antarktîka","AG":"Antîgua û Berbûda","AR":"Arjentîn","AM":"Ermenistan","AW":"Arûba","AU":"Awistralya","AT":"Awistirya","AZ":"Azerbaycan","BS":"Bahama","BH":"Behreyn","BD":"Bangladeş","BB":"Barbados","BY":"Belarûs","BE":"Belçîka","BZ":"Belîze","BJ":"Bênîn","BM":"Bermûda","BT":"Bûtan","BO":"Bolîvya","BA":"Bosniya û Herzegovîna","BW":"Botswana","BV":"Girava Bouvet","BR":"Brazîl","IO":"Erdê Okyanûsa Hindî ya Brîtanî","BN":"Brûney","BG":"Bulgaristan","BF":"Burkîna Faso","BI":"Burundî","KH":"Kamboca","CM":"Kamerûn","CA":"Kanada","CV":"Kap Verde","KY":"Giravên Kaymanê","CF":"Komara Afrîkaya Navend","TD":"Çad","CL":"Şîle","CN":"Çîn","CX":"Girava Sersalê","CC":"Giravên Cocos (Keeling)","CO":"Kolombiya","KM":"Komor","CG":"Kongo - Brazzaville","CD":"Kongo - Kînşasa","CK":"Giravên Cook","CR":"Kosta Rîka","CI":"Peravê Diranfîl","HR":"Kroatya","CU":"Kûba","CY":"Kîpros","CZ":"Çekya","DK":"Danîmarka","DJ":"Cîbûtî","DM":"Domînîka","DO":"Komara Domînîk","EC":"Ekuador","EG":"Misir","SV":"El Salvador","GQ":"Gîneya Rojbendî","ER":"Erîtrea","EE":"Estonya","ET":"Etiyopya","FK":"Giravên Malvîn","FO":"Giravên Feroe","FJ":"Fîjî","FI":"Fînlenda","FR":"Fransa","GF":"Guyanaya Fransî","PF":"Polînezyaya Fransî","TF":"Erdên Başûr ên Fransî","GA":"Gabon","GM":"Gambiya","GE":"Gurcistan","DE":"Almanya","GH":"Gana","GI":"Cîbraltar","GR":"Yewnanistan","GL":"Grînlenda","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Gîne","GW":"Gîne-Bissau","GY":"Guyana","HT":"Haîtî","HM":"Girava Heard û Giravên McDonald","VA":"Vatîkan","HN":"Hondûras","HK":"Hong Kong","HU":"Macaristan","IS":"Îslenda","IN":"Hindistan","ID":"Îndonezya","IR":"Îran","IQ":"Iraq","IE":"Îrlenda","IL":"Îsraêl","IT":"Îtalya","JM":"Jamaîka","JP":"Japon","JO":"Urdun","KZ":"Qazaxistan","KE":"Kenya","KI":"Kirîbatî","KP":"Korêya Bakur","KR":"Korêya Başûr","KW":"Kuweyt","KG":"Qirgizistan","LA":"Laos","LV":"Letonya","LB":"Libnan","LS":"Lesoto","LR":"Lîberya","LY":"Lîbya","LI":"Liechtenstein","LT":"Lîtvanya","LU":"Lûksembûrg","MO":"Macao","MG":"Madagaskar","MW":"Malawî","MY":"Malezya","MV":"Maldîv","ML":"Malî","MT":"Malta","MH":"Giravên Marşal","MQ":"Martinique","MR":"Morîtanya","MU":"Maurîtius","YT":"Mayotte","MX":"Meksîk","FM":"Mîkronezya","MD":"Moldova","MC":"Monako","MN":"Mongolya","MS":"Montserat","MA":"Maroko","MZ":"Mozambîk","MM":"Myanmar (Birmanya)","NA":"Namîbya","NR":"Naûrû","NP":"Nepal","NL":"Holenda","NC":"Kaledonyaya Nû","NZ":"Nû Zelenda","NI":"Nîkaragua","NE":"Nîjer","NG":"Nîjerya","NU":"Niûe","NF":"Girava Norfolk","MK":"Makedonya","MP":"Giravên Bakurê Marianan","NO":"Norwêc","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Xakên filistînî","PA":"Panama","PG":"Papua Gîneya Nû","PY":"Paraguay","PE":"Perû","PH":"Filîpîn","PN":"Giravên Pitcairn","PL":"Polonya","PT":"Portûgal","PR":"Porto Rîko","QA":"Qeter","RE":"Réunion","RO":"Romanya","RU":"Rûsya","RW":"Rwanda","SH":"Ezîze Helena","KN":"Saint Kitts û Nevîs","LC":"Saint Lucia","PM":"Saint-Pierre û Miquelon","VC":"Saint Vincent û Giravên Grenadîn","WS":"Samoa","SM":"San Marîno","ST":"Sao Tome û Prînsîpe","SA":"Erebistana Siyûdî","SN":"Senegal","SC":"Seyşel","SL":"Sierra Leone","SG":"Singapûr","SK":"Slovakya","SI":"Slovenya","SB":"Giravên Salomon","SO":"Somalya","ZA":"Afrîkaya Başûr","GS":"South Georgia û Giravên Sandwich-a Başûr","ES":"Spanya","LK":"Srî Lanka","SD":"Sûdan","SR":"Sûrînam","SJ":"Svalbard û Jan Mayen","SZ":"Swazîlenda","SE":"Swêd","CH":"Swîsre","SY":"Sûrî","TW":"Taywan","TJ":"Tacîkistan","TZ":"Tanzanya","TH":"Taylenda","TL":"Tîmora-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trînîdad û Tobago","TN":"Tûnis","TR":"Tirkiye","TM":"Tirkmenistan","TC":"Giravên Turk û Kaîkos","TV":"Tûvalû","UG":"Ûganda","UA":"Ûkrayna","AE":"Emîrtiyên Erebî yên Yekbûyî","GB":"Keyaniya Yekbûyî","US":"Dewletên Yekbûyî yên Amerîkayê","UM":"Giravên Derveyî Piçûk ên Dewletên Yekbûyî","UY":"Ûrûguay","UZ":"Ûzbêkistan","VU":"Vanûatû","VE":"Venezuela","VN":"Vîetnam","VG":"Giravên Virgin, Brîtanî","VI":"Giravên Virgin, U.S.","WF":"Wallis û Futuna","EH":"Sahraya Rojava","YE":"Yemen","ZM":"Zambiya","ZW":"Zîmbabwe","AX":"Giravên Åland","BQ":"Bonaire, Sint Eustatius û Saba","CW":"Curaçao","GG":"Guernsey","IM":"Girava Man","JE":"Jersey","ME":"Montenegro","BL":"Saint-Barthélemy","MF":"Saint Martin (beşa fransî)","RS":"Serbistan","SX":"Sint Maarten (Beşa Hollandî)","SS":"Sûdana Başûr","XK":"Kosova"}}'))},99833,a=>{a.v(JSON.parse('{"locale":"ky","countries":{"AD":"Андорра","AE":"Бириккен Араб Эмираттары","AF":"Афганистан","AG":"Антигуа жана Барбуда","AI":"Ангуила","AL":"Албания","AM":"Армения","AO":"Ангола","AQ":"Антарктика","AR":"Аргентина","AS":"Америка Самоасы","AT":"Австрия","AU":"Австралия","AW":"Аруба","AX":"Аланд аралдары","AZ":"Азербайжан","BA":"Босния жана Герцеговина","BB":"Барбадос","BD":"Бангладеш","BE":"Бельгия","BF":"Буркина-Фасо","BG":"Болгария","BH":"Бахрейн","BI":"Бурунди","BJ":"Бенин","BL":"Сент Бартелеми","BM":"Бермуд аралдары","BN":"Бруней","BO":"Боливия","BQ":"Кариб Нидерланддары","BR":"Бразилия","BS":"Багам аралдары","BT":"Бутан","BV":"Буве аралдары","BW":"Ботсвана","BY":"Беларусь","BZ":"Белиз","CA":"Канада","CC":"Кокос (Килиӊ) аралдары","CD":"Конго-Киншаса","CF":"Борбордук Африка Республикасы","CG":"Конго-Браззавил","CH":"Швейцария","CI":"Кот-д’Ивуар","CK":"Кук аралдары","CL":"Чили","CM":"Камерун","CN":"Кытай","CO":"Колумбия","CR":"Коста-Рика","CU":"Куба","CV":"Капе Верде","CW":"Кюрасао","CX":"Крисмас аралы","CY":"Кипр","CZ":"Чехия","DE":"Германия","DJ":"Джибути","DK":"Дания","DM":"Доминика","DO":"Доминика Республикасы","DZ":"Алжир","EC":"Эквадор","EE":"Эстония","EG":"Египет","EH":"Батыш Сахара","ER":"Эритрея","ES":"Испания","ET":"Эфиопия","FI":"Финляндия","FJ":"Фиджи","FK":"Фолклэнд аралдары","FM":"Микронезия","FO":"Фарер аралдары","FR":"Франция","GA":"Габон","GB":"Улуу Британия","GD":"Гренада","GE":"Грузия","GF":"Гвиана (Франция)","GG":"Гернси","GH":"Гана","GI":"Гибралтар","GL":"Гренландия","GM":"Гамбия","GN":"Гвинея","GP":"Гваделупа","GQ":"Экваториалдык Гвинея","GR":"Греция","GS":"Түштүк Жоржия жана Түштүк Сэндвич аралдары","GT":"Гватемала","GU":"Гуам","GW":"Гвинея-Бисау","GY":"Гайана","HK":"Гонконг Кытай ААА","HM":"Херд жана Макдоналд аралдары","HN":"Гондурас","HR":"Хорватия","HT":"Гаити","HU":"Венгрия","ID":"Индонезия","IE":"Ирландия","IL":"Израиль","IM":"Мэн аралы","IN":"Индия","IO":"Британиянын Индия океанындагы аймагы","IQ":"Ирак","IR":"Иран","IS":"Исландия","IT":"Италия","JE":"Жерси","JM":"Ямайка","JO":"Иордания","JP":"Япония","KE":"Кения","KG":"Кыргызстан","KH":"Камбоджа","KI":"Кирибати","KM":"Коморос","KN":"Сент-Китс жана Невис","KP":"Түндүк Корея","KR":"Түштүк Корея","KW":"Кувейт","KY":"Кайман Аралдары","KZ":"Казакстан","LA":"Лаос","LB":"Ливан","LC":"Сент-Люсия","LI":"Лихтенштейн","LK":"Шри-Ланка","LR":"Либерия","LS":"Лесото","LT":"Литва","LU":"Люксембург","LV":"Латвия","LY":"Ливия","MA":"Марокко","MC":"Монако","MD":"Молдова","ME":"Черногория","MF":"Сент-Мартин","MG":"Мадагаскар","MH":"Маршалл аралдары","MK":"Түндүк Македония","ML":"Мали","MM":"Мьянма (Бирма)","MN":"Монголия","MO":"Макау Кытай ААА","MP":"Түндүк Мариана аралдары","MQ":"Мартиника","MR":"Мавритания","MS":"Монсеррат","MT":"Мальта","MU":"Маврикий","MV":"Малдив аралдары","MW":"Малави","MX":"Мексика","MY":"Малайзия","MZ":"Мозамбик","NA":"Намибия","NC":"Жаӊы Каледония","NE":"Нигер","NF":"Норфолк аралы","NG":"Нигерия","NI":"Никарагуа","NL":"Нидерланддар","NO":"Норвегия","NP":"Непал","NR":"Науру","NU":"Ниуэ","NZ":"Жаӊы Зеландия","OM":"Оман","PA":"Панама","PE":"Перу","PF":"Француз Полинезиясы","PG":"Папуа Жаңы-Гвинея","PH":"Филлипин","PK":"Пакистан","PL":"Польша","PM":"Сен-Пьер жана Микелон","PN":"Питкэрн аралдары","PR":"Пуэрто-Рико","PS":"Палестина аймактары","PT":"Португалия","PW":"Палау","PY":"Парагвай","QA":"Катар","RE":"Реюнион","RO":"Румыния","RS":"Сербия","RU":"Россия","RW":"Руанда","SA":"Сауд Арабиясы","SB":"Соломон аралдары","SC":"Сейшелдер","SD":"Судан","SE":"Швеция","SG":"Сингапур","SH":"Ыйык Елена","SI":"Словения","SJ":"Свалбард жана Жан Майен","SK":"Словакия","SL":"Сьерра-Леоне","SM":"Сан Марино","SN":"Сенегал","SO":"Сомали","SR":"Суринаме","SS":"Түштүк Судан","ST":"Сан-Томе жана Принсипи","SV":"Эл Салвадор","SX":"Синт Маартен","SY":"Сирия","SZ":"Свазиленд","TC":"Түркс жана Кайкос аралдары","TD":"Чад","TF":"Франциянын Түштүктөгү аймактары","TG":"Того","TH":"Таиланд","TJ":"Тажикстан","TK":"Токелау","TL":"Тимор-Лесте","TM":"Түркмөнстан","TN":"Тунис","TO":"Тонга","TR":"Түркия","TT":"Тринидад жана Тобаго","TV":"Тувалу","TW":"Тайвань","TZ":"Танзания","UA":"Украина","UG":"Уганда","UM":"АКШнын сырткы аралдары","US":"Америка Кошмо Штаттары","UY":"Уругвай","UZ":"Өзбекстан","VA":"Ватикан","VC":"Сент-Винсент жана Гренадиналар","VE":"Венесуэла","VG":"Виргин аралдары (Британия)","VI":"Виргин аралдары (АКШ)","VN":"Вьетнам","VU":"Вануату","WF":"Уоллис жана Футуна","WS":"Самоа","XK":"Косово","YE":"Йемен","YT":"Майотта","ZA":"Түштүк Африка Республикасы","ZM":"Замбия","ZW":"Зимбабве"}}'))},36740,a=>{a.v(JSON.parse('{"locale":"lt","countries":{"AD":"Andora","AE":"Jungtiniai Arabų Emyratai","AF":"Afganistanas","AG":"Antigva ir Barbuda","AI":"Angilija","AL":"Albanija","AM":"Armėnija","AO":"Angola","AQ":"Antarktida","AR":"Argentina","AS":"Amerikos Samoa","AT":"Austrija","AU":"Australija","AW":"Aruba","AX":"Alandų Salos","AZ":"Azerbaidžanas","BA":"Bosnija ir Hercegovina","BB":"Barbadosas","BD":"Bangladešas","BE":"Belgija","BF":"Burkina Fasas","BG":"Bulgarija","BH":"Bahreinas","BI":"Burundis","BJ":"Beninas","BL":"Sen Bartelemi","BM":"Bermuda","BN":"Brunėjus","BO":"Bolivija","BQ":"Karibų Nyderlandai","BR":"Brazilija","BS":"Bahamos","BT":"Butanas","BV":"Buvė Sala","BW":"Botsvana","BY":"Baltarusija","BZ":"Belizas","CA":"Kanada","CC":"Kokosų (Kilingo) Salos","CD":"Kongas-Kinšasa","CF":"Centrinės Afrikos Respublika","CG":"Kongas-Brazavilis","CH":"Šveicarija","CI":"Dramblio Kaulo Krantas","CK":"Kuko Salos","CL":"Čilė","CM":"Kamerūnas","CN":"Kinija","CO":"Kolumbija","CR":"Kosta Rika","CU":"Kuba","CV":"Žaliasis Kyšulys","CW":"Kiurasao","CX":"Kalėdų Sala","CY":"Kipras","CZ":"Čekija","DE":"Vokietija","DJ":"Džibutis","DK":"Danija","DM":"Dominika","DO":"Dominikos Respublika","DZ":"Alžyras","EC":"Ekvadoras","EE":"Estija","EG":"Egiptas","EH":"Vakarų Sachara","ER":"Eritrėja","ES":"Ispanija","ET":"Etiopija","FI":"Suomija","FJ":"Fidžis","FK":"Folklando Salos","FM":"Mikronezija","FO":"Farerų Salos","FR":"Prancūzija","GA":"Gabonas","GB":"Jungtinė Karalystė","GD":"Grenada","GE":["Sakartvelas","Gruzija"],"GF":"Prancūzijos Gviana","GG":"Gernsis","GH":"Gana","GI":"Gibraltaras","GL":"Grenlandija","GM":"Gambija","GN":"Gvinėja","GP":"Gvadelupa","GQ":"Pusiaujo Gvinėja","GR":"Graikija","GS":"Pietų Džordžija ir Pietų Sandvičo salos","GT":"Gvatemala","GU":"Guamas","GW":"Bisau Gvinėja","GY":"Gajana","HK":"Honkongas","HM":"Herdo ir Makdonaldo Salos","HN":"Hondūras","HR":"Kroatija","HT":"Haitis","HU":"Vengrija","ID":"Indonezija","IE":"Airija","IL":"Izraelis","IM":"Meno Sala","IN":"Indija","IO":"Indijos Vandenyno Britų Sritis","IQ":"Irakas","IR":"Iranas","IS":"Islandija","IT":"Italija","JE":"Džersis","JM":"Jamaika","JO":"Jordanija","JP":"Japonija","KE":"Kenija","KG":"Kirgizija","KH":"Kambodža","KI":"Kiribatis","KM":"Komorai","KN":"Sent Kitsas ir Nevis","KP":"Šiaurės Korėja","KR":"Pietų Korėja","KW":"Kuveitas","KY":"Kaimanų Salos","KZ":"Kazachstanas","LA":"Laosas","LB":"Libanas","LC":"Sent Lusija","LI":"Lichtenšteinas","LK":"Šri Lanka","LR":"Liberija","LS":"Lesotas","LT":"Lietuva","LU":"Liuksemburgas","LV":"Latvija","LY":"Libija","MA":"Marokas","MC":"Monakas","MD":"Moldova","ME":"Juodkalnija","MF":"Sen Martenas","MG":"Madagaskaras","MH":"Maršalo Salos","MK":"Šiaurės Makedonija","ML":"Malis","MM":"Mianmaras (Birma)","MN":"Mongolija","MO":"Makao","MP":"Marianos Šiaurinės Salos","MQ":"Martinika","MR":"Mauritanija","MS":"Montseratas","MT":"Malta","MU":"Mauricijus","MV":"Maldyvai","MW":"Malavis","MX":"Meksika","MY":"Malaizija","MZ":"Mozambikas","NA":"Namibija","NC":"Naujoji Kaledonija","NE":"Nigeris","NF":"Norfolko sala","NG":"Nigerija","NI":"Nikaragva","NL":"Nyderlandai","NO":"Norvegija","NP":"Nepalas","NR":"Nauru","NU":"Niujė","NZ":"Naujoji Zelandija","OM":"Omanas","PA":"Panama","PE":"Peru","PF":"Prancūzijos Polinezija","PG":"Papua Naujoji Gvinėja","PH":"Filipinai","PK":"Pakistanas","PL":"Lenkija","PM":"Sen Pjeras ir Mikelonas","PN":"Pitkerno salos","PR":"Puerto Rikas","PS":"Palestinos teritorija","PT":"Portugalija","PW":"Palau","PY":"Paragvajus","QA":"Kataras","RE":"Reunjonas","RO":"Rumunija","RS":"Serbija","RU":"Rusija","RW":"Ruanda","SA":"Saudo Arabija","SB":"Saliamono Salos","SC":"Seišeliai","SD":"Sudanas","SE":"Švedija","SG":"Singapūras","SH":"Šv. Elenos Sala","SI":"Slovėnija","SJ":"Svalbardas ir Janas Majenas","SK":"Slovakija","SL":"Siera Leonė","SM":"San Marinas","SN":"Senegalas","SO":"Somalis","SR":"Surinamas","SS":"Pietų Sudanas","ST":"San Tomė ir Prinsipė","SV":"Salvadoras","SX":"Sint Martenas","SY":"Sirija","SZ":"Svazilandas","TC":"Terkso ir Kaikoso Salos","TD":"Čadas","TF":"Prancūzijos Pietų sritys","TG":"Togas","TH":"Tailandas","TJ":"Tadžikija","TK":"Tokelau","TL":"Rytų Timoras","TM":"Turkmėnistanas","TN":"Tunisas","TO":"Tonga","TR":"Turkija","TT":"Trinidadas ir Tobagas","TV":"Tuvalu","TW":"Taivanas","TZ":"Tanzanija","UA":"Ukraina","UG":"Uganda","UM":"Jungtinių Valstijų Mažosios Tolimosios Salos","US":"Jungtinės Valstijos","UY":"Urugvajus","UZ":"Uzbekistanas","VA":"Vatikano Miesto Valstybė","VC":"Šventasis Vincentas ir Grenadinai","VE":"Venesuela","VG":"Didžiosios Britanijos Mergelių Salos","VI":"Jungtinių Valstijų Mergelių Salos","VN":"Vietnamas","VU":"Vanuatu","WF":"Volisas ir Futūna","WS":"Samoa","XK":"Kosovas","YE":"Jemenas","YT":"Majotas","ZA":"Pietų Afrika","ZM":"Zambija","ZW":"Zimbabvė"}}'))},50202,a=>{a.v(JSON.parse('{"locale":"lv","countries":{"AD":"Andora","AE":"Apvienotie Arābu Emirāti","AF":"Afganistāna","AG":"Antigva un Barbuda","AI":"Angilja","AL":"Albānija","AM":"Armēnija","AO":"Angola","AQ":"Antarktika","AR":"Argentīna","AS":"ASV Samoa","AT":"Austrija","AU":"Austrālija","AW":"Aruba","AX":"Olandes salas","AZ":"Azerbaidžāna","BA":"Bosnija un Hercegovina","BB":"Barbadosa","BD":"Bangladeša","BE":"Beļģija","BF":"Burkinafaso","BG":"Bulgārija","BH":"Bahreina","BI":"Burundija","BJ":"Benina","BL":"Senbartelmī","BM":"Bermudu salas","BN":"Bruneja","BO":"Bolīvija","BQ":"Nīderlandes Karību salas","BR":"Brazīlija","BS":"Bahamu salas","BT":"Butāna","BV":"Buvē sala","BW":"Botsvāna","BY":"Baltkrievija","BZ":"Beliza","CA":"Kanāda","CC":"Kokosu (Kīlinga) salas","CD":"Kongo (Kinšasa)","CF":"Centrālāfrikas Republika","CG":"Kongo (Brazavila)","CH":"Šveice","CI":"Kotdivuāra","CK":"Kuka salas","CL":"Čīle","CM":"Kamerūna","CN":"Ķīna","CO":"Kolumbija","CR":"Kostarika","CU":"Kuba","CV":"Kaboverde","CW":"Kirasao","CX":"Ziemsvētku sala","CY":"Kipra","CZ":"Čehija","DE":"Vācija","DJ":"Džibutija","DK":"Dānija","DM":"Dominika","DO":"Dominikāna","DZ":"Alžīrija","EC":"Ekvadora","EE":"Igaunija","EG":"Ēģipte","EH":"Rietumsahāra","ER":"Eritreja","ES":"Spānija","ET":"Etiopija","FI":"Somija","FJ":"Fidži","FK":"Folklenda salas","FM":"Mikronēzija","FO":"Fēru salas","FR":"Francija","GA":"Gabona","GB":"Lielbritānija","GD":"Grenāda","GE":"Gruzija","GF":"Francijas Gviāna","GG":"Gērnsija","GH":"Gana","GI":"Gibraltārs","GL":"Grenlande","GM":"Gambija","GN":"Gvineja","GP":"Gvadelupa","GQ":"Ekvatoriālā Gvineja","GR":"Grieķija","GS":"Dienviddžordžija un Dienvidsendviču salas","GT":"Gvatemala","GU":"Guama","GW":"Gvineja-Bisava","GY":"Gajāna","HK":"Ķīnas īpašās pārvaldes apgabals Honkonga","HM":"Hērda sala un Makdonalda salas","HN":"Hondurasa","HR":"Horvātija","HT":"Haiti","HU":"Ungārija","ID":"Indonēzija","IE":"Īrija","IL":"Izraēla","IM":"Mena","IN":"Indija","IO":"Indijas okeāna Britu teritorija","IQ":"Irāka","IR":"Irāna","IS":"Islande","IT":"Itālija","JE":"Džērsija","JM":"Jamaika","JO":"Jordānija","JP":"Japāna","KE":"Kenija","KG":"Kirgizstāna","KH":"Kambodža","KI":"Kiribati","KM":"Komoru salas","KN":"Sentkitsa un Nevisa","KP":"Ziemeļkoreja","KR":"Dienvidkoreja","KW":"Kuveita","KY":"Kaimanu salas","KZ":"Kazahstāna","LA":"Laosa","LB":"Libāna","LC":"Sentlūsija","LI":"Lihtenšteina","LK":"Šrilanka","LR":"Libērija","LS":"Lesoto","LT":"Lietuva","LU":"Luksemburga","LV":"Latvija","LY":"Lībija","MA":"Maroka","MC":"Monako","MD":"Moldova","ME":"Melnkalne","MF":"Senmartēna","MG":"Madagaskara","MH":"Māršala salas","MK":"Ziemeļmaķedonija","ML":"Mali","MM":"Mjanma (Birma)","MN":"Mongolija","MO":"Ķīnas īpašās pārvaldes apgabals Makao","MP":"Ziemeļu Marianas salas","MQ":"Martinika","MR":"Mauritānija","MS":"Montserrata","MT":"Malta","MU":"Maurīcija","MV":"Maldīvija","MW":"Malāvija","MX":"Meksika","MY":"Malaizija","MZ":"Mozambika","NA":"Namībija","NC":"Jaunkaledonija","NE":"Nigēra","NF":"Norfolkas sala","NG":"Nigērija","NI":"Nikaragva","NL":"Nīderlande","NO":"Norvēģija","NP":"Nepāla","NR":"Nauru","NU":"Niue","NZ":"Jaunzēlande","OM":"Omāna","PA":"Panama","PE":"Peru","PF":"Francijas Polinēzija","PG":"Papua-Jaungvineja","PH":"Filipīnas","PK":"Pakistāna","PL":"Polija","PM":"Senpjēra un Mikelona","PN":"Pitkērnas salas","PR":"Puertoriko","PS":"Palestīna","PT":"Portugāle","PW":"Palau","PY":"Paragvaja","QA":"Katara","RE":"Reinjona","RO":"Rumānija","RS":"Serbija","RU":"Krievija","RW":"Ruanda","SA":"Saūda Arābija","SB":"Zālamana salas","SC":"Seišelu salas","SD":"Sudāna","SE":"Zviedrija","SG":"Singapūra","SH":"Sv.Helēnas sala","SI":"Slovēnija","SJ":"Svalbāra un Jana Majena sala","SK":"Slovākija","SL":"Sjerraleone","SM":"Sanmarīno","SN":"Senegāla","SO":"Somālija","SR":"Surinama","SS":"Dienvidsudāna","ST":"Santome un Prinsipi","SV":"Salvadora","SX":"Sintmārtena","SY":"Sīrija","SZ":"Svazilenda","TC":"Tērksas un Kaikosas salas","TD":"Čada","TF":"Francijas Dienvidjūru teritorija","TG":"Togo","TH":"Taizeme","TJ":"Tadžikistāna","TK":"Tokelau","TL":"Austrumtimora","TM":"Turkmenistāna","TN":"Tunisija","TO":"Tonga","TR":"Turcija","TT":"Trinidāda un Tobāgo","TV":"Tuvalu","TW":"Taivāna","TZ":"Tanzānija","UA":"Ukraina","UG":"Uganda","UM":"ASV Mazās Aizjūras salas","US":"Amerikas Savienotās Valstis","UY":"Urugvaja","UZ":"Uzbekistāna","VA":"Vatikāns","VC":"Sentvinsenta un Grenadīnas","VE":"Venecuēla","VG":"Britu Virdžīnas","VI":"ASV Virdžīnas","VN":"Vjetnama","VU":"Vanuatu","WF":"Volisa un Futunas salas","WS":"Samoa","XK":"Kosova","YE":"Jemena","YT":"Majota","ZA":"Dienvidāfrikas Republika","ZM":"Zambija","ZW":"Zimbabve"}}'))},77340,a=>{a.v(JSON.parse('{"locale":"mk","countries":{"AD":"Андора","AE":"Обединети Арапски Емирати","AF":"Авганистан","AG":"Антигва и Барбуда","AI":"Ангвила","AL":"Албанија","AM":"Ерменија","AO":"Ангола","AQ":"Антарктик","AR":"Аргентина","AS":"Американска Самоа","AT":"Австрија","AU":"Австралија","AW":"Аруба","AX":"Оландски Острови","AZ":"Азербејџан","BA":"Босна и Херцеговина","BB":"Барбадос","BD":"Бангладеш","BE":"Белгија","BF":"Буркина Фасо","BG":"Бугарија","BH":"Бахреин","BI":"Бурунди","BJ":"Бенин","BL":"Свети Вартоломеј","BM":"Бермуди","BN":"Брунеј","BO":"Боливија","BQ":"Карипска Холандија","BR":"Бразил","BS":"Бахами","BT":"Бутан","BV":"Остров Буве","BW":"Боцвана","BY":"Белорусија","BZ":"Белизе","CA":"Канада","CC":"Кокосови (Килиншки) Острови","CD":"Конго - Киншаса","CF":"Централноафриканска Република","CG":"Конго - Бразавил","CH":"Швајцарија","CI":"Брегот на Слоновата Коска","CK":"Кукови Острови","CL":"Чиле","CM":"Камерун","CN":"Кина","CO":"Колумбија","CR":"Костарика","CU":"Куба","CV":"Зелен ’Рт","CW":"Курасао","CX":"Божиќен Остров","CY":"Кипар","CZ":"Чешка","DE":"Германија","DJ":"Џибути","DK":"Данска","DM":"Доминика","DO":"Доминиканска Република","DZ":"Алжир","EC":"Еквадор","EE":"Естонија","EG":"Египет","EH":"Западна Сахара","ER":"Еритреја","ES":"Шпанија","ET":"Етиопија","FI":"Финска","FJ":"Фиџи","FK":"Фолкландски Острови","FM":"Микронезија","FO":"Фарски Острови","FR":"Франција","GA":"Габон","GB":"Обединето Кралство","GD":"Гренада","GE":"Грузија","GF":"Француска Гвајана","GG":"Гернзи","GH":"Гана","GI":"Гибралтар","GL":"Гренланд","GM":"Гамбија","GN":"Гвинеја","GP":"Гвадалупе","GQ":"Екваторска Гвинеја","GR":"Грција","GS":"Јужна Џорџија и Јужни Сендвички Острови","GT":"Гватемала","GU":"Гуам","GW":"Гвинеја-Бисау","GY":"Гвајана","HK":"Хонг Конг С.А.Р Кина","HM":"Остров Херд и Острови Мекдоналд","HN":"Хондурас","HR":"Хрватска","HT":"Хаити","HU":"Унгарија","ID":"Индонезија","IE":"Ирска","IL":"Израел","IM":"Остров Ман","IN":"Индија","IO":"Британска Индоокеанска Територија","IQ":"Ирак","IR":"Иран","IS":"Исланд","IT":"Италија","JE":"Џерси","JM":"Јамајка","JO":"Јордан","JP":"Јапонија","KE":"Кенија","KG":"Киргистан","KH":"Камбоџа","KI":"Кирибати","KM":"Коморски Острови","KN":"Свети Кристофер и Невис","KP":"Северна Кореја","KR":"Јужна Кореја","KW":"Кувајт","KY":"Кајмански Острови","KZ":"Казахстан","LA":"Лаос","LB":"Либан","LC":"Света Луција","LI":"Лихтенштајн","LK":"Шри Ланка","LR":"Либерија","LS":"Лесото","LT":"Литванија","LU":"Луксембург","LV":"Латвија","LY":"Либија","MA":"Мароко","MC":"Монако","MD":"Молдавија","ME":"Црна Гора","MF":"Сент Мартин","MG":"Мадагаскар","MH":"Маршалски Острови","MK":"Северна Македонија","ML":"Мали","MM":"Мјанмар (Бурма)","MN":"Монголија","MO":"Макао САР","MP":"Северни Маријански Острови","MQ":"Мартиник","MR":"Мавританија","MS":"Монсерат","MT":"Малта","MU":"Маврициус","MV":"Малдиви","MW":"Малави","MX":"Мексико","MY":"Малезија","MZ":"Мозамбик","NA":"Намибија","NC":"Нова Каледонија","NE":"Нигер","NF":"Норфолшки Остров","NG":"Нигерија","NI":"Никарагва","NL":"Холандија","NO":"Норвешка","NP":"Непал","NR":"Науру","NU":"Ниује","NZ":"Нов Зеланд","OM":"Оман","PA":"Панама","PE":"Перу","PF":"Француска Полинезија","PG":"Папуа Нова Гвинеја","PH":"Филипини","PK":"Пакистан","PL":"Полска","PM":"Сент Пјер и Микелан","PN":"Питкернски Острови","PR":"Порторико","PS":"Палестински територии","PT":"Португалија","PW":"Палау","PY":"Парагвај","QA":"Катар","RE":"Реунион","RO":"Романија","RS":"Србија","RU":"Русија","RW":"Руанда","SA":"Саудиска Арабија","SB":"Соломонски Острови","SC":"Сејшели","SD":"Судан","SE":"Шведска","SG":"Сингапур","SH":"Света Елена","SI":"Словенија","SJ":"Свалбард и Жан Мејен","SK":"Словачка","SL":"Сиера Леоне","SM":"Сан Марино","SN":"Сенегал","SO":"Сомалија","SR":"Суринам","SS":"Јужен Судан","ST":"Сао Томе и Принсипе","SV":"Ел Салвадор","SX":"Свети Мартин","SY":"Сирија","SZ":"Свазиленд","TC":"Острови Туркс и Каикос","TD":"Чад","TF":"Француски Јужни Територии","TG":"Того","TH":"Тајланд","TJ":"Таџикистан","TK":"Токелау","TL":"Источен Тимор (Тимор Лесте)","TM":"Туркменистан","TN":"Тунис","TO":"Тонга","TR":"Турција","TT":"Тринидад и Тобаго","TV":"Тувалу","TW":"Тајван","TZ":"Танзанија","UA":"Украина","UG":"Уганда","UM":"Американски територии во Пацификот","US":"Соединети Американски Држави","UY":"Уругвај","UZ":"Узбекистан","VA":"Ватикан","VC":"Свети Винсент и Гренадините","VE":"Венецуела","VG":"Британски Девствени Острови","VI":"Американски Девствени Острови","VN":"Виетнам","VU":"Вануату","WF":"Валис и Футуна","WS":"Самоа","XK":"Косово","YE":"Јемен","YT":"Мајот","ZA":"Јужноафриканска Република","ZM":"Замбија","ZW":"Зимбабве"}}'))},13192,a=>{a.v(JSON.parse('{"locale":"ml","countries":{"AF":"അഫ്‌ഗാനിസ്ഥാൻ","AL":"അൽബേനിയ","DZ":"അൾജീരിയ","AS":"അമേരിക്കൻ സമോവ","AD":"അന്റോറ","AO":"അംഗോള","AI":"ആൻഗ്വില്ല","AQ":"അൻറാർട്ടിക്ക","AG":"ആൻറിഗ്വയും ബർബുഡയും","AR":"അർജൻറീന","AM":"അർമേനിയ","AW":"അറൂബ","AU":"ഓസ്‌ട്രേലിയ","AT":"ഓസ്ട്രിയ","AZ":"അസർബൈജാൻ","BS":"ബഹാമാസ്","BH":"ബഹ്റിൻ","BD":"ബംഗ്ലാദേശ്","BB":"ബാർബഡോസ്","BY":"ബെലറൂസ്","BE":"ബെൽജിയം","BZ":"ബെലീസ്","BJ":"ബെനിൻ","BM":"ബർമുഡ","BT":"ഭൂട്ടാൻ","BO":"ബൊളീവിയ","BA":"ബോസ്നിയയും ഹെർസഗോവിനയും","BW":"ബോട്സ്വാന","BV":"ബൗവെട്ട് ദ്വീപ്","BR":"ബ്രസീൽ","IO":"ബ്രിട്ടീഷ് ഇന്ത്യൻ മഹാസമുദ്ര പ്രദേശം","BN":"ബ്രൂണൈ","BG":"ബൾഗേറിയ","BF":"ബുർക്കിനാ ഫാസോ","BI":"ബറുണ്ടി","KH":"കംബോഡിയ","CM":"കാമറൂൺ","CA":"കാനഡ","CV":"കേപ്പ് വെർദെ","KY":"കേമാൻ ദ്വീപുകൾ","CF":"സെൻട്രൽ ആഫ്രിക്കൻ റിപ്പബ്ലിക്","TD":"ഛാഡ്","CL":"ചിലി","CN":"ചൈന","CX":"ക്രിസ്മസ് ദ്വീപ്","CC":"കോക്കസ് ദ്വീപുകൾ","CO":"കൊളംബിയ","KM":"കോമൊറോസ്","CG":"കോംഗോ - ബ്രാസവില്ലി","CD":"കോംഗോ - കിൻഷാസ","CK":"കുക്ക് ദ്വീപുകൾ","CR":"കോസ്റ്ററിക്ക","CI":"കോട്ട് ഡി വാർ","HR":"ക്രൊയേഷ്യ","CU":"ക്യൂബ","CY":"സൈപ്രസ്","CZ":"ചെക്ക് റിപ്പബ്ലിക്","DK":"ഡെൻമാർക്ക്","DJ":"ദിജിബൗട്ടി","DM":"ഡൊമിനിക്ക","DO":"ഡൊമിനിക്കൻ റിപ്പബ്ലിക്","EC":"ഇക്വഡോർ","EG":"ഈജിപ്ത്","SV":"എൽ സാൽവദോർ","GQ":"ഇക്വറ്റോറിയൽ ഗിനിയ","ER":"എറിത്രിയ","EE":"എസ്റ്റോണിയ‍","ET":"എത്യോപ്യ","FK":"ഫാക്ക്‌ലാന്റ് ദ്വീപുകൾ","FO":"ഫറോ ദ്വീപുകൾ","FJ":"ഫിജി","FI":"ഫിൻലാൻഡ്","FR":"ഫ്രാൻസ്","GF":"ഫ്രഞ്ച് ഗയാന","PF":"ഫ്രഞ്ച് പോളിനേഷ്യ","TF":"ഫ്രഞ്ച് ദക്ഷിണ ഭൂപ്രദേശം","GA":"ഗാബൺ","GM":"ഗാംബിയ","GE":"ജോർജ്ജിയ","DE":"ജർമനി","GH":"ഘാന","GI":"ജിബ്രാൾട്ടർ","GR":"ഗ്രീസ്","GL":"ഗ്രീൻലാൻറ്","GD":"ഗ്രനേഡ","GP":"ഗ്വാഡലൂപ്പ്","GU":"ഗ്വാം","GT":"ഗ്വാട്ടിമാല","GN":"ഗിനിയ","GW":"ഗിനിയ-ബിസൗ","GY":"ഗയാന","HT":"ഹെയ്തി","HM":"ഹിയേർഡും മക്‌ഡൊണാൾഡ് ദ്വീപുകളും","VA":"വത്തിക്കാൻ","HN":"ഹോണ്ടുറാസ്","HK":"ഹോങ് കോങ് എസ്.ഏ.ആർ. ചൈന","HU":"ഹംഗറി","IS":"ഐസ്‌ലാന്റ്","IN":"ഇന്ത്യ","ID":"ഇന്തോനേഷ്യ","IR":"ഇറാൻ","IQ":"ഇറാഖ്","IE":"അയർലാൻഡ്","IL":"ഇസ്രായേൽ","IT":"ഇറ്റലി","JM":"ജമൈക്ക","JP":"ജപ്പാൻ","JO":"ജോർദ്ദാൻ","KZ":"കസാഖിസ്ഥാൻ","KE":"കെനിയ","KI":"കിരിബാട്ടി","KP":"ഉത്തരകൊറിയ","KR":"ദക്ഷിണകൊറിയ","KW":"കുവൈറ്റ്","KG":"കിർഗിസ്ഥാൻ","LA":"ലാവോസ്","LV":"ലാറ്റ്വിയ","LB":"ലെബനൻ","LS":"ലെസോതോ","LR":"ലൈബീരിയ","LY":"ലിബിയ","LI":"ലിച്ചൺസ്റ്റൈൻ","LT":"ലിത്വാനിയ","LU":"ലക്സംബർഗ്","MO":"മക്കാവോ SAR ചൈന","MG":"മഡഗാസ്കർ","MW":"മലാവി","MY":"മലേഷ്യ","MV":"മാലിദ്വീപ്","ML":"മാലി","MT":"മാൾട്ട","MH":"മാർഷൽ‍‍ ദ്വീപുകൾ","MQ":"മാർട്ടിനിക്ക്","MR":"മൗറിറ്റാനിയ","MU":"മൗറീഷ്യസ്","YT":"മയോട്ടി","MX":"മെക്സിക്കോ","FM":"മൈക്രോനേഷ്യ","MD":"മൾഡോവ","MC":"മൊണാക്കോ","MN":"മംഗോളിയ","MS":"മൊണ്ടെസരത്ത്","MA":"മൊറോക്കൊ","MZ":"മൊസാംബിക്ക്","MM":"മ്യാൻമാർ (ബർമ്മ)","NA":"നമീബിയ","NR":"നൗറു","NP":"നേപ്പാൾ","NL":"നെതർലാൻഡ്‌സ്","NC":"പുതിയ കാലിഡോണിയ","NZ":"ന്യൂസിലാൻറ്","NI":"നിക്കരാഗ്വ","NE":"നൈജർ","NG":"നൈജീരിയ","NU":"ന്യൂയി","NF":"നോർഫോക് ദ്വീപ്","MK":"മാസിഡോണിയ","MP":"ഉത്തര മറിയാനാ ദ്വീപുകൾ","NO":"നോർവെ","OM":"ഒമാൻ","PK":"പാക്കിസ്ഥാൻ","PW":"പലാവു","PS":"പാലസ്‌തീൻ പ്രദേശങ്ങൾ","PA":"പനാമ","PG":"പാപ്പുവ ന്യൂ ഗിനിയ","PY":"പരാഗ്വേ","PE":"പെറു","PH":"ഫിലിപ്പൈൻസ്","PN":"പിറ്റ്‌കെയ്‌ൻ ദ്വീപുകൾ","PL":"പോളണ്ട്","PT":"പോർച്ചുഗൽ","PR":"പ്യൂർട്ടോ റിക്കോ","QA":"ഖത്തർ","RE":"റീയൂണിയൻ","RO":"റൊമാനിയ","RU":"റഷ്യ","RW":"റുവാണ്ട","SH":"സെൻറ് ഹെലീന","KN":"സെന്റ് കിറ്റ്‌സും നെവിസും","LC":"സെൻറ് ലൂസിയ","PM":"സെന്റ് പിയറിയും മിക്കലണും","VC":"സെന്റ് വിൻസെന്റും ഗ്രനെഡൈൻസും","WS":"സമോവ","SM":"സാൻ മറിനോ","ST":"സാവോ ടോമും പ്രിൻസിപെയും","SA":"സൗദി അറേബ്യ","SN":"സെനഗൽ","SC":"സെയ്‌ഷെൽസ്","SL":"സിയെറ ലിയോൺ","SG":"സിംഗപ്പുർ","SK":"സ്ലോവാക്യ","SI":"സ്ലോവേനിയ","SB":"സോളമൻ‍ ദ്വീപുകൾ","SO":"സോമാലിയ","ZA":"ദക്ഷിണാഫ്രിക്ക","GS":"ദക്ഷിണ ജോർജ്ജിയയും ദക്ഷിണ സാൻഡ്‌വിച്ച് ദ്വീപുകളും","ES":"സ്‌പെയിൻ","LK":"ശ്രീലങ്ക","SD":"സുഡാൻ","SR":"സുരിനെയിം","SJ":"സ്വാൽബാഡും ജാൻ മായേനും","SZ":"സ്വാസിലാൻറ്","SE":"സ്വീഡൻ","CH":"സ്വിറ്റ്സർലാൻഡ്","SY":"സിറിയ","TW":"തായ്‌വാൻ","TJ":"താജിക്കിസ്ഥാൻ","TZ":"ടാൻസാനിയ","TH":"തായ്‌ലാൻഡ്","TL":"തിമോർ-ലെസ്റ്റെ","TG":"ടോഗോ","TK":"ടോക്കെലൂ","TO":"ടോംഗ","TT":"ട്രിനിഡാഡും ടുബാഗോയും","TN":"ടുണീഷ്യ","TR":"തുർക്കി","TM":"തുർക്ക്മെനിസ്ഥാൻ","TC":"ടർക്ക്‌സും കെയ്‌ക്കോ ദ്വീപുകളും","TV":"ടുവാലു","UG":"ഉഗാണ്ട","UA":"ഉക്രെയ്‌ൻ","AE":"യുണൈറ്റഡ് അറബ് എമിറൈറ്റ്‌സ്","GB":"ബ്രിട്ടൻ","US":"അമേരിക്കൻ ഐക്യനാടുകൾ","UM":"യു.എസ്. ദ്വീപസമൂഹങ്ങൾ","UY":"ഉറുഗ്വേ","UZ":"ഉസ്‌ബെക്കിസ്ഥാൻ","VU":"വന്വാതു","VE":"വെനിസ്വേല","VN":"വിയറ്റ്നാം","VG":"ബ്രിട്ടീഷ് വെർജിൻ ദ്വീപുകൾ","VI":"യു.എസ്. വെർജിൻ ദ്വീപുകൾ","WF":"വാലിസ് ആന്റ് ഫ്യൂച്യുന","EH":"പശ്ചിമ സഹാറ","YE":"യെമൻ","ZM":"സാംബിയ","ZW":"സിംബാബ്‌വേ","AX":"അലൻഡ് ദ്വീപുകൾ","BQ":"ബൊണെയ്ർ, സിന്റ് യുസ്റ്റേഷ്യസ്, സാബ എന്നിവ","CW":"കുറാകാവോ","GG":"ഗേൺസി","IM":"ഐൽ ഓഫ് മാൻ","JE":"ജേഴ്സി","ME":"മോണ്ടെനെഗ്രോ","BL":"സെന്റ് ബാർത്തലമി","MF":"സെൻറ് മാർട്ടിൻ","RS":"സെർബിയ","SX":"സിന്റ് മാർട്ടെൻ","SS":"ദക്ഷിണ സുഡാൻ","XK":"കൊസോവൊ"}}'))},70527,a=>{a.v(JSON.parse('{"locale":"mn","countries":{"AD":"Андорра","AE":"Арабын Нэгдсэн Эмират","AF":"Афганистан","AG":"Антигуа ба Барбуда","AI":"Ангила","AL":"Албани","AM":"Армени","AO":"Ангол","AQ":"Антарктик","AR":"Аргентин","AS":"Америкийн Самоа","AT":"Австри","AU":"Австрали","AW":"Аруба","AX":"Аландын Арлууд","AZ":"Азербайжан","BA":"Босни Герцеговин","BB":"Барбадос","BD":"Бангладеш","BE":"Белги","BF":"Буркина фасо","BG":"Болгар","BH":"Бахрейн","BI":"Бурунди","BJ":"Бенин","BL":"Сент Бартельми","BM":"Бермуд","BN":"Бруней","BO":"Боливи","BQ":"Карибын Нидерланд","BR":"Бразил","BS":"Багам","BT":"Бутан","BV":"Буветын арлууд","BW":"Ботсвана","BY":"Беларусь","BZ":"Белиз","CA":"Канад","CC":"Кокос (Кийлинг) арлууд","CD":"Конго-Киншаса","CF":"Төв Африкийн Бүгд Найрамдах Улс","CG":"Конго Браззавиль","CH":"Швейцари","CI":"Кот д’Ивуар","CK":"Күүкийн арлууд","CL":"Чили","CM":"Камерун","CN":"Хятад","CO":"Колумб","CR":"Коста Рика","CU":"Куба","CV":"Капе Верде","CW":"Куракао","CX":"Зул сарын арал","CY":"Кипр","CZ":"Чех","DE":"Герман","DJ":"Джибути","DK":"Дани","DM":"Доминик","DO":"Бүгд Найрамдах Доминикан Улс","DZ":"Алжир","EC":"Эквадор","EE":"Эстони","EG":"Египет","EH":"Баруун Сахар","ER":"Эритри","ES":"Испани","ET":"Этиоп","FI":"Финланд","FJ":"Фижи","FK":"Фолькландын Арлууд","FM":"Микронези","FO":"Фароэ Арлууд","FR":"Франц","GA":"Габон","GB":"Их Британи","GD":"Гренада","GE":"Гүрж","GF":"Францын Гайана","GG":"Гернси","GH":"Гана","GI":"Гибралтар","GL":"Гренланд","GM":"Гамби","GN":"Гвиней","GP":"Гваделуп","GQ":"Экваторын Гвиней","GR":"Грек","GS":"Өмнөд Жоржиа ба Өмнөд Сэндвичийн Арлууд","GT":"Гватемал","GU":"Гуам","GW":"Гвиней-Бисау","GY":"Гайана","HK":"Хонг Конг","HM":"Хэрд болон Макдоналд арлууд","HN":"Гондурас","HR":"Хорват","HT":"Гаити","HU":"Унгар","ID":"Индонези","IE":"Ирланд","IL":"Израиль","IM":"Мэн Арал","IN":"Энэтхэг","IO":"Британийн харьяа Энэтхэгийн далай дахь нутаг дэвсгэрүүд","IQ":"Ирак","IR":"Иран","IS":"Исланд","IT":"Итали","JE":"Жерси","JM":"Ямайк","JO":"Йордан","JP":"Япон","KE":"Кени","KG":"Кыргызстан","KH":"Камбож","KI":"Кирибати","KM":"Коморос","KN":"Сент-Киттс ба Невис","KP":"Хойд Солонгос","KR":"Өмнөд Солонгос","KW":"Кувейт","KY":"Кайманы Арлууд","KZ":"Казахстан","LA":"Лаос","LB":"Ливан","LC":"Сент Люсиа","LI":"Лихтенштейн","LK":"Шри Ланка","LR":"Либери","LS":"Лесото","LT":"Литва","LU":"Люксембург","LV":"Латви","LY":"Ливи","MA":"Марокко","MC":"Монако","MD":"Молдав","ME":"Монтенегро","MF":"Сент-Мартин","MG":"Мадагаскар","MH":"Маршаллын арлууд","MK":"Умард Македон","ML":"Мали","MM":"Мьянмар (Бурма)","MN":"Монгол","MO":"Макао","MP":"Хойд Марианы арлууд","MQ":"Мартиник","MR":"Мавритани","MS":"Монтсеррат","MT":"Мальта","MU":"Мавритус","MV":"Мальдив","MW":"Малави","MX":"Мексик","MY":"Малайз","MZ":"Мозамбик","NA":"Намиби","NC":"Шинэ Каледони","NE":"Нигер","NF":"Норфолк арлууд","NG":"Нигери","NI":"Никарагуа","NL":"Нидерланд","NO":"Норвеги","NP":"Балба","NR":"Науру","NU":"Ниуэ","NZ":"Шинэ Зеланд","OM":"Оман","PA":"Панам","PE":"Перу","PF":"Францын Полинез","PG":"Папуа Шинэ Гвиней","PH":"Филиппин","PK":"Пакистан","PL":"Польш","PM":"Сэнт Пьер ба Микелон","PN":"Питкэрн арлууд","PR":"Пуэрто Рико","PS":"Палестины нутаг дэвсгэрүүд","PT":"Португаль","PW":"Палау","PY":"Парагвай","QA":"Катар","RE":"Реюньон","RO":"Румын","RS":"Серби","RU":"Орос","RW":"Руанда","SA":"Саудын Араб","SB":"Соломоны Арлууд","SC":"Сейшел","SD":"Судан","SE":"Швед","SG":"Сингапур","SH":"Сент Хелена","SI":"Словени","SJ":"Свалбард ба Ян Майен","SK":"Словак","SL":"Сьерра-Леоне","SM":"Сан-Марино","SN":"Сенегал","SO":"Сомали","SR":"Суринам","SS":"Өмнөд Судан","ST":"Сан-Томе ба Принсипи","SV":"Эль Сальвадор","SX":"Синт Мартен","SY":"Сири","SZ":"Свазиланд","TC":"Турк ба Кайкосын Арлууд","TD":"Чад","TF":"Францын өмнөд газар нутаг","TG":"Того","TH":"Тайланд","TJ":"Тажикистан","TK":"Токелау","TL":"Тимор-Лесте","TM":"Туркменистан","TN":"Тунис","TO":"Тонга","TR":"Турк","TT":"Тринидад Тобаго","TV":"Тувалу","TW":"Тайвань","TZ":"Танзани","UA":"Украин","UG":"Уганда","UM":"АНУ-ын тойрсон арлууд","US":"Америкийн Нэгдсэн Улс","UY":"Уругвай","UZ":"Узбекистан","VA":"Ватикан хот улс","VC":"Сэнт Винсэнт ба Гренадин","VE":"Венесуэл","VG":"Британийн Виржиний Арлууд","VI":"АНУ-ын Виржиний Арлууд","VN":"Вьетнам","VU":"Вануату","WF":"Уоллис ба Футуна","WS":"Самоа","XK":"Косово","YE":"Йемен","YT":"Майотте","ZA":"Өмнөд Африк тив","ZM":"Замби","ZW":"Зимбабве"}}'))},94307,a=>{a.v(JSON.parse('{"locale":"mr","countries":{"AD":"आंदोरा","AE":"संयुक्त अरब अमिराती","AF":"अफगाणिस्तान","AG":"अँटिगा आणि बार्बुडा","AI":"अँग्विला","AL":"अल्बानिया","AM":"अर्मेनिया","AO":"अँगोला","AQ":"अंटार्क्टिका","AR":"अर्जेंटीना","AS":"अमेरिकन सामोआ","AT":"ऑस्ट्रिया","AU":"ऑस्ट्रेलिया","AW":"अरूबा","AX":"ऑलंड द्वीपसमूह","AZ":"अझरबैजान","BA":"बॉस्निया आणि हर्झगोव्हिना","BB":"बार्बाडोस","BD":"बांग्लादेश","BE":"बेल्जियम","BF":"बुर्किना फासो","BG":"बल्गेरिया","BH":"बहारीन","BI":"बुरुंडी","BJ":"बेनिन","BL":"सेंट बार्थेलेमी","BM":"बर्म्युडा","BN":"ब्रुनेई दारुसलाम","BO":"बोलिव्हिया","BQ":"कैरिबियन नेदरलँड्स","BR":"ब्राझील","BS":"बहामास","BT":"भूतान","BV":"बुवेट बेट","BW":"बोत्स्वाना","BY":"बेलारूस","BZ":"बेलीज","CA":"कॅनडा","CC":"कोकोस द्वीपसमूह","CD":"काँगो, लोकशाही प्रजासत्ताक","CF":"मध्य आफ्रिकेचे प्रजासत्ताक","CG":"काँगो","CH":"स्वित्झर्लंड","CI":"आयव्हरी कोस्ट","CK":"कुक द्वीप","CL":"चिली","CM":"कैमरून","CN":"चीन","CO":"कोलंबिया","CR":"कॉस्टा रिका","CU":"क्यूबा","CV":"केप वर्दे","CW":"कुराकाओ","CX":"क्रिसमस द्वीप","CY":"सायप्रस","CZ":"झेक प्रजासत्ताक","DE":"जर्मनी","DJ":"जिबूती","DK":"डेन्मार्क","DM":"डोमिनिका","DO":"डॉमिनिकन प्रजासत्ताक","DZ":"अल्जेरिया","EC":"इक्वेडोर","EE":"एस्टोनिया","EG":"इजिप्त","EH":"पश्चिम सहारा","ER":"इरिट्रिया","ES":"स्पेन","ET":"इथिओपिया","FI":"फिनलंड","FJ":"फिजी","FK":"फॉकलंड द्वीपसमूह (माल्विनास)","FM":"मायक्रोनेशिया (संघीय राज्ये)","FO":"फॅरो द्वीपसमूह","FR":"फ्रान्स","GA":"गॅबॉन","GB":"ग्रेट ब्रिटन व उत्तर आयर्लंडचे संयुक्त राजतंत्र","GD":"ग्रेनेडा","GE":"जॉर्जिया","GF":"फ्रेंच गयाना","GG":"ग्वेर्नसे","GH":"घाना","GI":"जिब्राल्टर","GL":"ग्रीनलँड","GM":"गांबिया","GN":"गिनी","GP":"ग्वाडेलूप","GQ":"इक्वेटोरियल गिनी","GR":"ग्रीस","GS":"दक्षिण जॉर्जिया आणि दक्षिण सँडविच द्वीपसमूह","GT":"ग्वाटेमाला","GU":"ग्वाम","GW":"गिनी-बिसाऊ","GY":"गयाना","HK":"हाँग काँग","HM":"हर्ड द्वीप व मॅकडॉनल्ड द्वीपसमूह","HN":"होंडुरास","HR":"क्रोएशिया","HT":"हैती","HU":"हंगेरी","ID":"इंडोनेशिया","IE":"आयर्लंड","IL":"इस्रायल","IM":"आइल ऑफ मॅन","IN":"भारत","IO":"ब्रिटीश हिंदी महासागर क्षेत्र","IQ":"इराक","IR":"इराण","IS":"आइसलँड","IT":"इटली","JE":"जर्सी","JM":"जमैका","JO":"जॉर्डन","JP":"जापान","KE":"केनिया","KG":"किर्गिझस्तान","KH":"कंबोडिया","KI":"किरिबाती","KM":"कोमोरोस","KN":"सेंट किट्स आणि नेव्हिस","KP":"उत्तर कोरिया","KR":"दक्षिण कोरिया","KW":"कुवेत","KY":"केमन द्वीपसमूह","KZ":"कझाकस्तान","LA":"लाओस","LB":"लेबनॉन","LC":"सेंट लुसिया","LI":"लिश्टनस्टाइन","LK":"श्रीलंका","LR":"लायबेरिया","LS":"लेसोथो","LT":"लिथुआनिया","LU":"लक्झेंबर्ग","LV":"लात्व्हिया","LY":"लिबिया","MA":"मोरोक्को","MC":"मोनॅको","MD":"मोल्दोव्हा प्रजासत्ताक","ME":"माँटेनिग्रो","MF":"सेंट मार्टिन","MG":"मादागास्कर","MH":"मार्शल द्वीपसमूह","MK":"उत्तर मॅसेडोनिया","ML":"माली","MM":"म्यानमार","MN":"मंगोलिया","MO":"मकाओ","MP":"उत्तर मारियाना द्वीपसमूह","MQ":"मार्टिनिक","MR":"मॉरिटानिया","MS":"माँटसेराट","MT":"माल्टा","MU":"मॉरिशस","MV":"मालदीव","MW":"मलावी","MX":"मेक्सिको","MY":"मलेशिया","MZ":"मोझांबिक","NA":"नामिबिया","NC":"न्यू कॅलिडोनिया","NE":"नायजर","NF":"नॉरफोक द्वीप","NG":"नायजेरिया","NI":"निकाराग्वा","NL":"नेदरलँड्स","NO":"नॉर्वे","NP":"नेपाळ","NR":"नौरू","NU":"नियू","NZ":"न्यूझीलंड","OM":"ओमान","PA":"पनामा","PE":"पेरू","PF":"फ्रेंच पॉलिनेशिया","PG":"पापुआ न्यू गिनी","PH":"फिलिपाईन्स","PK":"पाकिस्तान","PL":"पोलंड","PM":"सेंट पियरे आणि मिकेलॉन","PN":"पिटकेर्न द्वीपसमूह","PR":"पोर्तु रिको","PS":"पॅलेस्टाईन","PT":"पोर्तुगाल","PW":"पलाऊ","PY":"पॅराग्वे","QA":"कतार","RE":"रीयूनियन","RO":"रोमानिया","RS":"सर्बिया","RU":"रशिया","RW":"रवांडा","SA":"सौदी अरेबिया","SB":"सोलोमन द्वीपसमूह","SC":"सेशेल्स","SD":"सुदान","SE":"स्वीडन","SG":"सिंगापूर","SH":"सेंट हेलेना, असेन्शन आणि ट्रिस्टन दा कुन्हा","SI":"स्लोव्हेनिया","SJ":"स्वालबार्ड व यान मायेन","SK":"स्लोव्हाकिया","SL":"सिएरा लिओन","SM":"सॅन मारिनो","SN":"सेनेगल","SO":"सोमालिया","SR":"सुरिनाम","SS":"दक्षिण सुदान","ST":"साओ टोम आणि प्रिंसिपे","SV":"एल साल्वाडोर","SX":"सिंट मार्टेन","SY":"सीरिया","SZ":"इस्वातीनी","TC":"तुर्क आणि कैकोस द्वीपसमूह","TD":"चाड","TF":"फ्रान्सचे दक्षिणी व अंटार्क्टिक भूभाग","TG":"टोगो","TH":"थायलंड","TJ":"ताजिकिस्तान","TK":"टोकेलाऊ","TL":"पूर्व तिमोर","TM":"तुर्कमेनिस्तान","TN":"ट्युनिशिया","TO":"टोंगा","TR":"तुर्कस्तान","TT":"त्रिनिदाद आणि टोबॅगो","TV":"तुवालू","TW":"तैवान","TZ":"टांझानिया","UA":"युक्रेन","UG":"युगांडा","UM":"संयुक्त राज्य अमेरिकेचे छोटे दूरस्थ द्वीपसमूह","US":"अमेरिका","UY":"उरुग्वे","UZ":"उझबेकिस्तान","VA":"व्हॅटिकन सिटी","VC":"सेंट व्हिन्सेंट आणि ग्रेनेडीन्स","VE":"व्हेनेझुएला","VG":"ब्रिटीश व्हर्जिन द्वीपसमूह","VI":"अमेरिकी व्हर्जिन द्वीपसमूह","VN":"व्हिएतनाम","VU":"व्हानुआतू","WF":"वॉलिस आणि फ्युटुना","WS":"सामोआ","XK":"कोसोवो","YE":"यमनचे प्रजासत्ताक","YT":"मेयोट","ZA":"दक्षिण आफ्रिका","ZM":"झांबिया","ZW":"झिम्बाब्वे"}}'))},16099,a=>{a.v(JSON.parse('{"locale":"ms","countries":{"AD":"Andorra","AE":"Emiriah Arab Bersatu","AF":"Afghanistan","AG":"Antigua dan Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antartika","AR":"Argentina","AS":"Samoa Amerika","AT":"Austria","AU":"Australia","AW":"Aruba","AX":"Kepulauan Aland","AZ":"Azerbaijan","BA":"Bosnia dan Herzegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgium","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Belanda Caribbean","BR":"Brazil","BS":"Bahamas","BT":"Bhutan","BV":"Pulau Bouvet","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Kanada","CC":"Kepulauan Cocos (Keeling)","CD":"Congo - Kinshasa","CF":"Republik Afrika Tengah","CG":"Congo - Brazzaville","CH":"Switzerland","CI":["Cote d\'Ivoire","Côte d\'Ivoire"],"CK":"Kepulauan Cook","CL":"Chile","CM":"Cameroon","CN":"China","CO":"Colombia","CR":"Costa Rica","CU":"Cuba","CV":"Cape Verde","CW":"Curacao","CX":"Pulau Krismas","CY":"Cyprus","CZ":"Czechia","DE":"Jerman","DJ":"Djibouti","DK":"Denmark","DM":"Dominica","DO":"Republik Dominica","DZ":"Algeria","EC":"Ecuador","EE":"Estonia","EG":"Mesir","EH":"Sahara Barat","ER":"Eritrea","ES":"Sepanyol","ET":"Ethiopia","FI":"Finland","FJ":"Fiji","FK":"Kepulauan Falkland","FM":"Micronesia","FO":"Kepulauan Faroe","FR":"Perancis","GA":"Gabon","GB":"United Kingdom","GD":"Grenada","GE":"Georgia","GF":"Guiana Perancis","GG":"Guernsey","GH":"Ghana","GI":"Gibraltar","GL":"Greenland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Guinea Khatulistiwa","GR":"Greece","GS":"Kepulauan Georgia Selatan & Sandwich Selatan","GT":"Guatemala","GU":"Guam","GW":"Guinea Bissau","GY":"Guyana","HK":"Hong Kong SAR China","HM":"Kepulauan Heard & McDonald","HN":"Honduras","HR":"Croatia","HT":"Haiti","HU":"Hungary","ID":"Indonesia","IE":"Ireland","IL":"Israel","IM":"Isle of Man","IN":"India","IO":"Wilayah Lautan Hindi British","IQ":"Iraq","IR":"Iran","IS":"Iceland","IT":"Itali","JE":"Jersey","JM":"Jamaica","JO":"Jordan","JP":"Jepun","KE":"Kenya","KG":"Kyrgyzstan","KH":"Kemboja","KI":"Kiribati","KM":"Comoros","KN":"Saint Kitts dan Nevis","KP":"Korea Utara","KR":"Korea Selatan","KW":"Kuwait","KY":"Kepulauan Cayman","KZ":"Kazakhstan","LA":"Laos","LB":"Lubnan","LC":"Saint Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lithuania","LU":"Luxembourg","LV":"Latvia","LY":"Libya","MA":"Maghribi","MC":"Monaco","MD":"Moldova","ME":"Montenegro","MF":"Saint Martin","MG":"Madagaskar","MH":"Kepulauan Marshall","MK":"Macedonia","ML":"Mali","MM":"Myanmar (Burma)","MN":"Mongolia","MO":"Macau SAR China","MP":"Kepulauan Mariana Utara","MQ":"Martinique","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldives","MW":"Malawi","MX":"Mexico","MY":"Malaysia","MZ":"Mozambique","NA":"Namibia","NC":"New Caledonia","NE":"Niger","NF":"Pulau Norfolk","NG":"Nigeria","NI":"Nicaragua","NL":"Belanda","NO":"Norway","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"New Zealand","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Polinesia Perancis","PG":"Papua New Guinea","PH":"Filipina","PK":"Pakistan","PL":"Poland","PM":"Saint Pierre dan Miquelon","PN":"Kepulauan Pitcairn","PR":"Puerto Rico","PS":"Wilayah Palestin","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Reunion","RO":"Romania","RS":"Serbia","RU":"Rusia","RW":"Rwanda","SA":"Arab Saudi","SB":"Kepulauan Solomon","SC":"Seychelles","SD":"Sudan","SE":"Sweden","SG":"Singapura","SH":"Saint Helena","SI":"Slovenia","SJ":"Svalbard dan Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Surinam","SS":"Sudan Selatan","ST":"Sao Tome dan Principe","SV":"El Salvador","SX":"Sint Maarten","SY":"Syria","SZ":"Eswatini","TC":"Kepulauan Turks dan Caicos","TD":"Chad","TF":"Wilayah Selatan Perancis","TG":"Togo","TH":"Thailand","TJ":"Tajikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Turki","TT":"Trinidad dan Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraine","UG":"Uganda","UM":"Kepulauan Terpencil A.S.","US":"Amerika Syarikat","UY":"Uruguay","UZ":"Uzbekistan","VA":"Kota Vatican","VC":"Saint Vincent dan Grenadines","VE":"Venezuela","VG":"Kepulauan Virgin British","VI":"Kepulauan Virgin A.S.","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis dan Futuna","WS":"Samoa","XK":"Kosovo","YE":"Yaman","YT":"Mayotte","ZA":"Afrika Selatan","ZM":"Zambia","ZW":"Zimbabwe"}}'))},11176,a=>{a.v(JSON.parse('{"locale":"mt","countries":{"AF":"l-Afganistan","AL":"l-Albanija","DZ":"l-Alġerija","AS":"is-Samoa Amerikana","AD":"Andorra","AO":"l-Angola","AI":"Anguilla","AQ":"l-Antartika","AG":"Antigua u Barbuda","AR":"l-Arġentina","AM":"l-Armenja","AW":"Aruba","AU":"l-Awstralja","AT":"l-Awstrija","AZ":"l-Ażerbajġan","BS":"il-Bahamas","BH":"il-Bahrain","BD":"il-Bangladesh","BB":"Barbados","BY":"il-Belarussja","BE":"il-Belġju","BZ":"il-Belize","BJ":"il-Benin","BM":"Bermuda","BT":"il-Bhutan","BO":"il-Bolivja","BA":"il-Bożnija-Ħerzegovina","BW":"il-Botswana","BV":"Gżira Bouvet","BR":"Il-Brażil","IO":"Territorju Brittaniku tal-Oċean Indjan","BN":"il-Brunei","BG":"il-Bulgarija","BF":"il-Burkina Faso","BI":"il-Burundi","KH":"il-Kambodja","CM":"il-Kamerun","CA":"il-Kanada","CV":"Cape Verde","KY":"il-Gżejjer Cayman","CF":"ir-Repubblika Ċentru-Afrikana","TD":"iċ-Chad","CL":"iċ-Ċili","CN":"iċ-Ċina","CX":"il-Gżira Christmas","CC":"Gżejjer Cocos (Keeling)","CO":"il-Kolombja","KM":"Comoros","CG":"il-Kongo - Brazzaville","CD":"ir-Repubblika Demokratika tal-Kongo","CK":"Gżejjer Cook","CR":"il-Costa Rica","CI":"il-Kosta tal-Avorju","HR":"il-Kroazja","CU":"Kuba","CY":"Ċipru","CZ":"ir-Repubblika Ċeka","DK":"id-Danimarka","DJ":"il-Djibouti","DM":"Dominica","DO":"ir-Repubblika Dominicana","EC":"l-Ekwador","EG":"l-Eġittu","SV":"El Salvador","GQ":"il-Guinea Ekwatorjali","ER":"l-Eritrea","EE":"l-Estonja","ET":"l-Etjopja","FK":"il-Gżejjer Falkland","FO":"il-Gżejjer Faeroe","FJ":"Fiġi","FI":"il-Finlandja","FR":"Franza","GF":"il-Guyana Franċiża","PF":"Polineżja Franċiża","TF":"It-Territorji Franċiżi tan-Nofsinhar","GA":"il-Gabon","GM":"il-Gambja","GE":"il-Georgia","DE":"il-Ġermanja","GH":"il-Ghana","GI":"Ġibiltà","GR":"il-Greċja","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"il-Gwatemala","GN":"il-Guinea","GW":"il-Guinea-Bissau","GY":"il-Guyana","HT":"il-Haiti","HM":"il-Gżejjer Heard u l-Gżejjer McDonald","VA":"l-Istat tal-Belt tal-Vatikan","HN":"il-Honduras","HK":"ir-Reġjun Amministrattiv Speċjali ta’ Hong Kong tar-Repubblika tal-Poplu taċ-Ċina","HU":"l-Ungerija","IS":"l-Iżlanda","IN":"l-Indja","ID":"l-Indoneżja","IR":"l-Iran","IQ":"l-Iraq","IE":"l-Irlanda","IL":"Iżrael","IT":"l-Italja","JM":"il-Ġamajka","JP":"il-Ġappun","JO":"il-Ġordan","KZ":"il-Każakistan","KE":"il-Kenja","KI":"Kiribati","KP":"il-Korea ta’ Fuq","KR":"il-Korea t’Isfel","KW":"il-Kuwajt","KG":"il-Kirgiżistan","LA":"il-Laos","LV":"il-Latvja","LB":"il-Libanu","LS":"il-Lesoto","LR":"il-Liberja","LY":"il-Libja","LI":"il-Liechtenstein","LT":"il-Litwanja","LU":"il-Lussemburgu","MO":"ir-Reġjun Amministrattiv Speċjali tal-Macao tar-Repubblika tal-Poplu taċ-Ċina","MG":"Madagascar","MW":"il-Malawi","MY":"il-Malasja","MV":"il-Maldivi","ML":"il-Mali","MT":"Malta","MH":"Gżejjer Marshall","MQ":"Martinique","MR":"il-Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"il-Messiku","FM":"il-Mikroneżja","MD":"il-Moldova","MC":"Monaco","MN":"il-Mongolja","MS":"Montserrat","MA":"il-Marokk","MZ":"il-Mozambique","MM":"il-Myanmar/Burma","NA":"in-Namibja","NR":"Nauru","NP":"in-Nepal","NL":"in-Netherlands","NC":"New Caledonia","NZ":"New Zealand","NI":"in-Nikaragwa","NE":"in-Niġer","NG":"in-Niġerja","NU":"Niue","NF":"Gżira Norfolk","MK":"il-Maċedonja ta’ Fuq","MP":"Ġżejjer Mariana tat-Tramuntana","NO":"in-Norveġja","OM":"l-Oman","PK":"il-Pakistan","PW":"Palau","PS":"it-Territorji Palestinjani","PA":"il-Panama","PG":"Papua New Guinea","PY":"il-Paragwaj","PE":"il-Perù","PH":"il-Filippini","PN":"Gżejjer Pitcairn","PL":"il-Polonja","PT":"il-Portugall","PR":"Puerto Rico","QA":"il-Qatar","RE":"Réunion","RO":"ir-Rumanija","RU":"ir-Russja","RW":"ir-Rwanda","SH":"Saint Helena","KN":"Saint Kitts u Nevis","LC":"Saint Lucia","PM":"Saint Pierre u Miquelon","VC":"Saint Vincent u l-Grenadini","WS":"Samoa","SM":"San Marino","ST":"São Tomé u Príncipe","SA":"l-Arabja Sawdija","SN":"is-Senegal","SC":"is-Seychelles","SL":"Sierra Leone","SG":"Singapore","SK":"is-Slovakkja","SI":"is-Slovenja","SB":"il-Gżejjer Solomon","SO":"is-Somalja","ZA":"l-Afrika t’Isfel","GS":"il-Georgia tan-Nofsinhar u l-Gżejjer Sandwich tan-Nofsinhar","ES":"Spanja","LK":"is-Sri Lanka","SD":"is-Sudan","SR":"is-Suriname","SJ":"Svalbard u Jan Mayen","SZ":"l-Eswatini","SE":"l-Iżvezja","CH":"l-Iżvizzera","SY":"is-Sirja","TW":"it-Tajwan","TJ":"it-Taġikistan","TZ":"it-Tanzanija","TH":"it-Tajlandja","TL":"Timor Leste","TG":"it-Togo","TK":"it-Tokelau","TO":"Tonga","TT":"Trinidad u Tobago","TN":"it-Tuneżija","TR":"it-Turkija","TM":"it-Turkmenistan","TC":"il-Gżejjer Turks u Caicos","TV":"Tuvalu","UG":"l-Uganda","UA":"l-Ukrajna","AE":"l-Emirati Għarab Magħquda","GB":"ir-Renju Unit","US":["l-Istati Uniti","l-Istati Uniti tal-Amerka"],"UM":"Il-Gżejjer Minuri Mbiegħda tal-Istati Uniti","UY":"l-Urugwaj","UZ":"l-Użbekistan","VU":"Vanuatu","VE":"il-Venezwela","VN":"il-Vjetnam","VG":"il-Gżejjer Verġni Brittaniċi","VI":"il-Gżejjer Verġni tal-Istati Uniti","WF":"Wallis u Futuna","EH":"is-Saħara tal-Punent","YE":"il-Jemen","ZM":"iż-Żambja","ZW":"iż-Żimbabwe","AX":"il-Gżejjer Aland","BQ":"in-Netherlands tal-Karibew","CW":"Curaçao","GG":"Guernsey","IM":"Isle of Man","JE":"Jersey","ME":"il-Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin","RS":"is-Serbja","SX":"Sint Maarten","SS":"is-Sudan t’Isfel","XK":"il-Kosovo"}}'))},58268,a=>{a.v(JSON.parse('{"locale":"nb","countries":{"AD":"Andorra","AE":"De forente arabiske emirater","AF":"Afghanistan","AG":"Antigua og Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antarktis","AR":"Argentina","AS":"Amerikansk Samoa","AT":"Østerrike","AU":"Australia","AW":"Aruba","AX":"Åland","AZ":"Aserbajdsjan","BA":"Bosnia-Hercegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgia","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Karibisk Nederland","BR":"Brasil","BS":"Bahamas","BT":"Bhutan","BV":"Bouvetøya","BW":"Botswana","BY":"Hviterussland","BZ":"Belize","CA":"Canada","CC":"Kokosøyene","CD":"Kongo","CF":"Den sentralafrikanske republikk","CG":"Kongo-Brazzaville","CH":"Sveits","CI":"Elfenbenskysten","CK":"Cookøyene","CL":"Chile","CM":"Kamerun","CN":"Kina","CO":"Colombia","CR":"Costa Rica","CU":"Cuba","CV":"Kapp Verde","CW":"Curaçao","CX":"Christmasøya","CY":"Kypros","CZ":"Tsjekkia","DE":"Tyskland","DJ":"Djibouti","DK":"Danmark","DM":"Dominica","DO":"Den dominikanske republikk","DZ":"Algerie","EC":"Ecuador","EE":"Estland","EG":"Egypt","EH":"Vest-Sahara","ER":"Eritrea","ES":"Spania","ET":"Etiopia","FI":"Finland","FJ":"Fiji","FK":"Falklandsøyene","FM":"Mikronesiaføderasjonen","FO":"Færøyene","FR":"Frankrike","GA":"Gabon","GB":"Storbritannia","GD":"Grenada","GE":"Georgia","GF":"Fransk Guyana","GG":"Guernsey","GH":"Ghana","GI":"Gibraltar","GL":"Grønland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Ekvatorial-Guinea","GR":"Hellas","GS":"Sør-Georgia og de søre Sandwichøyene","GT":"Guatemala","GU":"Guam","GW":"Guinea-Bissau","GY":"Guyana","HK":"Hongkong","HM":"Heard- og McDonald-øyene","HN":"Honduras","HR":"Kroatia","HT":"Haiti","HU":"Ungarn","ID":"Indonesia","IE":"Irland","IL":"Israel","IM":"Man","IN":"India","IO":"Britisk territorium i Indiahavet","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italia","JE":"Jersey","JM":"Jamaica","JO":"Jordan","JP":"Japan","KE":"Kenya","KG":"Kirgisistan","KH":"Kambodsja","KI":"Kiribati","KM":"Komorene","KN":"Saint Kitts og Nevis","KP":"Nord-Korea","KR":"Sør-Korea","KW":"Kuwait","KY":"Caymanøyene","KZ":"Kasakhstan","LA":"Laos","LB":"Libanon","LC":"Saint Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Litauen","LU":"Luxembourg","LV":"Latvia","LY":"Libya","MA":"Marokko","MC":"Monaco","MD":"Moldova","ME":"Montenegro","MF":"Saint-Martin","MG":"Madagaskar","MH":"Marshalløyene","MK":"Nord-Makedonia","ML":"Mali","MM":"Myanmar (Burma)","MN":"Mongolia","MO":"Macao","MP":"Nord-Marianene","MQ":"Martinique","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldivene","MW":"Malawi","MX":"Mexico","MY":"Malaysia","MZ":"Mosambik","NA":"Namibia","NC":"Ny-Caledonia","NE":"Niger","NF":"Norfolk Island","NG":"Nigeria","NI":"Nicaragua","NL":"Nederland","NO":"Norge","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"New Zealand","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Fransk Polynesia","PG":"Papua Ny-Guinea","PH":"Filippinene","PK":"Pakistan","PL":"Polen","PM":"Saint-Pierre-et-Miquelon","PN":"Pitcairn","PR":"Puerto Rico","PS":"De okkuperte palestinske områdene","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Réunion","RO":"Romania","RS":"Serbia","RU":"Russland","RW":"Rwanda","SA":"Saudi-Arabia","SB":"Salomonøyene","SC":"Seychellene","SD":"Sudan","SE":"Sverige","SG":"Singapore","SH":"St. Helena","SI":"Slovenia","SJ":"Svalbard og Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Surinam","SS":"Sør-Sudan","ST":"São Tomé og Príncipe","SV":"El Salvador","SX":"Sint Maarten (Nederlandsk del)","SY":"Syria","SZ":"Eswatini","TC":"Turks- og Caicosøyene","TD":"Tsjad","TF":"Søre franske territorier","TG":"Togo","TH":"Thailand","TJ":"Tadsjikistan","TK":"Tokelau","TL":"Øst-Timor","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Tyrkia","TT":"Trinidad og Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraina","UG":"Uganda","UM":"USA, mindre, utenforliggende øyer","US":"USA","UY":"Uruguay","UZ":"Usbekistan","VA":"Vatikanstaten","VC":"Saint Vincent og Grenadinene","VE":"Venezuela","VG":"Jomfruøyene (Britisk)","VI":"Jomfruøyene (USA)","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis- og Futunaøyene","WS":"Samoa","YE":"Jemen","YT":"Mayotte","ZA":"Sør-Afrika","ZM":"Zambia","ZW":"Zimbabwe","XK":"Kosovo"}}'))},11595,a=>{a.v(JSON.parse('{"locale":"nl","countries":{"AF":["Islamitisch Emiraat Afghanistan","Afghanistan"],"AL":["Republiek Albanië","Albanië"],"DZ":["Democratische Volksrepubliek Algerije","Algerije"],"AS":"Amerikaans-Samoa","AD":["Vorstendom Andorra","Andorra"],"AO":["Republiek Angola","Angola"],"AI":"Anguilla","AQ":"Antarctica","AG":"Antigua en Barbuda","AR":["Argentijnse Republiek","Argentinië"],"AM":["Republiek Armenië","Armenië"],"AW":"Aruba","AU":["Gemenebest van Australië","Australië"],"AT":["Republiek Oostenrijk","Oostenrijk"],"AZ":["Republiek Azerbeidzjan","Azerbeidzjan"],"BS":["Gemenebest van de Bahama\'s","Bahama\'s"],"BH":["Koninkrijk Bahrein","Bahrein"],"BD":["Volksrepubliek Bangladesh","Bangladesh"],"BB":["Barbados","Barbados"],"BY":["Republiek Wit-Rusland","Wit-Rusland"],"BE":["Koninkrijk België","België"],"BZ":["Belize","Belize"],"BJ":["Republiek Benin","Benin"],"BM":"Bermuda","BT":["Koninkrijk Bhutan","Bhutan"],"BO":["Plurinationale Staat Bolivia","Bolivië"],"BA":["Bosnië en Herzegovina","Bosnië-Herzegovina"],"BW":["Republiek Botswana","Botswana"],"BV":"Bouvet Eiland","BR":["Federale Republiek Brazilië","Brazilië"],"IO":"Brits Indische oceaan","BN":["Brunei Darussalam","Brunei"],"BG":["Republiek Bulgarije","Bulgarije"],"BF":["Burkina Faso","Burkina Faso"],"BI":["Republiek Burundi","Burundi"],"KH":["Koninkrijk Cambodja","Cambodja"],"CM":["Republiek Kameroen","Kameroen"],"CA":"Canada","CV":["Republiek Kaapverdië","Kaapverdië"],"KY":"Kaaimaneilanden","CF":"Centraal-Afrikaanse Republiek","TD":["Republiek Tsjaad","Tsjaad"],"CL":["Republiek Chili","Chili"],"CN":["Volksrepubliek China","China"],"CX":["Christmaseiland","Kersteiland"],"CC":"Cocoseilanden","CO":["Republiek Colombia","Colombia"],"KM":["Unie der Comoren","Comoren"],"CG":["Republiek Congo","Congo-Brazzaville"],"CD":["Democratische Republiek Congo","Congo-Kinshasa"],"CK":"Cookeilanden","CR":["Republiek Costa Rica","Costa Rica"],"CI":["Republiek Ivoorkust","Ivoorkust"],"HR":["Republiek Kroatië","Kroatië"],"CU":["Republiek Cuba","Cuba"],"CY":["Republiek Cyprus","Cyprus"],"CZ":["Tsjechische Republiek","Tsjechië"],"DK":["Koninkrijk Denemarken","Denemarken"],"DJ":["Republiek Djibouti","Djibouti"],"DM":["Gemenebest Dominica","Dominica"],"DO":"Dominicaanse Republiek","EC":["Republiek Ecuador","Ecuador"],"EG":["Arabische Republiek Egypte","Egypte"],"SV":["Republiek El Salvador","El Salvador"],"GQ":["Republiek Equatoriaal-Guinea","Equatoriaal-Guinea"],"ER":["Staat Eritrea","Eritrea"],"EE":["Republiek Estland","Estland"],"ET":["Federale Democratische Republiek Ethiopië","Ethiopië"],"FK":"Falklandeilanden","FO":"Faeröer","FJ":["Republiek Fiji","Fiji"],"FI":["Republiek Finland","Finland"],"FR":["Franse Republiek","Frankrijk"],"GF":"Frans-Guyana","PF":"Frans-Polynesië","TF":"Franse Zuidelijke Gebieden","GA":["Republiek Gabon","Gabon"],"GM":["Republiek Gambia","Gambia"],"GE":["Georgië","Georgië"],"DE":["Bondsrepubliek Duitsland","Duitsland"],"GH":["Republiek Ghana","Ghana"],"GI":"Gibraltar","GR":["Helleense Republiek","Griekenland"],"GL":"Groenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":["Republiek Guatemala","Guatemala"],"GN":["Republiek Guinee","Guinea"],"GW":["Republiek Guinee-Bissau","Guinee-Bissau"],"GY":["Coöperatieve Republiek Guyana","Guyana"],"HT":["Republiek Haïti","Haïti"],"HM":"Heard en McDonaldeilanden","VA":["Vaticaanstad","Vaticaanstad"],"HN":["Republiek Honduras","Honduras"],"HK":"Hong Kong","HU":["Hongaarse Republiek","Hongarije"],"IS":["IJslandse Republiek","IJsland"],"IN":["Republiek India","India"],"ID":["Republiek Indonesië","Indonesië"],"IR":["Islamitische Republiek Iran","Iran"],"IQ":["Republiek Irak","Irak"],"IE":["Ierse Republiek","Ierland"],"IL":["Staat Israël","Israël"],"IT":["Italiaanse Republiek","Italië"],"JM":"Jamaica","JP":"Japan","JO":["Hasjemitisch Koninkrijk Jordanië","Jordanië"],"KZ":["Republiek Kazachstan","Kazachstan"],"KE":["Republiek Kenia","Kenia"],"KI":["Republiek Kiribati","Kiribati"],"KP":["Democratische Volksrepubliek Korea","Noord-Korea"],"KR":["Republiek Korea","Zuid-Korea"],"KW":["Staat Koeweit","Koeweit"],"KG":["Kirgizische Republiek","Kirgizië"],"LA":["Lao Democratische Volksrepubliek","Laos"],"LV":["Republiek Letland","Letland"],"LB":["Libanese Republiek","Libanon"],"LS":["Koninkrijk Lesotho","Lesotho"],"LR":["Republiek Liberia","Liberia"],"LY":["Staat Libië","Libië"],"LI":["Vorstendom Liechtenstein","Liechtenstein"],"LT":["Republiek Litouwen","Litouwen"],"LU":["Groothertogdom Luxemburg","Luxemburg"],"MO":"Macao","MG":["Republiek Madagaskar","Madagaskar"],"MW":["Republiek Malawi","Malawi"],"MY":["Maleisië","Maleisië"],"MV":["Republiek der Maldiven","Maldiven"],"ML":["Republiek Mali","Mali"],"MT":["Republiek Malta","Malta"],"MH":["Republiek der Marshalleilanden","Marshalleilanden"],"MQ":"Martinique","MR":["Islamitische Republiek Mauritanië","Mauritanië"],"MU":["Republiek Mauritius","Mauritius"],"YT":"Mayotte","MX":["Verenigde Mexicaanse Staten","Mexico"],"FM":["Federale Staten van Micronesië","Micronesië"],"MD":["Republiek Moldavië","Moldavië"],"MC":["Vorstendom Monaco","Monaco"],"MN":["Mongolië","Mongolië"],"MS":"Montserrat","MA":["Koninkrijk Marokko","Marokko"],"MZ":["Republiek Mozambique","Mozambique"],"MM":["Republiek van de Unie van Myanmar","Myanmar"],"NA":["Republiek Namibië","Namibië"],"NR":["Republiek Nauru","Nauru"],"NP":["Federale Democratische Republiek Nepal","Nepal"],"NL":["Koninkrijk der Nederlanden","Nederland"],"NC":["Nieuw-Caledonië","Nieuw-Caledonië"],"NZ":["Nieuw-Zeeland","Nieuw-Zeeland"],"NI":["Republiek Nicaragua","Nicaragua"],"NE":["Republiek Niger","Niger"],"NG":["Federale Republiek Nigeria","Nigeria"],"NU":"Niue","NF":"Norfolk","MP":"Noordelijke Marianen","MK":["Republiek Noord-Macedonië","Noord-Macedonië"],"NO":["Koninkrijk Noorwegen","Noorwegen"],"OM":["Sultanaat Oman","Oman"],"PK":["Islamitische Republiek Pakistan","Pakistan"],"PW":["Republiek Palau","Palau"],"PS":["Staat Palestina","Palestina"],"PA":["Republiek Panama","Panama"],"PG":["Onafhankelijke Staat Papoea-Nieuw-Guinea","Papoea-Nieuw-Guinea"],"PY":["Republiek Paraguay","Paraguay"],"PE":["Republiek Peru","Peru"],"PH":["Republiek der Filipijnen","Filipijnen"],"PN":"Pitcairn","PL":["Republiek Polen","Polen"],"PT":["Portugese Republiek","Portugal"],"PR":"Puerto Rico","QA":["Staat Qatar","Qatar"],"RE":"Réunion","RO":["Roemeense Republiek","Roemenië"],"RU":["Russische Federatie","Rusland"],"RW":["Republiek Rwanda","Rwanda"],"SH":"Sint-Helena","KN":["Federatie Saint Kitts en Nevis","Saint Kitts en Nevis"],"LC":["Saint Lucia","Saint Lucia"],"PM":["Saint-Pierre en Miquelon","Saint-Pierre en Miquelon"],"VC":["Saint Vincent en de Grenadines","Saint Vincent en de Grenadines"],"WS":["Onafhankelijke Staat Samoa","Samoa"],"SM":["Republiek San Marino","San Marino"],"ST":["Democratische Republiek São Tomé en Principe","São Tomé en Principe"],"SA":["Koninkrijk Saudi-Arabië","Saudi-Arabië"],"SN":["Republiek Senegal","Senegal"],"SC":["Republiek der Seychellen","Seychellen"],"SL":["Republiek Sierra Leone","Sierra Leone"],"SG":["Republiek Singapore","Singapore"],"SK":["Slowaakse Republiek","Slowakije"],"SI":["Republiek Slovenië","Slovenië"],"SB":["Salomonseilanden","Salomonseilanden"],"SO":["Federale Republiek Somalië","Somalië"],"ZA":["Republiek Zuid-Afrika","Zuid-Afrika"],"GS":"Zuid-Georgia en de Zuidelijke Sandwicheilanden","ES":["Koninkrijk Spanje","Spanje"],"LK":["Democratische Socialistische Republiek Sri Lanka","Sri Lanka"],"SD":["Republiek Soedan","Soedan"],"SR":["Republiek Suriname","Suriname"],"SJ":"Spitsbergen en Jan Mayen","SZ":["Koninkrijk Eswatini","Eswatini","Swaziland"],"SE":["Koninkrijk Zweden","Zweden"],"CH":["Zwitserse Bondsstaat","Zwitserland"],"SY":["Syrische Arabische Republiek","Syrië"],"TW":["Taiwan","Taiwan"],"TJ":["Republiek Tadzjikistan","Tadzjikistan"],"TZ":["Verenigde Republiek Tanzania","Tanzania"],"TH":["Koninkrijk Thailand","Thailand"],"TL":["Democratische Republiek Timor-Leste","Timor Leste"],"TG":["Togolese Republiek","Togo"],"TK":"Tokelau","TO":["Koninkrijk Tonga","Tonga"],"TT":["Republiek Trinidad en Tobago","Trinidad en Tobago"],"TN":["Republiek Tunesië","Tunesië"],"TR":["Republiek Turkije","Turkije"],"TM":["Turkmeense Republiek","Turkmenistan"],"TC":"Turks- en Caicoseilanden","TV":["Tuvalu","Tuvalu"],"UG":["Republiek Oeganda","Oeganda"],"UA":["Oekraïne","Oekraïne"],"AE":["Verenigde Arabische Emiraten","Verenigde Arabische Emiraten"],"GB":["Verenigd Koninkrijk van Groot-Brittannië en Noord-Ierland","Verenigd Koninkrijk"],"US":["Verenigde Staten van Amerika","Verenigde Staten"],"UM":"Amerikaanse Kleinere Afgelegen Eilanden","UY":["Oostelijke Republiek Uruguay","Uruguay"],"UZ":["Republiek Oezbekistan","Oezbekistan"],"VU":["Republiek Vanuatu","Vanuatu"],"VE":["Bolivariaanse Republiek Venezuela","Venezuela"],"VN":["Socialistische Republiek Vietnam","Vietnam"],"VG":"Britse Maagdeneilanden","VI":"Amerikaanse Maagdeneilanden","WF":"Wallis en Futuna","EH":"Westelijke Sahara","YE":["Republiek Jemen","Jemen"],"ZM":["Republiek Zambia","Zambia"],"ZW":["Republiek Zimbabwe","Zimbabwe"],"AX":"Åland","BQ":"Bonaire, Sint Eustatius en Saba","CW":"Curaçao","GG":"Guernsey","IM":"Man Eiland","JE":"Jersey","ME":["Montenegro","Montenegro"],"BL":"Saint Barthélemy","MF":["Sint-Maarten (Frans deel)","Sint-Maarten (Franse Antillen)","Collectiviteit van Sint-Maarten"],"RS":["Republiek Servië","Servië"],"SX":["Sint Maarten","Sint-Maarten","Sint Maarten (Nederlands deel)","Land Sint Maarten"],"SS":["Republiek Zuid-Soedan","Zuid-Soedan"],"XK":["Republiek Kosovo","Kosovo"]}}'))},38398,a=>{a.v(JSON.parse('{"locale":"nn","countries":{"AD":"Andorra","AE":"Dei sameinte arabiske emirata","AF":"Afghanistan","AG":"Antigua og Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antarktis","AR":"Argentina","AS":"Amerikansk Samoa","AT":"Austerrike","AU":"Australia","AW":"Aruba","AX":"Åland","AZ":"Aserbajdsjan","BA":"Bosnia-Hercegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgia","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Karibisk Nederland","BR":"Brasil","BS":"Bahamas","BT":"Bhutan","BV":"Bouvetøya","BW":"Botswana","BY":"Kviterussland","BZ":"Belize","CA":"Canada","CC":"Kokosøyane","CD":"Kongo","CF":"Den sentralafrikanske republikken","CG":"Kongo-Brazzaville","CH":"Sveits","CI":"Elfenbeinskysten","CK":"Cookøyane","CL":"Chile","CM":"Kamerun","CN":"Kina","CO":"Colombia","CR":"Costa Rica","CU":"Cuba","CV":"Kapp Verde","CW":"Curaçao","CX":"Christmasøya","CY":"Kypros","CZ":"Tsjekkia","DE":"Tyskland","DJ":"Djibouti","DK":"Danmark","DM":"Dominica","DO":"Den dominikanske republikken","DZ":"Algerie","EC":"Ecuador","EE":"Estland","EG":"Egypt","EH":"Vest-Sahara","ER":"Eritrea","ES":"Spania","ET":"Etiopia","FI":"Finland","FJ":"Fiji","FK":"Falklandsøyane","FM":"Mikronesiaføderasjonen","FO":"Færøyane","FR":"Frankrike","GA":"Gabon","GB":"Storbritannia","GD":"Grenada","GE":"Georgia","GF":"Fransk Guyana","GG":"Guernsey","GH":"Ghana","GI":"Gibraltar","GL":"Grønland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Ekvatorial-Guinea","GR":"Hellas","GS":"Sør-Georgia og de søre Sandwichøyane","GT":"Guatemala","GU":"Guam","GW":"Guinea-Bissau","GY":"Guyana","HK":"Hongkong","HM":"Heard- og McDonald-øyane","HN":"Honduras","HR":"Kroatia","HT":"Haiti","HU":"Ungarn","ID":"Indonesia","IE":"Irland","IL":"Israel","IM":"Man","IN":"India","IO":"Britisk territorium i Indiahavet","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italia","JE":"Jersey","JM":"Jamaica","JO":"Jordan","JP":"Japan","KE":"Kenya","KG":"Kirgisistan","KH":"Kambodsja","KI":"Kiribati","KM":"Komorane","KN":"Saint Kitts og Nevis","KP":"Nord-Korea","KR":"Sør-Korea","KW":"Kuwait","KY":"Caymanøyane","KZ":"Kasakhstan","LA":"Laos","LB":"Libanon","LC":"Saint Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Litauen","LU":"Luxembourg","LV":"Latvia","LY":"Libya","MA":"Marokko","MC":"Monaco","MD":"Moldova","ME":"Montenegro","MF":"Saint-Martin","MG":"Madagaskar","MH":"Marshalløyane","MK":"Nord-Makedonia","ML":"Mali","MM":"Myanmar (Burma)","MN":"Mongolia","MO":"Macao","MP":"Nord-Marianane","MQ":"Martinique","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldivane","MW":"Malawi","MX":"Mexico","MY":"Malaysia","MZ":"Mosambik","NA":"Namibia","NC":"Ny-Caledonia","NE":"Niger","NF":"Norfolk Island","NG":"Nigeria","NI":"Nicaragua","NL":"Nederland","NO":"Noreg","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"New Zealand","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Fransk Polynesia","PG":"Papua Ny-Guinea","PH":"Filippinane","PK":"Pakistan","PL":"Polen","PM":"Saint-Pierre-et-Miquelon","PN":"Pitcairn","PR":"Puerto Rico","PS":"Dei okkuperte palestinske områda","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Réunion","RO":"Romania","RS":"Serbia","RU":"Russland","RW":"Rwanda","SA":"Saudi-Arabia","SB":"Salomonøyane","SC":"Seychellane","SD":"Sudan","SE":"Sverige","SG":"Singapore","SH":"St. Helena","SI":"Slovenia","SJ":"Svalbard og Jan Mayen","SK":"Slovakia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Surinam","SS":"Sør-Sudan","ST":"São Tomé og Príncipe","SV":"El Salvador","SX":"Sint Maarten (Nederlandsk del)","SY":"Syria","SZ":"Eswatini","TC":"Turks- og Caicosøyane","TD":"Tsjad","TF":"Søre franske territorier","TG":"Togo","TH":"Thailand","TJ":"Tadsjikistan","TK":"Tokelau","TL":"Aust-Timor","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Tyrkia","TT":"Trinidad og Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraina","UG":"Uganda","UM":"USA, mindre, utanforliggande øyar","US":"USA","UY":"Uruguay","UZ":"Usbekistan","VA":"Vatikanstaten","VC":"Saint Vincent og Grenadinane","VE":"Venezuela","VG":"Jomfruøyane (Britisk)","VI":"Jomfruøyane (USA)","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis- og Futunaøyane","WS":"Samoa","YE":"Jemen","YT":"Mayotte","ZA":"Sør-Afrika","ZM":"Zambia","ZW":"Zimbabwe","XK":"Kosovo"}}'))},2443,a=>{a.v(JSON.parse('{"locale":"no","countries":{"AF":"Afghanistan","AL":"Albania","DZ":"Algerie","AS":"Amerikansk Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarktis","AG":"Antigua og Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Østerrike","AZ":"Aserbajdsjan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Hviterussland","BE":"Belgia","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BA":"Bosnia-Hercegovina","BW":"Botswana","BV":"Bouvetøya","BR":"Brasil","IO":"Det britiske territoriet i Indiahavet","BN":"Brunei","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Kambodsja","CM":"Kamerun","CA":"Canada","CV":"Kapp Verde","KY":"Caymanøyene","CF":"Den sentralafrikanske republikk","TD":"Tsjad","CL":"Chile","CN":"Kina","CX":"Christmasøya","CC":"Kokosøyene","CO":"Colombia","KM":"Komorene","CG":"Kongo-Brazzaville","CD":"Kongo","CK":"Cookøyene","CR":"Costa Rica","CI":"Elfenbenskysten","HR":"Kroatia","CU":"Cuba","CY":"Kypros","CZ":"Tsjekkia","DK":"Danmark","DJ":"Djibouti","DM":"Dominica","DO":"Den dominikanske republikk","EC":"Ecuador","EG":"Egypt","SV":"El Salvador","GQ":"Ekvatorial-Guinea","ER":"Eritrea","EE":"Estland","ET":"Etiopia","FK":"Falklandsøyene","FO":"Færøyene","FJ":"Fiji","FI":"Finland","FR":"Frankrike","GF":"Fransk Guyana","PF":"Fransk Polynesia","TF":"De franske sørterritorier","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Tyskland","GH":"Ghana","GI":"Gibraltar","GR":"Hellas","GL":"Grønland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Heard- og McDonaldøyene","VA":"Vatikanstaten","HN":"Honduras","HK":"Hongkong SAR Kina","HU":"Ungarn","IS":"Island","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Irak","IE":"Irland","IL":"Israel","IT":"Italia","JM":"Jamaica","JP":"Japan","JO":"Jordan","KZ":"Kasakhstan","KE":"Kenya","KI":"Kiribati","KP":"Nord-Korea","KR":"Sør-Korea","KW":"Kuwait","KG":"Kirgisistan","LA":"Laos","LV":"Latvia","LB":"Libanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Litauen","LU":"Luxemburg","MO":"Macao SAR Kina","MG":"Madagaskar","MW":"Malawi","MY":"Malaysia","MV":"Maldivene","ML":"Mali","MT":"Malta","MH":"Marshalløyene","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Mikronesiaføderasjonen","MD":"Moldova","MC":"Monaco","MN":"Mongolia","MS":"Montserrat","MA":"Marokko","MZ":"Mosambik","MM":"Myanmar (Burma)","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Nederland","NC":"Ny-Caledonia","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolkøya","MK":"Nord-Makedonia","MP":"Nord-Marianene","NO":"Norge","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Det palestinske området","PA":"Panama","PG":"Papua Ny-Guinea","PY":"Paraguay","PE":"Peru","PH":"Filippinene","PN":"Pitcairnøyene","PL":"Polen","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","RE":"Réunion","RO":"Romania","RU":"Russland","RW":"Rwanda","SH":"St. Helena","KN":"Saint Kitts og Nevis","LC":"St. Lucia","PM":"Saint-Pierre-et-Miquelon","VC":"St. Vincent og Grenadinene","WS":"Samoa","SM":"San Marino","ST":"São Tomé og Príncipe","SA":"Saudi-Arabia","SN":"Senegal","SC":"Seychellene","SL":"Sierra Leone","SG":"Singapore","SK":"Slovakia","SI":"Slovenia","SB":"Salomonøyene","SO":"Somalia","ZA":"Sør-Afrika","GS":"Sør-Georgia og Sør-Sandwichøyene","ES":"Spania","LK":"Sri Lanka","SD":"Sudan","SR":"Surinam","SJ":"Svalbard og Jan Mayen","SZ":"Eswatini","SE":"Sverige","CH":"Sveits","SY":"Syria","TW":"Taiwan","TJ":"Tadsjikistan","TZ":"Tanzania","TH":"Thailand","TL":"Øst-Timor","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad og Tobago","TN":"Tunisia","TR":"Tyrkia","TM":"Turkmenistan","TC":"Turks- og Caicosøyene","TV":"Tuvalu","UG":"Uganda","UA":"Ukraina","AE":"De forente arabiske emirater","GB":"Storbritannia","US":"USA","UM":"USAs ytre øyer","UY":"Uruguay","UZ":"Usbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"De britiske jomfruøyene","VI":"De amerikanske jomfruøyene","WF":"Wallis og Futuna","EH":"Vest-Sahara","YE":"Jemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Åland","BQ":"Karibisk Nederland","CW":"Curaçao","GG":"Guernsey","IM":"Man","JE":"Jersey","ME":"Montenegro","BL":"Saint-Barthélemy","MF":"Saint-Martin","RS":"Serbia","SX":"Sint Maarten","SS":"Sør-Sudan","XK":"Kosovo"}}'))},84803,a=>{a.v(JSON.parse('{"locale":"pl","countries":{"AF":"Afganistan","AL":"Albania","DZ":"Algieria","AS":"Samoa Amerykańskie","AD":"Andora","AO":"Angola","AI":"Anguilla","AQ":"Antarktyka","AG":"Antigua i Barbuda","AR":"Argentyna","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azerbejdżan","BS":"Bahamy","BH":"Bahrajn","BD":"Bangladesz","BB":"Barbados","BY":"Białoruś","BE":"Belgia","BZ":"Belize","BJ":"Benin","BM":"Bermudy","BT":"Bhutan","BO":"Boliwia","BA":"Bośnia i Hercegowina","BW":"Botswana","BV":"Wyspa Bouveta","BR":"Brazylia","IO":"Brytyjskie Terytorium Oceanu Indyjskiego","BN":"Brunei","BG":"Bułgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Kambodża","CM":"Kamerun","CA":"Kanada","CV":"Republika Zielonego Przylądka","KY":"Kajmany","CF":"Republika Środkowoafrykańska","TD":"Czad","CL":"Chile","CN":"Chiny","CX":"Wyspa Bożego Narodzenia","CC":"Wyspy Kokosowe","CO":"Kolumbia","KM":"Komory","CG":"Kongo","CD":"Demokratyczna Republika Konga","CK":"Wyspy Cooka","CR":"Kostaryka","CI":"Wybrzeże Kości Słoniowej","HR":"Chorwacja","CU":"Kuba","CY":"Cypr","CZ":"Czechy","DK":"Dania","DJ":"Dżibuti","DM":"Dominika","DO":"Dominikana","EC":"Ekwador","EG":"Egipt","SV":"Salwador","GQ":"Gwinea Równikowa","ER":"Erytrea","EE":"Estonia","ET":"Etiopia","FK":"Falklandy","FO":"Wyspy Owcze","FJ":"Fidżi","FI":"Finlandia","FR":"Francja","GF":"Gujana Francuska","PF":"Polinezja Francuska","TF":"Francuskie Terytoria Południowe i Antarktyczne","GA":"Gabon","GM":"Gambia","GE":"Gruzja","DE":"Niemcy","GH":"Ghana","GI":"Gibraltar","GR":"Grecja","GL":"Grenlandia","GD":"Grenada","GP":"Gwadelupa","GU":"Guam","GT":"Gwatemala","GN":"Gwinea","GW":"Gwinea Bissau","GY":"Gujana","HT":"Haiti","HM":"Wyspy Heard i McDonalda","VA":"Watykan","HN":"Honduras","HK":"Hongkong","HU":"Węgry","IS":"Islandia","IN":"Indie","ID":"Indonezja","IR":"Iran","IQ":"Irak","IE":"Irlandia","IL":"Izrael","IT":"Włochy","JM":"Jamajka","JP":"Japonia","JO":"Jordania","KZ":"Kazachstan","KE":"Kenia","KI":"Kiribati","KP":"Korea Północna","KR":"Korea Południowa","KW":"Kuwejt","KG":"Kirgistan","LA":"Laos","LV":"Łotwa","LB":"Liban","LS":"Lesotho","LR":"Liberia","LY":"Libia","LI":"Liechtenstein","LT":"Litwa","LU":"Luksemburg","MO":"Makau","MK":"Macedonia Północna","MG":"Madagaskar","MW":"Malawi","MY":"Malezja","MV":"Malediwy","ML":"Mali","MT":"Malta","MH":"Wyspy Marshalla","MQ":"Martynika","MR":"Mauretania","MU":"Mauritius","YT":"Majotta","MX":"Meksyk","FM":"Mikronezja","MD":"Mołdawia","MC":"Monako","MN":"Mongolia","MS":"Montserrat","MA":"Maroko","MZ":"Mozambik","MM":"Mjanma","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Holandia","NC":"Nowa Kaledonia","NZ":"Nowa Zelandia","NI":"Nikaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Norfolk","MP":"Mariany Północne","NO":"Norwegia","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestyna","PA":"Panama","PG":"Papua-Nowa Gwinea","PY":"Paragwaj","PE":"Peru","PH":"Filipiny","PN":"Pitcairn","PL":"Polska","PT":"Portugalia","PR":"Portoryko","QA":"Katar","RE":"Reunion","RO":"Rumunia","RU":"Rosja","RW":"Rwanda","SH":"Wyspa Świętej Heleny, Wyspa Wniebowstąpienia i Tristan da Cunha","KN":"Saint Kitts i Nevis","LC":"Saint Lucia","PM":"Saint-Pierre i Miquelon","VC":"Saint Vincent i Grenadyny","WS":"Samoa","SM":"San Marino","ST":"Wyspy Świętego Tomasza i Książęca","SA":"Arabia Saudyjska","SN":"Senegal","SC":"Seszele","SL":"Sierra Leone","SG":"Singapur","SK":"Słowacja","SI":"Słowenia","SB":"Wyspy Salomona","SO":"Somalia","ZA":"Południowa Afryka","GS":"Georgia Południowa i Sandwich Południowy","ES":"Hiszpania","LK":"Sri Lanka","SD":"Sudan","SR":"Surinam","SJ":"Svalbard i Jan Mayen","SZ":"Eswatini","SE":"Szwecja","CH":"Szwajcaria","SY":"Syria","TW":"Tajwan","TJ":"Tadżykistan","TZ":"Tanzania","TH":"Tajlandia","TL":"Timor Wschodni","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trynidad i Tobago","TN":"Tunezja","TR":"Turcja","TM":"Turkmenistan","TC":"Turks i Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ukraina","AE":"Zjednoczone Emiraty Arabskie","GB":"Wielka Brytania","US":"Stany Zjednoczone","UM":"Dalekie Wyspy Mniejsze Stanów Zjednoczonych","UY":"Urugwaj","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Wenezuela","VN":"Wietnam","VG":"Brytyjskie Wyspy Dziewicze","VI":"Wyspy Dziewicze Stanów Zjednoczonych","WF":"Wallis i Futuna","EH":"Sahara Zachodnia","YE":"Jemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Wyspy Alandzkie","BQ":"Bonaire, Sint Eustatius i Saba","CW":"Curaçao","GG":"Guernsey","IM":"Wyspa Man","JE":"Jersey","ME":"Czarnogóra","BL":"Saint-Barthélemy","MF":"Saint-Martin","RS":"Serbia","SX":"Sint Maarten","SS":"Sudan Południowy","XK":"Kosowo"}}'))},34934,a=>{a.v(JSON.parse('{"locale":"ps","countries":{"AF":"افغانستان","AL":"البانیه","DZ":"الجزایر","AS":"امریکایی ساماوا","AD":"اندورا","AO":"انګولا","AI":"انګیلا","AQ":"انتارکتیکا","AG":"انټيګوا او باربودا","AR":"ارجنټاين","AM":"ارمنستان","AW":"آروبا","AU":"آسټرالیا","AT":"اتریش","AZ":"اذربايجان","BS":"باهماس","BH":"بحرين","BD":"بنگله دېش","BB":"باربادوس","BY":"بیلاروس","BE":"بیلجیم","BZ":"بلیز","BJ":"بینن","BM":"برمودا","BT":"بهوټان","BO":"بولیویا","BA":"بوسنيا او هېرزګوينا","BW":"بوتسوانه","BV":"بوویټ ټاپو","BR":"برازیل","IO":"د برتانوي هند سمندري سيمه","BN":"برونائي","BG":"بلغاریه","BF":"بورکینا فاسو","BI":"بروندي","KH":"کمبودیا","CM":"کامرون","CA":"کاناډا","CV":"کیپ ورد","KY":"کیمان ټاپوګان","CF":"وسطي افريقا جمهور","TD":"چاډ","CL":"چیلي","CN":"چین","CX":"د کريسمس ټاپو","CC":"کوکوز (کيلنګ) ټاپوګان","CO":"کولمبیا","KM":"کوموروس","CG":"کانګو - بروزوییل","CD":"کانګو - کینشاسا","CK":"کوک ټاپوګان","CR":"کوستاریکا","CI":"د عاج ساحل","HR":"کرواشيا","CU":"کیوبا","CY":"قبرس","CZ":"چکیا","DK":"ډنمارک","DJ":"جبوتي","DM":"دومینیکا","DO":"جمهوريه ډومينيکن","EC":"اکوادور","EG":"مصر","SV":"سالوېډور","GQ":"استوایی ګیني","ER":"اریتره","EE":"استونیا","ET":"حبشه","FK":"فاکلينډ ټاپوګان","FO":"فارو ټاپو","FJ":"فجي","FI":"فنلینډ","FR":"فرانسه","GF":"فرانسوي ګانا","PF":"فرانسوي پولينيسيا","TF":"د فرانسې جنوبي سیمې","GA":"ګابن","GM":"ګامبیا","GE":"گورجستان","DE":"المان","GH":"ګانا","GI":"جبل الطارق","GR":"یونان","GL":"ګرینلینډ","GD":"ګرنادا","GP":"ګوادلوپ","GU":"ګوام","GT":"ګواتیمالا","GN":"ګینه","GW":"ګینه بیسو","GY":"ګیانا","HT":"هایټي","HM":"هارډ او ميکډانلډ ټاپوګان","VA":"واتیکان ښار","HN":"هانډوراس","HK":"هانګ کانګ SAR چین","HU":"مجارستان","IS":"آیسلینډ","IN":"هند","ID":"اندونیزیا","IR":"ايران","IQ":"عراق","IE":"آيرلېنډ","IL":"اسراييل","IT":"ایټالیه","JM":"جمیکا","JP":"جاپان","JO":"اردن","KZ":"قزاقستان","KE":"کینیا","KI":"کیري باتي","KP":"شمالی کوریا","KR":"سویلي کوریا","KW":"کويت","KG":"قرغزستان","LA":"لاوس","LV":"ليتهويا","LB":"لبنان","LS":"لسوتو","LR":"لايبيريا","LY":"لیبیا","LI":"لیختن اشتاین","LT":"لیتوانیا","LU":"لوګزامبورګ","MO":"مکاو SAR چین","MG":"مدغاسکر","MW":"مالاوي","MY":"مالیزیا","MV":"مالديپ","ML":"مالي","MT":"مالټا","MH":"مارشل ټاپوګان","MQ":"مارټینیک","MR":"موریتانیا","MU":"موریشیس","YT":"مايوټ","MX":"میکسیکو","FM":"میکرونیزیا","MD":"مولدوا","MC":"موناکو","MN":"منګوليا","MS":"مانټیسیرت","MA":"مراکش","MZ":"موزمبيق","MM":"ميانمار (برما)","NA":"نیمبیا","NR":"نایرو","NP":"نیپال","NL":"هالېنډ","NC":"نوی کالیډونیا","NZ":"نیوزیلنډ","NI":"نکاراګوا","NE":"نايجير","NG":"نایجیریا","NU":"نیوو","NF":"نارفولک ټاپوګان","MK":"شمالي مقدونيه","MP":"شمالي ماريانا ټاپوګان","NO":"ناروۍ","OM":"عمان","PK":"پاکستان","PW":"پلاؤ","PS":"فلسطیني سيمې","PA":"پاناما","PG":"پاپوا نيو ګيني","PY":"پاراګوی","PE":"پیرو","PH":"فلپين","PN":"پيټکيرن ټاپوګان","PL":"پولنډ","PT":"پورتګال","PR":"پورتو ریکو","QA":"قطر","RE":"ریونین","RO":"رومانیا","RU":"روسیه","RW":"روندا","SH":"سینټ هیلینا","KN":"سینټ کټس او نیویس","LC":"سینټ لوسیا","PM":"سینټ پییر او میکولون","VC":"سینټ ویسنټینټ او ګرینډینز","WS":"ساماوا","SM":"سان مارینو","ST":"ساو ټیم او پرنسیپ","SA":"سعودي عربستان","SN":"سينيګال","SC":"سیچیلیس","SL":"سییرا لیون","SG":"سينگاپور","SK":"سلواکیا","SI":"سلوانیا","SB":"سليمان ټاپوګان","SO":"سومالیا","ZA":"سویلي افریقا","GS":"سويلي جارجيا او سويلي سېنډوچ ټاپوګان","ES":"هسپانیه","LK":"سريلنکا","SD":"سوډان","SR":"سورینام","SJ":"سوالبارد او جان ميين","SZ":"اسواټيني","SE":"سویډن","CH":"سویس","SY":"سوریه","TW":"تائيوان","TJ":"تاجکستان","TZ":"تنزانیا","TH":"تهايلنډ","TL":"تيمور-ليسټ","TG":"ټوګو","TK":"توکیلو","TO":"تونګا","TT":"ټرينيډاډ او ټوباګو","TN":"تونس","TR":"ترکي","TM":"تورکمنستان","TC":"د ترکیې او کیکاسو ټاپو","TV":"توالیو","UG":"یوګانډا","UA":"اوکراین","AE":"متحده عرب امارات","GB":"برتانیه","US":"متحده آيالات","UM":"د متحده ایالاتو ټاپوګان","UY":"یوروګوی","UZ":"اوزبکستان","VU":"واناتو","VE":"وینزویلا","VN":"وېتنام","VG":"بریتانوی ویګور ټاپوګان","VI":"د متحده آيالاتو ورجن ټاپوګان","WF":"والیس او فوتونا","EH":"لويديځ صحارا","YE":"یمن","ZM":"زیمبیا","ZW":"زیمبابوی","AX":"الاند ټاپوان","BQ":"کیریبین هالینډ","CW":"کوراکاو","GG":"ګرنسي","IM":"د آئل آف مین","JE":"جرسی","ME":"مونټینیګرو","BL":"سينټ بارتيلمي","MF":"سینټ مارټن","RS":"سربيا","SX":"سینټ مارټین","SS":"سويلي سوډان","XK":"کوسوو"}}'))},59452,a=>{a.v(JSON.parse('{"locale":"pt","countries":{"AF":"Afeganistão","ZA":"África do Sul","AL":"Albânia","DE":"Alemanha","AD":"Andorra","AO":"Angola","AI":"Anguila","AQ":"Antártida","AG":"Antígua e Barbuda","SA":"Arábia Saudita","DZ":"Argélia","AR":"Argentina","AM":"Arménia","AW":"Aruba","AU":"Austrália","AT":"Áustria","AZ":"Azerbaijão","BS":"Bahamas","BH":"Bahrein","BD":"Bangladesh","BB":"Barbados","BE":"Bélgica","BZ":"Belize","BJ":"Benim","BM":"Bermudas","BY":"Bielorrússia","BO":"Bolívia","BA":"Bósnia-Herzegovina","BW":"Botsuana","BR":"Brasil","BN":"Brunei","BG":"Bulgária","BF":"Burkina Faso","BI":"Burundi","BT":"Butão","CV":"Cabo Verde","KH":"Camboja","CA":"Canadá","QA":"Qatar","KZ":"Cazaquistão","TD":"Chade","CL":"Chile","CN":"China","CY":"Chipre","VA":"Santa Sé","SG":"Singapura","CO":"Colômbia","KM":"Comores","CG":"República Democrática do Congo","CD":"República Popular do Congo","KP":"Coreia do Norte","KR":"Coreia do Sul","CI":"Costa do Marfim","CR":"Costa Rica","HR":"Croácia","CU":"Cuba","CW":"Curaçao","DK":"Dinamarca","DJ":"Djibouti","DM":"Dominica","EG":"Egito","SV":"El Salvador","AE":"Emirados Árabes Unidos","EC":"Equador","ER":"Eritreia","SK":"Eslováquia","SI":"Eslovénia","ES":"Espanha","US":["Estados Unidos","Estados Unidos da América"],"EE":"Estónia","ET":"Etiópia","FJ":"Fiji","PH":"Filipinas","FI":"Finlândia","FR":"França","GA":"Gabão","GM":"Gâmbia","GH":"Gana","GE":"Geórgia","GS":"Geórgia do Sul e Ilhas Sandwich do Sul","GI":"Gibraltar","GD":"Granada","GR":"Grécia","GL":"Gronelândia","GP":"Guadalupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GY":"Guiana","GF":"Guiana Francesa","GN":"Guiné","GW":"Guiné-Bissau","GQ":"Guiné Equatorial","HT":"Haiti","NL":"Países Baixos","HN":"Honduras","HK":"Hong Kong","HU":"Hungria","YE":"Iémen","BV":"Ilha Bouvet","CX":"Ilha de Natal","IM":"Ilha de Man","NF":"Ilha Norfolk","AX":"Ilhas Åland","KY":"Ilhas Caimão","CC":"Ilhas Cocos (Keeling)","CK":"Ilhas Cook","UM":"Ilhas Distantes dos EUA","HM":"Ilha Heard e Ilhas McDonald","FO":"Ilhas Faroé","FK":"Ilhas Malvinas","MP":"Ilhas Marianas do Norte","MH":"Ilhas Marshall","PN":"Ilhas Pitcairn","SB":"Ilhas Salomão","TC":"Ilhas Turcas e Caicos","VG":"Ilhas Virgens Britânicas","VI":"Ilhas Virgens Americanas","IN":"Índia","ID":"Indonésia","IR":"Irão","IQ":"Iraque","IE":"Irlanda","IS":"Islândia","IL":"Israel","IT":"Itália","JM":"Jamaica","JP":"Japão","JE":"Jersey","JO":"Jordânia","KW":"Koweit","LA":"Laos","LS":"Lesoto","LV":"Letónia","LB":"Líbano","LR":"Libéria","LY":"Líbia","LI":"Liechtenstein","LT":"Lituânia","LU":"Luxemburgo","MO":"Macau","MK":"Macedónia do Norte","MG":"Madagáscar","MY":"Malásia","MW":"Maláui","MV":"Maldivas","ML":"Mali","MT":"Malta","MA":"Marrocos","MQ":"Martinica","MU":"Maurícia","MR":"Mauritânia","YT":"Mayotte","MX":"México","MM":"Mianmar (Birmânia)","FM":"Micronésia","MZ":"Moçambique","MD":"Moldávia","MC":"Mónaco","MN":"Mongólia","ME":"Montenegro","MS":"Monserrate","NA":"Namíbia","NR":"Nauru","NP":"Nepal","NI":"Nicarágua","NE":"Níger","NG":"Nigéria","NU":"Niue","NO":"Noruega","NC":"Nova Caledónia","NZ":"Nova Zelândia","OM":"Omã","BQ":"Países Baixos Caribenhos","PW":"Palau","PA":"Panamá","PG":"Papua-Nova Guiné","PK":"Paquistão","PY":"Paraguai","PE":"Peru","PF":"Polinésia Francesa","PL":"Polónia","PR":"Porto Rico","PT":"Portugal","KE":"Quénia","KG":"Quirguistão","KI":"Quiribati","GB":"Reino Unido","CF":"República Centro-Africana","DO":"República Dominicana","CM":"Camarões","CZ":"Chéquia","RE":"Reunião","RO":"Roménia","RW":"Ruanda","RU":"Rússia","EH":"Saara Ocidental","PM":"Saint Pierre e Miquelon","WS":"Samoa","AS":"Samoa Americana","SM":"San Marino","SH":"Santa Helena","LC":"Santa Lúcia","BL":"São Bartolomeu","KN":"São Cristóvão e Neves","MF":"São Martinho","ST":"São Tomé e Príncipe","VC":"São Vicente e Granadinas","SN":"Senegal","SL":"Serra Leoa","RS":"Sérvia","SC":"Seychelles","SX":"São Martinho","SY":"Síria","SO":"Somália","LK":"Sri Lanka","SZ":"Essuatíni","SD":"Sudão","SS":"Sudão do Sul","SE":"Suécia","CH":"Suíça","SR":"Suriname","SJ":"Svalbard e Jan Mayen","TH":"Tailândia","TW":"Taiwan","TJ":"Tajiquistão","TZ":"Tanzânia","IO":"Território Britânico do Oceano Índico","TF":"Terras Austrais e Antárticas Francesas","PS":"Territórios palestinos","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trindade e Tobago","TN":"Tunísia","TM":"Turquemenistão","TR":"Turquia","TV":"Tuvalu","UA":"Ucrânia","UG":"Uganda","UY":"Uruguai","UZ":"Uzbequistão","VU":"Vanuatu","VE":"Venezuela","VN":"Vietname","WF":"Wallis e Futuna","ZM":"Zâmbia","ZW":"Zimbábue","XK":"Kosovo"}}'))},99997,a=>{a.v(JSON.parse('{"locale":"ro","countries":{"AD":"Andorra","AE":"Emiratele Arabe Unite","AF":"Afganistan","AG":"Antigua și Barbuda","AI":"Anguilla","AL":"Albania","AM":"Armenia","AO":"Angola","AQ":"Antarctica","AR":"Argentina","AS":"Samoa Americană","AT":"Austria","AU":"Australia","AW":"Aruba","AX":"Insulele Åland","AZ":"Azerbaidjan","BA":"Bosnia și Herțegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgia","BF":"Burkina Faso","BG":"Bulgaria","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Sfântul Bartolomeu","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Insulele Caraibe Olandeze","BR":"Brazilia","BS":"Bahamas","BT":"Bhutan","BV":"Insula Bouvet","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Canada","CC":"Insulele Cocos (Keeling)","CD":"Congo - Kinshasa","CF":"Republica Centrafricană","CG":"Congo - Brazzaville","CH":"Elveția","CI":"Côte d’Ivoire","CK":"Insulele Cook","CL":"Chile","CM":"Camerun","CN":"China","CO":"Columbia","CR":"Costa Rica","CU":"Cuba","CV":"Capul Verde","CW":"Curaçao","CX":"Insula Christmas","CY":"Cipru","CZ":"Cehia","DE":"Germania","DJ":"Djibouti","DK":"Danemarca","DM":"Dominica","DO":"Republica Dominicană","DZ":"Algeria","EC":"Ecuador","EE":"Estonia","EG":"Egipt","EH":"Sahara Occidentală","ER":"Eritreea","ES":"Spania","ET":"Etiopia","FI":"Finlanda","FJ":"Fiji","FK":"Insulele Falkland","FM":"Micronezia","FO":"Insulele Feroe","FR":"Franța","GA":"Gabon","GB":"Regatul Unit","GD":"Grenada","GE":"Georgia","GF":"Guyana Franceză","GG":"Guernsey","GH":"Ghana","GI":"Gibraltar","GL":"Groenlanda","GM":"Gambia","GN":"Guineea","GP":"Guadelupa","GQ":"Guineea Ecuatorială","GR":"Grecia","GS":"Georgia de Sud și Insulele Sandwich de Sud","GT":"Guatemala","GU":"Guam","GW":"Guineea-Bissau","GY":"Guyana","HK":"R.A.S. Hong Kong a Chinei","HM":"Insula Heard și Insulele McDonald","HN":"Honduras","HR":"Croația","HT":"Haiti","HU":"Ungaria","ID":"Indonezia","IE":"Irlanda","IL":"Israel","IM":"Insula Man","IN":"India","IO":"Teritoriul Britanic din Oceanul Indian","IQ":"Irak","IR":"Iran","IS":"Islanda","IT":"Italia","JE":"Jersey","JM":"Jamaica","JO":"Iordania","JP":"Japonia","KE":"Kenya","KG":"Kârgâzstan","KH":"Cambodgia","KI":"Kiribati","KM":"Comore","KN":"Saint Kitts și Nevis","KP":"Coreea de Nord","KR":"Coreea de Sud","KW":"Kuweit","KY":"Insulele Cayman","KZ":"Kazahstan","LA":"Laos","LB":"Liban","LC":"Sfânta Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Lituania","LU":"Luxemburg","LV":"Letonia","LY":"Libia","MA":"Maroc","MC":"Monaco","MD":"Republica Moldova","ME":"Muntenegru","MF":"Sfântul Martin","MG":"Madagascar","MH":"Insulele Marshall","MK":"Macedonia de Nord","ML":"Mali","MM":"Myanmar","MN":"Mongolia","MO":"R.A.S. Macao a Chinei","MP":"Insulele Mariane de Nord","MQ":"Martinica","MR":"Mauritania","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldive","MW":"Malawi","MX":"Mexic","MY":"Malaysia","MZ":"Mozambic","NA":"Namibia","NC":"Noua Caledonie","NE":"Niger","NF":"Insula Norfolk","NG":"Nigeria","NI":"Nicaragua","NL":"Țările de Jos","NO":"Norvegia","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Noua Zeelandă","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Polinezia Franceză","PG":"Papua-Noua Guinee","PH":"Filipine","PK":"Pakistan","PL":"Polonia","PM":"Saint-Pierre și Miquelon","PN":"Insulele Pitcairn","PR":"Puerto Rico","PS":"Teritoriile Palestiniene","PT":"Portugalia","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Réunion","RO":"România","RS":"Serbia","RU":"Rusia","RW":"Rwanda","SA":"Arabia Saudită","SB":"Insulele Solomon","SC":"Seychelles","SD":"Sudan","SE":"Suedia","SG":"Singapore","SH":"Sfânta Elena","SI":"Slovenia","SJ":"Svalbard și Jan Mayen","SK":"Slovacia","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Suriname","SS":"Sudanul de Sud","ST":"Sao Tomé și Príncipe","SV":"El Salvador","SX":"Sint-Maarten","SY":"Siria","SZ":"Eswatini","TC":"Insulele Turks și Caicos","TD":"Ciad","TF":"Teritoriile Australe și Antarctice Franceze","TG":"Togo","TH":"Thailanda","TJ":"Tadjikistan","TK":"Tokelau","TL":"Timorul de Est","TM":"Turkmenistan","TN":"Tunisia","TO":"Tonga","TR":"Turcia","TT":"Trinidad și Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ucraina","UG":"Uganda","UM":"Insulele Îndepărtate ale S.U.A.","US":"Statele Unite ale Americii","UY":"Uruguay","UZ":"Uzbekistan","VA":"Statul Cetății Vaticanului","VC":"Saint Vincent și Grenadinele","VE":"Venezuela","VG":"Insulele Virgine Britanice","VI":"Insulele Virgine Americane","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis și Futuna","WS":"Samoa","XK":"Kosovo","YE":"Yemen","YT":"Mayotte","ZA":"Africa de Sud","ZM":"Zambia","ZW":"Zimbabwe"}}'))},55527,a=>{a.v(JSON.parse('{"locale":"ru","countries":{"AU":"Австралия","AT":"Австрия","AZ":"Азербайджан","AX":"Аландские острова","AL":"Албания","DZ":"Алжир","VI":"Виргинские Острова (США)","AS":"Американское Самоа","AI":"Ангилья","AO":"Ангола","AD":"Андорра","AQ":"Антарктида","AG":"Антигуа и Барбуда","AR":"Аргентина","AM":"Армения","AW":"Аруба","AF":"Афганистан","BS":"Багамы","BD":"Бангладеш","BB":"Барбадос","BH":"Бахрейн","BZ":"Белиз","BY":"Беларусь","BE":"Бельгия","BJ":"Бенин","BM":"Бермуды","BG":"Болгария","BO":"Боливия","BQ":"Бонэйр, Синт-Эстатиус и Саба","BA":"Босния и Герцеговина","BW":"Ботсвана","BR":"Бразилия","IO":"Британская территория в Индийском океане","VG":"Виргинские Острова (Великобритания)","BN":"Бруней","BF":"Буркина-Фасо","BI":"Бурунди","BT":"Бутан","VU":"Вануату","VA":"Ватикан","GB":"Великобритания","HU":"Венгрия","VE":"Венесуэла","UM":"Внешние малые острова (США)","TL":"Восточный Тимор","VN":"Вьетнам","GA":"Габон","HT":"Гаити","GY":"Гайана","GM":"Гамбия","GH":"Гана","GP":"Гваделупа","GT":"Гватемала","GF":"Гвиана","GN":"Гвинея","GW":"Гвинея-Бисау","DE":"Германия","GG":"Гернси","GI":"Гибралтар","HN":"Гондурас","HK":"Гонконг","GD":"Гренада","GL":"Гренландия","GR":"Греция","GE":"Грузия","GU":"Гуам","DK":"Дания","JE":"Джерси","DJ":"Джибути","DM":"Доминика","DO":"Доминиканская Республика","CD":"Демократическая Республика Конго","EG":"Египет","ZM":"Замбия","EH":"САДР","ZW":"Зимбабве","IL":"Израиль","IN":"Индия","ID":"Индонезия","JO":"Иордания","IQ":"Ирак","IR":"Иран","IE":"Ирландия","IS":"Исландия","ES":"Испания","IT":"Италия","YE":"Йемен","CV":"Кабо-Верде","KZ":"Казахстан","KY":"Острова Кайман","KH":"Камбоджа","CM":"Камерун","CA":"Канада","QA":"Катар","KE":"Кения","CY":"Кипр","KG":"Киргизия","KI":"Кирибати","TW":["Тайвань","Китайская Республика"],"KP":"КНДР (Корейская Народно-Демократическая Республика)","CN":"КНР (Китайская Народная Республика)","CC":"Кокосовые острова","CO":"Колумбия","KM":"Коморы","CR":"Коста-Рика","CI":"Кот-д’Ивуар","CU":"Куба","KW":"Кувейт","CW":"Кюрасао","LA":"Лаос","LV":"Латвия","LS":"Лесото","LR":"Либерия","LB":"Ливан","LY":"Ливия","LT":"Литва","LI":"Лихтенштейн","LU":"Люксембург","MU":"Маврикий","MR":"Мавритания","MG":"Мадагаскар","YT":"Майотта","MO":"Макао","MW":"Малави","MY":"Малайзия","ML":"Мали","MV":"Мальдивы","MT":"Мальта","MA":"Марокко","MQ":"Мартиника","MH":"Маршалловы Острова","MX":"Мексика","FM":"Микронезия","MZ":"Мозамбик","MD":"Молдавия","MC":"Монако","MN":"Монголия","MS":"Монтсеррат","MM":"Мьянма","NA":"Намибия","NR":"Науру","NP":"Непал","NE":"Нигер","NG":"Нигерия","NL":"Нидерланды","NI":"Никарагуа","NU":"Ниуэ","NZ":"Новая Зеландия","NC":"Новая Каледония","NO":"Норвегия","AE":"ОАЭ","OM":"Оман","BV":"Остров Буве","IM":"Остров Мэн","CK":"Острова Кука","NF":"Остров Норфолк","CX":"Остров Рождества","PN":"Острова Питкэрн","SH":"Острова Святой Елены, Вознесения и Тристан-да-Кунья","PK":"Пакистан","PW":"Палау","PS":"Государство Палестина","PA":"Панама","PG":"Папуа — Новая Гвинея","PY":"Парагвай","PE":"Перу","PL":"Польша","PT":"Португалия","PR":"Пуэрто-Рико","CG":"Республика Конго","KR":"Республика Корея","RE":"Реюньон","RU":["Российская Федерация","Россия"],"RW":"Руанда","RO":"Румыния","SV":"Сальвадор","WS":"Самоа","SM":"Сан-Марино","ST":"Сан-Томе и Принсипи","SA":"Саудовская Аравия","SZ":"Эсватини","MK":"Северная Македония","MP":"Северные Марианские Острова","SC":"Сейшельские Острова","BL":"Сен-Бартелеми","MF":"Сен-Мартен","PM":"Сен-Пьер и Микелон","SN":"Сенегал","VC":"Сент-Винсент и Гренадины","KN":"Сент-Китс и Невис","LC":"Сент-Люсия","RS":"Сербия","SG":"Сингапур","SX":"Синт-Мартен","SY":"Сирия","SK":"Словакия","SI":"Словения","SB":"Соломоновы Острова","SO":"Сомали","SD":"Судан","SR":"Суринам","US":"США","SL":"Сьерра-Леоне","TJ":"Таджикистан","TH":"Таиланд","TZ":"Танзания","TC":"Теркс и Кайкос","TG":"Того","TK":"Токелау","TO":"Тонга","TT":"Тринидад и Тобаго","TV":"Тувалу","TN":"Тунис","TM":"Туркмения","TR":"Турция","UG":"Уганда","UZ":"Узбекистан","UA":"Украина","WF":"Уоллис и Футуна","UY":"Уругвай","FO":"Фареры","FJ":"Фиджи","PH":"Филиппины","FI":"Финляндия","FK":"Фолклендские острова","FR":"Франция","PF":"Французская Полинезия","TF":"Французские Южные и Антарктические Территории","HM":"Херд и Макдональд","HR":"Хорватия","CF":"ЦАР","TD":"Чад","ME":"Черногория","CZ":"Чехия","CL":"Чили","CH":"Швейцария","SE":"Швеция","SJ":"Шпицберген и Ян-Майен","LK":"Шри-Ланка","EC":"Эквадор","GQ":"Экваториальная Гвинея","ER":"Эритрея","EE":"Эстония","ET":"Эфиопия","ZA":"ЮАР","GS":"Южная Георгия и Южные Сандвичевы Острова","SS":"Южный Судан","JM":"Ямайка","JP":"Япония","XK":"Косово"}}'))},40842,a=>{a.v(JSON.parse('{"locale":"sd","countries":{"AF":"افغانستان","AL":"البانيا","DZ":"الجيريا","AS":"آمريڪي ساموا","AD":"اندورا","AO":"انگولا","AI":"انگويلا","AQ":"انٽارڪٽيڪا","AG":"انٽيگا ۽ باربوڊا","AR":"ارجنٽينا","AM":"ارمینیا","AW":"عروبا","AU":"آسٽريليا","AT":"آسٽريا","AZ":"آذربائيجان","BS":"باهاماس","BH":"بحرين","BD":"بنگلاديش","BB":"باربڊوس","BY":"بیلارس","BE":"بيلجيم","BZ":"بيليز","BJ":"بينن","BM":"برمودا","BT":"ڀوٽان","BO":"بوليويا","BA":"بوسنيا ۽ ھرزيگوينا","BW":"بوٽسوانا","BV":"بووٽ ٻيٽ","BR":"برازيل","IO":"برطانوي هندي سمنڊ خطو","BN":"برونائي","BG":"بلغاريا","BF":"برڪينا فاسو","BI":"برونڊي","KH":"ڪمبوڊيا","CM":"ڪيمرون","CA":"ڪينيڊا","CV":"ڪيپ وردي","KY":"ڪي مين ٻيٽ","CF":"وچ آفريقي جمهوريه","TD":"چاڊ","CL":"چلي","CN":"چين","CX":"ڪرسمس ٻيٽ","CC":"ڪوڪوس ٻيٽ","CO":"ڪولمبيا","KM":"ڪوموروس","CG":"ڪانگو - برازاویل","CD":"ڪانگو -ڪنشاسا","CK":"ڪوڪ ٻيٽ","CR":"ڪوسٽا ريڪا","CI":"ڪوٽ ڊي وار","HR":"ڪروئيشيا","CU":"ڪيوبا","CY":"سائپرس","CZ":"چيڪيا","DK":"ڊينمارڪ","DJ":"ڊجبيوتي","DM":"ڊومينيڪا","DO":"ڊومينيڪن جمهوريه","EC":"ايڪواڊور","EG":"مصر","SV":"ال سلواڊور","GQ":"ايڪوٽوريل گائينا","ER":"ايريٽيريا","EE":"ايسٽونيا","ET":"ايٿوپيا","FK":"فاڪ لينڊ ٻيٽ","FO":"فارو ٻيٽ","FJ":"فجي","FI":"فن لينڊ","FR":"فرانس","GF":"فرانسيسي گيانا","PF":"فرانسيسي پولينيشيا","TF":"فرانسيسي ڏاکڻي علائقا","GA":"گبون","GM":"گيمبيا","GE":"جارجيا","DE":"جرمني","GH":"گهانا","GI":"جبرالٽر","GR":"يونان","GL":"گرين لينڊ","GD":"گرينڊا","GP":"گواڊیلوپ","GU":"گوام","GT":"گوئٽي مالا","GN":"گني","GW":"گني بسائو","GY":"گيانا","HT":"هيٽي","HM":"هرڊ ۽ مڪڊونلڊ ٻيٽ","VA":"ويٽڪين سٽي","HN":"هنڊورس","HK":"هانگ ڪانگ SAR","HU":"هنگري","IS":"آئس لينڊ","IN":"ڀارت","ID":"انڊونيشيا","IR":"ايران","IQ":"عراق","IE":"آئرلينڊ","IL":"اسرائيل","IT":"اٽلي","JM":"جميڪا","JP":"جاپان","JO":"اردن","KZ":"قازقستان","KE":"ڪينيا","KI":"ڪرباتي","KP":"اتر ڪوريا","KR":"ڏکڻ ڪوريا","KW":"ڪويت","KG":"ڪرغستان","LA":"لائوس","LV":"لاتويا","LB":"لبنان","LS":"ليسوٿو","LR":"لائبیریا","LY":"لبيا","LI":"لچي ٽينسٽين","LT":"لٿونيا","LU":"لگزمبرگ","MO":"مڪائو SAR چين","MG":"مدگاسڪر","MW":"مالاوي","MY":"ملائيشيا","MV":"مالديپ","ML":"مالي","MT":"مالٽا","MH":"مارشل ٻيٽ","MQ":"مارتينڪ","MR":"موريتانيا","MU":"موريشس","YT":"مياتي","MX":"ميڪسيڪو","FM":"مائڪرونيشيا","MD":"مالدووا","MC":"موناڪو","MN":"منگوليا","MS":"مونٽسراٽ","MA":"مراڪش","MZ":"موزمبیق","MM":"ميانمار (برما)","NA":"نيميبيا","NR":"نائورو","NP":"نيپال","NL":"نيدرلينڊ","NC":"نیو ڪالیڊونیا","NZ":"نيو زيلينڊ","NI":"نڪراگوا","NE":"نائيجر","NG":"نائيجيريا","NU":"نووي","NF":"نورفوڪ ٻيٽ","MK":"اتر مقدونيا","MP":"اتريان ماريانا ٻيٽ","NO":"ناروي","OM":"عمان","PK":"پاڪستان","PW":"پلائو","PS":"فلسطيني علائقا","PA":"پناما","PG":"پاپوا نیو گني","PY":"پيراگوءِ","PE":"پيرو","PH":"فلپائن","PN":"پٽڪئرن ٻيٽ","PL":"پولينڊ","PT":"پرتگال","PR":"پيوئرٽو ريڪو","QA":"قطر","RE":"ري يونين","RO":"رومانيا","RU":"روس","RW":"روانڊا","SH":"سينٽ ھيلينا","KN":"سينٽ ڪٽس و نيوس","LC":"سينٽ لوسيا","PM":"سینٽ پیئر و میڪوئیلون","VC":"سینٽ ونسنت ۽ گریناڊینز","WS":"ساموا","SM":"سین مرینو","ST":"سائو ٽوم ۽ پرنسپیي","SA":"سعودي عرب","SN":"سينيگال","SC":"شي شلز","SL":"سيرا ليون","SG":"سنگاپور","SK":"سلوواڪيا","SI":"سلوینیا","SB":"سولومون ٻيٽَ","SO":"سوماليا","ZA":"ڏکڻ آفريقا","GS":"ڏکڻ جارجيا ۽ ڏکڻ سينڊوچ ٻيٽ","ES":"اسپين","LK":"سري لنڪا","SD":"سوڊان","SR":"سورينام","SJ":"سوالبارڊ ۽ جان ماین","SZ":"ايسواٽني","SE":"سوئيڊن","CH":"سوئزرلينڊ","SY":"شام","TW":"تائیوان","TJ":"تاجڪستان","TZ":"تنزانيا","TH":"ٿائيليند","TL":"تيمور ليستي","TG":"ٽوگو","TK":"ٽوڪلائو","TO":"ٽونگا","TT":"ٽريني ڊيڊ ۽ ٽوباگو ٻيٽ","TN":"تيونيسيا","TR":"ترڪي","TM":"ترڪمانستان","TC":"ترڪ ۽ ڪيڪوس ٻيٽ","TV":"توالو","UG":"يوگنڊا","UA":"يوڪرين","AE":"متحده عرب امارات","GB":"برطانيہ","US":"آمريڪا جون گڏيل رياستون","UM":"آمريڪي خارجي ٻيٽ","UY":"يوروگوءِ","UZ":"ازبڪستان","VU":"وينيٽيو","VE":"وينزويلا","VN":"ويتنام","VG":"برطانوي ورجن ٻيٽ","VI":"آمريڪي ورجن ٻيٽ","WF":"والس ۽ فتونا","EH":"اولهه صحارا","YE":"يمن","ZM":"زيمبيا","ZW":"زمبابوي","AX":"الند ٻيٽ","BQ":"ڪيريبين نيدرلينڊ","CW":"ڪيوراسائو","GG":"گورنسي","IM":"انسانن جو ٻيٽ","JE":"جرسي","ME":"مونٽي نيگرو","BL":"سینٽ برٿلیمی","MF":"سينٽ مارٽن","RS":"سربيا","SX":"سنٽ مارٽن","SS":"ڏکڻ سوڊان","XK":"ڪوسووو"}}'))},34686,a=>{a.v(JSON.parse('{"locale":"sk","countries":{"AD":"Andorra","AE":"Spojené arabské emiráty","AF":"Afganistan","AG":"Antigua a Barbuda","AI":"Anguilla","AL":"Albánsko","AM":"Arménsko","AO":"Angola","AQ":"Antarktída","AR":"Argentína","AS":"Americká Samoa","AT":"Rakúsko","AU":"Austrália","AW":"Aruba","AX":"Alandy","AZ":"Azerbajdžan","BA":"Bosna a Hercegovina","BB":"Barbados","BD":"Bangladéš","BE":"Belgicko","BF":"Burkina Faso","BG":"Bulharsko","BH":"Bahrajn","BI":"Burundi","BJ":"Benin","BL":"Svätý Bartolomej","BM":"Bermudy","BN":"Brunej","BO":"Bolívia","BQ":"Karibské Holandsko","BR":"Brazília","BS":"Bahamy","BT":"Bhután","BV":"Bouvetov ostrov","BW":"Botswana","BY":"Bielorusko","BZ":"Belize","CA":"Kanada","CC":"Kokosové ostrovy","CD":"Konžská demokratická republika","CF":"Stredoafrická republika","CG":"Konžská republika","CH":"Švajčiarsko","CI":"Pobrežie Slonoviny","CK":"Cookove ostrovy","CL":"Čile","CM":"Kamerun","CN":"Čína","CO":"Kolumbia","CR":"Kostarika","CU":"Kuba","CV":"Kapverdy","CW":"Curaçao","CX":"Vianočný ostrov","CY":"Cyprus","CZ":"Česko","DE":"Nemecko","DJ":"Džibutsko","DK":"Dánsko","DM":"Dominika","DO":"Dominikánska republika","DZ":"Alžírsko","EC":"Ekvádor","EE":"Estónsko","EG":"Egypt","EH":"Západná Sahara","ER":"Eritrea","ES":"Španielsko","ET":"Etiópia","FI":"Fínsko","FJ":"Fidži","FK":"Falklandy","FM":"Mikronézia","FO":"Faerské ostrovy","FR":"Francúzsko","GA":"Gabon","GB":"Spojené kráľovstvo","GD":"Grenada","GE":"Gruzínsko","GF":"Francúzska Guayana","GG":"Guernsey","GH":"Ghana","GI":"Gibraltár","GL":"Grónsko","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Rovníková Guinea","GR":"Grécko","GS":"Južná Georgia a Južné Sandwichove ostrovy","GT":"Guatemala","GU":"Guam","GW":"Guinea-Bissau","GY":"Guayana","HK":"Hongkong – OAO Číny","HM":"Heardov ostrov a Macdonaldove ostrovy","HN":"Honduras","HR":"Chorvátsko","HT":"Haiti","HU":"Maďarsko","ID":"Indonézia","IE":"Írsko","IL":"Izrael","IM":"Ostrov Man","IN":"India","IO":"Britské indickooceánske územie","IQ":"Irak","IR":"Irán","IS":"Island","IT":"Taliansko","JE":"Jersey","JM":"Jamajka","JO":"Jordánsko","JP":"Japonsko","KE":"Keňa","KG":"Kirgizsko","KH":"Kambodža","KI":"Kiribati","KM":"Komory","KN":"Svätý Krištof a Nevis","KP":"Severná Kórea","KR":"Južná Kórea","KW":"Kuvajt","KY":"Kajmanie ostrovy","KZ":"Kazachstan","LA":"Laos","LB":"Libanon","LC":"Svätá Lucia","LI":"Lichtenštajnsko","LK":"Srí Lanka","LR":"Libéria","LS":"Lesotho","LT":"Litva","LU":"Luxembursko","LV":"Lotyšsko","LY":"Líbya","MA":"Maroko","MC":"Monako","MD":"Moldavsko","ME":"Čierna Hora","MF":"Svätý Martin (fr.)","MG":"Madagaskar","MH":"Marshallove ostrovy","MK":"Severné Macedónsko","ML":"Mali","MM":"Mjanmarsko","MN":"Mongolsko","MO":"Macao – OAO Číny","MP":"Severné Mariány","MQ":"Martinik","MR":"Mauritánia","MS":"Montserrat","MT":"Malta","MU":"Maurícius","MV":"Maldivy","MW":"Malawi","MX":"Mexiko","MY":"Malajzia","MZ":"Mozambik","NA":"Namíbia","NC":"Nová Kaledónia","NE":"Niger","NF":"Norfolk","NG":"Nigéria","NI":"Nikaragua","NL":"Holandsko","NO":"Nórsko","NP":"Nepál","NR":"Nauru","NU":"Niue","NZ":"Nový Zéland","OM":"Omán","PA":"Panama","PE":"Peru","PF":"Francúzska Polynézia","PG":"Papua Nová Guinea","PH":"Filipíny","PK":"Pakistan","PL":"Poľsko","PM":"Saint Pierre a Miquelon","PN":"Pitcairnove ostrovy","PR":"Portoriko","PS":"Palestínske územia","PT":"Portugalsko","PW":"Palau","PY":"Paraguaj","QA":"Katar","RE":"Réunion","RO":"Rumunsko","RS":"Srbsko","RU":"Rusko","RW":"Rwanda","SA":"Saudská Arábia","SB":"Šalamúnove ostrovy","SC":"Seychely","SD":"Sudán","SE":"Švédsko","SG":"Singapur","SH":"Svätá Helena","SI":"Slovinsko","SJ":"Svalbard a Jan Mayen","SK":"Slovensko","SL":"Sierra Leone","SM":"San Maríno","SN":"Senegal","SO":"Somálsko","SR":"Surinam","SS":"Južný Sudán","ST":"Svätý Tomáš a Princov ostrov","SV":"Salvádor","SX":"Svätý Martin (hol.)","SY":"Sýria","SZ":"Svazijsko","TC":"Turks a Caicos","TD":"Čad","TF":"Francúzske južné a antarktické územia","TG":"Togo","TH":"Thajsko","TJ":"Tadžikistan","TK":"Tokelau","TL":"Východný Timor","TM":"Turkménsko","TN":"Tunisko","TO":"Tonga","TR":"Turecko","TT":"Trinidad a Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzánia","UA":"Ukrajina","UG":"Uganda","UM":"Menšie odľahlé ostrovy USA","US":"Spojené štáty","UY":"Uruguaj","UZ":"Uzbekistan","VA":"Vatikán","VC":"Svätý Vincent a Grenadíny","VE":"Venezuela","VG":"Britské Panenské ostrovy","VI":"Americké Panenské ostrovy","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis a Futuna","WS":"Samoa","XK":"Kosovo","YE":"Jemen","YT":"Mayotte","ZA":"Južná Afrika","ZM":"Zambia","ZW":"Zimbabwe"}}'))},18366,a=>{a.v(JSON.parse('{"locale":"sl","countries":{"AD":"Andora","AE":"Združeni arabski emirati","AF":"Afganistan","AG":"Antigva in Barbuda","AI":"Angvila","AL":"Albanija","AM":"Armenija","AO":"Angola","AQ":"Antarktika","AR":"Argentina","AS":"Ameriška Samoa","AT":"Avstrija","AU":"Avstralija","AW":"Aruba","AX":"Ålandski otoki","AZ":"Azerbajdžan","BA":"Bosna in Hercegovina","BB":"Barbados","BD":"Bangladeš","BE":"Belgija","BF":"Burkina Faso","BG":"Bolgarija","BH":"Bahrajn","BI":"Burundi","BJ":"Benin","BL":"Saint Barthélemy","BM":"Bermudi","BN":"Brunej","BO":"Bolivija","BQ":"Nizozemski Karibi","BR":"Brazilija","BS":"Bahami","BT":"Butan","BV":"Bouvetov otok","BW":"Bocvana","BY":"Belorusija","BZ":"Belize","CA":"Kanada","CC":"Kokosovi otoki","CD":"Demokratična republika Kongo","CF":"Centralnoafriška republika","CG":"Kongo - Brazzaville","CH":"Švica","CI":"Slonokoščena obala","CK":"Cookovi otoki","CL":"Čile","CM":"Kamerun","CN":"Kitajska","CO":"Kolumbija","CR":"Kostarika","CU":"Kuba","CV":"Zelenortski otoki","CW":"Curaçao","CX":"Božični otok","CY":"Ciper","CZ":"Češka","DE":"Nemčija","DJ":"Džibuti","DK":"Danska","DM":"Dominika","DO":"Dominikanska republika","DZ":"Alžirija","EC":"Ekvador","EE":"Estonija","EG":"Egipt","EH":"Zahodna Sahara","ER":"Eritreja","ES":"Španija","ET":"Etiopija","FI":"Finska","FJ":"Fidži","FK":"Falklandski otoki","FM":"Mikronezija","FO":"Ferski otoki","FR":"Francija","GA":"Gabon","GB":"Združeno kraljestvo","GD":"Grenada","GE":"Gruzija","GF":"Francoska Gvajana","GG":"Guernsey","GH":"Gana","GI":"Gibraltar","GL":"Grenlandija","GM":"Gambija","GN":"Gvineja","GP":"Gvadalupe","GQ":"Ekvatorialna Gvineja","GR":"Grčija","GS":"Južna Georgia in Južni Sandwichevi otoki","GT":"Gvatemala","GU":"Guam","GW":"Gvineja Bissau","GY":"Gvajana","HK":"Hongkong","HM":"Heardov otok in McDonaldovi otoki","HN":"Honduras","HR":"Hrvaška","HT":"Haiti","HU":"Madžarska","ID":"Indonezija","IE":"Irska","IL":"Izrael","IM":"Otok Man","IN":"Indija","IO":"Britansko ozemlje v Indijskem oceanu","IQ":"Irak","IR":"Iran","IS":"Islandija","IT":"Italija","JE":"Jersey","JM":"Jamajka","JO":"Jordanija","JP":"Japonska","KE":"Kenija","KG":"Kirgizistan","KH":"Kambodža","KI":"Kiribati","KM":"Komori","KN":"Saint Kitts in Nevis","KP":"Severna Koreja","KR":"Južna Koreja","KW":"Kuvajt","KY":"Kajmanski otoki","KZ":"Kazahstan","LA":"Laos","LB":"Libanon","LC":"Saint Lucia","LI":"Lihtenštajn","LK":"Šrilanka","LR":"Liberija","LS":"Lesoto","LT":"Litva","LU":"Luksemburg","LV":"Latvija","LY":"Libija","MA":"Maroko","MC":"Monako","MD":"Moldavija","ME":"Črna gora","MF":"Saint Martin","MG":"Madagaskar","MH":"Marshallovi otoki","MK":"Severna Makedonija","ML":"Mali","MM":"Mjanmar (Burma)","MN":"Mongolija","MO":"Macao","MP":"Severni Marianski otoki","MQ":"Martinik","MR":"Mavretanija","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldivi","MW":"Malavi","MX":"Mehika","MY":"Malezija","MZ":"Mozambik","NA":"Namibija","NC":"Nova Kaledonija","NE":"Niger","NF":"Norfolški otok","NG":"Nigerija","NI":"Nikaragva","NL":"Nizozemska","NO":"Norveška","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Nova Zelandija","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Francoska Polinezija","PG":"Papua Nova Gvineja","PH":"Filipini","PK":"Pakistan","PL":"Poljska","PM":"Saint Pierre in Miquelon","PN":"Pitcairn","PR":"Portoriko","PS":"Palestinsko ozemlje","PT":"Portugalska","PW":"Palau","PY":"Paragvaj","QA":"Katar","RE":"Reunion","RO":"Romunija","RS":"Srbija","RU":"Rusija","RW":"Ruanda","SA":"Saudova Arabija","SB":"Salomonovi otoki","SC":"Sejšeli","SD":"Sudan","SE":"Švedska","SG":"Singapur","SH":"Sveta Helena","SI":"Slovenija","SJ":"Svalbard in Jan Mayen","SK":"Slovaška","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalija","SR":"Surinam","SS":"Južni Sudan","ST":"Sao Tome in Principe","SV":"Salvador","SX":"Sint Maarten","SY":"Sirija","SZ":"Svazi","TC":"Otoki Turks in Caicos","TD":"Čad","TF":"Francosko južno ozemlje","TG":"Togo","TH":"Tajska","TJ":"Tadžikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmenistan","TN":"Tunizija","TO":"Tonga","TR":"Turčija","TT":"Trinidad in Tobago","TV":"Tuvalu","TW":"Tajvan","TZ":"Tanzanija","UA":"Ukrajina","UG":"Uganda","UM":"Stranski zunanji otoki Združenih držav","US":"Združene države Amerike","UY":"Urugvaj","UZ":"Uzbekistan","VA":"Vatikan","VC":"Saint Vincent in Grenadine","VE":"Venezuela","VG":"Britanski Deviški otoki","VI":"Ameriški Deviški otoki","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis in Futuna","WS":"Samoa","XK":"Kosovo","YE":"Jemen","YT":"Mayotte","ZA":"Južnoafriška republika","ZM":"Zambija","ZW":"Zimbabve"}}'))},64218,a=>{a.v(JSON.parse('{"locale":"so","countries":{"AF":"Afgaanistaan","AL":"Albaaniya","DZ":"Aljeeriya","AS":"Samowa Ameerika","AD":"Andora","AO":"Angoola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua iyo Barbuda","AR":"Arjantiin","AM":"Armeeniya","AW":"Aruba","AU":"Awstaraaliya","AT":"Awsteriya","AZ":"Azerbajaan","BS":"Bahaamas","BH":"Baxreyn","BD":"Bangaaladheesh","BB":"Baarbadoos","BY":"Belarus","BE":"Biljam","BZ":"Belize","BJ":"Biniin","BM":"Bermuuda","BT":"Bhutan","BO":"Boliifiya","BA":"Bosniya Hersigoviina","BW":"Botuswaana","BV":"Jasiiradda Bouvet","BR":"Braasiil","IO":"British Indian Ocean Territory","BN":"Buruneeya","BG":"Bulgaariya","BF":"Burkiina Faaso","BI":"Burundi","KH":"Kamboodiya","CM":"Kaameruun","CA":"Kanada","CV":"Cape Verde Islands","KY":"Cayman Islands","CF":"Jamhuuriyadda Afrikada Dhexe","TD":"Jaad","CL":"Jili","CN":"Shiinaha","CX":"Jasiiradda Kirismaska","CC":"Jasiiradaha Cocos (Keeling)","CO":"Kolombiya","KM":"Komooros","CG":"Kongo","CD":"Jamhuuriyadda Dimuquraadiga Kongo","CK":"Jaziiradda Cook","CR":"Kosta Riika","CI":"Ivory coast","HR":"Korweeshiya","CU":"Kuuba","CY":"Qubrus","CZ":"Jamhuuriyadda Jek","DK":"Denmark","DJ":"Jabuuti","DM":"Domeenika","DO":"Jamhuuriyadda Domeenika","EC":"Ikuwadoor","EG":"Masar","SV":"El Salvador","GQ":"Equatorial Guinea","ER":"Eretereeya","EE":"Estooniya","ET":"Itoobiya","FK":"Jaziiradaha Fooklaan","FO":"Jasiiradaha Faroe","FJ":"Fiji","FI":"Finland","FR":"Faransiis","GF":"French Guiana","PF":"French Polynesia","TF":"Gobollada Koofureed ee Faransiiska","GA":"Gaaboon","GM":"Gambiya","GE":"Joorjiya","DE":"Jarmal","GH":"Gaana","GI":"Gibraltar","GR":"Giriig","GL":"Greenland","GD":"Giriinaada","GP":"Guadeloupe","GU":"Guam","GT":"Guwaatamaala","GN":"Gini","GW":"Gini-Bisaaw","GY":"Guyana","HT":"Hayti","HM":"Jasiiradaha Heard iyo McDonald Islands","VA":"Faatikaan","HN":"Honduras","HK":"Hong Kong","HU":"Hangeri","IS":"Iislaand","IN":"Hindiya","ID":"Indoneesiya","IR":"Iiraan","IQ":"Ciraaq","IE":"Ayrlaand","IL":"Israaʼiil","IT":"Talyaani","JM":"Jameyka","JP":"Jabaan","JO":"Urdun","KZ":"Kasaakhistaan","KE":"Kiiniya","KI":"Kiribati","KP":"Kuuriyada Waqooyi","KR":"Kuuriyada Koonfureed","KW":"Kuwayt","KG":"Kirgistaan","LA":"Laos","LV":"Latfiya","LB":"Lubnaan","LS":"Losooto","LR":"Laybeeriya","LY":"Liibiya","LI":"Liechtenstein","LT":"Lituweeniya","LU":"Luksemboorg","MO":"Macao","MG":"Madagaskar","MW":"Malaawi","MY":"Malaysia","MV":"Maaldiqeen","ML":"Maali","MT":"Maalda","MH":"Marshall Islands","MQ":"Martinique","MR":"Muritaaniya","MU":"Murishiyoos","YT":"Mayotte","MX":"Meksiko","FM":"Micronesia","MD":"Moldofa","MC":"Moonako","MN":"Mongooliya","MS":"Montserrat","MA":"Marooko","MZ":"Musambiig","MM":"Myanmar","NA":"Namiibiya","NR":"Nauru","NP":"Nebaal","NL":"Netherlands","NC":"New Caledonia","NZ":"Neyuusilaand","NI":"Nikaraaguwa","NE":"Nayjer","NG":"Nayjeeriya","NU":"Niue","NF":"Norfolk Island","MK":"Makadooniya","MP":"Northern Mariana Islands","NO":"Noorweey","OM":"Cumaan","PK":"Bakistaan","PW":"Palau","PS":"Falastiin Daanka galbeed iyo Qasa","PA":"Panama","PG":"Papua New Guinea","PY":"Paraguay","PE":"Peru","PH":"Filibiin","PN":"Pitcairn","PL":"Booland","PT":"Bortuqaal","PR":"Puerto Rico","QA":"Qadar","RE":"Réunion","RO":"Rumaaniya","RU":"Ruush","RW":"Ruwanda","SH":"Saint Helena","KN":"Saint Kitts and Nevis","LC":"Saint Lucia","PM":"Saint Pierre and Miquelon","VC":"Saint Vincent and the Grenadines","WS":"Samoa","SM":"San Marino","ST":"São Tomé and Príncipe","SA":"Sacuudi Carabiya","SN":"Sinigaal","SC":"Sishelis","SL":"Siraaliyoon","SG":"Singaboor","SK":"Slovakia","SI":"Slovenia","SB":"Solomon Islands","SO":"Soomaaliya","ZA":"Koonfur Afrika","GS":"Koonfurta Georgia iyo Koonfurta Sandwich Islands","ES":"Isbeyn","LK":"Sirilaanka","SD":"Suudaan","SR":"Suriname","SJ":"Svalbard iyo Jan Mayen","SZ":"Iswaasilaand","SE":"Iswidhan","CH":"Swiiserlaand","SY":"Suuriya","TW":"Taywaan","TJ":"Tajikistan","TZ":"Tansaaniya","TH":"Taylaand","TL":"Timorka bari","TG":"Toogo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad and Tobago","TN":"Tuniisiya","TR":"Turki","TM":"Turkmenistan","TC":"Turks and Caicos Islands","TV":"Tuvalu","UG":"Ugaanda","UA":"Ukrayn","AE":"Imaaraadka Carabta ee Midoobay","GB":"United Kingdom","US":"Maraykanka","UM":"Jasiiradaha yaryar ee ka baxsan Mareykanka","UY":"Uruguwaay","UZ":"Uusbakistaan","VU":"Vanuatu","VE":"Fenisuweela","VN":"Fiyetnaam","VG":"British Virgin Islands","VI":"U.S. Virgin Islands","WF":"Wallis and Futuna","EH":"Saxaraha Galbeed","YE":"Yaman","ZM":"Saambiya","ZW":"Simbaabwe","AX":"Jasiiradaha Åland","BQ":"Bonaire, Sint Eustatius iyo Saba","CW":"Curaçao","GG":"Guernsey","IM":"Jasiiradda Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (qayb Faransiis ah)","RS":"Serbia","SX":"Sint Maarten (Qaybta Nederlandka)","SS":"Koonfur Suudaan","XK":"Kosovo"}}'))},19234,a=>{a.v(JSON.parse('{"locale":"sq","countries":{"AF":"Afganistan","AL":"Shqipëri","DZ":"Algjeri","AS":"Samoa Amerikane","AD":"Andorrë","AO":"Angolë","AI":"Anguilë","AQ":"Antarktidë","AG":"Antigua & Barbuda","AR":"Argjentinë","AM":"Armeni","AW":"Arubë","AU":"Australi","AT":"Austri","AZ":"Azerbajxhan","BS":"Bahamas","BH":"Bahrein","BD":"Bangladesh","BB":"Barbados","BY":"Bjellorusi","BE":"Belgjikë","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Butan","BO":"Bolivi","BA":"Bosnjë & Hercegovinë","BW":"Botsvanë","BV":"Ishulli Buve","BR":"Brazil","IO":"Territori Britanik i Oqeanit Indian","BN":"Brunej","BG":"Bullgari","BF":"Burkina Faso","BI":"Burund","KH":"Kamboxhia","CM":"Kamerun","CA":"Kanada","CV":"Kepi i Gjelbër","KY":"Ishujt Kajman","CF":"Republika Afrikano-Qendrore","TD":"Çad","CL":"Kili","CN":"Kinë","CX":"Ishulli i Krishtlindjes","CC":"Ishujt Kokos (Kiling)","CO":"Kolumbi","KM":"Komore","CG":"Kongo-Brazavil","CD":"Kongo-Kinshasa","CK":"Ishulli Kuk","CR":"Kosta Rikë","CI":"Bregu i Fildishtë","HR":"Kroaci","CU":"Kubë","CY":"Qipro","CZ":"Republika Çeke","DK":"Danimarkë","DJ":"Xhibut","DM":"Dominikë","DO":"Republika Dominikane","EC":"Ekuador","EG":"Egjipt","SV":"El Salvador","GQ":"Guineja Ekuatoriale","ER":"Eritre","EE":"Estoni","ET":"Etiopi","FK":"Ishujt Folkland","FO":"Ishujt Faroe","FJ":"Fixhi","FI":"Finlandë","FR":"Francë","GF":"Guajana Frënge","PF":"Polinezia Frënge","TF":"Territoret Frënge Jugore","GA":"Gabon","GM":"Gambia","GE":"Gjeorgji","DE":"Gjermani","GH":"Gana","GI":"Gjibraltar","GR":"Greqi","GL":"Groenlandë","GD":"Grenadë","GP":"Guadalup","GU":"Guam","GT":"Guatemalë","GN":"Guine","GW":"Guinea-Bisau","GY":"Guajanë","HT":"Haiti","HM":"Ishujt Hërd & Mekdonald","VA":"Vatikan","HN":"Honduras","HK":"RVA i Hong Kongut Kinë","HU":"Hungari","IS":"Islandë","IN":"Indi","ID":"Indonezi","IR":"Iran","IQ":"Irak","IE":"Irlandë","IL":"Izrael","IT":"Itali","JM":"Xhamajkë","JP":"Japoni","JO":"Jordani","KZ":"Kazakistan","KE":"Kenia","KI":"Kiribati","KP":"Koreja e Veriut","KR":"Koreja e Jugut","KW":"Kuvajt","KG":"Kirgizstan","LA":"Laos","LV":"Letoni","LB":"Liban","LS":"Lesoto","LR":"Liberi","LY":"Libi","LI":"Lihtenshtein","LT":"Lituani","LU":"Luksemburg","MO":"RVA i Makaos Kinë","MG":"Madagaskar","MW":"Malavi","MY":"Malajzi","MV":"Maldive","ML":"Mali","MT":"Maltë","MH":"Ishujt Marshall","MQ":"Martinikë","MR":"Mauritani","MU":"Mauritius","YT":"Majote","MX":"Meksikë","FM":"Mikronezi","MD":"Moldavi","MC":"Monako","MN":"Mongoli","MS":"Montserat","MA":"Marok","MZ":"Mozambik","MM":"Mianmar (Burma)","NA":"Namibi","NR":"Nauru","NP":"Nepal","NL":"Holandë","NC":"Kaledonia e Re","NZ":"Zelandë e Re","NI":"Nikaragua","NE":"Niger","NG":"Nigeri","NU":"Niue","NF":"Ishujt Norfolk","MK":"Maqedoni","MP":"Ishujt Veriorë Mariana","NO":"Norvegji","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Territoret Palestineze","PA":"Panama","PG":"Papua Guineja e Re","PY":"Paraguai","PE":"Peru","PH":"Filipine","PN":"Ishujt Pitkern","PL":"Poloni","PT":"Portugali","PR":"Porto Riko","QA":"Katar","RE":"Reunion","RO":"Rumani","RU":"Rusi","RW":"Ruandë","SH":"Shën Helena","KN":"Shën Kits e Nevis","LC":"Shën Luçia","PM":"Shën Pier dhe Mikëlon","VC":"Shën Vinsent & Grenadinet","WS":"Samoa","SM":"San Marino","ST":"Sao Tome & Prinsipe","SA":"Arabi Saudite","SN":"Senegal","SC":"Sejshelle","SL":"Sierra Leone","SG":"Singapor","SK":"Sllovaki","SI":"Slloveni","SB":"Ishujt Solomon","SO":"Somali","ZA":"Afrikë e Jugut","GS":"Xhorxha Jugore dhe Ishujt Sanduiç të Jugut","ES":"Spanjë","LK":"Sri Lankë","SD":"Sudan","SR":"Surinam","SJ":"Svalbard & Zhan Majen","SZ":"Svaziland","SE":"Suedi","CH":"Zvicër","SY":"Siri","TW":"Tajvan","TJ":"Taxhikistan","TZ":"Tanzani","TH":"Tajlandë","TL":"Timori Lindor","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad & Tobago","TN":"Tunizi","TR":"Turqi","TM":"Turkmenistan","TC":"Ishujt Turk & Kaikos","TV":"Tuvalu","UG":"Ugandë","UA":"Ukrainë","AE":"Emiratet e Bashkuara Arabe","GB":"Mbretëria e Bashkuar","US":"Shtetet e Bashkuara të Amerikës","UM":"Ishujt e Përtejmë SHBA-së","UY":"Uruguai","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuelë","VN":"Vietnam","VG":"Ishujt e Virgjër Britanikë","VI":"Ishujt e Virgjër Amerikanë","WF":"Uollis e Futuna","EH":"Sahara Perëndimore","YE":"Jemen","ZM":"Zambia","ZW":"Zimbabve","AX":"Ishujt Aland","BQ":"Karaibet Holandeze","CW":"Kurasao","GG":"Gërnsi","IM":"Ishulli i Robit","JE":"Xhërsi","ME":"Mali i Zi","BL":"Shën Bartolomeo","MF":"Shën Martin","RS":"Serbi","SX":"Shën Martin","SS":"Sudan i Jugut","XK":"Kosovë"}}'))},62960,a=>{a.v(JSON.parse('{"locale":"sr","countries":{"AD":"Андора","AE":"Уједињени Арапски Емирати","AF":"Авганистан","AG":"Антигва и Барбуда","AI":"Ангвила","AL":"Албанија","AM":"Јерменија","AO":"Ангола","AQ":"Антарктик","AR":"Аргентина","AS":"Америчка Самоа","AT":"Аустрија","AU":"Аустралија","AW":"Аруба","AX":"Оландска Острва","AZ":"Азербејџан","BA":"Босна и Херцеговина","BB":"Барбадос","BD":"Бангладеш","BE":"Белгија","BF":"Буркина Фасо","BG":"Бугарска","BH":"Бахреин","BI":"Бурунди","BJ":"Бенин","BL":"Сен Бартелеми","BM":"Бермуда","BN":"Брунеј","BO":"Боливија","BQ":"Карипска Холандија","BR":"Бразил","BS":"Бахами","BT":"Бутан","BV":"Острво Буве","BW":"Боцвана","BY":"Белорусија","BZ":"Белизе","CA":"Канада","CC":"Кокосова (Килингова) Острва","CD":"Конго - Киншаса","CF":"Централноафричка Република","CG":"Конго - Бразавил","CH":"Швајцарска","CI":"Обала Слоноваче","CK":"Кукова Острва","CL":"Чиле","CM":"Камерун","CN":"Кина","CO":"Колумбија","CR":"Костарика","CU":"Куба","CV":"Зеленортска Острва","CW":"Курасао","CX":"Божићно Острво","CY":"Кипар","CZ":"Чешка","DE":"Немачка","DJ":"Џибути","DK":"Данска","DM":"Доминика","DO":"Доминиканска Република","DZ":"Алжир","EC":"Еквадор","EE":"Естонија","EG":"Египат","EH":"Западна Сахара","ER":"Еритреја","ES":"Шпанија","ET":"Етиопија","FI":"Финска","FJ":"Фиџи","FK":"Фокландска Острва","FM":"Микронезија","FO":"Фарска Острва","FR":"Француска","GA":"Габон","GB":"Уједињено Краљевство","GD":"Гренада","GE":"Грузија","GF":"Француска Гвајана","GG":"Гернзи","GH":"Гана","GI":"Гибралтар","GL":"Гренланд","GM":"Гамбија","GN":"Гвинеја","GP":"Гваделуп","GQ":"Екваторијална Гвинеја","GR":"Грчка","GS":"Јужна Џорџија и Јужна Сендвичка Острва","GT":"Гватемала","GU":"Гуам","GW":"Гвинеја-Бисао","GY":"Гвајана","HK":"САР Хонгконг (Кина)","HM":"Острво Херд и Мекдоналдова острва","HN":"Хондурас","HR":"Хрватска","HT":"Хаити","HU":"Мађарска","ID":"Индонезија","IE":"Ирска","IL":"Израел","IM":"Острво Ман","IN":"Индија","IO":"Британска територија Индијског океана","IQ":"Ирак","IR":"Иран","IS":"Исланд","IT":"Италија","JE":"Џерзи","JM":"Јамајка","JO":"Јордан","JP":"Јапан","KE":"Кенија","KG":"Киргистан","KH":"Камбоџа","KI":"Кирибати","KM":"Коморска Острва","KN":"Сент Китс и Невис","KP":"Северна Кореја","KR":"Јужна Кореја","KW":"Кувајт","KY":"Кајманска Острва","KZ":"Казахстан","LA":"Лаос","LB":"Либан","LC":"Света Луција","LI":"Лихтенштајн","LK":"Шри Ланка","LR":"Либерија","LS":"Лесото","LT":"Литванија","LU":"Луксембург","LV":"Летонија","LY":"Либија","MA":"Мароко","MC":"Монако","MD":"Молдавија","ME":"Црна Гора","MF":"Свети Мартин (Француска)","MG":"Мадагаскар","MH":"Маршалска Острва","MK":"Северна Македонија","ML":"Мали","MM":"Мијанмар (Бурма)","MN":"Монголија","MO":"САР Макао (Кина)","MP":"Северна Маријанска Острва","MQ":"Мартиник","MR":"Мауританија","MS":"Монсерат","MT":"Малта","MU":"Маурицијус","MV":"Малдиви","MW":"Малави","MX":"Мексико","MY":"Малезија","MZ":"Мозамбик","NA":"Намибија","NC":"Нова Каледонија","NE":"Нигер","NF":"Острво Норфок","NG":"Нигерија","NI":"Никарагва","NL":"Холандија","NO":"Норвешка","NP":"Непал","NR":"Науру","NU":"Ниуе","NZ":"Нови Зеланд","OM":"Оман","PA":"Панама","PE":"Перу","PF":"Француска Полинезија","PG":"Папуа Нова Гвинеја","PH":"Филипини","PK":"Пакистан","PL":"Пољска","PM":"Сен Пјер и Микелон","PN":"Питкерн","PR":"Порторико","PS":"Палестинске територије","PT":"Португалија","PW":"Палау","PY":"Парагвај","QA":"Катар","RE":"Реинион","RO":"Румунија","RS":"Србија","RU":"Русија","RW":"Руанда","SA":"Саудијска Арабија","SB":"Соломонска Острва","SC":"Сејшели","SD":"Судан","SE":"Шведска","SG":"Сингапур","SH":"Света Јелена","SI":"Словенија","SJ":"Свалбард и Јан Мајен","SK":"Словачка","SL":"Сијера Леоне","SM":"Сан Марино","SN":"Сенегал","SO":"Сомалија","SR":"Суринам","SS":"Јужни Судан","ST":"Сао Томе и Принципе","SV":"Салвадор","SX":"Свети Мартин (Холандија)","SY":"Сирија","SZ":"Свазиленд","TC":"Острва Туркс и Каикос","TD":"Чад","TF":"Француске Јужне Територије","TG":"Того","TH":"Тајланд","TJ":"Таџикистан","TK":"Токелау","TL":"Источни Тимор","TM":"Туркменистан","TN":"Тунис","TO":"Тонга","TR":"Турска","TT":"Тринидад и Тобаго","TV":"Тувалу","TW":"Тајван","TZ":"Танзанија","UA":"Украјина","UG":"Уганда","UM":"Удаљена острва САД","US":"Сједињене Државе","UY":"Уругвај","UZ":"Узбекистан","VA":"Ватикан","VC":"Сент Винсент и Гренадини","VE":"Венецуела","VG":"Британска Девичанска Острва","VI":"Америчка Девичанска Острва","VN":"Вијетнам","VU":"Вануату","WF":"Валис и Футуна","WS":"Самоа","XK":"Косово","YE":"Јемен","YT":"Мајот","ZA":"Јужноафричка Република","ZM":"Замбија","ZW":"Зимбабве"}}'))},75166,a=>{a.v(JSON.parse('{"locale":"sv","countries":{"AD":"Andorra","AE":"Förenade Arabemiraten","AF":"Afghanistan","AG":"Antigua och Barbuda","AI":"Anguilla","AL":"Albanien","AM":"Armenien","AO":"Angola","AQ":"Antarktis","AR":"Argentina","AS":"Amerikanska Samoa","AT":"Österrike","AU":"Australien","AW":"Aruba","AX":"Åland","AZ":"Azerbajdzjan","BA":"Bosnien och Hercegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgien","BF":"Burkina Faso","BG":"Bulgarien","BH":"Bahrain","BI":"Burundi","BJ":"Benin","BL":"Saint-Barthélemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivia","BQ":"Bonaire, Saint Eustatius och Saba","BR":"Brasilien","BS":"Bahamas","BT":"Bhutan","BV":"Bouvetön","BW":"Botswana","BY":"Belarus","BZ":"Belize","CA":"Kanada","CC":"Kokosöarna","CD":"Demokratiska republiken Kongo","CF":"Centralafrikanska republiken","CG":"Kongo-Brazzaville","CH":"Schweiz","CI":"Elfenbenskusten","CK":"Cooköarna","CL":"Chile","CM":"Kamerun","CN":"Kina","CO":"Colombia","CR":"Costa Rica","CU":"Kuba","CV":"Kap Verde","CW":"Curacao","CX":"Julön","CY":"Cypern","CZ":"Tjeckien","DE":"Tyskland","DJ":"Djibouti","DK":"Danmark","DM":"Dominica","DO":"Dominikanska republiken","DZ":"Algeriet","EC":"Ecuador","EE":"Estland","EG":"Egypten","EH":"Västsahara","ER":"Eritrea","ES":"Spanien","ET":"Etiopien","FI":"Finland","FJ":"Fiji","FK":"Falklandsöarna","FM":"Mikronesiska federationen","FO":"Färöarna","FR":"Frankrike","GA":"Gabon","GB":"Storbritannien","GD":"Grenada","GE":"Georgien","GF":"Franska Guyana","GG":"Guernsey","GH":"Ghana","GI":"Gibraltar","GL":"Grönland","GM":"Gambia","GN":"Guinea","GP":"Guadeloupe","GQ":"Ekvatorialguinea","GR":"Grekland","GS":"Sydgeorgien och Sydsandwichöarna","GT":"Guatemala","GU":"Guam","GW":"Guinea Bissau","GY":"Guyana","HK":"Hongkong","HM":"Heard- och McDonaldsöarna","HN":"Honduras","HR":"Kroatien","HT":"Haiti","HU":"Ungern","ID":"Indonesien","IE":"Irland","IL":"Israel","IM":"Isle of Man","IN":"Indien","IO":"Brittiska territoriet i Indiska Oceanen","IQ":"Irak","IR":"Iran","IS":"Island","IT":"Italien","JE":"Jersey","JM":"Jamaica","JO":"Jordanien","JP":"Japan","KE":"Kenya","KG":"Kirgizistan","KH":"Kambodja","KI":"Kiribati","KM":"Komorerna","KN":"Saint Kitts och Nevis","KP":"Nordkorea","KR":"Sydkorea","KW":"Kuwait","KY":"Caymanöarna","KZ":"Kazakstan","LA":"Laos","LB":"Libanon","LC":"Saint Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberia","LS":"Lesotho","LT":"Litauen","LU":"Luxemburg","LV":"Lettland","LY":"Libyen","MA":"Marocko","MC":"Monaco","MD":"Moldavien","ME":"Montenegro","MF":"Saint Martin (franska delen)","MG":"Madagaskar","MH":"Marshallöarna","MK":"Nordmakedonien","ML":"Mali","MM":"Burma","MN":"Mongoliet","MO":"Macau","MP":"Nordmarianerna","MQ":"Martinique","MR":"Mauretanien","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldiverna","MW":"Malawi","MX":"Mexiko","MY":"Malaysia","MZ":"Moçambique","NA":"Namibia","NC":"Nya Kaledonien","NE":"Niger","NF":"Norfolkön","NG":"Nigeria","NI":"Nicaragua","NL":"Nederländerna","NO":"Norge","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Nya Zeeland","OM":"Oman","PA":"Panama","PE":"Peru","PF":"Franska Polynesien","PG":"Papua Nya Guinea","PH":"Filippinerna","PK":"Pakistan","PL":"Polen","PM":"Saint-Pierre och Miquelon","PN":"Pitcairnöarna","PR":"Puerto Rico","PS":"Palestinska territoriet, ockuperade","PT":"Portugal","PW":"Palau","PY":"Paraguay","QA":"Qatar","RE":"Réunion","RO":"Rumänien","RS":"Serbien","RU":"Ryssland","RW":"Rwanda","SA":"Saudiarabien","SB":"Salomonöarna","SC":"Seychellerna","SD":"Sudan","SE":"Sverige","SG":"Singapore","SH":"Sankta Helena","SI":"Slovenien","SJ":"Svalbard och Jan Mayen","SK":"Slovakien","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somalia","SR":"Surinam","SS":"Sydsudan","ST":"São Tomé och Príncipe","SV":"El Salvador","SX":"Sint Maarten (nederländska delen)","SY":"Syrien","SZ":"Eswatini","TC":"Turks- och Caicosöarna","TD":"Tchad","TF":"Franska södra territorierna","TG":"Togo","TH":"Thailand","TJ":"Tadzjikistan","TK":"Tokelauöarna","TL":"Östtimor","TM":"Turkmenistan","TN":"Tunisien","TO":"Tonga","TR":"Turkiet","TT":"Trinidad och Tobago","TV":"Tuvalu","TW":"Taiwan","TZ":"Tanzania","UA":"Ukraina","UG":"Uganda","UM":"USA:s yttre öar","US":"USA","UY":"Uruguay","UZ":"Uzbekistan","VA":"Vatikanstaten","VC":"Saint Vincent och Grenadinerna","VE":"Venezuela","VG":"Brittiska Jungfruöarna","VI":"Amerikanska Jungfruöarna","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis- och Futunaöarna","WS":"Samoa","YE":"Jemen","YT":"Mayotte","ZA":"Sydafrika","ZM":"Zambia","ZW":"Zimbabwe","XK":"Kosovo"}}'))},15245,a=>{a.v(JSON.parse('{"locale":"sw","countries":{"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"Samoa ya Marekani","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antaktiki","AG":"Antigua na Barbuda","AR":"Ajentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azabajani","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarusi","BE":"Ubelgiji","BZ":"Belize","BJ":"Benign","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BA":"Bosnia na Herzegovina","BW":"Botswana","BV":"Kisiwa cha Bouvet","BR":"Brazil","IO":"Bahari ya Hindi ya Uingereza","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Kamboja","CM":"Kamerun","CA":"Canada","CV":"Kofia ya kijani","KY":"Visiwa vya Cayman","CF":"Jamhuri ya Afrika ya Kati","TD":"Chad","CL":"Chile","CN":"Uchina","CX":"Kisiwa cha Krismasi","CC":"Cocos","CO":"Kolombia","KM":"Comoro","CG":"Jamhuri ya Kongo","CD":"Kongo, Jamhuri ya Kidemokrasia","CK":"Visiwa vya Cook","CR":"Costa Rica","CI":"Pwani ya Pembe","HR":"Kroatia","CU":"Cuba","CY":"Kupro","CZ":"Jamhuri ya Czech","DK":"Denmark","DJ":"Djibouti","DM":"Dominica","DO":"Jamhuri ya Dominika","EC":"Ekvado","EG":"Misri","SV":"El Salvador","GQ":"Guinea ya Ikweta","ER":"Eritrea","EE":"Estonia","ET":"Ethiopia","FK":"Visiwa vya Falkland","FO":"Visiwa vya Faroe","FJ":"Fiji","FI":"Ufini","FR":"Ufaransa","GF":"Guiana ya Ufaransa","PF":"Polynesia ya Ufaransa","TF":"Wilaya za Kusini mwa Ufaransa","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Ujerumani","GH":"Ghana","GI":"Gibraltar","GR":"Ugiriki","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Gine","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Visiwa vya Heard na MacDonald","VA":"Holy See","HN":"Honduras","HK":"Hong Kong","HU":"Hungary","IS":"Iceland","IN":"India","ID":"Indonesia","IR":"Iran","IQ":"Iraq","IE":"Ireland","IL":"Israeli","IT":"Italia","JM":"Jamaica","JP":"Japani","JO":"Yordani","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Korea Kaskazini, Jamhuri ya Watu wa Kidemokrasiaatique","KR":"Korea Kusini, Jamhuri","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Laos","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxemburg","MO":"Macao","MK":"Makedonia Kaskazini","MG":"Madagaska","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Visiwa vya Marshall","MQ":"Martinique","MR":"Mauritania","MU":"Maurice","YT":"Mayotte","MX":"Mexico","FM":"Micronesia","MD":"Moldova","MC":"Monaco","MN":"Mongolia","MS":"Montserrat","MA":"Moroko","MZ":"Msumbiji","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Uholanzi","NC":"Kaledonia mpya","NZ":"New Zealand","NI":"Nikaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Kisiwa cha Norfolk","MP":"Mariana ya Kaskazini","NO":"Norway","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Palestina","PA":"Panama","PG":"Papua Guinea Mpya","PY":"Paragwai","PE":"Peru","PH":"Ufilipino","PN":"Pitcairn","PL":"Poland","PT":"Ureno","PR":"Porto Rico","QA":"Qatar","RE":"Mkutano","RO":"Romania","RU":"Urusi","RW":"Rwanda","SH":"Mtakatifu Helena","KN":"Mtakatifu Kitts na Nevis","LC":"Mtakatifu LUCIA","PM":"Mtakatifu Pierre na Miquelon","VC":"Saint Vincent na Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome na Principe","SA":"Saudi Arabia","SN":"Senegal","SC":"Shelisheli","SL":"Sierra Leone","SG":"Singapore","SK":"Slovakia","SI":"Slovenia","SB":"Sulemani","SO":"Somalia","ZA":"Africa Kusini","GS":"Georgia Kusini na Visiwa vya Sandwich Kusini","ES":"Uhispania","LK":"Sri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard na Kisiwa cha Jan Mayen","SZ":"Ngwane, Ufalme wa Eswatini","SE":"Uswidi","CH":"Uswisi","SY":"Syria","TW":"Taiwan","TJ":"Tajikistani","TZ":"Tanzania, Jamhuri ya Muungano","TH":"Thailand","TL":"Timor Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad na Tobago","TN":"Tunisia","TR":"Uturuki","TM":"Turkmenistan","TC":"Visiwa vya Turks na Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"Falme za Kiarabu","GB":"Uingereza","US":"Amerika","UM":"Visiwa Vidogo vilivyo nje ya Merika","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Visiwa vya Briteni vya Uingereza","VI":"Visiwa vya Bikira za Amerika","WF":"Wallis na futuna","EH":"Sahara Magharibi","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Bara","BQ":"Bonaire, Saint-Eustache na Saba","CW":"Curacao","GG":"Guernsey","IM":"Kisiwa cha mwanadamu","JE":"Jezi","ME":"Montenegro","BL":"Mtakatifu-Barthélemy","MF":"Saint-Martin (sehemu ya Kifaransa)","RS":"Serbia","SX":"Saint-Martin (sehemu ya Uholanzi)","SS":"Sudan Kusini","XK":"Kosovo"}}'))},70774,a=>{a.v(JSON.parse('{"locale":"ta","countries":{"AF":"ஆப்கானிஸ்தான்","AL":"அல்பேனியா","DZ":"அல்ஜீரியா","AS":"அமெரிக்க சமோவா","AD":"அன்டோரா","AO":"அங்கோலா","AI":"அங்குய்லா","AQ":"அண்டார்டிகா","AG":"ஆண்டிகுவா மற்றும் பார்புடா","AR":"அர்ஜென்டினா","AM":"ஆர்மேனியா","AW":"அரூபா","AU":"ஆஸ்திரேலியா","AT":"ஆஸ்திரியா","AZ":"அசர்பைஜான்","BS":"பஹாமாஸ்","BH":"பஹ்ரைன்","BD":"பங்களாதேஷ்","BB":"பார்படோஸ்","BY":"பெலாரூஸ்","BE":"பெல்ஜியம்","BZ":"பெலிஸ்","BJ":"பெனின்","BM":"பெர்முடா","BT":"பூடான்","BO":"பொலிவியா","BA":"போஸ்னியா மற்றும் ஹெர்ஸிகோவினா","BW":"போட்ஸ்வானா","BV":"பொவேட் தீவுகள்","BR":"பிரேசில்","IO":"பிரிட்டிஷ் இந்தியப் பெருங்கடல் பிரதேசம்","BN":"புரூனேய்","BG":"பல்கேரியா","BF":"புர்கினா ஃபாஸோ","BI":"புருண்டி","KH":"கம்போடியா","CM":"கேமரூன்","CA":"கனடா","CV":"கேப் வெர்டே","KY":"கேமென் தீவுகள்","CF":"மத்திய ஆப்ரிக்கக் குடியரசு","TD":"சாட்","CL":"சிலி","CN":"சீனா","CX":"கிறிஸ்துமஸ் தீவு","CC":"கோகோஸ் (கீலிங்) தீவுகள்","CO":"கொலம்பியா","KM":"கோமரோஸ்","CG":"காங்கோ - ப்ராஸாவில்லே","CD":"காங்கோ - கின்ஷாசா","CK":"குக் தீவுகள்","CR":"கோஸ்டாரிகா","CI":"கோட் தி’வாயர்","HR":"குரோசியா","CU":"கியூபா","CY":"சைப்ரஸ்","CZ":"செக் குடியரசு","DK":"டென்மார்க்","DJ":"ஜிபௌட்டி","DM":"டொமினிகா","DO":"டொமினிகன் குடியரசு","EC":"ஈக்வடார்","EG":"எகிப்து","SV":"எல் சால்வடார்","GQ":"ஈக்குவாடோரியல் கினியா","ER":"எரிட்ரியா","EE":"எஸ்டோனியா","ET":"எதியோப்பியா","FK":"ஃபாக்லாந்து தீவுகள்","FO":"ஃபாரோ தீவுகள்","FJ":"ஃபிஜி","FI":"பின்லாந்து","FR":"பிரான்ஸ்","GF":"பிரெஞ்சு கயானா","PF":"பிரெஞ்சு பாலினேஷியா","TF":"பிரெஞ்சு தெற்கு பிரதேசங்கள்","GA":"கேபான்","GM":"காம்பியா","GE":"ஜார்ஜியா","DE":"ஜெர்மனி","GH":"கானா","GI":"ஜிப்ரால்டர்","GR":"கிரீஸ்","GL":"கிரீன்லாந்து","GD":"கிரனெடா","GP":"க்வாதேலோப்","GU":"குவாம்","GT":"கவுதமாலா","GN":"கினியா","GW":"கினி-பிஸ்ஸாவ்","GY":"கயானா","HT":"ஹெய்தி","HM":"ஹேர்ட் மற்றும் மெக்டொனால்டு தீவுகள்","VA":"வாடிகன் நகரம்","HN":"ஹோண்டூராஸ்","HK":"ஹாங்காங் எஸ்ஏஆர் சீனா","HU":"ஹங்கேரி","IS":"ஐஸ்லாந்து","IN":"இந்தியா","ID":"இந்தோனேஷியா","IR":"ஈரான்","IQ":"ஈராக்","IE":"அயர்லாந்து","IL":"இஸ்ரேல்","IT":"இத்தாலி","JM":"ஜமைகா","JP":"ஜப்பான்","JO":"ஜோர்டான்","KZ":"கஸகஸ்தான்","KE":"கென்யா","KI":"கிரிபடி","KP":"வட கொரியா","KR":"தென் கொரியா","KW":"குவைத்","KG":"கிர்கிஸ்தான்","LA":"லாவோஸ்","LV":"லாட்வியா","LB":"லெபனான்","LS":"லெசோதோ","LR":"லைபீரியா","LY":"லிபியா","LI":"லிச்செண்ஸ்டெய்ன்","LT":"லிதுவேனியா","LU":"லக்ஸ்சம்பர்க்","MO":"மகாவோ எஸ்ஏஆர் சீனா","MG":"மடகாஸ்கர்","MW":"மாலவி","MY":"மலேஷியா","MV":"மாலத்தீவு","ML":"மாலி","MT":"மால்டா","MH":"மார்ஷல் தீவுகள்","MQ":"மார்டினிக்","MR":"மௌரிடானியா","MU":"மொரிசியஸ்","YT":"மயோத்","MX":"மெக்சிகோ","FM":"மைக்ரோனேஷியா","MD":"மால்டோவா","MC":"மொனாக்கோ","MN":"மங்கோலியா","MS":"மௌன்ட்செராட்","MA":"மொராக்கோ","MZ":"மொசாம்பிக்","MM":"மியான்மார் (பர்மா)","NA":"நமீபியா","NR":"நௌரு","NP":"நேபாளம்","NL":"நெதர்லாந்து","NC":"நியூ கேலிடோனியா","NZ":"நியூசிலாந்து","NI":"நிகரகுவா","NE":"நைஜர்","NG":"நைஜீரியா","NU":"நியூ","NF":"நார்ஃபாக் தீவுகள்","MK":"மாசிடோனியா","MP":"வடக்கு மரியானா தீவுகள்","NO":"நார்வே","OM":"ஓமன்","PK":"பாகிஸ்தான்","PW":"பாலோ","PS":"பாலஸ்தீனிய பிரதேசங்கள்","PA":"பனாமா","PG":"பாப்புவா நியூ கினி","PY":"பராகுவே","PE":"பெரு","PH":"பிலிப்பைன்ஸ்","PN":"பிட்கெய்ர்ன் தீவுகள்","PL":"போலந்து","PT":"போர்ச்சுக்கல்","PR":"பியூர்டோ ரிகோ","QA":"கத்தார்","RE":"ரீயூனியன்","RO":"ருமேனியா","RU":"ரஷ்யா","RW":"ருவான்டா","SH":"செயின்ட் ஹெலெனா","KN":"செயின்ட் கிட்ஸ் மற்றும் நெவிஸ்","LC":"செயின்ட் லூசியா","PM":"செயின்ட் பியர் மற்றும் மிக்வேலான்","VC":"செயின்ட் வின்சென்ட் மற்றும் கிரெனடைன்ஸ்","WS":"சமோவா","SM":"சான் மெரினோ","ST":"சாவ் தோம் மற்றும் ப்ரின்சிபி","SA":"சவூதி அரேபியா","SN":"செனெகல்","SC":"ஸேசேல்ஸ்","SL":"சியர்ரா லியோன்","SG":"சிங்கப்பூர்","SK":"ஸ்லோவாகியா","SI":"ஸ்லோவேனியா","SB":"சாலமன் தீவுகள்","SO":"சோமாலியா","ZA":"தென் ஆப்பிரிக்கா","GS":"தென் ஜியார்ஜியா மற்றும் தென் சான்ட்விச் தீவுகள்","ES":"ஸ்பெயின்","LK":"இலங்கை","SD":"சூடான்","SR":"சுரினாம்","SJ":"ஸ்வல்பார்டு மற்றும் ஜான் மேயன்","SZ":"ஸ்வாஸிலாந்து","SE":"ஸ்வீடன்","CH":"ஸ்விட்சர்லாந்து","SY":"சிரியா","TW":"தைவான்","TJ":"தாஜிகிஸ்தான்","TZ":"தான்சானியா","TH":"தாய்லாந்து","TL":"தைமூர்-லெஸ்தே","TG":"டோகோ","TK":"டோகேலோ","TO":"டோங்கா","TT":"ட்ரினிடாட் மற்றும் டுபாகோ","TN":"டுனிசியா","TR":"துருக்கி","TM":"துர்க்மெனிஸ்தான்","TC":"டர்க்ஸ் மற்றும் கைகோஸ் தீவுகள்","TV":"துவாலூ","UG":"உகாண்டா","UA":"உக்ரைன்","AE":"ஐக்கிய அரபு எமிரேட்ஸ்","GB":"ஐக்கிய பேரரசு","US":"அமெரிக்கா","UM":"யூஎஸ் அவுட்லேயிங் தீவுகள்","UY":"உருகுவே","UZ":"உஸ்பெகிஸ்தான்","VU":"வனுவாட்டு","VE":"வெனிசுலா","VN":"வியட்நாம்","VG":"பிரிட்டீஷ் கன்னித் தீவுகள்","VI":"யூ.எஸ். கன்னித் தீவுகள்","WF":"வாலிஸ் மற்றும் ஃபுடுனா","EH":"மேற்கு சஹாரா","YE":"ஏமன்","ZM":"ஜாம்பியா","ZW":"ஜிம்பாப்வே","AX":"ஆலந்து தீவுகள்","BQ":"கரீபியன் நெதர்லாந்து","CW":"குராகவ்","GG":"கெர்ன்சி","IM":"ஐல் ஆஃப் மேன்","JE":"ஜெர்சி","ME":"மான்டேனெக்ரோ","BL":"செயின்ட் பார்தேலெமி","MF":"செயின்ட் மார்ட்டீன்","RS":"செர்பியா","SX":"சின்ட் மார்டென்","SS":"தெற்கு சூடான்","XK":"கொசோவோ"}}'))},73847,a=>{a.v(JSON.parse('{"locale":"tg","countries":{"AF":"Афғонистон","AL":"Албания","DZ":"Алҷазоир","AS":"Самоаи Америка","AD":"Андорра","AO":"Ангола","AI":"Ангилия","AQ":"Антарктида","AG":"Антигуа ва Барбуда","AR":"Аргентина","AM":"Арманистон","AW":"Аруба","AU":"Австралия","AT":"Австрия","AZ":"Озарбойҷон","BS":"Багам","BH":"Баҳрайн","BD":"Бангладеш","BB":"Барбадос","BY":"Белорус","BE":"Белгия","BZ":"Белиз","BJ":"Бенин","BM":"Бермуда","BT":"Бутон","BO":"Боливия","BA":"Босния ва Ҳерсеговина","BW":"Ботсвана","BV":"Ҷазираи Буве","BR":"Бразилия","IO":"Қаламрави Британия дар уқёнуси Ҳинд","BN":"Бруней","BG":"Булғория","BF":"Буркина-Фасо","BI":"Бурунди","KH":"Камбоҷа","CM":"Камерун","CA":"Канада","CV":"Кабо-Верде","KY":"Ҷазираҳои Кайман","CF":"Ҷумҳурии Африқои Марказӣ","TD":"Чад","CL":"Чили","CN":"Хитой","CX":"Ҷазираи Крисмас","CC":"Ҷазираҳои Кокос (Килинг)","CO":"Колумбия","KM":"Комор","CG":"Конго","CD":"Конго, Ҷумҳурии Демократии","CK":"Ҷазираҳои Кук","CR":"Коста-Рика","CI":"Кот-д’Ивуар","HR":"Хорватия","CU":"Куба","CY":"Кипр","CZ":"Ҷумҳурии Чех","DK":"Дания","DJ":"Ҷибути","DM":"Доминика","DO":"Ҷумҳурии Доминикан","EC":"Эквадор","EG":"Миср","SV":"Эл-Салвадор","GQ":"Гвинеяи Экваторӣ","ER":"Эритрея","EE":"Эстония","ET":"Эфиопия","FK":"Ҷазираҳои Фолкленд","FO":"Ҷазираҳои Фарер","FJ":"Фиҷи","FI":"Финляндия","FR":"Фаронса","GF":"Гвианаи Фаронса","PF":"Полинезияи Фаронса","TF":"Минтақаҳои Ҷанубии Фаронса","GA":"Габон","GM":"Гамбия","GE":"Гурҷистон","DE":"Германия","GH":"Гана","GI":"Гибралтар","GR":"Юнон","GL":"Гренландия","GD":"Гренада","GP":"Гваделупа","GU":"Гуам","GT":"Гватемала","GN":"Гвинея","GW":"Гвинея-Бисау","GY":"Гайана","HT":"Гаити","HM":"Ҷазираи Ҳерд ва Ҷазираҳои Макдоналд","VA":"Шаҳри Вотикон","HN":"Гондурас","HK":"Ҳонконг (МММ)","HU":"Маҷористон","IS":"Исландия","IN":"Ҳиндустон","ID":"Индонезия","IR":"Эрон","IQ":"Ироқ","IE":"Ирландия","IL":"Исроил","IT":"Италия","JM":"Ямайка","JP":"Япония","JO":"Урдун","KZ":"Қазоқистон","KE":"Кения","KI":"Кирибати","KP":"Кореяи Шимолӣ","KR":"Кореяи ҷанубӣ","KW":"Қувайт","KG":"Қирғизистон","LA":"Лаос","LV":"Латвия","LB":"Лубнон","LS":"Лесото","LR":"Либерия","LY":"Либия","LI":"Лихтенштейн","LT":"Литва","LU":"Люксембург","MO":"Макао (МММ)","MG":"Мадагаскар","MW":"Малави","MY":"Малайзия","MV":"Малдив","ML":"Мали","MT":"Малта","MH":"Ҷазираҳои Маршалл","MQ":"Мартиника","MR":"Мавритания","MU":"Маврикий","YT":"Майотта","MX":"Мексика","FM":"Штатҳои Федеративии Микронезия","MD":"Молдова","MC":"Монако","MN":"Муғулистон","MS":"Монтсеррат","MA":"Марокаш","MZ":"Мозамбик","MM":"Мянма","NA":"Намибия","NR":"Науру","NP":"Непал","NL":"Нидерландия","NC":"Каледонияи Нав","NZ":"Зеландияи Нав","NI":"Никарагуа","NE":"Нигер","NG":"Нигерия","NU":"Ниуэ","NF":"Ҷазираи Норфолк","MK":"Македонияи Шимолӣ","MP":"Ҷазираҳои Марианаи Шимолӣ","NO":"Норвегия","OM":"Умон","PK":"Покистон","PW":"Палау","PS":"Фаластин","PA":"Панама","PG":"Папуа Гвинеяи Нав","PY":"Парагвай","PE":"Перу","PH":"Филиппин","PN":"Ҷазираҳои Питкейрн","PL":"Лаҳистон","PT":"Португалия","PR":"Пуэрто-Рико","QA":"Қатар","RE":"Реюнион","RO":"Руминия","RU":"Русия","RW":"Руанда","SH":"Сент Елена","KN":"Сент-Китс ва Невис","LC":"Сент-Люсия","PM":"Сент-Пер ва Микелон","VC":"Сент-Винсент ва Гренадина","WS":"Самоа","SM":"Сан-Марино","ST":"Сан Томе ва Принсипи","SA":"Арабистони Саудӣ","SN":"Сенегал","SC":"Сейшел","SL":"Сиерра-Леоне","SG":"Сингапур","SK":"Словакия","SI":"Словения","SB":"Ҷазираҳои Соломон","SO":"Сомалӣ","ZA":"Африкаи Ҷанубӣ","GS":"Ҷорҷияи Ҷанубӣ ва Ҷазираҳои Сандвич","ES":"Испания","LK":"Шри-Ланка","SD":"Судон","SR":"Суринам","SJ":"Шпитсберген ва Ян Майен","SZ":"Свазиленд","SE":"Шветсия","CH":"Швейтсария","SY":"Сурия","TW":"Тайван","TJ":"Тоҷикистон","TZ":"Танзания","TH":"Таиланд","TL":"Тимор-Лесте","TG":"Того","TK":"Токелау","TO":"Тонга","TT":"Тринидад ва Тобаго","TN":"Тунис","TR":"Туркия","TM":"Туркманистон","TC":"Ҷазираҳои Теркс ва Кайкос","TV":"Тувалу","UG":"Уганда","UA":"Украина","AE":"Аморатҳои Муттаҳидаи Араб","GB":"Шоҳигарии Муттаҳида","US":"Иёлоти Муттаҳида","UM":"Ҷазираҳои Хурди Дурдасти ИМА","UY":"Уругвай","UZ":"Ӯзбекистон","VU":"Вануату","VE":"Венесуэла","VN":"Ветнам","VG":"Ҷазираҳои Виргини Британия","VI":"Ҷазираҳои Виргини ИМА","WF":"Уоллис ва Футуна","EH":"Саҳрои Ғарбӣ","YE":"Яман","ZM":"Замбия","ZW":"Зимбабве","AX":"Ҷазираҳои Аланд","BQ":"Бонайре, Синт Эстатиус ва Саба","CW":"Кюрасао","GG":"Гернси","IM":"Ҷазираи Мэн","JE":"Ҷерси","ME":"Черногория","BL":"Сент-Бартелми","MF":"Ҷазираи Сент-Мартин","RS":"Сербия","SX":"Синт-Маартен","SS":"Судони Ҷанубӣ","XK":"Косово"}}'))},53806,a=>{a.v(JSON.parse('{"locale":"th","countries":{"BD":"บังกลาเทศ","BE":"เบลเยียม","BF":"บูร์กินาฟาโซ","BG":"บัลแกเรีย","BA":"บอสเนียและเฮอร์เซโกวีนา","BB":"บาร์เบโดส","WF":"วาลลิสและฟุตูนา","BL":"เซนต์บาร์เธเลมี","BM":"เบอร์มิวดา","BN":"บรูไน","BO":"โบลิเวีย","BH":"บาห์เรน","BI":"บุรุนดี","BJ":"เบนิน","BT":"ภูฏาน","JM":"จาเมกา","BV":"เกาะบูเวต","BW":"บอตสวานา","WS":"ซามัว","BR":"บราซิล","BS":"บาฮามาส","JE":"เจอร์ซีย์","BY":"เบลารุส","BZ":"เบลีซ","RU":"รัสเซีย","RW":"รวันดา","RS":"เซอร์เบีย","TL":"ติมอร์ตะวันออก","RE":"เรอูนียง","TM":"เติร์กเมนิสถาน","TJ":"ทาจิกิสถาน","RO":"โรมาเนีย","TK":"โตเกเลา","GW":"กินี-บิสเซา","GU":"กวม","GT":"กัวเตมาลา","GS":"เกาะเซาท์จอร์เจียและหมู่เกาะเซาท์แซนด์วิช","GR":"กรีซ","GQ":"อิเควทอเรียลกินี","GP":"กวาเดอลูป","JP":"ญี่ปุ่น","GY":"กายอานา","GG":"เกิร์นซีย์","GF":"เฟรนช์เกียนา","GE":"จอร์เจีย","GD":"เกรเนดา","GB":"สหราชอาณาจักร","GA":"กาบอง","SV":"เอลซัลวาดอร์","GN":"กินี","GM":"แกมเบีย","GL":"กรีนแลนด์","GI":"ยิบรอลตาร์","GH":"กานา","OM":"โอมาน","TN":"ตูนิเซีย","JO":"จอร์แดน","HR":"โครเอเชีย","HT":"เฮติ","HU":"ฮังการี","HK":"ฮ่องกง เขตปกครองพิเศษประเทศจีน","HN":"ฮอนดูรัส","HM":"เกาะเฮิร์ดและหมู่เกาะแมกดอนัลด์","VE":"เวเนซุเอลา","PR":"เปอร์โตริโก","PS":"ปาเลสไตน์","PW":"ปาเลา","PT":"โปรตุเกส","SJ":"สฟาลบาร์และยานไมเอน","PY":"ปารากวัย","IQ":"อิรัก","PA":"ปานามา","PF":"เฟรนช์โปลินีเซีย","PG":"ปาปัวนิวกินี","PE":"เปรู","PK":"ปากีสถาน","PH":"ฟิลิปปินส์","PN":"พิตแคร์น","PL":"โปแลนด์","PM":"แซงปีแยร์และมีเกอลง","ZM":"แซมเบีย","EH":"ซาฮาราตะวันตก","EE":"เอสโตเนีย","EG":"อียิปต์","ZA":"แอฟริกาใต้","EC":"เอกวาดอร์","IT":"อิตาลี","VN":"เวียดนาม","SB":"หมู่เกาะโซโลมอน","ET":"เอธิโอเปีย","SO":"โซมาเลีย","ZW":"ซิมบับเว","SA":"ซาอุดีอาระเบีย","ES":"สเปน","ER":"เอริเทรีย","ME":"มอนเตเนโกร","MD":"มอลโดวา","MG":"มาดากัสการ์","MF":"เซนต์มาติน","MA":"โมร็อกโก","MC":"โมนาโก","UZ":"อุซเบกิสถาน","MM":"เมียนม่าร์ [พม่า]","ML":"มาลี","MO":"มาเก๊า เขตปกครองพิเศษประเทศจีน","MN":"มองโกเลีย","MH":"หมู่เกาะมาร์แชลล์","MK":"มาซิโดเนีย","MU":"มอริเชียส","MT":"มอลตา","MW":"มาลาวี","MV":"มัลดีฟส์","MQ":"มาร์ตินีก","MP":"หมู่เกาะนอร์เทิร์นมาเรียนา","MS":"มอนต์เซอร์รัต","MR":"มอริเตเนีย","IM":"เกาะแมน","UG":"ยูกันดา","TZ":"แทนซาเนีย","MY":"มาเลเซีย","MX":"เม็กซิโก","IL":"อิสราเอล","FR":"ฝรั่งเศส","IO":"บริติชอินเดียนโอเชียนเทร์ริทอรี","SH":"เซนต์เฮเลนา","FI":"ฟินแลนด์","FJ":"ฟิจิ","FK":"หมู่เกาะฟอล์กแลนด์","FM":"ไมโครนีเซีย","FO":"หมู่เกาะแฟโร","NI":"นิการากัว","NL":"เนเธอร์แลนด์","NO":"นอร์เวย์","NA":"นามิเบีย","VU":"วานูอาตู","NC":"นิวแคลิโดเนีย","NE":"ไนเจอร์","NF":"เกาะนอร์ฟอล์ก","NG":"ไนจีเรีย","NZ":"นิวซีแลนด์","NP":"เนปาล","NR":"นาอูรู","NU":"นีอูเอ","CK":"หมู่เกาะคุก","CI":"ไอวอรี่โคสต์","CH":"สวิตเซอร์แลนด์","CO":"โคลอมเบีย","CN":"จีน","CM":"แคเมอรูน","CL":"ชิลี","CC":"หมู่เกาะโคโคส","CA":"แคนาดา","CG":"คองโก-บราซซาวิล","CF":"สาธารณรัฐแอฟริกากลาง","CD":"คองโก-กินชาซา","CZ":"สาธารณรัฐเช็ก","CY":"ไซปรัส","CX":"เกาะคริสต์มาส","CR":"คอสตาริกา","CV":"เคปเวิร์ด","CU":"คิวบา","SZ":"สวาซิแลนด์","SY":"ซีเรีย","KG":"คีร์กีซสถาน","KE":"เคนยา","SR":"ซูรินาเม","KI":"คิริบาส","KH":"กัมพูชา","KN":"เซนต์คิตส์และเนวิส","KM":"คอโมโรส","ST":"เซาตูเมและปรินซิปี","SK":"สโลวะเกีย","KR":"เกาหลีใต้","SI":"สโลวีเนีย","KP":"เกาหลีเหนือ","KW":"คูเวต","SN":"เซเนกัล","SM":"ซานมารีโน","SL":"เซียร์ราลีโอน","SC":"เซเชลส์","KZ":"คาซัคสถาน","KY":"หมู่เกาะเคย์แมน","SG":"สิงคโปร์","SE":"สวีเดน","SD":"ซูดาน","DO":"สาธารณรัฐโดมินิกัน","DM":"โดมินิกา","DJ":"จิบูตี","DK":"เดนมาร์ก","VG":"หมู่เกาะบริติชเวอร์จิน","DE":"เยอรมนี","YE":"เยเมน","DZ":"แอลจีเรีย","US":"สหรัฐอเมริกา","UY":"อุรุกวัย","YT":"มายอต","UM":"หมู่เกาะสหรัฐไมเนอร์เอาต์ไลอิง","LB":"เลบานอน","LC":"เซนต์ลูเซีย","LA":"ลาว","TV":"ตูวาลู","TW":"ไต้หวัน","TT":"ตรินิแดดและโตเบโก","TR":"ตุรกี","LK":"ศรีลังกา","LI":"ลิกเตนสไตน์","LV":"ลัตเวีย","TO":"ตองกา","LT":"ลิทัวเนีย","LU":"ลักเซมเบิร์ก","LR":"ไลบีเรีย","LS":"เลโซโท","TH":"ไทย","TF":"เฟรนช์เซาเทิร์นเทร์ริทอรีส์","TG":"โตโก","TD":"ชาด","TC":"หมู่เกาะเติกส์และหมู่เกาะเคคอส","LY":"ลิเบีย","VA":"วาติกัน","VC":"เซนต์วินเซนต์และเกรนาดีนส์","AE":"สหรัฐอาหรับเอมิเรตส์","AD":"อันดอร์รา","AG":"แอนติกาและบาร์บูดา","AF":"อัฟกานิสถาน","AI":"แองกวิลลา","VI":"หมู่เกาะยูเอสเวอร์จิน","IS":"ไอซ์แลนด์","IR":"อิหร่าน","AM":"อาร์เมเนีย","AL":"แอลเบเนีย","AO":"แองโกลา","AQ":"แอนตาร์กติกา","AS":"อเมริกันซามัว","AR":"อาร์เจนตินา","AU":"ออสเตรเลีย","AT":"ออสเตรีย","AW":"อารูบา","IN":"อินเดีย","AX":"หมู่เกาะโอลันด์","AZ":"อาเซอร์ไบจาน","IE":"ไอร์แลนด์","ID":"อินโดนีเซีย","UA":"ยูเครน","QA":"กาตาร์","MZ":"โมซัมบิก","BQ":"โบแนร์, ซินท์เอิสทาทิอุส, ซาบา","CW":"คูราเซา","SX":"Sint Maarten (ส่วนดัตช์)","SS":"ซูดานใต้","XK":"โคโซโว"}}'))},86148,a=>{a.v(JSON.parse('{"locale":"tk","countries":{"AD":"Andorra","AE":"Birleşen Arap Emiratlary","AF":"Owganystan","AG":"Antigua we Barbuda","AI":"Angilýa","AL":"Albaniýa","AM":"Ermenistan","AO":"Angola","AQ":"Antarktida","AR":"Argentina","AS":"Amerika Samoa","AT":"Awstriýa","AU":"Awstraliýa","AW":"Aruba","AX":"Aland adalary","AZ":"Azerbaýjan","BA":"Bosniýa we Gertsegowina","BB":"Barbados","BD":"Bangladeş","BE":"Belgiýa","BF":"Burkina-Faso","BG":"Bolgariýa","BH":"Bahreýn","BI":"Burundi","BJ":"Benin","BL":"Sen-Bartelemi","BM":"Bermuda adalary","BN":"Bruneý","BO":"Boliwiýa","BQ":"Boneýr, Sint-Estatius we Saba","BR":"Braziliýa","BS":"Bagama adalary","BT":"Butan","BV":"Buwe adasy","BW":"Botswana","BY":"Belarusiýa","BZ":"Beliz","CA":"Kanada","CC":"Kokos adalary","CD":"Kongo Demokratik Respublikasy","CF":"Merkezi Afrika Respublikasy","CG":"Kongo Respublikasy","CH":"Şweýsariýa","CI":"Kot-d’Iwuar","CK":"Kuka adalary","CL":"Çili","CM":"Kamerun","CN":"Kitaý","CO":"Kolumbiýa","CR":"Kosta-Rika","CU":"Kuba","CV":"Kabo-Werde","CW":"Kýurasao","CX":"Rojdestwo adasy","CY":"Kipr","CZ":"Çehiýa","DE":"Germaniýa","DJ":"Jibuti","DK":"Daniýa","DM":"Dominika","DO":"Dominikan Respublikasy","DZ":"Aljyr","EC":"Ekwador","EE":"Estoniýa","EG":"Müsür","EH":"Sahara Arap Demokratik Respublikasy","ER":"Eritriýa","ES":"Ispaniýa","ET":"Efiopiýa","FI":"Finlandiýa","FJ":"Fiji","FK":"Folklend adalary","FM":"Mikroneziýa","FO":"Farer adalary","FR":"Fransiýa","GA":"Gabon","GB":"Beýik Britaniýa","GD":"Grenada","GE":"Gruziýa","GF":"Gwiana","GG":"Gernsi","GH":"Gana","GI":"Gibraltar","GL":"Grenlandiýa","GM":"Gambiýa","GN":"Gwineýa","GP":"Gwadelupa","GQ":"Ekwatorial Gwineýa","GR":"Gretsiýa","GS":"Günorta Jorjiýa we Günorta Sandwiç adalary","GT":"Gwatemala","GU":"Guam","GW":"Gwineýa-Bisau","GY":"Gaýana","HK":"Gonkong","HM":"Hurd we Makdonald","HN":"Gonduras","HR":"Horwatiýa","HT":"Gaiti","HU":"wengriýa","ID":"Indoneziýa","IE":"Irlandiýa","IL":"Ysraýyl","IM":"Men adasy","IN":"Hindistan","IO":"Hindi ummanynda Britaniýa teritoriýasy","IQ":"Eýran","IR":"Iran","IS":"Islandiýa","IT":"Italiýa","JE":"Jersi","JM":"Ýamaýka","JO":"Iordaniýa","JP":"Ýaponiýa","KE":"Keniýa","KG":"Gyrgyzystan","KH":"Kambodja","KI":"Kiribati","KM":"Komor adalary","KN":"Sent-Kits we Newis","KP":"Demirgazyk Koreýa","KR":"Günorta Koreýa","KW":"Kuweýt","KY":"Kaýman adalary","KZ":"Gazagystan","LA":"Laos","LB":"Liwan","LC":"Sent-Lýusiýa","LI":"Lihtenşteýn","LK":"Şri-Lanka","LR":"Liberiýa","LS":"Lesoto","LT":"Litwa","LU":"Lýuksemburg","LV":"Latwiýa","LY":"Liwiýa","MA":"Marokko","MC":"Monako","MD":"Moldowiýa","ME":"Çernogoriýa","MF":"Sent-Marten","MG":"Madagaskar","MH":"Marşall adalary","MK":"Demirgazyk Makedoniýa","ML":"Mali","MM":"Mýanma","MN":"Mongoliýa","MO":"Makao","MP":"Demirgazyk Mariana adalary","MQ":"Martinika","MR":"Mawritaniýa","MS":"Montserrat","MT":"Malta","MU":"Mawrikiý","MV":"Maldiw adalary","MW":"Malawi","MX":"Meksika","MY":"Malaýziýa","MZ":"Mozambik","NA":"Namibiýa","NC":"Täze Kaledoniýa","NE":"Niger","NF":"Norfolk adasy","NG":"Nigeriýa","NI":"Nikaragua","NL":"Gollandiýa","NO":"Norwegiýa","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Täze Zelandiýa","OM":"Ummon","PA":"Panama","PE":"Peru","PF":"Fransuz Polineziýasy","PG":"Papua – Täze Gwineýa","PH":"Filippin","PK":"Pakistan","PL":"Polşa","PM":"Sen-Pýer we Mikelon","PN":"Pitkern adalary","PR":"Puerto-Riko","PS":"Palestina döwleti","PT":"Portugaliýa","PW":"Palau","PY":"Paragwaý","QA":"Katar","RE":"Reýunion","RO":"Ruminiýa","RS":"Serbiýa","RU":"Rossiýa","RW":"Ruanda","SA":"Saud Arabystan","SB":"Solomon adalary","SC":"Seýşel adalary","SD":"Sudan","SE":"Şwesiýa","SG":"Singapur","SH":"Keramatly Ýelena adasy","SI":"Sloweniýa","SJ":"Swalbard we Ýan-Maýen","SK":"Slowakiýa","SL":"Sierra-Leone","SM":"San-Marino","SN":"Senegal","SO":"Somali","SR":"Surinam","SS":"Günorta Sudan","ST":"San-Tome we Prinsipi","SV":"Salwador","SX":"Sint-Marten","SY":"Siriýa","SZ":"Swazilend","TC":"Terks we Kaýkos adalary","TD":"Çad","TF":"Fransiýanyň Günorta we Antarktika sebitleri","TG":"Togo","TH":"Taýland","TJ":"Täjigistan","TK":"Tokelau","TL":"Gündogar Timor","TM":"Türkmenistan","TN":"Tunis","TO":"Tonga","TR":"Türkiýe","TT":"Trinidad we Tobago","TV":"Tuwalu","TW":"Taýwan","TZ":"Tanzaniýa","UA":"Ukraina","UG":"Uganda","UM":"ABŞ-nyň daşky kiçi adalary","US":"Amerika","UY":"Urugwaý","UZ":"Özbegistan ","VA":"Watikan","VC":"Sent-Winsent we Grenadin","VE":"Wenesuela","VG":"Britaniýa Wirgin adalary","VI":"ABŞ-nyň Wirgin adalary","VN":"Wýetnam","VU":"Wanuatu","WF":"Wallis we Futuna","WS":"Samoa","XK":"Kosowo","YE":"Ýemen","YT":"Maýotta","ZA":"Günorta Afrika Respublikasy","ZM":"Zambiýa","ZW":"Zimbabwe"}}'))},94794,a=>{a.v(JSON.parse('{"locale":"tr","countries":{"AD":"Andorra","AE":"Birleşik Arap Emirlikleri","AF":"Afganistan","AG":"Antigua ve Barbuda","AI":"Anguilla","AL":"Arnavutluk","AM":"Ermenistan","AO":"Angola","AQ":"Antarktika","AR":"Arjantin","AS":"Amerikan Samoası","AT":"Avusturya","AU":"Avustralya","AW":"Aruba","AX":"Åland Adaları","AZ":"Azerbaycan","BA":"Bosna Hersek","BB":"Barbados","BD":"Bangladeş","BE":"Belçika","BF":"Burkina Faso","BG":"Bulgaristan","BH":"Bahreyn","BI":"Burundi","BJ":"Benin","BL":"Saint Barthelemy","BM":"Bermuda","BN":"Brunei","BO":"Bolivya","BQ":"Karayip Hollanda","BR":"Brezilya","BS":"Bahamalar","BT":"Butan","BV":"Bouvet Adası","BW":"Botsvana","BY":"Beyaz Rusya","BZ":"Belize","CA":"Kanada","CC":"Cocos (Keeling) Adaları","CD":"Kongo - Kinşasa","CF":"Orta Afrika Cumhuriyeti","CG":"Kongo - Brazavil","CH":"İsviçre","CI":"Fildişi Sahili","CK":"Cook Adaları","CL":"Şili","CM":"Kamerun","CN":"Çin","CO":"Kolombiya","CR":"Kosta Rika","CU":"Küba","CV":"Cape Verde","CW":"Curaçao","CX":"Christmas Adası","CY":"Güney Kıbrıs Rum Kesimi","CZ":"Çek Cumhuriyeti","DE":"Almanya","DJ":"Cibuti","DK":"Danimarka","DM":"Dominika","DO":"Dominik Cumhuriyeti","DZ":"Cezayir","EC":"Ekvador","EE":"Estonya","EG":"Mısır","EH":"Batı Sahara","ER":"Eritre","ES":"İspanya","ET":"Etiyopya","FI":"Finlandiya","FJ":"Fiji","FK":"Falkland Adaları","FM":"Mikronezya","FO":"Faroe Adaları","FR":"Fransa","GA":"Gabon","GB":"Birleşik Krallık","GD":"Grenada","GE":"Gürcistan","GF":"Fransız Guyanası","GG":"Guernsey","GH":"Gana","GI":"Cebelitarık","GL":"Grönland","GM":"Gambiya","GN":"Gine","GP":"Guadalupe","GQ":"Ekvator Ginesi","GR":"Yunanistan","GS":"Güney Georgia ve Güney Sandwich Adaları","GT":"Guatemala","GU":"Guam","GW":"Gine-Bissau","GY":"Guyana","HK":"Çin Hong Kong ÖYB","HM":"Heard Adası ve McDonald Adaları","HN":"Honduras","HR":"Hırvatistan","HT":"Haiti","HU":"Macaristan","ID":"Endonezya","IE":"İrlanda","IL":"İsrail","IM":"Man Adası","IN":"Hindistan","IO":"Britanya Hint Okyanusu Toprakları","IQ":"Irak","IR":"İran","IS":"İzlanda","IT":"İtalya","JE":"Jersey","JM":"Jamaika","JO":"Ürdün","JP":"Japonya","KE":"Kenya","KG":"Kırgızistan","KH":"Kamboçya","KI":"Kiribati","KM":"Komorlar","KN":"Saint Kitts ve Nevis","KP":"Kuzey Kore","KR":"Güney Kore","KW":"Kuveyt","KY":"Cayman Adaları","KZ":"Kazakistan","LA":"Laos","LB":"Lübnan","LC":"Saint Lucia","LI":"Liechtenstein","LK":"Sri Lanka","LR":"Liberya","LS":"Lesoto","LT":"Litvanya","LU":"Lüksemburg","LV":"Letonya","LY":"Libya","MA":"Fas","MC":"Monako","MD":"Moldova","ME":"Karadağ","MF":"Saint Martin","MG":"Madagaskar","MH":"Marshall Adaları","MK":"Kuzey Makedonya","ML":"Mali","MM":"Myanmar (Burma)","MN":"Moğolistan","MO":"Çin Makao ÖYB","MP":"Kuzey Mariana Adaları","MQ":"Martinik","MR":"Moritanya","MS":"Montserrat","MT":"Malta","MU":"Mauritius","MV":"Maldivler","MW":"Malavi","MX":"Meksika","MY":"Malezya","MZ":"Mozambik","NA":"Namibya","NC":"Yeni Kaledonya","NE":"Nijer","NF":"Norfolk Adası","NG":"Nijerya","NI":"Nikaragua","NL":"Hollanda","NO":"Norveç","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Yeni Zelanda","OM":"Umman","PA":"Panama","PE":"Peru","PF":"Fransız Polinezyası","PG":"Papua Yeni Gine","PH":"Filipinler","PK":"Pakistan","PL":"Polonya","PM":"Saint Pierre ve Miquelon","PN":"Pitcairn Adaları","PR":"Porto Riko","PS":"Filistin Bölgeleri","PT":"Portekiz","PW":"Palau","PY":"Paraguay","QA":"Katar","RE":"Réunion","RO":"Romanya","RS":"Sırbistan","RU":"Rusya","RW":"Ruanda","SA":"Suudi Arabistan","SB":"Solomon Adaları","SC":"Seyşeller","SD":"Sudan","SE":"İsveç","SG":"Singapur","SH":"Saint Helena","SI":"Slovenya","SJ":"Svalbard ve Jan Mayen Adaları","SK":"Slovakya","SL":"Sierra Leone","SM":"San Marino","SN":"Senegal","SO":"Somali","SR":"Surinam","SS":"Güney Sudan","ST":"São Tomé ve Príncipe","SV":"El Salvador","SX":"Sint Maarten","SY":"Suriye","SZ":"Svaziland","TC":"Turks ve Caicos Adaları","TD":"Çad","TF":"Fransız Güney Toprakları","TG":"Togo","TH":"Tayland","TJ":"Tacikistan","TK":"Tokelau","TL":"Timor-Leste","TM":"Türkmenistan","TN":"Tunus","TO":"Tonga","TR":"Türkiye","TT":"Trinidad ve Tobago","TV":"Tuvalu","TW":"Tayvan","TZ":"Tanzanya","UA":"Ukrayna","UG":"Uganda","UM":"ABD Uzak Adaları","US":["ABD","A.B.D.","Amerika Birleşik Devletleri","Birleşik Devletler","Amerika"],"UY":"Uruguay","UZ":"Özbekistan","VA":"Vatikan","VC":"Saint Vincent ve Grenadinler","VE":"Venezuela","VG":"Britanya Virjin Adaları","VI":"ABD Virjin Adaları","VN":"Vietnam","VU":"Vanuatu","WF":"Wallis ve Futuna Adaları","WS":"Samoa","YE":"Yemen","YT":"Mayotte","ZA":"Güney Afrika","ZM":"Zambiya","ZW":"Zimbabve","XK":"Kosova"}}'))},87841,a=>{a.v(JSON.parse('{"locale":"tt","countries":{"AF":"Әфганстан","AL":"Албания","DZ":"Алжир","AS":"Америка Самоасы","AD":"Андорра","AO":"Ангола","AI":"Ангилья","AQ":"Антарктика","AG":"Антигуа һәм Барбуда","AR":"Аргентина","AM":"Әрмәнстан","AW":"Аруба","AU":"Австралия","AT":"Австрия","AZ":"Әзәрбайҗан","BS":"Багам утраулары","BH":"Бәхрәйн","BD":"Бангладеш","BB":"Барбадос","BY":"Беларусь","BE":"Бельгия","BZ":"Белиз","BJ":"Бенин","BM":"Бермуд утраулары","BT":"Бутан","BO":"Боливия","BA":"Босния һәм Герцеговина","BW":"Ботсвана","BV":"Буве утравы","BR":"Бразилия","IO":"Британиянең Һинд Океанындагы Территориясе","BN":"Бруней","BG":"Болгария","BF":"Буркина-Фасо","BI":"Бурунди","KH":"Камбоджа","CM":"Камерун","CA":"Канада","CV":"Кабо-Верде","KY":"Кайман утраулары","CF":"Үзәк Африка Республикасы","TD":"Чад","CL":"Чили","CN":"Кытай","CX":"Раштуа утравы","CC":"Кокос (Килинг) утраулары","CO":"Колумбия","KM":"Комор утраулары","CG":"Конго","CD":"Конго, Демократик Республикасы","CK":"Кук утраулары","CR":"Коста-Рика","CI":"Кот-д’Ивуар","HR":"Хорватия","CU":"Куба","CY":"Кипр","CZ":"Чехия Республикасы","DK":"Дания","DJ":"Җибүти","DM":"Доминика","DO":"Доминикана Республикасы","EC":"Эквадор","EG":"Мисыр","SV":"Сальвадор","GQ":"Экваториаль Гвинея","ER":"Эритрея","EE":"Эстония","ET":"Эфиопия","FK":"Фолкленд утраулары","FO":"Фарер утраулары","FJ":"Фиджи","FI":"Финляндия","FR":"Франция","GF":"Француз Гвианасы","PF":"Француз Полинезиясе","TF":"Франциянең Көньяк Территорияләре","GA":"Габон","GM":"Гамбия","GE":"Грузия","DE":"Германия","GH":"Гана","GI":"Гибралтар","GR":"Греция","GL":"Гренландия","GD":"Гренада","GP":"Гваделупа","GU":"Гуам","GT":"Гватемала","GN":"Гвинея","GW":"Гвинея-Бисау","GY":"Гайана","HT":"Гаити","HM":"Херд утравы һәм Макдональд утраулары","VA":"Изге күренеш (Ватикан шәһәре дәүләте)","HN":"Гондурас","HK":"Гонконг Махсус Идарәле Төбәге","HU":"Венгрия","IS":"Исландия","IN":"Индия","ID":"Индонезия","IR":"Иран","IQ":"Гыйрак","IE":"Ирландия","IL":"Израиль","IT":"Италия","JM":"Ямайка","JP":"Япония","JO":"Иордания","KZ":"Казахстан","KE":"Кения","KI":"Кирибати","KP":"Төньяк Корея","KR":"Көньяк Корея","KW":"Күвәйт","KG":"Кыргызстан","LA":"Лаос","LV":"Латвия","LB":"Ливан","LS":"Лесото","LR":"Либерия","LY":"Ливия","LI":"Лихтенштейн","LT":"Литва","LU":"Люксембург","MO":"Макао Махсус Идарәле Төбәге","MG":"Мадагаскар","MW":"Малави","MY":"Малайзия","MV":"Мальдив утраулары","ML":"Мали","MT":"Мальта","MH":"Маршалл утраулары","MQ":"Мартиника","MR":"Мавритания","MU":"Маврикий","YT":"Майотта","MX":"Мексика","FM":"Микронезия","MD":"Молдова","MC":"Монако","MN":"Монголия","MS":"Монтсеррат","MA":"Марокко","MZ":"Мозамбик","MM":"Мьянма","NA":"Намибия","NR":"Науру","NP":"Непал","NL":"Нидерланд","NC":"Яңа Каледония","NZ":"Яңа Зеландия","NI":"Никарагуа","NE":"Нигер","NG":"Нигерия","NU":"Ниуэ","NF":"Норфолк утравы","MK":"Төньяк Македония","MP":"Төньяк Мариана утраулары","NO":"Норвегия","OM":"Оман","PK":"Пакистан","PW":"Палау","PS":"Палестина","PA":"Панама","PG":"Папуа - Яңа Гвинея","PY":"Парагвай","PE":"Перу","PH":"Филиппин","PN":"Питкэрн утраулары","PL":"Польша","PT":"Португалия","PR":"Пуэрто-Рико","QA":"Катар","RE":"Реюньон","RO":"Румыния","RU":"Россия","RW":"Руанда","SH":"Изге Елена","KN":"Сент-Китс һәм Невис","LC":"Сент-Люсия","PM":"Сен-Пьер һәм Микелон","VC":"Сент-Винсент һәм Гренадин","WS":"Самоа","SM":"Сан-Марино","ST":"Сан-Томе һәм Принсипи","SA":"Согуд Гарәбстаны","SN":"Сенегал","SC":"Сейшел утраулары","SL":"Сьерра-Леоне","SG":"Сингапур","SK":"Словакия","SI":"Словения","SB":"Сөләйман утраулары","SO":"Сомали","ZA":"Көньяк Африка","GS":"Көньяк Георгия һәм Көньяк Сандвич утраулары","ES":"Испания","LK":"Шри-Ланка","SD":"Судан","SR":"Суринам","SJ":"Шпицберген һәм Ян-Майен","SZ":"Свазиленд","SE":"Швеция","CH":"Швейцария","SY":"Сүрия","TW":"Тайвань","TJ":"Таҗикстан","TZ":"Танзания","TH":"Тайланд","TL":"Тимор-Лесте","TG":"Того","TK":"Токелау","TO":"Тонга","TT":"Тринидад һәм Тобаго","TN":"Тунис","TR":"Төркия","TM":"Төркмәнстан","TC":"Теркс һәм Кайкос утраулары","TV":"Тувалу","UG":"Уганда","UA":"Украина","AE":"Берләшкән Гарәп Әмирлекләре","GB":"Берләшкән Корольлек","US":"АКШ","UM":"АКШ Кече Читтәге утраулары","UY":"Уругвай","UZ":"Үзбәкстан","VU":"Вануату","VE":"Венесуэла","VN":"Вьетнам","VG":"Британия Виргин утраулары","VI":"АКШ Виргин утраулары","WF":"Уоллис һәм Футуна","EH":"Көнбатыш Сахара","YE":"Йәмән","ZM":"Замбия","ZW":"Зимбабве","AX":"Аланд утраулары","BQ":"Бонейр, Синт Эстатий һәм Саба","CW":"Кюрасао","GG":"Гернси","IM":"Мэн утравы","JE":"Джерси","ME":"Черногория","BL":"Сен-Бартельми","MF":"Сент-Мартин","RS":"Сербия","SX":"Синт-Мартен","SS":"Көньяк Судан","XK":"Косово"}}'))},27012,a=>{a.v(JSON.parse('{"locale":"ug","countries":{"AF":"ئافغانىستان","AL":"ئالبانىيە","DZ":"ئالجىرىيە","AS":"ئامېرىكا ساموئا","AD":"ئاندوررا","AO":"ئانگولا","AI":"ئانگۋىللا","AQ":"ئانتاركتىكا","AG":"ئانتىگۇئا ۋە باربۇدا","AR":"ئارگېنتىنا","AM":"ئەرمېنىيە","AW":"ئارۇبا","AU":"ئاۋسترالىيە","AT":"ئاۋىستىرىيە","AZ":"ئەزەربەيجان","BS":"باھاما","BH":"بەھرەين","BD":"بېنگال","BB":"باربادوس","BY":"بېلارۇسىيە","BE":"بېلگىيە","BZ":"بېلىز","BJ":"بېنىن","BM":"بېرمۇدا","BT":"بۇتان","BO":"بولىۋىيە","BA":"بوسىنىيە ۋە گېرتسېگوۋىنا","BW":"بوتسۋانا","BV":"بوۋېت ئارىلى","BR":"بىرازىلىيە","IO":"ئەنگلىيەگە قاراشلىق ھىندى ئوكيان تېررىتورىيەسى","BN":"بىرۇنېي","BG":"بۇلغارىيە","BF":"بۇركىنا فاسو","BI":"بۇرۇندى","KH":"كامبودژا","CM":"كامېرون","CA":"كانادا","CV":"يېشىل تۇمشۇق","KY":"كايمان ئاراللىرى","CF":"ئوتتۇرا ئافرىقا جۇمھۇرىيىتى","TD":"چاد","CL":"چىلى","CN":"جۇڭگو","CX":"مىلاد ئارىلى","CC":"كوكوس (كىلىڭ) ئاراللىرى","CO":"كولومبىيە","KM":"كومورو","CG":"كونگو - بىراززاۋىل","CD":"كونگو - كىنشاسا","CK":"كۇك ئاراللىرى","CR":"كوستارىكا","CI":"كوتې دې ئىۋوئىر","HR":"كىرودىيە","CU":"كۇبا","CY":"سىپرۇس","CZ":"چېخ جۇمھۇرىيىتى","DK":"دانىيە","DJ":"جىبۇتى","DM":"دومىنىكا","DO":"دومىنىكا جۇمھۇرىيىتى","EC":"ئېكۋاتور","EG":"مىسىر","SV":"سالۋادور","GQ":"ئېكۋاتور گىۋىنىيەسى","ER":"ئېرىترىيە","EE":"ئېستونىيە","ET":"ئېفىيوپىيە","FK":"فالكلاند ئاراللىرى","FO":"فارو ئاراللىرى","FJ":"فىجى","FI":"فىنلاندىيە","FR":"فىرانسىيە","GF":"فىرانسىيەگە قاراشلىق گىۋىيانا","PF":"فىرانسىيەگە قاراشلىق پولىنېزىيە","TF":"فىرانسىيەنىڭ جەنۇبىي زېمىنى","GA":"گابون","GM":"گامبىيە","GE":"گىرۇزىيە","DE":"گېرمانىيە","GH":"گانا","GI":"جەبىلتارىق","GR":"گىرېتسىيە","GL":"گىرېنلاندىيە","GD":"گىرېنادا","GP":"گىۋادېلۇپ","GU":"گۇئام","GT":"گىۋاتېمالا","GN":"گىۋىنىيە","GW":"گىۋىنىيە بىسسائۇ","GY":"گىۋىيانا","HT":"ھايتى","HM":"ھېرد ئارىلى ۋە ماكدونالد ئاراللىرى","VA":"ۋاتىكان","HN":"ھوندۇراس","HK":"شياڭگاڭ ئالاھىدە مەمۇرىي رايونى (جۇڭگو)","HU":"ۋېنگىرىيە","IS":"ئىسلاندىيە","IN":"ھىندىستان","ID":"ھىندونېزىيە","IR":"ئىران","IQ":"ئىراق","IE":"ئىرېلاندىيە","IL":"ئىسرائىلىيە","IT":"ئىتالىيە","JM":"يامايكا","JP":"ياپونىيە","JO":"ئىيوردانىيە","KZ":"قازاقىستان","KE":"كېنىيە","KI":"كىرىباتى","KP":"چاۋشيەن","KR":"كورېيە","KW":"كۇۋەيت","KG":"قىرغىزىستان","LA":"لائوس","LV":"لاتۋىيە","LB":"لىۋان","LS":"لېسوتو","LR":"لىبېرىيە","LY":"لىۋىيە","LI":"لىكتېنستېين","LT":"لىتۋانىيە","LU":"لىيۇكسېمبۇرگ","MO":"ئاۋمېن ئالاھىدە مەمۇرىي رايونى","MG":"ماداغاسقار","MW":"مالاۋى","MY":"مالايسىيا","MV":"مالدىۋې","ML":"مالى","MT":"مالتا","MH":"مارشال ئاراللىرى","MQ":"مارتىنىكا","MR":"ماۋرىتانىيە","MU":"ماۋرىتىيۇس","YT":"مايوتى","MX":"مېكسىكا","FM":"مىكرونېزىيە","MD":"مولدوۋا","MC":"موناكو","MN":"موڭغۇلىيە","MS":"مونتسېررات","MA":"ماراكەش","MZ":"موزامبىك","MM":"بىرما","NA":"نامىبىيە","NR":"ناۋرۇ","NP":"نېپال","NL":"گوللاندىيە","NC":"يېڭى كالېدونىيە","NZ":"يېڭى زېلاندىيە","NI":"نىكاراگۇئا","NE":"نىگېر","NG":"نىگېرىيە","NU":"نيۇئې","NF":"نورفولك ئارىلى","MK":"شىمالىي ماكېدونىيە","MP":"شىمالىي مارىيانا ئاراللىرى","NO":"نورۋېگىيە","OM":"ئومان","PK":"پاكىستان","PW":"پالائۇ","PS":"پەلەستىن زېمىنى","PA":"پاناما","PG":"پاپۇئا يېڭى گىۋىنىيەسى","PY":"پاراگۋاي","PE":"پېرۇ","PH":"فىلىپپىن","PN":"پىتكايرن ئاراللىرى","PL":"پولشا","PT":"پورتۇگالىيە","PR":"پۇئېرتو رىكو","QA":"قاتار","RE":"رېيۇنىيون","RO":"رومىنىيە","RU":"رۇسىيە","RW":"رىۋاندا","SH":"ساينىت ھېلېنا","KN":"ساينت كىتىس ۋە نېۋىس","LC":"ساينت لۇسىيە","PM":"ساينت پىيېر ۋە مىكېلون ئاراللىرى","VC":"ساينت ۋىنسېنت ۋە گىرېنادىنېس","WS":"ساموئا","SM":"سان مارىنو","ST":"سان تومې ۋە پرىنسىپې","SA":"سەئۇدىي ئەرەبىستان","SN":"سېنېگال","SC":"سېيشېل","SL":"سېررالېئون","SG":"سىنگاپور","SK":"سىلوۋاكىيە","SI":"سىلوۋېنىيە","SB":"سولومون ئاراللىرى","SO":"سومالى","ZA":"جەنۇبىي ئافرىقا","GS":"جەنۇبىي جورجىيە ۋە جەنۇبىي ساندۋىچ ئاراللىرى","ES":"ئىسپانىيە","LK":"سىرىلانكا","SD":"سۇدان","SR":"سۇرىنام","SJ":"سىۋالبارد ۋە يان مايېن","SZ":"سىۋېزىلاند","SE":"شىۋېتسىيە","CH":"شىۋېتسارىيە","SY":"سۇرىيە","TW":"تەيۋەن","TJ":"تاجىكىستان","TZ":"تانزانىيە","TH":"تايلاند","TL":"شەرقىي تىمور","TG":"توگو","TK":"توكېلاۋ","TO":"تونگا","TT":"تىرىنىداد ۋە توباگو","TN":"تۇنىس","TR":"تۈركىيە","TM":"تۈركمەنىستان","TC":"تۇركس ۋە كايكوس ئاراللىرى","TV":"تۇۋالۇ","UG":"ئۇگاندا","UA":"ئۇكرائىنا","AE":"ئەرەب بىرلەشمە خەلىپىلىكى","GB":"بىرلەشمە پادىشاھلىق","US":"ئامېرىكا قوشما ئىشتاتلىرى","UM":"ئا ق ش تاشقى ئاراللىرى","UY":"ئۇرۇگۋاي","UZ":"ئۆزبېكىستان","VU":"ۋانۇئاتۇ","VE":"ۋېنېسۇئېلا","VN":"ۋىيېتنام","VG":"ئەنگلىيە ۋىرگىن ئاراللىرى","VI":"ئا ق ش ۋىرگىن ئاراللىرى","WF":"ۋاللىس ۋە فۇتۇنا","EH":"غەربىي ساخارا","YE":"يەمەن","ZM":"زامبىيە","ZW":"زىمبابۋې","AX":"ئالاند ئاراللىرى","BQ":"كارىب دېڭىزى گوللاندىيە","CW":"كۇراچاۋ","GG":"گۇرنسېي","IM":"مان ئارىلى","JE":"جېرسېي","ME":"قارا تاغ","BL":"ساينت بارتېلېمى","MF":"ساينت مارتىن","RS":"سېربىيە","SX":"سىنت مارتېن","SS":"جەنۇبىي سۇدان","XK":"كوسوۋو"}}'))},40113,a=>{a.v(JSON.parse('{"locale":"uk","countries":{"AU":"Австралія","AT":"Австрія","AZ":"Азербайджан","AX":"Аландські Острови","AL":"Албанія","DZ":"Алжир","AS":"Американське Самоа","AI":"Ангілья","AO":"Ангола","AD":"Андорра","AQ":"Антарктика","AG":"Антигуа і Барбуда","MO":"Макао","AR":"Аргентина","AM":"Вірменія","AW":"Аруба","AF":"Афганістан","BS":"Багамські Острови","BD":"Бангладеш","BB":"Барбадос","BH":"Бахрейн","BZ":"Беліз","BE":"Бельгія","BJ":"Бенін","BM":"Бермудські Острови","BY":"Білорусь","BG":"Болгарія","BO":"Болівія","BA":"Боснія і Герцеговина","BW":"Ботсвана","BR":"Бразилія","IO":"Британська Територія в Індійському Океані","VG":"Британські Віргінські Острови","BN":"Бруней-Даруссалам","BF":"Буркіна-Фасо","BI":"Бурунді","BT":"Бутан","VU":"Вануату","VA":"Ватикан","GB":"Великобританія","VE":"Венесуела","VI":"Віргінські Острови (США)","WF":"Волліс і Футуна","VN":"В\'єтнам","UM":"Зовнішні Віддалені Острови (США)","GA":"Габон","HT":"Гаїті","GY":"Гаяна","GM":"Гамбія","GH":"Гана","GP":"Гваделупа","GT":"Гватемала","GF":"Гвіана","GN":"Гвінея","GW":"Гвінея-Бісау","GG":"Гернсі","GI":"Гібралтар","HN":"Гондурас","HK":"Гонконг","GD":"Гренада","GR":"Греція","GE":"Грузія","GU":"Гуам","GL":"Гренландія","DK":"Данія","JE":"Джерсі","DJ":"Джибуті","DM":"Домініка","DO":"Домініканська Республіка","CD":"Демократична Республіка Конго","EC":"Еквадор","GQ":"Екваторіальна Гвінея","ER":"Еритрея","EE":"Естонія","ET":"Ефіопія","EG":"Єгипет","YE":"Ємен","ZM":"Замбія","ZW":"Зімбабве","IL":"Ізраїль","IN":"Індія","ID":"Індонезія","IQ":"Ірак","IR":"Іран","IE":"Ірландія","IS":"Ісландія","ES":"Іспанія","IT":"Італія","JO":"Йорданія","CV":"Кабо-Верде","KZ":"Казахстан","KY":"Кайманові Острови","KH":"Камбоджа","CM":"Камерун","CA":"Канада","BQ":"Карибські Нідерланди","QA":"Катар","KE":"Кенія","CY":"Кіпр","KI":"Кірибаті","KG":"Киргизстан","TW":"Тайвань, Провінція Китаю","KP":"Корейська Народно-Демократична Республіка","CN":"Китай","CC":"Кокосові Острови","CO":"Колумбія","KM":"Комори","XK":"Косово","CR":"Коста-Рика","CI":"Кот-Д\'Івуар","CU":"Куба","KW":"Кувейт","CW":"Кюрасао","LA":"Лаос","LV":"Латвія","LS":"Лесото","LR":"Ліберія","LB":"Ліван","LY":"Лівія","LT":"Литва","LI":"Ліхтенштейн","LU":"Люксембург","MU":"Маврикій","MR":"Мавританія","MG":"Мадагаскар","YT":"Майотта","MW":"Малаві","MY":"Малайзія","ML":"Малі","MV":"Мальдіви","MT":"Мальта","MA":"Марокко","MQ":"Мартиніка","MH":"Маршаллові Острови","MX":"Мексика","FM":"Мікронезія","MZ":"Мозамбік","MD":"Молдова","MC":"Монако","MN":"Монголія","MS":"Монтсеррат","MM":"М\'янма","NA":"Намібія","NR":"Науру","NP":"Непал","NE":"Нігер","NG":"Нігерія","NL":"Нідерланди","NI":"Нікарагуа","DE":"Німеччина","NU":"Ніуе","NZ":"Нова Зеландія","NC":"Нова Каледонія","NO":"Норвегія","AE":"Об\'єднані Арабські Емірати","OM":"Оман","BV":"Острів Буве","HM":"Острів Герд і Острови Макдоналд","IM":"Острів Мен","NF":"Острів Норфолк","CX":"Острів Різдва","CK":"Острови Кука","SH":"Острів Святої Єлени","TC":"Острови Теркс і Кайкос","PK":"Пакистан","PW":"Палау","PS":"Палестина","PA":"Панама","PG":"Папуа-Нова Гвінея","ZA":"Південна Африка","PY":"Парагвай","PE":"Перу","GS":"Південна Джорджія та Південні Сандвічеві Острови","KR":"Республіка Корея","SS":"Південний Судан","MK":"Північна Македонія","MP":"Північні Маріанські Острови","PN":"Піткерн","PL":"Польща","PT":"Португалія","PR":"Пуерто-Рико","CG":"Конго","RE":"Реюньйон","RU":"Росія","RW":"Руанда","RO":"Румунія","EH":"Західна Сахара","SV":"Сальвадор","WS":"Самоа","SM":"Сан-Марино","ST":"Сан-Томе і Принсіпі","SA":"Саудівська Аравія","SZ":"Есватіні","SJ":"Острови Шпіцберген та Ян-Маєн","SC":"Сейшельські Острови","BL":"Сен-Бартелемі","MF":"Сен-Мартен","PM":"Сен-П\'єр і Мікелон","SN":"Сенегал","VC":"Сент-Вінсент і Гренадіни","KN":"Сент-Кітс і Невіс","LC":"Сент-Люсія","RS":"Сербія","SG":"Сингапур","SX":"Сінт-Мартен","SY":"Сирія","SK":"Словаччина","SI":"Словенія","SB":"Соломонові Острови","SO":"Сомалі","SD":"Судан","SR":"Суринам","TL":"Тимор-Лешті","US":"США","SL":"Сьєрра-Леоне","TJ":"Таджикистан","TH":"Таїланд","TZ":"Танзанія","TG":"Того","TK":"Токелау","TO":"Тонга","TT":"Тринідад і Тобаго","TV":"Тувалу","TN":"Туніс","TM":"Туркменистан","TR":"Туреччина","UG":"Уганда","HU":"Угорщина","UZ":"Узбекистан","UA":"Україна","UY":"Уругвай","FO":"Фарерські Острови","FJ":"Фіджі","PH":"Філіппіни","FI":"Фінляндія","FK":"Фолклендські Острови","FR":"Франція","PF":"Французька Полінезія","TF":"Французькі Південні і Антарктичні Території","HR":"Хорватія","CF":"Центральноафриканська Республіка","TD":"Чад","ME":"Чорногорія","CZ":"Чехія","CL":"Чилі","CH":"Швейцарія","SE":"Швеція","LK":"Шри-Ланка","JM":"Ямайка","JP":"Японія"}}'))},34217,a=>{a.v(JSON.parse('{"locale":"ur","countries":{"AF":"افغانستان","AL":"البانیاہ","DZ":"الجزائر","AS":"امریکی ساموا","AD":"اینڈورا","AO":"انگولا","AI":"انگویلا","AQ":"انٹارکٹیکا","AG":"انٹیگوا اور باربودا","AR":"ارجنٹینا","AM":"آرمینیا","AW":"اروبا","AU":"آسٹریلیا","AT":"آسٹریا","AZ":"آزربائیجان","BS":"بہاماس","BH":"بحرین","BD":"بنگلہ دیش","BB":"بارباڈوس","BY":"بیلاروس","BE":"بیلجیم","BZ":"بیلیز","BJ":"بینن","BM":"برمودا","BT":"بھوٹان","BO":"بولیویا","BA":"بوسنیا اور ہرزیگوینا","BW":"بوٹسوانا","BV":"جزیرہ بوویت","BR":"برازیل","IO":"بحرِہندکابرطانوی حصہ","BN":"برونائی دارالسلام","BG":"بلغاریہ","BF":"برکینا فاسو","BI":"برونڈی","KH":"کمبوڈیا","CM":"کیمرون","CA":"کینیڈا","CV":"کیپ وردے","KY":"جزائر کیمن","CF":"وسطی افریقی جمہوریہ","TD":"چاڈ","CL":"چلی","CN":"چین","CX":"کرسمس آئ لینڈ","CC":"کوکوس جزائر","CO":"کولمبیا","KM":"کوموروس","CG":"کانگو","CD":"عوامی جمہوریہِ کانگو","CK":"کوک آیلینڈ","CR":"کوسٹا ریکا","CI":"کوٹ ڈی آئیورائر","HR":"کروشیا","CU":"کیوبا","CY":"قبرص","CZ":"جمہوریہ چیک","DK":"ڈنمارک","DJ":"جبوتی","DM":"ڈومینیکا","DO":"ڈومینیکن ریپبلک","EC":"ایکواڈور","EG":"مصر","SV":"ال سلواڈور","GQ":"استوائی گنی","ER":"ایریٹریا","EE":"ایسٹونیا","ET":"ایتھوپیا","FK":"جزائر فاک لینڈ (مالویناس)","FO":"جزائرفارو","FJ":"فجی","FI":"فن لینڈ","FR":"فرانس","GF":"فرانسیسی گانا","PF":"فرانسیسی پولینیشیا","TF":"جنوبی فرانسیسی علاقہ جات","GA":"گبون","GM":"گیمبیا","GE":"جارجیا","DE":"جرمنی","GH":"گھانا","GI":"جبل الطارق","GR":"یونان","GL":"گرین لینڈ","GD":"گریناڈا","GP":"گواڈیلوپ","GU":"گوام","GT":"گوئٹے مالا","GN":"گنی","GW":"گنی بساؤ","GY":"گیوانا","HT":"ہیٹی","HM":"ہرڈ جزیرہ اور جزائر مکڈونلڈ","VA":"ہولی سی، ویٹیکن","HN":"ہنڈورس","HK":"ہانگ کانگ","HU":"ہنگری","IS":"آئس لینڈ","IN":"انڈیا","ID":"انڈونیشیا","IR":"اسلامی جمہوریہ ایران","IQ":"عراق","IE":"آئر لینڈ","IL":"اسرائیل","IT":"اٹلی","JM":"جمیکا","JP":"جاپان","JO":"اردن","KZ":"قازقستان","KE":"کینیا","KI":"کرباتی","KP":"شمالی کوریا","KR":"جنوبی کوریا","KW":"کویت","KG":"کرغزستان","LA":"عوامی جمہوریہِ لاوء","LV":"لیٹویا","LB":"لبنان","LS":"لیسوتھو","LR":"لائبیریا","LY":"لیبیا","LI":"لیچسٹنسٹین","LT":"لیتھوانیا","LU":"لکسمبرگ","MO":"مکاؤ","MG":"مڈغاسکر","MW":"ملاوی","MY":"ملائیشیا","MV":"مالدیپ","ML":"مالی","MT":"مالٹا","MH":"مارشل جزائر","MQ":"مارٹنیک","MR":"موریطانیہ","MU":"ماریشس","YT":"میٹو","MX":"میکسیکو","FM":"مائیکرونیشیا","MD":"جمہوریہ مالڈووا","MC":"موناکو","MN":"منگولیا","MS":"مونٹسیریٹ","MA":"مراکش","MZ":"موزمبیق","MM":"میانمار","NA":"نامیبیا","NR":"نورو","NP":"نیپال","NL":"نیدرلینڈ","NC":"نیو کالیڈونیا","NZ":"نیوزی لینڈ","NI":"نکاراگوا","NE":"نائجر","NG":"نائجیریا","NU":"نییو","NF":"جزیرہ نورفوک","MP":"شمالی ماریانا جزائر","MK":"شمالی مقدونیہ","NO":"ناروے","OM":"عمان","PK":"پاکستان","PW":"پالاؤ","PS":"فلسطین","PA":"پاناما","PG":"پاپوا نیو گنی","PY":"پیراگوئے","PE":"پیرو","PH":"فلپائن","PN":"پٹکیرن","PL":"پولینڈ","PT":"پرتگال","PR":"پورٹو ریکو","QA":"قطر","RE":"ری یونین","RO":"رومانیہ","RU":"روس","RW":"روانڈا","SH":"سینٹ ہیلینا","KN":"سینٹ کٹس اور نیویس","LC":"سینٹ لوسیا","PM":"سینٹ پیئر و میکوئیلون","VC":"سینٹ ونسنٹ اور گریناڈینز","WS":"ساموآ","SM":"سان مارینو","ST":"ساؤ ٹوم اور پرنسپے","SA":"سعودی عرب","SN":"سینیگال","SC":"سیچیلز","SL":"سیرا لیون","SG":"سنگاپور","SK":"سلوواکیا","SI":"سلووینیا","SB":"جزائرِ سولومن","SO":"صومالیہ","ZA":"جنوبی افریقہ","GS":"جنوبی جارجیا اور جزائر جنوبی سینڈوچ","ES":"سپین","LK":"سری لنکا","SD":"سوڈان","SR":"سورینام","SJ":"سوولبارڈ اور جان میین","SZ":"سوزیلینڈ","SE":"سویڈن","CH":"سوئٹزرلینڈ","SY":"شام","TW":"تائیوان","TJ":"تاجکستان","TZ":"تنزانیہ","TH":"تھائی لینڈ","TL":"تیمور-لیس","TG":"ٹوگو","TK":"ٹوکیلو","TO":"ٹونگا","TT":"ٹرینیڈاڈ اور ٹوباگو","TN":"تیونس","TR":"ترکی","TM":"ترکمنستان","TC":"ترکی اور کیکوس جزائر","TV":"تووالو","UG":"یوگنڈا","UA":"یوکرین","AE":"متحدہ عرب امارات","GB":"برطانیہ","US":"ریاست ہائے متحدہ امریکہ","UM":"ریاست ہائے متحدہ امریکہ کے علیحدہ چھوٹے جزائر","UY":"یوراگوئے","UZ":"ازبکستان","VU":"وانوات","VE":"وینزویلا","VN":"ویت نام","VG":"جزائرِورجن، برطانوی","VI":"جزائرِورجن، امریکی","WF":"والس اور فتونہ","EH":"مغربی صحارا","YE":"یمن","ZM":"زامبیا","ZW":"زمبابوے","AX":"جزائرِ آلند","BQ":"بونیرے, سینٹ یستتئوس اینڈ صبا","CW":"کیوراساؤ","GG":"گرنسی","IM":"آیل آف مین","JE":"جرسی","ME":"مونٹینیگرو","BL":"سینٹ باریٹی","MF":"سینٹ مارٹن (فرانسیسی حصہ)","RS":"سربیا","SX":"سینٹ مارٹن (ولندیزی حصہ)","SS":"جنوبی سوڈان","XK":"کوسوو"}}'))},50313,a=>{a.v(JSON.parse('{"locale":"uz","countries":{"AD":"Andorra","AE":"Birlashgan Arab Amirliklari","AF":"Afgʻoniston","AG":"Antigua va Barbuda","AI":"Angilya","AL":"Albaniya","AM":"Armaniston","AO":"Angola","AQ":"Antarktida","AR":"Argentina","AS":"Amerika Samoasi","AT":"Avstriya","AU":"Avstraliya","AW":"Aruba","AX":"Aland orollari","AZ":"Ozarbayjon","BA":"Bosniya va Gertsegovina","BB":"Barbados","BD":"Bangladesh","BE":"Belgiya","BF":"Burkina-Faso","BG":"Bolgariya","BH":"Bahrayn","BI":"Burundi","BJ":"Benin","BL":"Sen-Bartelemi","BM":"Bermuda orollari","BN":"Bruney","BO":"Boliviya","BQ":"Boneyr, Sint-Estatius va Saba","BR":"Braziliya","BS":"Bagama orollari","BT":"Butan","BV":"Buve oroli","BW":"Botsvana","BY":"Belarus","BZ":"Beliz","CA":"Kanada","CC":"Kokos (Kiling) orollari","CD":"Kongo – Kinshasa","CF":"Markaziy Afrika Respublikasi","CG":"Kongo – Brazzavil","CH":"Shveytsariya","CI":"Kot-d’Ivuar","CK":"Kuk orollari","CL":"Chili","CM":"Kamerun","CN":"Xitoy","CO":"Kolumbiya","CR":"Kosta-Rika","CU":"Kuba","CV":"Kabo-Verde","CW":"Kyurasao","CX":"Rojdestvo oroli","CY":"Kipr","CZ":"Chexiya","DE":"Germaniya","DJ":"Jibuti","DK":"Daniya","DM":"Dominika","DO":"Dominikan Respublikasi","DZ":"Jazoir","EC":"Ekvador","EE":"Estoniya","EG":"Misr","EH":"G‘arbiy Sahroi Kabir","ER":"Eritreya","ES":"Ispaniya","ET":"Efiopiya","FI":"Finlandiya","FJ":"Fiji","FK":"Folklend orollari","FM":"Mikroneziya","FO":"Farer orollari","FR":"Fransiya","GA":"Gabon","GB":"Buyuk Britaniya","GD":"Grenada","GE":"Gruziya","GF":"Fransuz Gvianasi","GG":"Gernsi","GH":"Gana","GI":"Gibraltar","GL":"Grenlandiya","GM":"Gambiya","GN":"Gvineya","GP":"Gvadelupe","GQ":"Ekvatorial Gvineya","GR":"Gretsiya","GS":"Janubiy Georgiya va Janubiy Sendvich orollari","GT":"Gvatemala","GU":"Guam","GW":"Gvineya-Bisau","GY":"Gayana","HK":"Gonkong (Xitoy MMH)","HM":"Xerd va Makdonald orollari","HN":"Gonduras","HR":"Xorvatiya","HT":"Gaiti","HU":"Vengriya","ID":"Indoneziya","IE":"Irlandiya","IL":"Isroil","IM":"Men oroli","IN":"Hindiston","IO":"Britaniyaning Hind okeanidagi hududi","IQ":"Iroq","IR":"Eron","IS":"Islandiya","IT":"Italiya","JE":"Jersi","JM":"Yamayka","JO":"Iordaniya","JP":"Yaponiya","KE":"Keniya","KG":"Qirgʻiziston","KH":"Kambodja","KI":"Kiribati","KM":"Komor orollari","KN":"Sent-Kits va Nevis","KP":"Shimoliy Koreya","KR":"Janubiy Koreya","KW":"Quvayt","KY":"Kayman orollari","KZ":"Qozogʻiston","LA":"Laos","LB":"Livan","LC":"Sent-Lyusiya","LI":"Lixtenshteyn","LK":"Shri-Lanka","LR":"Liberiya","LS":"Lesoto","LT":"Litva","LU":"Lyuksemburg","LV":"Latviya","LY":"Liviya","MA":"Marokash","MC":"Monako","MD":"Moldova","ME":"Chernogoriya","MF":"Sent-Martin","MG":"Madagaskar","MH":"Marshall orollari","MK":"Shimoliy Makedoniya","ML":"Mali","MM":"Myanma (Birma)","MN":"Mongoliya","MO":"Makao (Xitoy MMH)","MP":"Shimoliy Mariana orollari","MQ":"Martinika","MR":"Mavritaniya","MS":"Montserrat","MT":"Malta","MU":"Mavrikiy","MV":"Maldiv orollari","MW":"Malavi","MX":"Meksika","MY":"Malayziya","MZ":"Mozambik","NA":"Namibiya","NC":"Yangi Kaledoniya","NE":"Niger","NF":"Norfolk oroli","NG":"Nigeriya","NI":"Nikaragua","NL":"Niderlandiya","NO":"Norvegiya","NP":"Nepal","NR":"Nauru","NU":"Niue","NZ":"Yangi Zelandiya","OM":"Ummon","PA":"Panama","PE":"Peru","PF":"Fransuz Polineziyasi","PG":"Papua – Yangi Gvineya","PH":"Filippin","PK":"Pokiston","PL":"Polsha","PM":"Sen-Pyer va Mikelon","PN":"Pitkern orollari","PR":"Puerto-Riko","PS":"Falastin hududi","PT":"Portugaliya","PW":"Palau","PY":"Paragvay","QA":"Qatar","RE":"Reyunion","RO":"Ruminiya","RS":"Serbiya","RU":"Rossiya","RW":"Ruanda","SA":"Saudiya Arabistoni","SB":"Solomon orollari","SC":"Seyshel orollari","SD":"Sudan","SE":"Shvetsiya","SG":"Singapur","SH":"Muqaddas Yelena oroli","SI":"Sloveniya","SJ":"Svalbard va Yan-Mayen","SK":"Slovakiya","SL":"Syerra-Leone","SM":"San-Marino","SN":"Senegal","SO":"Somali","SR":"Surinam","SS":"Janubiy Sudan","ST":"San-Tome va Prinsipi","SV":"Salvador","SX":"Sint-Marten","SY":"Suriya","SZ":"Svazilend","TC":"Turks va Kaykos orollari","TD":"Chad","TF":"Fransuz Janubiy hududlari","TG":"Togo","TH":"Tailand","TJ":"Tojikiston","TK":"Tokelau","TL":"Timor-Leste","TM":"Turkmaniston","TN":"Tunis","TO":"Tonga","TR":"Turkiya","TT":"Trinidad va Tobago","TV":"Tuvalu","TW":"Tayvan","TZ":"Tanzaniya","UA":"Ukraina","UG":"Uganda","UM":"AQSH yondosh orollari","US":"Amerika Qo‘shma Shtatlari","UY":"Urugvay","UZ":"Oʻzbekiston","VA":"Vatikan","VC":"Sent-Vinsent va Grenadin","VE":"Venesuela","VG":"Britaniya Virgin orollari","VI":"AQSH Virgin orollari","VN":"Vyetnam","VU":"Vanuatu","WF":"Uollis va Futuna","WS":"Samoa","XK":"Kosovo","YE":"Yaman","YT":"Mayotta","ZA":"Janubiy Afrika Respublikasi","ZM":"Zambiya","ZW":"Zimbabve"}}'))},93056,a=>{a.v(JSON.parse('{"locale":"vi","countries":{"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"American Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AQ":"Antarctica","AG":"Antigua và Barbuda","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Úc","AT":"Austria","AZ":"Azerbaijan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarus","BE":"Bỉ","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BA":"Bosnia và Herzegovina","BW":"Botswana","BV":"Đảo Bouvet","BR":"Brazil","IO":"Lãnh thổ Ấn Độ Dương thuộc Anh","BN":"Brunei Darussalam","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Campuchia","CM":"Cameroon","CA":"Canada","CV":"Cape Verde","KY":"Quần đảo Cayman","CF":"Cộng hòa Trung Phi","TD":"Chad","CL":"Chile","CN":"Trung Quốc","CX":"Đảo Giáng sinh","CC":"Quần đảo Cocos (Keeling)","CO":"Colombia","KM":"Comoros","CG":"Công-gô","CD":"Cộng hòa Dân chủ Công-gô","CK":"Quần đảo Cook","CR":"Costa Rica","CI":["Cote d\'Ivoire","Côte d\'Ivoire"],"HR":"Croatia","CU":"Cuba","CY":"Cyprus","CZ":"Cộng hòa Séc","DK":"Đan Mạch","DJ":"Djibouti","DM":"Dominica","DO":"Cộng hòa Dominica","EC":"Ecuador","EG":"Ai Cập","SV":"El Salvador","GQ":"Equatorial Guinea","ER":"Eritrea","EE":"Estonia","ET":"Ethiopia","FK":"Quần đảo Falkland (Malvinas)","FO":"Quần đảo Faroe","FJ":"Fiji","FI":"Phần Lan","FR":"Pháp","GF":"Guyane thuộc Pháp","PF":"Polynésie thuộc Pháp","TF":"Vùng đất phía Nam và châu Nam Cực thuộc Pháp","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Đức","GH":"Ghana","GI":"Gibraltar","GR":"Hy Lạp","GL":"Greenland","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HM":"Đảo Heard và Quần đảo Mcdonald","VA":"Tòa Thánh (Thành phố Vatican)","HN":"Honduras","HK":"Hồng Kông","HU":"Hungary","IS":"Iceland","IN":"Ấn Độ","ID":"Indonesia","IR":"Cộng hòa Hồi giáo Iran","IQ":"Iraq","IE":"Ireland","IL":"Israel","IT":"Ý","JM":"Jamaica","JP":"Nhật Bản","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KP":"Triều Tiên","KR":"Hàn Quốc","KW":"Cô-oét","KG":"Kyrgyzstan","LA":"Cộng hòa Dân chủ nhân dân Lào","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LY":"Libya","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxembourg","MO":"Ma Cao","MK":"Bắc Macedonia","MG":"Madagascar","MW":"Malawi","MY":"Bán đảo Mã Lai","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Quần đảo Marshall","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Liên bang Micronesia","MD":"Cộng hoà Moldova","MC":"Monaco","MN":"Mông Cổ","MS":"Montserrat","MA":"Ma-rốc","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru","NP":"Nepal","NL":"Hà Lan","NC":"New Caledonia","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue","NF":"Đảo Norfolk","MP":"Quần đảo Bắc Mariana","NO":"Na Uy","OM":"Oman","PK":"Pakistan","PW":"Palau","PS":"Lãnh thổ Palestine, bị chiếm đóng","PA":"Panama","PG":"Papua New Guinea","PY":"Paraguay","PE":"Peru","PH":"Philippines","PN":"Pitcairn","PL":"Ba Lan","PT":"Bồ Đào Nha","PR":"Puerto Rico","QA":"Qatar","RE":"Reunion","RO":"Rumani","RU":["Liên bang Nga","Nga"],"RW":"Rwanda","SH":"Saint Helena","KN":"Saint Kitts và Nevis","LC":"Saint Lucia","PM":"Saint Pierre và Miquelon","VC":"Saint Vincent và Grenadines","WS":"Samoa","SM":"San Marino","ST":"Sao Tome và Principe","SA":"Saudi Arabia","SN":"Senegal","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapore","SK":"Slovakia","SI":"Slovenia","SB":"Quần đảo Solomon","SO":"Somalia","ZA":"Nam Phi","GS":"Nam Georgia và Quần đảo Nam Sandwich","ES":"Tây Ban Nha","LK":"Sri Lanka","SD":"Sudan","SR":"Suriname","SJ":"Svalbard và Jan Mayen","SZ":"Eswatini","SE":"Thụy Điển","CH":"Thụy Sĩ","SY":"Cộng Hòa Arab Syrian","TW":"Đài Loan","TJ":"Tajikistan","TZ":"Cộng hòa Thống nhất Tanzania","TH":"Thái Lan","TL":"Timor-Leste","TG":"Togo","TK":"Tokelau","TO":"Tonga","TT":"Trinidad và Tobago","TN":"Tunisia","TR":"Thổ Nhĩ Kỳ","TM":"Turkmenistan","TC":"Quần đảo Turks và Caicos","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"Các Tiểu Vương Quốc Ả Rập Thống Nhất","GB":"Vương quốc Anh","US":["Hợp chủng quốc Hoa Kỳ","Mỹ"],"UM":"Quần đảo nhỏ hẻo lánh của Hoa Kỳ","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Việt Nam","VG":"Quần đảo Virgin, Anh","VI":"Quần đảo Virgin, Hoa Kỳ","WF":"Lãnh thổ quần đảo Wallis và Futuna","EH":"Tây Sahara","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe","AX":"Quần đảo Aland","BQ":"Bonaire, Sint Eustatius và Saba","CW":"Curaçao","GG":"Guernsey","IM":"Đảo Man","JE":"Jersey","ME":"Montenegro","BL":"Saint Barthélemy","MF":"Saint Martin (phần Pháp)","RS":"Serbia","SX":"Sint Maarten (phần Hà Lan)","SS":"Nam Sudan","XK":"Kosovo"}}'))},20298,a=>{a.v(JSON.parse('{"locale":"zh","countries":{"AD":"安道尔","AE":"阿联酋","AF":"阿富汗","AG":"安提瓜和巴布达","AI":"安圭拉","AL":"阿尔巴尼亚","AM":"亚美尼亚","AO":"安哥拉","AQ":"南极洲","AR":"阿根廷","AS":"美属萨摩亚","AT":"奥地利","AU":"澳大利亚","AW":"阿鲁巴","AX":"奥兰","AZ":"阿塞拜疆","BA":"波黑","BB":"巴巴多斯","BD":"孟加拉国","BE":"比利时","BF":"布基纳法索","BG":"保加利亚","BH":"巴林","BI":"布隆迪","BJ":"贝宁","BL":"圣巴泰勒米","BM":"百慕大","BN":"文莱","BO":"玻利维亚","BQ":"荷兰加勒比区","BR":"巴西","BS":"巴哈马","BT":"不丹","BV":"布韦岛","BW":"博茨瓦纳","BY":"白俄罗斯","BZ":"伯利兹","CA":"加拿大","CC":"科科斯（基林）群岛","CD":"刚果（金）","CF":"中非","CG":"刚果（布）","CH":"瑞士","CI":"科特迪瓦","CK":"库克群岛","CL":"智利","CM":"喀麦隆","CN":"中国","CO":"哥伦比亚","CR":"哥斯达黎加","CU":"古巴","CV":"佛得角","CW":"库拉索","CX":"圣诞岛","CY":"塞浦路斯","CZ":"捷克","DE":"德国","DJ":"吉布提","DK":"丹麦","DM":"多米尼克","DO":"多米尼加","DZ":"阿尔及利亚","EC":"厄瓜多尔","EE":"爱沙尼亚","EG":"埃及","EH":"阿拉伯撒哈拉民主共和国","ER":"厄立特里亚","ES":"西班牙","ET":"埃塞俄比亚","FI":"芬兰","FJ":"斐济","FK":"福克兰群岛","FM":"密克罗尼西亚联邦","FO":"法罗群岛","FR":"法国","GA":"加蓬","GB":"英国","GD":"格林纳达","GE":"格鲁吉亚","GF":"法属圭亚那","GG":"根西","GH":"加纳","GI":"直布罗陀","GL":"格陵兰","GM":"冈比亚","GN":"几内亚","GP":"瓜德罗普","GQ":"赤道几内亚","GR":"希腊","GS":"南乔治亚和南桑威奇群岛","GT":"危地马拉","GU":"关岛","GW":"几内亚比绍","GY":"圭亚那","HK":"香港","HM":"赫德岛和麦克唐纳群岛","HN":"洪都拉斯","HR":"克罗地亚","HT":"海地","HU":"匈牙利","ID":"印尼","IE":"爱尔兰","IL":"以色列","IM":"马恩岛","IN":"印度","IO":"英属印度洋领地","IQ":"伊拉克","IR":"伊朗","IS":"冰岛","IT":"意大利","JE":"泽西","JM":"牙买加","JO":"约旦","JP":"日本","KE":"肯尼亚","KG":"吉尔吉斯斯坦","KH":"柬埔寨","KI":"基里巴斯","KM":"科摩罗","KN":"圣基茨和尼维斯","KP":"朝鲜","KR":"韩国","KW":"科威特","KY":"开曼群岛","KZ":"哈萨克斯坦","LA":"老挝","LB":"黎巴嫩","LC":"圣卢西亚","LI":"列支敦士登","LK":"斯里兰卡","LR":"利比里亚","LS":"莱索托","LT":"立陶宛","LU":"卢森堡","LV":"拉脱维亚","LY":"利比亚","MA":"摩洛哥","MC":"摩纳哥","MD":"摩尔多瓦","ME":"黑山","MF":"法属圣马丁","MG":"马达加斯加","MH":"马绍尔群岛","MK":"北马其顿","ML":"马里","MM":"缅甸","MN":"蒙古","MO":"澳门","MP":"北马里亚纳群岛","MQ":"马提尼克","MR":"毛里塔尼亚","MS":"蒙特塞拉特","MT":"马耳他","MU":"毛里求斯","MV":"马尔代夫","MW":"马拉维","MX":"墨西哥","MY":"马来西亚","MZ":"莫桑比克","NA":"纳米比亚","NC":"新喀里多尼亚","NE":"尼日尔","NF":"诺福克岛","NG":"尼日利亚","NI":"尼加拉瓜","NL":"荷兰","NO":"挪威","NP":"尼泊尔","NR":"瑙鲁","NU":"纽埃","NZ":"新西兰","OM":"阿曼","PA":"巴拿马","PE":"秘鲁","PF":"法属波利尼西亚","PG":"巴布亚新几内亚","PH":"菲律宾","PK":"巴基斯坦","PL":"波兰","PM":"圣皮埃尔和密克隆","PN":"皮特凯恩群岛","PR":"波多黎各","PS":"巴勒斯坦","PT":"葡萄牙","PW":"帕劳","PY":"巴拉圭","QA":"卡塔尔","RE":"留尼汪","RO":"罗马尼亚","RS":"塞尔维亚","RU":"俄罗斯","RW":"卢旺达","SA":"沙特阿拉伯","SB":"所罗门群岛","SC":"塞舌尔","SD":"苏丹","SE":"瑞典","SG":"新加坡","SH":"圣赫勒拿、阿森松和特里斯坦-达库尼亚","SI":"斯洛文尼亚","SJ":"斯瓦尔巴和扬马延","SK":"斯洛伐克","SL":"塞拉利昂","SM":"圣马力诺","SN":"塞内加尔","SO":"索马里","SR":"苏里南","SS":"南苏丹","ST":"圣多美和普林西比","SV":"萨尔瓦多","SX":"荷属圣马丁","SY":"叙利亚","SZ":"斯威士兰","TC":"特克斯和凯科斯群岛","TD":"乍得","TF":"法属南部领地","TG":"多哥","TH":"泰国","TJ":"塔吉克斯坦","TK":"托克劳","TL":"东帝汶","TM":"土库曼斯坦","TN":"突尼斯","TO":"汤加","TR":"土耳其","TT":"特立尼达和多巴哥","TV":"图瓦卢","TW":"中国台湾省","TZ":"坦桑尼亚","UA":"乌克兰","UG":"乌干达","UM":"美国本土外小岛屿","US":"美国","UY":"乌拉圭","UZ":"乌兹别克斯坦","VA":"梵蒂冈","VC":"圣文森特和格林纳丁斯","VE":"委内瑞拉","VG":"英属维尔京群岛","VI":"美属维尔京群岛","VN":"越南","VU":"瓦努阿图","WF":"瓦利斯和富图纳","WS":"萨摩亚","XK":"科索沃","YE":"也门","YT":"马约特","ZA":"南非","ZM":"赞比亚","ZW":"津巴布韦"}}'))},33395,(a,b,c)=>{for(var d=a.r(44585),e=d.getSupportedLanguages(),f=0;f<e.length;f++){var g=a.f({"./langs/af.json":{id:()=>92807,module:()=>a.r(92807)},"./langs/am.json":{id:()=>68264,module:()=>a.r(68264)},"./langs/ar.json":{id:()=>13124,module:()=>a.r(13124)},"./langs/az.json":{id:()=>1025,module:()=>a.r(1025)},"./langs/be.json":{id:()=>84669,module:()=>a.r(84669)},"./langs/bg.json":{id:()=>68251,module:()=>a.r(68251)},"./langs/bn.json":{id:()=>59934,module:()=>a.r(59934)},"./langs/br.json":{id:()=>71899,module:()=>a.r(71899)},"./langs/bs.json":{id:()=>10571,module:()=>a.r(10571)},"./langs/ca.json":{id:()=>19513,module:()=>a.r(19513)},"./langs/cs.json":{id:()=>72726,module:()=>a.r(72726)},"./langs/cy.json":{id:()=>16153,module:()=>a.r(16153)},"./langs/da.json":{id:()=>70483,module:()=>a.r(70483)},"./langs/de.json":{id:()=>20037,module:()=>a.r(20037)},"./langs/dv.json":{id:()=>27115,module:()=>a.r(27115)},"./langs/el.json":{id:()=>85944,module:()=>a.r(85944)},"./langs/en.json":{id:()=>41442,module:()=>a.r(41442)},"./langs/es.json":{id:()=>68830,module:()=>a.r(68830)},"./langs/et.json":{id:()=>71132,module:()=>a.r(71132)},"./langs/eu.json":{id:()=>63782,module:()=>a.r(63782)},"./langs/fa.json":{id:()=>2558,module:()=>a.r(2558)},"./langs/fi.json":{id:()=>21842,module:()=>a.r(21842)},"./langs/fr.json":{id:()=>36560,module:()=>a.r(36560)},"./langs/ga.json":{id:()=>64950,module:()=>a.r(64950)},"./langs/gl.json":{id:()=>42027,module:()=>a.r(42027)},"./langs/ha.json":{id:()=>75932,module:()=>a.r(75932)},"./langs/he.json":{id:()=>69795,module:()=>a.r(69795)},"./langs/hi.json":{id:()=>72187,module:()=>a.r(72187)},"./langs/hr.json":{id:()=>98097,module:()=>a.r(98097)},"./langs/hu.json":{id:()=>2728,module:()=>a.r(2728)},"./langs/hy.json":{id:()=>58069,module:()=>a.r(58069)},"./langs/id.json":{id:()=>67684,module:()=>a.r(67684)},"./langs/is.json":{id:()=>50381,module:()=>a.r(50381)},"./langs/it.json":{id:()=>6586,module:()=>a.r(6586)},"./langs/ja.json":{id:()=>18606,module:()=>a.r(18606)},"./langs/ka.json":{id:()=>59341,module:()=>a.r(59341)},"./langs/kk.json":{id:()=>30744,module:()=>a.r(30744)},"./langs/km.json":{id:()=>58665,module:()=>a.r(58665)},"./langs/ko.json":{id:()=>3492,module:()=>a.r(3492)},"./langs/ku.json":{id:()=>501,module:()=>a.r(501)},"./langs/ky.json":{id:()=>99833,module:()=>a.r(99833)},"./langs/lt.json":{id:()=>36740,module:()=>a.r(36740)},"./langs/lv.json":{id:()=>50202,module:()=>a.r(50202)},"./langs/mk.json":{id:()=>77340,module:()=>a.r(77340)},"./langs/ml.json":{id:()=>13192,module:()=>a.r(13192)},"./langs/mn.json":{id:()=>70527,module:()=>a.r(70527)},"./langs/mr.json":{id:()=>94307,module:()=>a.r(94307)},"./langs/ms.json":{id:()=>16099,module:()=>a.r(16099)},"./langs/mt.json":{id:()=>11176,module:()=>a.r(11176)},"./langs/nb.json":{id:()=>58268,module:()=>a.r(58268)},"./langs/nl.json":{id:()=>11595,module:()=>a.r(11595)},"./langs/nn.json":{id:()=>38398,module:()=>a.r(38398)},"./langs/no.json":{id:()=>2443,module:()=>a.r(2443)},"./langs/pl.json":{id:()=>84803,module:()=>a.r(84803)},"./langs/ps.json":{id:()=>34934,module:()=>a.r(34934)},"./langs/pt.json":{id:()=>59452,module:()=>a.r(59452)},"./langs/ro.json":{id:()=>99997,module:()=>a.r(99997)},"./langs/ru.json":{id:()=>55527,module:()=>a.r(55527)},"./langs/sd.json":{id:()=>40842,module:()=>a.r(40842)},"./langs/sk.json":{id:()=>34686,module:()=>a.r(34686)},"./langs/sl.json":{id:()=>18366,module:()=>a.r(18366)},"./langs/so.json":{id:()=>64218,module:()=>a.r(64218)},"./langs/sq.json":{id:()=>19234,module:()=>a.r(19234)},"./langs/sr.json":{id:()=>62960,module:()=>a.r(62960)},"./langs/sv.json":{id:()=>75166,module:()=>a.r(75166)},"./langs/sw.json":{id:()=>15245,module:()=>a.r(15245)},"./langs/ta.json":{id:()=>70774,module:()=>a.r(70774)},"./langs/tg.json":{id:()=>73847,module:()=>a.r(73847)},"./langs/th.json":{id:()=>53806,module:()=>a.r(53806)},"./langs/tk.json":{id:()=>86148,module:()=>a.r(86148)},"./langs/tr.json":{id:()=>94794,module:()=>a.r(94794)},"./langs/tt.json":{id:()=>87841,module:()=>a.r(87841)},"./langs/ug.json":{id:()=>27012,module:()=>a.r(27012)},"./langs/uk.json":{id:()=>40113,module:()=>a.r(40113)},"./langs/ur.json":{id:()=>34217,module:()=>a.r(34217)},"./langs/uz.json":{id:()=>50313,module:()=>a.r(50313)},"./langs/vi.json":{id:()=>93056,module:()=>a.r(93056)},"./langs/zh.json":{id:()=>20298,module:()=>a.r(20298)}})("./langs/"+e[f]+".json");d.registerLocale(g)}b.exports=d},58032,a=>{"use strict";a.s(["allCountries",()=>d,"isCountry",()=>e]);var b=a.i(33395),c=a.i(41442);function d(){return Object.entries(b.default.getNames("en",{select:"official"})).map(([a,b])=>({code:a,name:b})).sort((a,b)=>a.name.localeCompare(b.name))}function e(a){if(!a)return!1;try{return!!b.default.alpha2ToNumeric(a.toUpperCase())}catch{return!1}}b.default.registerLocale(c.default)},9274,a=>{"use strict";function b(a){return(a||"").toUpperCase().replace(/[\s\-.]/g,"")}a.s(["isValidPassport",()=>g,"normalizePassport",()=>h,"passportPatternFor",()=>f],9274);let c={CA:{re:/^[A-Z]{2}\d{6}$/,minLen:8,maxLen:8,hint:"AA123456"},US:{re:/^([A-Z]\d{8}|\d{9})$/,minLen:9,maxLen:9,hint:"A12345678 or 123456789"},IN:{re:/^[A-Z]\d{7}$/,minLen:8,maxLen:8,hint:"A1234567"},PH:{re:/^([A-Z]\d{6}|[A-Z]{2}\d{6,7}|[A-Z]\d{7}[A-Z])$/,minLen:7,maxLen:9,hint:"P1234567 / AB123456 / AB1234567"},GB:{re:/^\d{9}$/,minLen:9,maxLen:9,hint:"123456789"},PK:{re:/^[A-Z]{2}\d{7}$/,minLen:9,maxLen:9,hint:"AB1234567"},BD:{re:/^[A-Z]\d{7}$/,minLen:8,maxLen:8,hint:"A1234567"},NG:{re:/^[A-Z]\d{8}$/,minLen:9,maxLen:9,hint:"A12345678"},CN:{re:/^[EGDSP]\d{8}$/,minLen:9,maxLen:9,hint:"E12345678"},MX:{re:/^[A-Z]\d{8}$/,minLen:9,maxLen:9,hint:"A12345678"}},d={re:/^[A-Z0-9]{6,10}$/,minLen:6,maxLen:10,hint:"6–10 letters/digits"};var e=a.i(58032);function f(a){let b=(a||"").toUpperCase();return(0,e.isCountry)(b)?c[b]??d:d}function g(a,c){return f(a).re.test(b(c))}function h(a){return b(a)}},40254,a=>{"use strict";a.s(["RegisterSchema",()=>dG,"normalizeForStorage",()=>dH],40254),a.s(["$brand",()=>dr.$brand,"$input",()=>dq.$input,"$output",()=>dq.$output,"NEVER",()=>dr.NEVER,"TimePrecision",()=>du.TimePrecision,"ZodAny",()=>a1,"ZodArray",()=>bb,"ZodBase64",()=>av,"ZodBase64URL",()=>ax,"ZodBigInt",()=>aS,"ZodBigIntFormat",()=>aU,"ZodBoolean",()=>aQ,"ZodCIDRv4",()=>ar,"ZodCIDRv6",()=>at,"ZodCUID",()=>ad,"ZodCUID2",()=>af,"ZodCatch",()=>bT,"ZodCodec",()=>bZ,"ZodCustom",()=>b9,"ZodCustomStringFormat",()=>aD,"ZodDate",()=>a9,"ZodDefault",()=>bL,"ZodDiscriminatedUnion",()=>bk,"ZodE164",()=>az,"ZodEmail",()=>P,"ZodEmoji",()=>_,"ZodEnum",()=>bx,"ZodError",()=>w,"ZodFile",()=>bC,"ZodFirstPartyTypeKind",()=>b,"ZodFunction",()=>b7,"ZodGUID",()=>R,"ZodIPv4",()=>an,"ZodIPv6",()=>ap,"ZodISODate",()=>m,"ZodISODateTime",()=>k,"ZodISODuration",()=>q,"ZodISOTime",()=>o,"ZodIntersection",()=>bm,"ZodIssueCode",()=>ci,"ZodJWT",()=>aB,"ZodKSUID",()=>al,"ZodLazy",()=>b3,"ZodLiteral",()=>bA,"ZodMap",()=>bt,"ZodNaN",()=>bV,"ZodNanoID",()=>ab,"ZodNever",()=>a5,"ZodNonOptional",()=>bP,"ZodNull",()=>a_,"ZodNullable",()=>bI,"ZodNumber",()=>aI,"ZodNumberFormat",()=>aK,"ZodObject",()=>be,"ZodOptional",()=>bG,"ZodPipe",()=>bX,"ZodPrefault",()=>bN,"ZodPromise",()=>b5,"ZodReadonly",()=>b_,"ZodRealError",()=>x,"ZodRecord",()=>bq,"ZodSet",()=>bv,"ZodString",()=>M,"ZodStringFormat",()=>O,"ZodSuccess",()=>bR,"ZodSymbol",()=>aX,"ZodTemplateLiteral",()=>b1,"ZodTransform",()=>bE,"ZodTuple",()=>bo,"ZodType",()=>K,"ZodULID",()=>ah,"ZodURL",()=>Y,"ZodUUID",()=>T,"ZodUndefined",()=>aZ,"ZodUnion",()=>bi,"ZodUnknown",()=>a3,"ZodVoid",()=>a7,"ZodXID",()=>aj,"_ZodString",()=>L,"_default",()=>bM,"_function",()=>b8,"any",()=>a2,"array",()=>bc,"base64",()=>aw,"base64url",()=>ay,"bigint",()=>aT,"boolean",()=>aR,"catch",()=>bU,"check",()=>ca,"cidrv4",()=>as,"cidrv6",()=>au,"clone",()=>e.clone,"codec",()=>b$,"coerce",()=>dx,"config",()=>dr.config,"core",()=>dm,"cuid",()=>ae,"cuid2",()=>ag,"custom",()=>cb,"date",()=>ba,"decode",()=>D,"decodeAsync",()=>F,"discriminatedUnion",()=>bl,"e164",()=>aA,"email",()=>Q,"emoji",()=>aa,"encode",()=>C,"encodeAsync",()=>E,"endsWith",()=>dn._endsWith,"enum",()=>by,"file",()=>bD,"flattenError",()=>ds.flattenError,"float32",()=>aM,"float64",()=>aN,"formatError",()=>ds.formatError,"function",()=>b8,"getErrorMap",()=>ck,"globalRegistry",()=>dq.globalRegistry,"gt",()=>dn._gt,"gte",()=>dn._gte,"guid",()=>S,"hash",()=>aH,"hex",()=>aG,"hostname",()=>aF,"httpUrl",()=>$,"includes",()=>dn._includes,"instanceof",()=>ce,"int",()=>aL,"int32",()=>aO,"int64",()=>aV,"intersection",()=>bn,"ipv4",()=>ao,"ipv6",()=>aq,"iso",()=>dw,"json",()=>cg,"jwt",()=>aC,"keyof",()=>bd,"ksuid",()=>am,"lazy",()=>b4,"length",()=>dn._length,"literal",()=>bB,"locales",()=>dv,"looseObject",()=>bh,"lowercase",()=>dn._lowercase,"lt",()=>dn._lt,"lte",()=>dn._lte,"map",()=>bu,"maxLength",()=>dn._maxLength,"maxSize",()=>dn._maxSize,"mime",()=>dn._mime,"minLength",()=>dn._minLength,"minSize",()=>dn._minSize,"multipleOf",()=>dn._multipleOf,"nan",()=>bW,"nanoid",()=>ac,"nativeEnum",()=>bz,"negative",()=>dn._negative,"never",()=>a6,"nonnegative",()=>dn._nonnegative,"nonoptional",()=>bQ,"nonpositive",()=>dn._nonpositive,"normalize",()=>dn._normalize,"null",()=>a0,"nullable",()=>bJ,"nullish",()=>bK,"number",()=>aJ,"object",()=>bf,"optional",()=>bH,"overwrite",()=>dn._overwrite,"parse",()=>y,"parseAsync",()=>z,"partialRecord",()=>bs,"pipe",()=>bY,"positive",()=>dn._positive,"prefault",()=>bO,"preprocess",()=>ch,"prettifyError",()=>ds.prettifyError,"promise",()=>b6,"property",()=>dn._property,"readonly",()=>b0,"record",()=>br,"refine",()=>cc,"regex",()=>dn._regex,"regexes",()=>h,"registry",()=>dq.registry,"safeDecode",()=>H,"safeDecodeAsync",()=>J,"safeEncode",()=>G,"safeEncodeAsync",()=>I,"safeParse",()=>A,"safeParseAsync",()=>B,"set",()=>bw,"setErrorMap",()=>cj,"size",()=>dn._size,"startsWith",()=>dn._startsWith,"strictObject",()=>bg,"string",()=>N,"stringFormat",()=>aE,"stringbool",()=>cf,"success",()=>bS,"superRefine",()=>cd,"symbol",()=>aY,"templateLiteral",()=>b2,"toJSONSchema",()=>dt.toJSONSchema,"toLowerCase",()=>dn._toLowerCase,"toUpperCase",()=>dn._toUpperCase,"transform",()=>bF,"treeifyError",()=>ds.treeifyError,"trim",()=>dn._trim,"tuple",()=>bp,"uint32",()=>aP,"uint64",()=>aW,"ulid",()=>ai,"undefined",()=>a$,"union",()=>bj,"unknown",()=>a4,"uppercase",()=>dn._uppercase,"url",()=>Z,"util",()=>j,"uuid",()=>U,"uuidv4",()=>V,"uuidv6",()=>W,"uuidv7",()=>X,"void",()=>a8,"xid",()=>ak],17275),a.s([],96229),a.i(22657),a.s(["ZodAny",()=>a1,"ZodArray",()=>bb,"ZodBase64",()=>av,"ZodBase64URL",()=>ax,"ZodBigInt",()=>aS,"ZodBigIntFormat",()=>aU,"ZodBoolean",()=>aQ,"ZodCIDRv4",()=>ar,"ZodCIDRv6",()=>at,"ZodCUID",()=>ad,"ZodCUID2",()=>af,"ZodCatch",()=>bT,"ZodCodec",()=>bZ,"ZodCustom",()=>b9,"ZodCustomStringFormat",()=>aD,"ZodDate",()=>a9,"ZodDefault",()=>bL,"ZodDiscriminatedUnion",()=>bk,"ZodE164",()=>az,"ZodEmail",()=>P,"ZodEmoji",()=>_,"ZodEnum",()=>bx,"ZodFile",()=>bC,"ZodFunction",()=>b7,"ZodGUID",()=>R,"ZodIPv4",()=>an,"ZodIPv6",()=>ap,"ZodIntersection",()=>bm,"ZodJWT",()=>aB,"ZodKSUID",()=>al,"ZodLazy",()=>b3,"ZodLiteral",()=>bA,"ZodMap",()=>bt,"ZodNaN",()=>bV,"ZodNanoID",()=>ab,"ZodNever",()=>a5,"ZodNonOptional",()=>bP,"ZodNull",()=>a_,"ZodNullable",()=>bI,"ZodNumber",()=>aI,"ZodNumberFormat",()=>aK,"ZodObject",()=>be,"ZodOptional",()=>bG,"ZodPipe",()=>bX,"ZodPrefault",()=>bN,"ZodPromise",()=>b5,"ZodReadonly",()=>b_,"ZodRecord",()=>bq,"ZodSet",()=>bv,"ZodString",()=>M,"ZodStringFormat",()=>O,"ZodSuccess",()=>bR,"ZodSymbol",()=>aX,"ZodTemplateLiteral",()=>b1,"ZodTransform",()=>bE,"ZodTuple",()=>bo,"ZodType",()=>K,"ZodULID",()=>ah,"ZodURL",()=>Y,"ZodUUID",()=>T,"ZodUndefined",()=>aZ,"ZodUnion",()=>bi,"ZodUnknown",()=>a3,"ZodVoid",()=>a7,"ZodXID",()=>aj,"_ZodString",()=>L,"_default",()=>bM,"_function",()=>b8,"any",()=>a2,"array",()=>bc,"base64",()=>aw,"base64url",()=>ay,"bigint",()=>aT,"boolean",()=>aR,"catch",()=>bU,"check",()=>ca,"cidrv4",()=>as,"cidrv6",()=>au,"codec",()=>b$,"cuid",()=>ae,"cuid2",()=>ag,"custom",()=>cb,"date",()=>ba,"discriminatedUnion",()=>bl,"e164",()=>aA,"email",()=>Q,"emoji",()=>aa,"enum",()=>by,"file",()=>bD,"float32",()=>aM,"float64",()=>aN,"function",()=>b8,"guid",()=>S,"hash",()=>aH,"hex",()=>aG,"hostname",()=>aF,"httpUrl",()=>$,"instanceof",()=>ce,"int",()=>aL,"int32",()=>aO,"int64",()=>aV,"intersection",()=>bn,"ipv4",()=>ao,"ipv6",()=>aq,"json",()=>cg,"jwt",()=>aC,"keyof",()=>bd,"ksuid",()=>am,"lazy",()=>b4,"literal",()=>bB,"looseObject",()=>bh,"map",()=>bu,"nan",()=>bW,"nanoid",()=>ac,"nativeEnum",()=>bz,"never",()=>a6,"nonoptional",()=>bQ,"null",()=>a0,"nullable",()=>bJ,"nullish",()=>bK,"number",()=>aJ,"object",()=>bf,"optional",()=>bH,"partialRecord",()=>bs,"pipe",()=>bY,"prefault",()=>bO,"preprocess",()=>ch,"promise",()=>b6,"readonly",()=>b0,"record",()=>br,"refine",()=>cc,"set",()=>bw,"strictObject",()=>bg,"string",()=>N,"stringFormat",()=>aE,"stringbool",()=>cf,"success",()=>bS,"superRefine",()=>cd,"symbol",()=>aY,"templateLiteral",()=>b2,"transform",()=>bF,"tuple",()=>bp,"uint32",()=>aP,"uint64",()=>aW,"ulid",()=>ai,"undefined",()=>a$,"union",()=>bj,"unknown",()=>a4,"url",()=>Z,"uuid",()=>U,"uuidv4",()=>V,"uuidv6",()=>W,"uuidv7",()=>X,"void",()=>a8,"xid",()=>ak],15686);var b,c=a.i(86978);a.s(["$ZodAny",()=>d.$ZodAny,"$ZodArray",()=>d.$ZodArray,"$ZodBase64",()=>d.$ZodBase64,"$ZodBase64URL",()=>d.$ZodBase64URL,"$ZodBigInt",()=>d.$ZodBigInt,"$ZodBigIntFormat",()=>d.$ZodBigIntFormat,"$ZodBoolean",()=>d.$ZodBoolean,"$ZodCIDRv4",()=>d.$ZodCIDRv4,"$ZodCIDRv6",()=>d.$ZodCIDRv6,"$ZodCUID",()=>d.$ZodCUID,"$ZodCUID2",()=>d.$ZodCUID2,"$ZodCatch",()=>d.$ZodCatch,"$ZodCodec",()=>d.$ZodCodec,"$ZodCustom",()=>d.$ZodCustom,"$ZodCustomStringFormat",()=>d.$ZodCustomStringFormat,"$ZodDate",()=>d.$ZodDate,"$ZodDefault",()=>d.$ZodDefault,"$ZodDiscriminatedUnion",()=>d.$ZodDiscriminatedUnion,"$ZodE164",()=>d.$ZodE164,"$ZodEmail",()=>d.$ZodEmail,"$ZodEmoji",()=>d.$ZodEmoji,"$ZodEnum",()=>d.$ZodEnum,"$ZodFile",()=>d.$ZodFile,"$ZodFunction",()=>d.$ZodFunction,"$ZodGUID",()=>d.$ZodGUID,"$ZodIPv4",()=>d.$ZodIPv4,"$ZodIPv6",()=>d.$ZodIPv6,"$ZodISODate",()=>d.$ZodISODate,"$ZodISODateTime",()=>d.$ZodISODateTime,"$ZodISODuration",()=>d.$ZodISODuration,"$ZodISOTime",()=>d.$ZodISOTime,"$ZodIntersection",()=>d.$ZodIntersection,"$ZodJWT",()=>d.$ZodJWT,"$ZodKSUID",()=>d.$ZodKSUID,"$ZodLazy",()=>d.$ZodLazy,"$ZodLiteral",()=>d.$ZodLiteral,"$ZodMap",()=>d.$ZodMap,"$ZodNaN",()=>d.$ZodNaN,"$ZodNanoID",()=>d.$ZodNanoID,"$ZodNever",()=>d.$ZodNever,"$ZodNonOptional",()=>d.$ZodNonOptional,"$ZodNull",()=>d.$ZodNull,"$ZodNullable",()=>d.$ZodNullable,"$ZodNumber",()=>d.$ZodNumber,"$ZodNumberFormat",()=>d.$ZodNumberFormat,"$ZodObject",()=>d.$ZodObject,"$ZodObjectJIT",()=>d.$ZodObjectJIT,"$ZodOptional",()=>d.$ZodOptional,"$ZodPipe",()=>d.$ZodPipe,"$ZodPrefault",()=>d.$ZodPrefault,"$ZodPromise",()=>d.$ZodPromise,"$ZodReadonly",()=>d.$ZodReadonly,"$ZodRecord",()=>d.$ZodRecord,"$ZodSet",()=>d.$ZodSet,"$ZodString",()=>d.$ZodString,"$ZodStringFormat",()=>d.$ZodStringFormat,"$ZodSuccess",()=>d.$ZodSuccess,"$ZodSymbol",()=>d.$ZodSymbol,"$ZodTemplateLiteral",()=>d.$ZodTemplateLiteral,"$ZodTransform",()=>d.$ZodTransform,"$ZodTuple",()=>d.$ZodTuple,"$ZodType",()=>d.$ZodType,"$ZodULID",()=>d.$ZodULID,"$ZodURL",()=>d.$ZodURL,"$ZodUUID",()=>d.$ZodUUID,"$ZodUndefined",()=>d.$ZodUndefined,"$ZodUnion",()=>d.$ZodUnion,"$ZodUnknown",()=>d.$ZodUnknown,"$ZodVoid",()=>d.$ZodVoid,"$ZodXID",()=>d.$ZodXID,"clone",()=>e.clone,"isValidBase64",()=>d.isValidBase64,"isValidBase64URL",()=>d.isValidBase64URL,"isValidJWT",()=>d.isValidJWT],17259);var d=a.i(80818),e=a.i(67924),d=d,f=a.i(8173),g=a.i(61130),h=a.i(58005),h=h,i=a.i(31227),j=e;a.s([],48665);a.s(["ZodISODate",()=>m,"ZodISODateTime",()=>k,"ZodISODuration",()=>q,"ZodISOTime",()=>o,"date",()=>n,"datetime",()=>l,"duration",()=>r,"time",()=>p],64561);var d=d;let k=c.$constructor("ZodISODateTime",(a,b)=>{d.$ZodISODateTime.init(a,b),O.init(a,b)});function l(a){return g._isoDateTime(k,a)}let m=c.$constructor("ZodISODate",(a,b)=>{d.$ZodISODate.init(a,b),O.init(a,b)});function n(a){return g._isoDate(m,a)}let o=c.$constructor("ZodISOTime",(a,b)=>{d.$ZodISOTime.init(a,b),O.init(a,b)});function p(a){return g._isoTime(o,a)}let q=c.$constructor("ZodISODuration",(a,b)=>{d.$ZodISODuration.init(a,b),O.init(a,b)});function r(a){return g._isoDuration(q,a)}a.s(["decode",()=>D,"decodeAsync",()=>F,"encode",()=>C,"encodeAsync",()=>E,"parse",()=>y,"parseAsync",()=>z,"safeDecode",()=>H,"safeDecodeAsync",()=>J,"safeEncode",()=>G,"safeEncodeAsync",()=>I,"safeParse",()=>A,"safeParseAsync",()=>B],88381);var s=a.i(81573);a.s(["ZodError",()=>w,"ZodRealError",()=>x],55195);var t=a.i(23387),u=e;let v=(a,b)=>{t.$ZodError.init(a,b),a.name="ZodError",Object.defineProperties(a,{format:{value:b=>t.formatError(a,b)},flatten:{value:b=>t.flattenError(a,b)},addIssue:{value:b=>{a.issues.push(b),a.message=JSON.stringify(a.issues,u.jsonStringifyReplacer,2)}},addIssues:{value:b=>{a.issues.push(...b),a.message=JSON.stringify(a.issues,u.jsonStringifyReplacer,2)}},isEmpty:{get:()=>0===a.issues.length}})},w=c.$constructor("ZodError",v),x=c.$constructor("ZodError",v,{Parent:Error}),y=s._parse(x),z=s._parseAsync(x),A=s._safeParse(x),B=s._safeParseAsync(x),C=s._encode(x),D=s._decode(x),E=s._encodeAsync(x),F=s._decodeAsync(x),G=s._safeEncode(x),H=s._safeDecode(x),I=s._safeEncodeAsync(x),J=s._safeDecodeAsync(x),K=c.$constructor("ZodType",(a,b)=>(d.$ZodType.init(a,b),a.def=b,a.type=b.type,Object.defineProperty(a,"_def",{value:b}),a.check=(...c)=>a.clone({...b,checks:[...b.checks??[],...c.map(a=>"function"==typeof a?{_zod:{check:a,def:{check:"custom"},onattach:[]}}:a)]}),a.clone=(b,c)=>e.clone(a,b,c),a.brand=()=>a,a.register=(b,c)=>(b.add(a,c),a),a.parse=(b,c)=>y(a,b,c,{callee:a.parse}),a.safeParse=(b,c)=>A(a,b,c),a.parseAsync=async(b,c)=>z(a,b,c,{callee:a.parseAsync}),a.safeParseAsync=async(b,c)=>B(a,b,c),a.spa=a.safeParseAsync,a.encode=(b,c)=>C(a,b,c),a.decode=(b,c)=>D(a,b,c),a.encodeAsync=async(b,c)=>E(a,b,c),a.decodeAsync=async(b,c)=>F(a,b,c),a.safeEncode=(b,c)=>G(a,b,c),a.safeDecode=(b,c)=>H(a,b,c),a.safeEncodeAsync=async(b,c)=>I(a,b,c),a.safeDecodeAsync=async(b,c)=>J(a,b,c),a.refine=(b,c)=>a.check(cc(b,c)),a.superRefine=b=>a.check(cd(b)),a.overwrite=b=>a.check(g._overwrite(b)),a.optional=()=>bH(a),a.nullable=()=>bJ(a),a.nullish=()=>bH(bJ(a)),a.nonoptional=b=>bQ(a,b),a.array=()=>bc(a),a.or=b=>bj([a,b]),a.and=b=>bn(a,b),a.transform=b=>bY(a,bF(b)),a.default=b=>bM(a,b),a.prefault=b=>bO(a,b),a.catch=b=>bU(a,b),a.pipe=b=>bY(a,b),a.readonly=()=>b0(a),a.describe=b=>{let c=a.clone();return f.globalRegistry.add(c,{description:b}),c},Object.defineProperty(a,"description",{get:()=>f.globalRegistry.get(a)?.description,configurable:!0}),a.meta=(...b)=>{if(0===b.length)return f.globalRegistry.get(a);let c=a.clone();return f.globalRegistry.add(c,b[0]),c},a.isOptional=()=>a.safeParse(void 0).success,a.isNullable=()=>a.safeParse(null).success,a)),L=c.$constructor("_ZodString",(a,b)=>{d.$ZodString.init(a,b),K.init(a,b);let c=a._zod.bag;a.format=c.format??null,a.minLength=c.minimum??null,a.maxLength=c.maximum??null,a.regex=(...b)=>a.check(g._regex(...b)),a.includes=(...b)=>a.check(g._includes(...b)),a.startsWith=(...b)=>a.check(g._startsWith(...b)),a.endsWith=(...b)=>a.check(g._endsWith(...b)),a.min=(...b)=>a.check(g._minLength(...b)),a.max=(...b)=>a.check(g._maxLength(...b)),a.length=(...b)=>a.check(g._length(...b)),a.nonempty=(...b)=>a.check(g._minLength(1,...b)),a.lowercase=b=>a.check(g._lowercase(b)),a.uppercase=b=>a.check(g._uppercase(b)),a.trim=()=>a.check(g._trim()),a.normalize=(...b)=>a.check(g._normalize(...b)),a.toLowerCase=()=>a.check(g._toLowerCase()),a.toUpperCase=()=>a.check(g._toUpperCase())}),M=c.$constructor("ZodString",(a,b)=>{d.$ZodString.init(a,b),L.init(a,b),a.email=b=>a.check(g._email(P,b)),a.url=b=>a.check(g._url(Y,b)),a.jwt=b=>a.check(g._jwt(aB,b)),a.emoji=b=>a.check(g._emoji(_,b)),a.guid=b=>a.check(g._guid(R,b)),a.uuid=b=>a.check(g._uuid(T,b)),a.uuidv4=b=>a.check(g._uuidv4(T,b)),a.uuidv6=b=>a.check(g._uuidv6(T,b)),a.uuidv7=b=>a.check(g._uuidv7(T,b)),a.nanoid=b=>a.check(g._nanoid(ab,b)),a.guid=b=>a.check(g._guid(R,b)),a.cuid=b=>a.check(g._cuid(ad,b)),a.cuid2=b=>a.check(g._cuid2(af,b)),a.ulid=b=>a.check(g._ulid(ah,b)),a.base64=b=>a.check(g._base64(av,b)),a.base64url=b=>a.check(g._base64url(ax,b)),a.xid=b=>a.check(g._xid(aj,b)),a.ksuid=b=>a.check(g._ksuid(al,b)),a.ipv4=b=>a.check(g._ipv4(an,b)),a.ipv6=b=>a.check(g._ipv6(ap,b)),a.cidrv4=b=>a.check(g._cidrv4(ar,b)),a.cidrv6=b=>a.check(g._cidrv6(at,b)),a.e164=b=>a.check(g._e164(az,b)),a.datetime=b=>a.check(l(b)),a.date=b=>a.check(n(b)),a.time=b=>a.check(p(b)),a.duration=b=>a.check(r(b))});function N(a){return g._string(M,a)}let O=c.$constructor("ZodStringFormat",(a,b)=>{d.$ZodStringFormat.init(a,b),L.init(a,b)}),P=c.$constructor("ZodEmail",(a,b)=>{d.$ZodEmail.init(a,b),O.init(a,b)});function Q(a){return g._email(P,a)}let R=c.$constructor("ZodGUID",(a,b)=>{d.$ZodGUID.init(a,b),O.init(a,b)});function S(a){return g._guid(R,a)}let T=c.$constructor("ZodUUID",(a,b)=>{d.$ZodUUID.init(a,b),O.init(a,b)});function U(a){return g._uuid(T,a)}function V(a){return g._uuidv4(T,a)}function W(a){return g._uuidv6(T,a)}function X(a){return g._uuidv7(T,a)}let Y=c.$constructor("ZodURL",(a,b)=>{d.$ZodURL.init(a,b),O.init(a,b)});function Z(a){return g._url(Y,a)}function $(a){return g._url(Y,{protocol:/^https?$/,hostname:h.domain,...j.normalizeParams(a)})}let _=c.$constructor("ZodEmoji",(a,b)=>{d.$ZodEmoji.init(a,b),O.init(a,b)});function aa(a){return g._emoji(_,a)}let ab=c.$constructor("ZodNanoID",(a,b)=>{d.$ZodNanoID.init(a,b),O.init(a,b)});function ac(a){return g._nanoid(ab,a)}let ad=c.$constructor("ZodCUID",(a,b)=>{d.$ZodCUID.init(a,b),O.init(a,b)});function ae(a){return g._cuid(ad,a)}let af=c.$constructor("ZodCUID2",(a,b)=>{d.$ZodCUID2.init(a,b),O.init(a,b)});function ag(a){return g._cuid2(af,a)}let ah=c.$constructor("ZodULID",(a,b)=>{d.$ZodULID.init(a,b),O.init(a,b)});function ai(a){return g._ulid(ah,a)}let aj=c.$constructor("ZodXID",(a,b)=>{d.$ZodXID.init(a,b),O.init(a,b)});function ak(a){return g._xid(aj,a)}let al=c.$constructor("ZodKSUID",(a,b)=>{d.$ZodKSUID.init(a,b),O.init(a,b)});function am(a){return g._ksuid(al,a)}let an=c.$constructor("ZodIPv4",(a,b)=>{d.$ZodIPv4.init(a,b),O.init(a,b)});function ao(a){return g._ipv4(an,a)}let ap=c.$constructor("ZodIPv6",(a,b)=>{d.$ZodIPv6.init(a,b),O.init(a,b)});function aq(a){return g._ipv6(ap,a)}let ar=c.$constructor("ZodCIDRv4",(a,b)=>{d.$ZodCIDRv4.init(a,b),O.init(a,b)});function as(a){return g._cidrv4(ar,a)}let at=c.$constructor("ZodCIDRv6",(a,b)=>{d.$ZodCIDRv6.init(a,b),O.init(a,b)});function au(a){return g._cidrv6(at,a)}let av=c.$constructor("ZodBase64",(a,b)=>{d.$ZodBase64.init(a,b),O.init(a,b)});function aw(a){return g._base64(av,a)}let ax=c.$constructor("ZodBase64URL",(a,b)=>{d.$ZodBase64URL.init(a,b),O.init(a,b)});function ay(a){return g._base64url(ax,a)}let az=c.$constructor("ZodE164",(a,b)=>{d.$ZodE164.init(a,b),O.init(a,b)});function aA(a){return g._e164(az,a)}let aB=c.$constructor("ZodJWT",(a,b)=>{d.$ZodJWT.init(a,b),O.init(a,b)});function aC(a){return g._jwt(aB,a)}let aD=c.$constructor("ZodCustomStringFormat",(a,b)=>{d.$ZodCustomStringFormat.init(a,b),O.init(a,b)});function aE(a,b,c={}){return g._stringFormat(aD,a,b,c)}function aF(a){return g._stringFormat(aD,"hostname",h.hostname,a)}function aG(a){return g._stringFormat(aD,"hex",h.hex,a)}function aH(a,b){let c=b?.enc??"hex",d=`${a}_${c}`,e=h[d];if(!e)throw Error(`Unrecognized hash format: ${d}`);return g._stringFormat(aD,d,e,b)}let aI=c.$constructor("ZodNumber",(a,b)=>{d.$ZodNumber.init(a,b),K.init(a,b),a.gt=(b,c)=>a.check(g._gt(b,c)),a.gte=(b,c)=>a.check(g._gte(b,c)),a.min=(b,c)=>a.check(g._gte(b,c)),a.lt=(b,c)=>a.check(g._lt(b,c)),a.lte=(b,c)=>a.check(g._lte(b,c)),a.max=(b,c)=>a.check(g._lte(b,c)),a.int=b=>a.check(aL(b)),a.safe=b=>a.check(aL(b)),a.positive=b=>a.check(g._gt(0,b)),a.nonnegative=b=>a.check(g._gte(0,b)),a.negative=b=>a.check(g._lt(0,b)),a.nonpositive=b=>a.check(g._lte(0,b)),a.multipleOf=(b,c)=>a.check(g._multipleOf(b,c)),a.step=(b,c)=>a.check(g._multipleOf(b,c)),a.finite=()=>a;let c=a._zod.bag;a.minValue=Math.max(c.minimum??-1/0,c.exclusiveMinimum??-1/0)??null,a.maxValue=Math.min(c.maximum??1/0,c.exclusiveMaximum??1/0)??null,a.isInt=(c.format??"").includes("int")||Number.isSafeInteger(c.multipleOf??.5),a.isFinite=!0,a.format=c.format??null});function aJ(a){return g._number(aI,a)}let aK=c.$constructor("ZodNumberFormat",(a,b)=>{d.$ZodNumberFormat.init(a,b),aI.init(a,b)});function aL(a){return g._int(aK,a)}function aM(a){return g._float32(aK,a)}function aN(a){return g._float64(aK,a)}function aO(a){return g._int32(aK,a)}function aP(a){return g._uint32(aK,a)}let aQ=c.$constructor("ZodBoolean",(a,b)=>{d.$ZodBoolean.init(a,b),K.init(a,b)});function aR(a){return g._boolean(aQ,a)}let aS=c.$constructor("ZodBigInt",(a,b)=>{d.$ZodBigInt.init(a,b),K.init(a,b),a.gte=(b,c)=>a.check(g._gte(b,c)),a.min=(b,c)=>a.check(g._gte(b,c)),a.gt=(b,c)=>a.check(g._gt(b,c)),a.gte=(b,c)=>a.check(g._gte(b,c)),a.min=(b,c)=>a.check(g._gte(b,c)),a.lt=(b,c)=>a.check(g._lt(b,c)),a.lte=(b,c)=>a.check(g._lte(b,c)),a.max=(b,c)=>a.check(g._lte(b,c)),a.positive=b=>a.check(g._gt(BigInt(0),b)),a.negative=b=>a.check(g._lt(BigInt(0),b)),a.nonpositive=b=>a.check(g._lte(BigInt(0),b)),a.nonnegative=b=>a.check(g._gte(BigInt(0),b)),a.multipleOf=(b,c)=>a.check(g._multipleOf(b,c));let c=a._zod.bag;a.minValue=c.minimum??null,a.maxValue=c.maximum??null,a.format=c.format??null});function aT(a){return g._bigint(aS,a)}let aU=c.$constructor("ZodBigIntFormat",(a,b)=>{d.$ZodBigIntFormat.init(a,b),aS.init(a,b)});function aV(a){return g._int64(aU,a)}function aW(a){return g._uint64(aU,a)}let aX=c.$constructor("ZodSymbol",(a,b)=>{d.$ZodSymbol.init(a,b),K.init(a,b)});function aY(a){return g._symbol(aX,a)}let aZ=c.$constructor("ZodUndefined",(a,b)=>{d.$ZodUndefined.init(a,b),K.init(a,b)});function a$(a){return g._undefined(aZ,a)}let a_=c.$constructor("ZodNull",(a,b)=>{d.$ZodNull.init(a,b),K.init(a,b)});function a0(a){return g._null(a_,a)}let a1=c.$constructor("ZodAny",(a,b)=>{d.$ZodAny.init(a,b),K.init(a,b)});function a2(){return g._any(a1)}let a3=c.$constructor("ZodUnknown",(a,b)=>{d.$ZodUnknown.init(a,b),K.init(a,b)});function a4(){return g._unknown(a3)}let a5=c.$constructor("ZodNever",(a,b)=>{d.$ZodNever.init(a,b),K.init(a,b)});function a6(a){return g._never(a5,a)}let a7=c.$constructor("ZodVoid",(a,b)=>{d.$ZodVoid.init(a,b),K.init(a,b)});function a8(a){return g._void(a7,a)}let a9=c.$constructor("ZodDate",(a,b)=>{d.$ZodDate.init(a,b),K.init(a,b),a.min=(b,c)=>a.check(g._gte(b,c)),a.max=(b,c)=>a.check(g._lte(b,c));let c=a._zod.bag;a.minDate=c.minimum?new Date(c.minimum):null,a.maxDate=c.maximum?new Date(c.maximum):null});function ba(a){return g._date(a9,a)}let bb=c.$constructor("ZodArray",(a,b)=>{d.$ZodArray.init(a,b),K.init(a,b),a.element=b.element,a.min=(b,c)=>a.check(g._minLength(b,c)),a.nonempty=b=>a.check(g._minLength(1,b)),a.max=(b,c)=>a.check(g._maxLength(b,c)),a.length=(b,c)=>a.check(g._length(b,c)),a.unwrap=()=>a.element});function bc(a,b){return g._array(bb,a,b)}function bd(a){return by(Object.keys(a._zod.def.shape))}let be=c.$constructor("ZodObject",(a,b)=>{d.$ZodObjectJIT.init(a,b),K.init(a,b),j.defineLazy(a,"shape",()=>b.shape),a.keyof=()=>by(Object.keys(a._zod.def.shape)),a.catchall=b=>a.clone({...a._zod.def,catchall:b}),a.passthrough=()=>a.clone({...a._zod.def,catchall:a4()}),a.loose=()=>a.clone({...a._zod.def,catchall:a4()}),a.strict=()=>a.clone({...a._zod.def,catchall:a6()}),a.strip=()=>a.clone({...a._zod.def,catchall:void 0}),a.extend=b=>j.extend(a,b),a.safeExtend=b=>j.safeExtend(a,b),a.merge=b=>j.merge(a,b),a.pick=b=>j.pick(a,b),a.omit=b=>j.omit(a,b),a.partial=(...b)=>j.partial(bG,a,b[0]),a.required=(...b)=>j.required(bP,a,b[0])});function bf(a,b){return new be({type:"object",get shape(){return j.assignProp(this,"shape",a?j.objectClone(a):{}),this.shape},...j.normalizeParams(b)})}function bg(a,b){return new be({type:"object",get shape(){return j.assignProp(this,"shape",j.objectClone(a)),this.shape},catchall:a6(),...j.normalizeParams(b)})}function bh(a,b){return new be({type:"object",get shape(){return j.assignProp(this,"shape",j.objectClone(a)),this.shape},catchall:a4(),...j.normalizeParams(b)})}let bi=c.$constructor("ZodUnion",(a,b)=>{d.$ZodUnion.init(a,b),K.init(a,b),a.options=b.options});function bj(a,b){return new bi({type:"union",options:a,...j.normalizeParams(b)})}let bk=c.$constructor("ZodDiscriminatedUnion",(a,b)=>{bi.init(a,b),d.$ZodDiscriminatedUnion.init(a,b)});function bl(a,b,c){return new bk({type:"union",options:b,discriminator:a,...j.normalizeParams(c)})}let bm=c.$constructor("ZodIntersection",(a,b)=>{d.$ZodIntersection.init(a,b),K.init(a,b)});function bn(a,b){return new bm({type:"intersection",left:a,right:b})}let bo=c.$constructor("ZodTuple",(a,b)=>{d.$ZodTuple.init(a,b),K.init(a,b),a.rest=b=>a.clone({...a._zod.def,rest:b})});function bp(a,b,c){let e=b instanceof d.$ZodType,f=e?c:b;return new bo({type:"tuple",items:a,rest:e?b:null,...j.normalizeParams(f)})}let bq=c.$constructor("ZodRecord",(a,b)=>{d.$ZodRecord.init(a,b),K.init(a,b),a.keyType=b.keyType,a.valueType=b.valueType});function br(a,b,c){return new bq({type:"record",keyType:a,valueType:b,...j.normalizeParams(c)})}function bs(a,b,c){let d=e.clone(a);return d._zod.values=void 0,new bq({type:"record",keyType:d,valueType:b,...j.normalizeParams(c)})}let bt=c.$constructor("ZodMap",(a,b)=>{d.$ZodMap.init(a,b),K.init(a,b),a.keyType=b.keyType,a.valueType=b.valueType});function bu(a,b,c){return new bt({type:"map",keyType:a,valueType:b,...j.normalizeParams(c)})}let bv=c.$constructor("ZodSet",(a,b)=>{d.$ZodSet.init(a,b),K.init(a,b),a.min=(...b)=>a.check(g._minSize(...b)),a.nonempty=b=>a.check(g._minSize(1,b)),a.max=(...b)=>a.check(g._maxSize(...b)),a.size=(...b)=>a.check(g._size(...b))});function bw(a,b){return new bv({type:"set",valueType:a,...j.normalizeParams(b)})}let bx=c.$constructor("ZodEnum",(a,b)=>{d.$ZodEnum.init(a,b),K.init(a,b),a.enum=b.entries,a.options=Object.values(b.entries);let c=new Set(Object.keys(b.entries));a.extract=(a,d)=>{let e={};for(let d of a)if(c.has(d))e[d]=b.entries[d];else throw Error(`Key ${d} not found in enum`);return new bx({...b,checks:[],...j.normalizeParams(d),entries:e})},a.exclude=(a,d)=>{let e={...b.entries};for(let b of a)if(c.has(b))delete e[b];else throw Error(`Key ${b} not found in enum`);return new bx({...b,checks:[],...j.normalizeParams(d),entries:e})}});function by(a,b){return new bx({type:"enum",entries:Array.isArray(a)?Object.fromEntries(a.map(a=>[a,a])):a,...j.normalizeParams(b)})}function bz(a,b){return new bx({type:"enum",entries:a,...j.normalizeParams(b)})}let bA=c.$constructor("ZodLiteral",(a,b)=>{d.$ZodLiteral.init(a,b),K.init(a,b),a.values=new Set(b.values),Object.defineProperty(a,"value",{get(){if(b.values.length>1)throw Error("This schema contains multiple valid literal values. Use `.values` instead.");return b.values[0]}})});function bB(a,b){return new bA({type:"literal",values:Array.isArray(a)?a:[a],...j.normalizeParams(b)})}let bC=c.$constructor("ZodFile",(a,b)=>{d.$ZodFile.init(a,b),K.init(a,b),a.min=(b,c)=>a.check(g._minSize(b,c)),a.max=(b,c)=>a.check(g._maxSize(b,c)),a.mime=(b,c)=>a.check(g._mime(Array.isArray(b)?b:[b],c))});function bD(a){return g._file(bC,a)}let bE=c.$constructor("ZodTransform",(a,b)=>{d.$ZodTransform.init(a,b),K.init(a,b),a._zod.parse=(d,e)=>{if("backward"===e.direction)throw new c.$ZodEncodeError(a.constructor.name);d.addIssue=c=>{"string"==typeof c?d.issues.push(j.issue(c,d.value,b)):(c.fatal&&(c.continue=!1),c.code??(c.code="custom"),c.input??(c.input=d.value),c.inst??(c.inst=a),d.issues.push(j.issue(c)))};let f=b.transform(d.value,d);return f instanceof Promise?f.then(a=>(d.value=a,d)):(d.value=f,d)}});function bF(a){return new bE({type:"transform",transform:a})}let bG=c.$constructor("ZodOptional",(a,b)=>{d.$ZodOptional.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function bH(a){return new bG({type:"optional",innerType:a})}let bI=c.$constructor("ZodNullable",(a,b)=>{d.$ZodNullable.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function bJ(a){return new bI({type:"nullable",innerType:a})}function bK(a){return bH(bJ(a))}let bL=c.$constructor("ZodDefault",(a,b)=>{d.$ZodDefault.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType,a.removeDefault=a.unwrap});function bM(a,b){return new bL({type:"default",innerType:a,get defaultValue(){return"function"==typeof b?b():j.shallowClone(b)}})}let bN=c.$constructor("ZodPrefault",(a,b)=>{d.$ZodPrefault.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function bO(a,b){return new bN({type:"prefault",innerType:a,get defaultValue(){return"function"==typeof b?b():j.shallowClone(b)}})}let bP=c.$constructor("ZodNonOptional",(a,b)=>{d.$ZodNonOptional.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function bQ(a,b){return new bP({type:"nonoptional",innerType:a,...j.normalizeParams(b)})}let bR=c.$constructor("ZodSuccess",(a,b)=>{d.$ZodSuccess.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function bS(a){return new bR({type:"success",innerType:a})}let bT=c.$constructor("ZodCatch",(a,b)=>{d.$ZodCatch.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType,a.removeCatch=a.unwrap});function bU(a,b){return new bT({type:"catch",innerType:a,catchValue:"function"==typeof b?b:()=>b})}let bV=c.$constructor("ZodNaN",(a,b)=>{d.$ZodNaN.init(a,b),K.init(a,b)});function bW(a){return g._nan(bV,a)}let bX=c.$constructor("ZodPipe",(a,b)=>{d.$ZodPipe.init(a,b),K.init(a,b),a.in=b.in,a.out=b.out});function bY(a,b){return new bX({type:"pipe",in:a,out:b})}let bZ=c.$constructor("ZodCodec",(a,b)=>{bX.init(a,b),d.$ZodCodec.init(a,b)});function b$(a,b,c){return new bZ({type:"pipe",in:a,out:b,transform:c.decode,reverseTransform:c.encode})}let b_=c.$constructor("ZodReadonly",(a,b)=>{d.$ZodReadonly.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function b0(a){return new b_({type:"readonly",innerType:a})}let b1=c.$constructor("ZodTemplateLiteral",(a,b)=>{d.$ZodTemplateLiteral.init(a,b),K.init(a,b)});function b2(a,b){return new b1({type:"template_literal",parts:a,...j.normalizeParams(b)})}let b3=c.$constructor("ZodLazy",(a,b)=>{d.$ZodLazy.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.getter()});function b4(a){return new b3({type:"lazy",getter:a})}let b5=c.$constructor("ZodPromise",(a,b)=>{d.$ZodPromise.init(a,b),K.init(a,b),a.unwrap=()=>a._zod.def.innerType});function b6(a){return new b5({type:"promise",innerType:a})}let b7=c.$constructor("ZodFunction",(a,b)=>{d.$ZodFunction.init(a,b),K.init(a,b)});function b8(a){return new b7({type:"function",input:Array.isArray(a?.input)?bp(a?.input):a?.input??bc(a4()),output:a?.output??a4()})}let b9=c.$constructor("ZodCustom",(a,b)=>{d.$ZodCustom.init(a,b),K.init(a,b)});function ca(a){let b=new i.$ZodCheck({check:"custom"});return b._zod.check=a,b}function cb(a,b){return g._custom(b9,a??(()=>!0),b)}function cc(a,b={}){return g._refine(b9,a,b)}function cd(a){return g._superRefine(a)}function ce(a,b={error:`Input not instance of ${a.name}`}){let c=new b9({type:"custom",check:"custom",fn:b=>b instanceof a,abort:!0,...j.normalizeParams(b)});return c._zod.bag.Class=a,c}let cf=(...a)=>g._stringbool({Codec:bZ,Boolean:aQ,String:M},...a);function cg(a){let b=b4(()=>bj([N(a),aJ(),aR(),a0(),bc(b),br(N(),b)]));return b}function ch(a,b){return bY(bF(a),b)}a.s(["ZodFirstPartyTypeKind",()=>b,"ZodIssueCode",()=>ci,"getErrorMap",()=>ck,"setErrorMap",()=>cj],49935);let ci={invalid_type:"invalid_type",too_big:"too_big",too_small:"too_small",invalid_format:"invalid_format",not_multiple_of:"not_multiple_of",unrecognized_keys:"unrecognized_keys",invalid_union:"invalid_union",invalid_key:"invalid_key",invalid_element:"invalid_element",invalid_value:"invalid_value",custom:"custom"};function cj(a){c.config({customError:a})}function ck(){return c.config().customError}b||(b={});var cl=a.i(92933);function cm(a){return g._coercedString(M,a)}function cn(a){return g._coercedNumber(aI,a)}function co(a){return g._coercedBoolean(aQ,a)}function cp(a){return g._coercedBigint(aS,a)}function cq(a){return g._coercedDate(a9,a)}a.i(96981),a.s(["bigint",()=>cp,"boolean",()=>co,"date",()=>cq,"number",()=>cn,"string",()=>cm],53326),(0,c.config)((0,cl.default)()),a.i(96229),a.s(["$ZodAny",()=>d.$ZodAny,"$ZodArray",()=>d.$ZodArray,"$ZodAsyncError",()=>cr.$ZodAsyncError,"$ZodBase64",()=>d.$ZodBase64,"$ZodBase64URL",()=>d.$ZodBase64URL,"$ZodBigInt",()=>d.$ZodBigInt,"$ZodBigIntFormat",()=>d.$ZodBigIntFormat,"$ZodBoolean",()=>d.$ZodBoolean,"$ZodCIDRv4",()=>d.$ZodCIDRv4,"$ZodCIDRv6",()=>d.$ZodCIDRv6,"$ZodCUID",()=>d.$ZodCUID,"$ZodCUID2",()=>d.$ZodCUID2,"$ZodCatch",()=>d.$ZodCatch,"$ZodCheck",()=>cu.$ZodCheck,"$ZodCheckBigIntFormat",()=>cu.$ZodCheckBigIntFormat,"$ZodCheckEndsWith",()=>cu.$ZodCheckEndsWith,"$ZodCheckGreaterThan",()=>cu.$ZodCheckGreaterThan,"$ZodCheckIncludes",()=>cu.$ZodCheckIncludes,"$ZodCheckLengthEquals",()=>cu.$ZodCheckLengthEquals,"$ZodCheckLessThan",()=>cu.$ZodCheckLessThan,"$ZodCheckLowerCase",()=>cu.$ZodCheckLowerCase,"$ZodCheckMaxLength",()=>cu.$ZodCheckMaxLength,"$ZodCheckMaxSize",()=>cu.$ZodCheckMaxSize,"$ZodCheckMimeType",()=>cu.$ZodCheckMimeType,"$ZodCheckMinLength",()=>cu.$ZodCheckMinLength,"$ZodCheckMinSize",()=>cu.$ZodCheckMinSize,"$ZodCheckMultipleOf",()=>cu.$ZodCheckMultipleOf,"$ZodCheckNumberFormat",()=>cu.$ZodCheckNumberFormat,"$ZodCheckOverwrite",()=>cu.$ZodCheckOverwrite,"$ZodCheckProperty",()=>cu.$ZodCheckProperty,"$ZodCheckRegex",()=>cu.$ZodCheckRegex,"$ZodCheckSizeEquals",()=>cu.$ZodCheckSizeEquals,"$ZodCheckStartsWith",()=>cu.$ZodCheckStartsWith,"$ZodCheckStringFormat",()=>cu.$ZodCheckStringFormat,"$ZodCheckUpperCase",()=>cu.$ZodCheckUpperCase,"$ZodCodec",()=>d.$ZodCodec,"$ZodCustom",()=>d.$ZodCustom,"$ZodCustomStringFormat",()=>d.$ZodCustomStringFormat,"$ZodDate",()=>d.$ZodDate,"$ZodDefault",()=>d.$ZodDefault,"$ZodDiscriminatedUnion",()=>d.$ZodDiscriminatedUnion,"$ZodE164",()=>d.$ZodE164,"$ZodEmail",()=>d.$ZodEmail,"$ZodEmoji",()=>d.$ZodEmoji,"$ZodEncodeError",()=>cr.$ZodEncodeError,"$ZodEnum",()=>d.$ZodEnum,"$ZodError",()=>ct.$ZodError,"$ZodFile",()=>d.$ZodFile,"$ZodFunction",()=>d.$ZodFunction,"$ZodGUID",()=>d.$ZodGUID,"$ZodIPv4",()=>d.$ZodIPv4,"$ZodIPv6",()=>d.$ZodIPv6,"$ZodISODate",()=>d.$ZodISODate,"$ZodISODateTime",()=>d.$ZodISODateTime,"$ZodISODuration",()=>d.$ZodISODuration,"$ZodISOTime",()=>d.$ZodISOTime,"$ZodIntersection",()=>d.$ZodIntersection,"$ZodJWT",()=>d.$ZodJWT,"$ZodKSUID",()=>d.$ZodKSUID,"$ZodLazy",()=>d.$ZodLazy,"$ZodLiteral",()=>d.$ZodLiteral,"$ZodMap",()=>d.$ZodMap,"$ZodNaN",()=>d.$ZodNaN,"$ZodNanoID",()=>d.$ZodNanoID,"$ZodNever",()=>d.$ZodNever,"$ZodNonOptional",()=>d.$ZodNonOptional,"$ZodNull",()=>d.$ZodNull,"$ZodNullable",()=>d.$ZodNullable,"$ZodNumber",()=>d.$ZodNumber,"$ZodNumberFormat",()=>d.$ZodNumberFormat,"$ZodObject",()=>d.$ZodObject,"$ZodObjectJIT",()=>d.$ZodObjectJIT,"$ZodOptional",()=>d.$ZodOptional,"$ZodPipe",()=>d.$ZodPipe,"$ZodPrefault",()=>d.$ZodPrefault,"$ZodPromise",()=>d.$ZodPromise,"$ZodReadonly",()=>d.$ZodReadonly,"$ZodRealError",()=>ct.$ZodRealError,"$ZodRecord",()=>d.$ZodRecord,"$ZodRegistry",()=>dh.$ZodRegistry,"$ZodSet",()=>d.$ZodSet,"$ZodString",()=>d.$ZodString,"$ZodStringFormat",()=>d.$ZodStringFormat,"$ZodSuccess",()=>d.$ZodSuccess,"$ZodSymbol",()=>d.$ZodSymbol,"$ZodTemplateLiteral",()=>d.$ZodTemplateLiteral,"$ZodTransform",()=>d.$ZodTransform,"$ZodTuple",()=>d.$ZodTuple,"$ZodType",()=>d.$ZodType,"$ZodULID",()=>d.$ZodULID,"$ZodURL",()=>d.$ZodURL,"$ZodUUID",()=>d.$ZodUUID,"$ZodUndefined",()=>d.$ZodUndefined,"$ZodUnion",()=>d.$ZodUnion,"$ZodUnknown",()=>d.$ZodUnknown,"$ZodVoid",()=>d.$ZodVoid,"$ZodXID",()=>d.$ZodXID,"$brand",()=>cr.$brand,"$constructor",()=>cr.$constructor,"$input",()=>dh.$input,"$output",()=>dh.$output,"Doc",()=>di.Doc,"JSONSchema",()=>dl,"JSONSchemaGenerator",()=>dk.JSONSchemaGenerator,"NEVER",()=>cr.NEVER,"TimePrecision",()=>dj.TimePrecision,"_any",()=>dj._any,"_array",()=>dj._array,"_base64",()=>dj._base64,"_base64url",()=>dj._base64url,"_bigint",()=>dj._bigint,"_boolean",()=>dj._boolean,"_catch",()=>dj._catch,"_check",()=>dj._check,"_cidrv4",()=>dj._cidrv4,"_cidrv6",()=>dj._cidrv6,"_coercedBigint",()=>dj._coercedBigint,"_coercedBoolean",()=>dj._coercedBoolean,"_coercedDate",()=>dj._coercedDate,"_coercedNumber",()=>dj._coercedNumber,"_coercedString",()=>dj._coercedString,"_cuid",()=>dj._cuid,"_cuid2",()=>dj._cuid2,"_custom",()=>dj._custom,"_date",()=>dj._date,"_decode",()=>cs._decode,"_decodeAsync",()=>cs._decodeAsync,"_default",()=>dj._default,"_discriminatedUnion",()=>dj._discriminatedUnion,"_e164",()=>dj._e164,"_email",()=>dj._email,"_emoji",()=>dj._emoji,"_encode",()=>cs._encode,"_encodeAsync",()=>cs._encodeAsync,"_endsWith",()=>dj._endsWith,"_enum",()=>dj._enum,"_file",()=>dj._file,"_float32",()=>dj._float32,"_float64",()=>dj._float64,"_gt",()=>dj._gt,"_gte",()=>dj._gte,"_guid",()=>dj._guid,"_includes",()=>dj._includes,"_int",()=>dj._int,"_int32",()=>dj._int32,"_int64",()=>dj._int64,"_intersection",()=>dj._intersection,"_ipv4",()=>dj._ipv4,"_ipv6",()=>dj._ipv6,"_isoDate",()=>dj._isoDate,"_isoDateTime",()=>dj._isoDateTime,"_isoDuration",()=>dj._isoDuration,"_isoTime",()=>dj._isoTime,"_jwt",()=>dj._jwt,"_ksuid",()=>dj._ksuid,"_lazy",()=>dj._lazy,"_length",()=>dj._length,"_literal",()=>dj._literal,"_lowercase",()=>dj._lowercase,"_lt",()=>dj._lt,"_lte",()=>dj._lte,"_map",()=>dj._map,"_max",()=>dj._max,"_maxLength",()=>dj._maxLength,"_maxSize",()=>dj._maxSize,"_mime",()=>dj._mime,"_min",()=>dj._min,"_minLength",()=>dj._minLength,"_minSize",()=>dj._minSize,"_multipleOf",()=>dj._multipleOf,"_nan",()=>dj._nan,"_nanoid",()=>dj._nanoid,"_nativeEnum",()=>dj._nativeEnum,"_negative",()=>dj._negative,"_never",()=>dj._never,"_nonnegative",()=>dj._nonnegative,"_nonoptional",()=>dj._nonoptional,"_nonpositive",()=>dj._nonpositive,"_normalize",()=>dj._normalize,"_null",()=>dj._null,"_nullable",()=>dj._nullable,"_number",()=>dj._number,"_optional",()=>dj._optional,"_overwrite",()=>dj._overwrite,"_parse",()=>cs._parse,"_parseAsync",()=>cs._parseAsync,"_pipe",()=>dj._pipe,"_positive",()=>dj._positive,"_promise",()=>dj._promise,"_property",()=>dj._property,"_readonly",()=>dj._readonly,"_record",()=>dj._record,"_refine",()=>dj._refine,"_regex",()=>dj._regex,"_safeDecode",()=>cs._safeDecode,"_safeDecodeAsync",()=>cs._safeDecodeAsync,"_safeEncode",()=>cs._safeEncode,"_safeEncodeAsync",()=>cs._safeEncodeAsync,"_safeParse",()=>cs._safeParse,"_safeParseAsync",()=>cs._safeParseAsync,"_set",()=>dj._set,"_size",()=>dj._size,"_startsWith",()=>dj._startsWith,"_string",()=>dj._string,"_stringFormat",()=>dj._stringFormat,"_stringbool",()=>dj._stringbool,"_success",()=>dj._success,"_superRefine",()=>dj._superRefine,"_symbol",()=>dj._symbol,"_templateLiteral",()=>dj._templateLiteral,"_toLowerCase",()=>dj._toLowerCase,"_toUpperCase",()=>dj._toUpperCase,"_transform",()=>dj._transform,"_trim",()=>dj._trim,"_tuple",()=>dj._tuple,"_uint32",()=>dj._uint32,"_uint64",()=>dj._uint64,"_ulid",()=>dj._ulid,"_undefined",()=>dj._undefined,"_union",()=>dj._union,"_unknown",()=>dj._unknown,"_uppercase",()=>dj._uppercase,"_url",()=>dj._url,"_uuid",()=>dj._uuid,"_uuidv4",()=>dj._uuidv4,"_uuidv6",()=>dj._uuidv6,"_uuidv7",()=>dj._uuidv7,"_void",()=>dj._void,"_xid",()=>dj._xid,"clone",()=>e.clone,"config",()=>cr.config,"decode",()=>cs.decode,"decodeAsync",()=>cs.decodeAsync,"encode",()=>cs.encode,"encodeAsync",()=>cs.encodeAsync,"flattenError",()=>ct.flattenError,"formatError",()=>ct.formatError,"globalConfig",()=>cr.globalConfig,"globalRegistry",()=>dh.globalRegistry,"isValidBase64",()=>d.isValidBase64,"isValidBase64URL",()=>d.isValidBase64URL,"isValidJWT",()=>d.isValidJWT,"locales",()=>dg,"parse",()=>cs.parse,"parseAsync",()=>cs.parseAsync,"prettifyError",()=>ct.prettifyError,"regexes",()=>cx,"registry",()=>dh.registry,"safeDecode",()=>cs.safeDecode,"safeDecodeAsync",()=>cs.safeDecodeAsync,"safeEncode",()=>cs.safeEncode,"safeEncodeAsync",()=>cs.safeEncodeAsync,"safeParse",()=>cs.safeParse,"safeParseAsync",()=>cs.safeParseAsync,"toDotPath",()=>ct.toDotPath,"toJSONSchema",()=>dk.toJSONSchema,"treeifyError",()=>ct.treeifyError,"util",()=>cw,"version",()=>cv.version],52082);var cr=c,cs=s,ct=t;a.i(17259);var cu=i,cv=a.i(67032),cw=a.i(67924),cx=h;a.s(["ar",()=>cy.default,"az",()=>cz.default,"be",()=>cA.default,"ca",()=>cB.default,"cs",()=>cC.default,"da",()=>cD.default,"de",()=>cE.default,"en",()=>cF.default,"eo",()=>cG.default,"es",()=>cH.default,"fa",()=>cI.default,"fi",()=>cJ.default,"fr",()=>cK.default,"frCA",()=>cL.default,"he",()=>cM.default,"hu",()=>cN.default,"id",()=>cO.default,"is",()=>cP.default,"it",()=>cQ.default,"ja",()=>cR.default,"ka",()=>cS.default,"kh",()=>cT.default,"km",()=>cU.default,"ko",()=>cV.default,"lt",()=>cW.default,"mk",()=>cX.default,"ms",()=>cY.default,"nl",()=>cZ.default,"no",()=>c$.default,"ota",()=>c_.default,"pl",()=>c1.default,"ps",()=>c0.default,"pt",()=>c2.default,"ru",()=>c3.default,"sl",()=>c4.default,"sv",()=>c5.default,"ta",()=>c6.default,"th",()=>c7.default,"tr",()=>c8.default,"ua",()=>c9.default,"uk",()=>da.default,"ur",()=>db.default,"vi",()=>dc.default,"yo",()=>df.default,"zhCN",()=>dd.default,"zhTW",()=>de.default],19642);var cy=a.i(72920),cz=a.i(81880),cA=a.i(61158),cB=a.i(46352),cC=a.i(40114),cD=a.i(71004),cE=a.i(77803),cF=cl,cG=a.i(68795),cH=a.i(58294),cI=a.i(9354),cJ=a.i(20903),cK=a.i(88422),cL=a.i(18985),cM=a.i(85473),cN=a.i(99822),cO=a.i(96227),cP=a.i(85654),cQ=a.i(94867),cR=a.i(92874),cS=a.i(48409),cT=a.i(38505),cU=a.i(49988),cV=a.i(78397),cW=a.i(28902),cX=a.i(65312),cY=a.i(60843),cZ=a.i(56182),c$=a.i(12326),c_=a.i(43307),c0=a.i(7637),c1=a.i(99916),c2=a.i(85444),c3=a.i(22838),c4=a.i(24487),c5=a.i(82431),c6=a.i(23453),c7=a.i(29828),c8=a.i(6045),c9=a.i(91936),da=a.i(92925),db=a.i(41875),dc=a.i(46169),dd=a.i(80637),de=a.i(10773),df=a.i(17363),dg=a.i(19642),dh=f,di=a.i(58697),dj=g,dk=a.i(28185),dl=a.i(94941),dm=a.i(52082);a.i(15686),a.s(["endsWith",()=>dn._endsWith,"gt",()=>dn._gt,"gte",()=>dn._gte,"includes",()=>dn._includes,"length",()=>dn._length,"lowercase",()=>dn._lowercase,"lt",()=>dn._lt,"lte",()=>dn._lte,"maxLength",()=>dn._maxLength,"maxSize",()=>dn._maxSize,"mime",()=>dn._mime,"minLength",()=>dn._minLength,"minSize",()=>dn._minSize,"multipleOf",()=>dn._multipleOf,"negative",()=>dn._negative,"nonnegative",()=>dn._nonnegative,"nonpositive",()=>dn._nonpositive,"normalize",()=>dn._normalize,"overwrite",()=>dn._overwrite,"positive",()=>dn._positive,"property",()=>dn._property,"regex",()=>dn._regex,"size",()=>dn._size,"startsWith",()=>dn._startsWith,"toLowerCase",()=>dn._toLowerCase,"toUpperCase",()=>dn._toUpperCase,"trim",()=>dn._trim,"uppercase",()=>dn._uppercase],18650),a.i(48665);var dn=g;a.i(18650),a.i(55195),a.i(88381),a.s(["$brand",()=>dp.$brand,"ZodFirstPartyTypeKind",()=>b,"ZodIssueCode",()=>ci,"config",()=>dp.config,"getErrorMap",()=>ck,"setErrorMap",()=>cj],3557),a.i(49935);var dp=c;a.i(3557);var dq=f,dr=c,e=e,h=h,ds=t,dt=dk,du=a.i(61130),j=e,dv=dg,dw=a.i(64561),dx=a.i(53326),dy=a.i(17275),dy=dy,dz=a.i(74572),dA=a.i(40674),dB=a.i(68894),dC=a.i(50725),dD=a.i(9274),dE=a.i(58032);let dF=dy.string().refine(a=>/^\d{4}-\d{2}-\d{2}$/.test(a),"Use YYYY-MM-DD"),dG=dy.object({givenName:dy.string().min(1,"Enter given name").max(60),surname:dy.string().min(1,"Enter surname").max(60),middleName:dy.string().optional(),givenNameKey:dy.string().optional(),surnameKey:dy.string().optional(),jurisdiction:dy.enum(["CA-AB","CA-BC","CA-MB","CA-NB","CA-NL","CA-NS","CA-ON","CA-PE","CA-QC","CA-SK"],{message:"Select issuing authority"}),licenseNo:dy.string().min(3,"Enter licence number"),licenseClass:dy.string().min(1,"Enter class").max(5),airBrake:dy.boolean().optional(),licenseExpiry:dF,dob:dF,gender:dy.enum(["Male","Female","Non-binary","Prefer not to say"]).optional(),email:dy.string().email(),phone:dy.string().min(7),phoneCountry:dy.enum(["CA","US"]).default("CA"),address1:dy.string().optional(),address2:dy.string().optional(),city:dy.string().optional(),region:dy.string().optional(),postal:dy.string().min(3,"Enter postal/ZIP"),country:dy.string().optional(),citizenship:dy.enum(["CA","US","Other"]).default("CA"),residencyCA:dy.enum(["Citizen","PR","Work Permit","Study Permit","Visitor"]).default("Citizen"),prNumber:dy.string().optional(),prExpiry:dF.optional(),permitType:dy.string().optional(),permitExpiry:dF.optional(),uci:dy.string().optional(),passportCountry:dy.string().optional(),passportNumber:dy.string().optional(),passportExpiry:dF.optional(),englishLevel:dy.enum(["Basic","Conversational","Fluent","Native"]),otherLanguages:dy.array(dy.object({lang:dy.string().min(2),level:dy.enum(["Basic","Conversational","Fluent","Native"])})).max(10).optional(),work:dy.array(dy.object({company:dy.string().optional(),role:dy.string().optional(),start:dF.optional(),end:dF.optional()})).max(10).optional(),consentAbstract:dy.boolean().refine(a=>!0===a,{message:"Consent is required"}),consentName:dy.string().min(2,"Type your name to sign"),consentDate:dF,certifyAccurate:dy.boolean().refine(a=>!0===a,{message:"You must certify accuracy"}),docLicenseFront:dy.instanceof(File).optional(),docLicenseBack:dy.instanceof(File).optional(),docPassport:dy.instanceof(File).optional(),docPR:dy.instanceof(File).optional(),docPermit:dy.instanceof(File).optional()}).superRefine((a,b)=>{let c=new Date,d=c.getFullYear(),e=c.getMonth(),f=c.getDate(),g=new Date(d-16,e,f),h=new Date(a.dob),i=new Date(a.licenseExpiry);(isNaN(h.getTime())||h>g)&&b.addIssue({code:"custom",path:["dob"],message:"Driver must be at least 16 years old"}),(isNaN(i.getTime())||i<new Date(d,e,f))&&b.addIssue({code:"custom",path:["licenseExpiry"],message:"Expiry must be in the future"}),(0,dz.isValidLicence)(a.jurisdiction,a.licenseNo)||b.addIssue({code:"custom",path:["licenseNo"],message:"Number doesn’t match jurisdiction format"});let j=(0,dC.classesFor)(a.jurisdiction);if(j.length>0&&!j.includes(a.licenseClass)&&b.addIssue({code:"custom",path:["licenseClass"],message:`Select a valid class for ${a.jurisdiction}`}),(0,dB.toE164)(a.phone,a.phoneCountry)||b.addIssue({code:"custom",path:["phone"],message:"Enter a valid phone number"}),(0,dA.detectCA)(a.postal).ok||(0,dA.isUSZip)(a.postal)||b.addIssue({code:"custom",path:["postal"],message:"Enter a valid Canadian postal code or US ZIP"}),"CA"===a.citizenship)"Citizen"!==a.residencyCA&&b.addIssue({code:"custom",path:["residencyCA"],message:"Canadian citizens must select Citizen"});else{if("passportCountry,passportNumber,passportExpiry".split(",").forEach(c=>{let d=a[c];d&&("string"!=typeof d||d.trim())||b.addIssue({code:"custom",path:[c],message:"Required"})}),a.passportCountry&&!(0,dE.isCountry)(a.passportCountry)&&b.addIssue({code:"custom",path:["passportCountry"],message:"Select a valid country"}),a.passportCountry&&a.passportNumber&&!(0,dD.isValidPassport)(a.passportCountry,a.passportNumber)){let c=(0,dD.passportPatternFor)(a.passportCountry);b.addIssue({code:"custom",path:["passportNumber"],message:`Format doesn’t match (${c.hint})`})}["Work Permit","Study Permit"].includes(a.residencyCA)&&"permitType,permitExpiry".split(",").forEach(c=>{let d=a[c];d&&("string"!=typeof d||d.trim())||b.addIssue({code:"custom",path:[c],message:"Required"})})}if("PR"===a.residencyCA&&(10!==(a.prNumber??"").replace(/\D/g,"").length&&b.addIssue({code:"custom",path:["prNumber"],message:"PR card number must be exactly 10 digits"}),a.prExpiry?.trim()||b.addIssue({code:"custom",path:["prExpiry"],message:"PR expiry required"})),["Work Permit","Study Permit"].includes(a.residencyCA)){let c=(a.uci??"").replace(/\D/g,"");8!==c.length&&10!==c.length&&b.addIssue({code:"custom",path:["uci"],message:"UCI must be 8 or 10 digits (hyphens allowed)"})}let k={licenseFront:!0,licenseBack:!1,pr:"PR"===a.residencyCA,passport:"CA"!==a.citizenship,permit:["Work Permit","Study Permit"].includes(a.residencyCA)};function l(a,c,d){c||b.addIssue({code:"custom",path:[a],message:`${d} is required`})}"docLicenseFront,docLicenseBack,docPassport,docPR,docPermit".split(",").forEach(c=>{let d=a[c];d&&(!["image/jpeg","image/png"].includes(d.type)||d.size>4194304)&&b.addIssue({code:"custom",path:[c],message:"Upload JPG/PNG ≤ 4MB"})}),k.licenseFront&&l("docLicenseFront",a.docLicenseFront,"Licence (front)"),k.licenseBack&&l("docLicenseBack",a.docLicenseBack,"Licence (back)"),k.pr&&l("docPR",a.docPR,"PR card image"),k.passport&&l("docPassport",a.docPassport,"Passport image"),k.permit&&l("docPermit",a.docPermit,"Permit document image")});function dH(a){return{...a,licenseNo:(0,dz.normalizedLicence)(a.licenseNo),passportNumber:a.passportCountry?(0,dD.normalizePassport)(a.passportNumber??""):void 0,prNumber:a.prNumber?a.prNumber.replace(/\D/g,""):void 0,uci:a.uci?a.uci.replace(/\D/g,""):void 0}}},31615,a=>{"use strict";a.s(["default",()=>e]);var b=a.i(62255),c=a.i(39059);let d=["image/jpeg","image/png"];function e({label:a,hint:e,value:f,onChange:g,id:h,required:i=!1}){let j=(0,c.useId)(),k=h??j,[l,m]=(0,c.useState)(null);return(0,b.jsxs)("div",{className:"space-y-2",children:[(0,b.jsxs)("label",{htmlFor:k,className:"block text-sm font-medium text-slate-700",children:[a," ",i&&(0,b.jsx)("span",{className:"text-rose-600",children:"*"})]}),(0,b.jsx)("div",{className:"flex items-center gap-3",children:(0,b.jsx)("input",{id:k,type:"file",accept:d.join(","),className:"block w-full text-sm file:mr-4 file:rounded file:border-0 file:bg-slate-900 file:px-3 file:py-2 file:text-white hover:file:bg-slate-800",onChange:function(a){let b=a.target.files?.[0];if(b){if(!d.includes(b.type))return void m("Only JPG or PNG accepted");if(b.size>4194304)return void m("File must be ≤ 4 MB");m(null),g(b)}}})}),e&&(0,b.jsx)("p",{className:"text-xs text-slate-500",children:e}),l&&(0,b.jsx)("p",{className:"text-xs text-rose-600","aria-live":"polite",children:l}),f&&(0,b.jsxs)("div",{className:"flex items-center gap-3 rounded border border-slate-200 p-2 text-xs text-slate-600",children:[f.name," • ",(f.size/1024/1024).toFixed(1)," MB",(0,b.jsx)("button",{type:"button",className:"ml-auto text-xs underline",onClick:()=>g(null),children:"Remove"})]})]})}},20267,a=>a.a(async(b,c)=>{try{let b=await a.y("@react-pdf/renderer");a.n(b),c()}catch(a){c(a)}},!0),78477,a=>a.a(async(b,c)=>{try{a.s(["default",()=>g]);var d=a.i(62255),e=a.i(20267),f=b([e]);[e]=f.then?(await f)():f;let h=e.StyleSheet.create({page:{padding:20,fontSize:10,color:"#0A0F1F"},card:{borderWidth:1,borderColor:"#e5e7eb",padding:12,borderRadius:6},row:{flexDirection:"row",gap:10},col:{flexGrow:1},title:{fontSize:14,marginBottom:6},label:{color:"#6b7280"}});function g({name:a,qrPng:b}){return(0,d.jsx)(e.Document,{children:(0,d.jsx)(e.Page,{size:"A6",style:h.page,children:(0,d.jsxs)(e.View,{style:h.card,children:[(0,d.jsx)(e.Text,{style:h.title,children:"Driver Identity Card"}),(0,d.jsxs)(e.View,{style:h.row,children:[(0,d.jsx)(e.View,{style:h.col,children:(0,d.jsxs)(e.Text,{children:[(0,d.jsx)(e.Text,{style:h.label,children:"Name: "}),a]})}),(0,d.jsx)(e.Image,{src:b,style:{width:120,height:120}})]}),(0,d.jsx)(e.Text,{style:{marginTop:8,color:"#6b7280"},children:"Scan for live verification. QR encodes only a random ID; no personal details."})]})})})}c()}catch(a){c(a)}},!1),3897,(a,b,c)=>{b.exports=function(){return"function"==typeof Promise&&Promise.prototype&&Promise.prototype.then}},24234,(a,b,c)=>{let d,e=[0,26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706];c.getSymbolSize=function(a){if(!a)throw Error('"version" cannot be null or undefined');if(a<1||a>40)throw Error('"version" should be in range from 1 to 40');return 4*a+17},c.getSymbolTotalCodewords=function(a){return e[a]},c.getBCHDigit=function(a){let b=0;for(;0!==a;)b++,a>>>=1;return b},c.setToSJISFunction=function(a){if("function"!=typeof a)throw Error('"toSJISFunc" is not a valid function.');d=a},c.isKanjiModeEnabled=function(){return void 0!==d},c.toSJIS=function(a){return d(a)}},94220,(a,b,c)=>{c.L={bit:1},c.M={bit:0},c.Q={bit:3},c.H={bit:2},c.isValid=function(a){return a&&void 0!==a.bit&&a.bit>=0&&a.bit<4},c.from=function(a,b){if(c.isValid(a))return a;try{if("string"!=typeof a)throw Error("Param is not a string");switch(a.toLowerCase()){case"l":case"low":return c.L;case"m":case"medium":return c.M;case"q":case"quartile":return c.Q;case"h":case"high":return c.H;default:throw Error("Unknown EC Level: "+a)}}catch(a){return b}}},679,(a,b,c)=>{function d(){this.buffer=[],this.length=0}d.prototype={get:function(a){let b=Math.floor(a/8);return(this.buffer[b]>>>7-a%8&1)==1},put:function(a,b){for(let c=0;c<b;c++)this.putBit((a>>>b-c-1&1)==1)},getLengthInBits:function(){return this.length},putBit:function(a){let b=Math.floor(this.length/8);this.buffer.length<=b&&this.buffer.push(0),a&&(this.buffer[b]|=128>>>this.length%8),this.length++}},b.exports=d},293,(a,b,c)=>{function d(a){if(!a||a<1)throw Error("BitMatrix size must be defined and greater than 0");this.size=a,this.data=new Uint8Array(a*a),this.reservedBit=new Uint8Array(a*a)}d.prototype.set=function(a,b,c,d){let e=a*this.size+b;this.data[e]=c,d&&(this.reservedBit[e]=!0)},d.prototype.get=function(a,b){return this.data[a*this.size+b]},d.prototype.xor=function(a,b,c){this.data[a*this.size+b]^=c},d.prototype.isReserved=function(a,b){return this.reservedBit[a*this.size+b]},b.exports=d},76829,(a,b,c)=>{let d=a.r(24234).getSymbolSize;c.getRowColCoords=function(a){if(1===a)return[];let b=Math.floor(a/7)+2,c=d(a),e=145===c?26:2*Math.ceil((c-13)/(2*b-2)),f=[c-7];for(let a=1;a<b-1;a++)f[a]=f[a-1]-e;return f.push(6),f.reverse()},c.getPositions=function(a){let b=[],d=c.getRowColCoords(a),e=d.length;for(let a=0;a<e;a++)for(let c=0;c<e;c++)(0!==a||0!==c)&&(0!==a||c!==e-1)&&(a!==e-1||0!==c)&&b.push([d[a],d[c]]);return b}},73118,(a,b,c)=>{let d=a.r(24234).getSymbolSize;c.getPositions=function(a){let b=d(a);return[[0,0],[b-7,0],[0,b-7]]}},68837,(a,b,c)=>{c.Patterns={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};let d={N1:3,N2:3,N3:40,N4:10};c.isValid=function(a){return null!=a&&""!==a&&!isNaN(a)&&a>=0&&a<=7},c.from=function(a){return c.isValid(a)?parseInt(a,10):void 0},c.getPenaltyN1=function(a){let b=a.size,c=0,e=0,f=0,g=null,h=null;for(let i=0;i<b;i++){e=f=0,g=h=null;for(let j=0;j<b;j++){let b=a.get(i,j);b===g?e++:(e>=5&&(c+=d.N1+(e-5)),g=b,e=1),(b=a.get(j,i))===h?f++:(f>=5&&(c+=d.N1+(f-5)),h=b,f=1)}e>=5&&(c+=d.N1+(e-5)),f>=5&&(c+=d.N1+(f-5))}return c},c.getPenaltyN2=function(a){let b=a.size,c=0;for(let d=0;d<b-1;d++)for(let e=0;e<b-1;e++){let b=a.get(d,e)+a.get(d,e+1)+a.get(d+1,e)+a.get(d+1,e+1);(4===b||0===b)&&c++}return c*d.N2},c.getPenaltyN3=function(a){let b=a.size,c=0,e=0,f=0;for(let d=0;d<b;d++){e=f=0;for(let g=0;g<b;g++)e=e<<1&2047|a.get(d,g),g>=10&&(1488===e||93===e)&&c++,f=f<<1&2047|a.get(g,d),g>=10&&(1488===f||93===f)&&c++}return c*d.N3},c.getPenaltyN4=function(a){let b=0,c=a.data.length;for(let d=0;d<c;d++)b+=a.data[d];return Math.abs(Math.ceil(100*b/c/5)-10)*d.N4},c.applyMask=function(a,b){let d=b.size;for(let e=0;e<d;e++)for(let f=0;f<d;f++)b.isReserved(f,e)||b.xor(f,e,function(a,b,d){switch(a){case c.Patterns.PATTERN000:return(b+d)%2==0;case c.Patterns.PATTERN001:return b%2==0;case c.Patterns.PATTERN010:return d%3==0;case c.Patterns.PATTERN011:return(b+d)%3==0;case c.Patterns.PATTERN100:return(Math.floor(b/2)+Math.floor(d/3))%2==0;case c.Patterns.PATTERN101:return b*d%2+b*d%3==0;case c.Patterns.PATTERN110:return(b*d%2+b*d%3)%2==0;case c.Patterns.PATTERN111:return(b*d%3+(b+d)%2)%2==0;default:throw Error("bad maskPattern:"+a)}}(a,f,e))},c.getBestMask=function(a,b){let d=Object.keys(c.Patterns).length,e=0,f=1/0;for(let g=0;g<d;g++){b(g),c.applyMask(g,a);let d=c.getPenaltyN1(a)+c.getPenaltyN2(a)+c.getPenaltyN3(a)+c.getPenaltyN4(a);c.applyMask(g,a),d<f&&(f=d,e=g)}return e}},92501,(a,b,c)=>{let d=a.r(94220),e=[1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,4,1,2,4,4,2,4,4,4,2,4,6,5,2,4,6,6,2,5,8,8,4,5,8,8,4,5,8,11,4,8,10,11,4,9,12,16,4,9,16,16,6,10,12,18,6,10,17,16,6,11,16,19,6,13,18,21,7,14,21,25,8,16,20,25,8,17,23,25,9,17,23,34,9,18,25,30,10,20,27,32,12,21,29,35,12,23,34,37,12,25,34,40,13,26,35,42,14,28,38,45,15,29,40,48,16,31,43,51,17,33,45,54,18,35,48,57,19,37,51,60,19,38,53,63,20,40,56,66,21,43,59,70,22,45,62,74,24,47,65,77,25,49,68,81],f=[7,10,13,17,10,16,22,28,15,26,36,44,20,36,52,64,26,48,72,88,36,64,96,112,40,72,108,130,48,88,132,156,60,110,160,192,72,130,192,224,80,150,224,264,96,176,260,308,104,198,288,352,120,216,320,384,132,240,360,432,144,280,408,480,168,308,448,532,180,338,504,588,196,364,546,650,224,416,600,700,224,442,644,750,252,476,690,816,270,504,750,900,300,560,810,960,312,588,870,1050,336,644,952,1110,360,700,1020,1200,390,728,1050,1260,420,784,1140,1350,450,812,1200,1440,480,868,1290,1530,510,924,1350,1620,540,980,1440,1710,570,1036,1530,1800,570,1064,1590,1890,600,1120,1680,1980,630,1204,1770,2100,660,1260,1860,2220,720,1316,1950,2310,750,1372,2040,2430];c.getBlocksCount=function(a,b){switch(b){case d.L:return e[(a-1)*4+0];case d.M:return e[(a-1)*4+1];case d.Q:return e[(a-1)*4+2];case d.H:return e[(a-1)*4+3];default:return}},c.getTotalCodewordsCount=function(a,b){switch(b){case d.L:return f[(a-1)*4+0];case d.M:return f[(a-1)*4+1];case d.Q:return f[(a-1)*4+2];case d.H:return f[(a-1)*4+3];default:return}}},64864,(a,b,c)=>{let d=new Uint8Array(512),e=new Uint8Array(256);!function(){let a=1;for(let b=0;b<255;b++)d[b]=a,e[a]=b,256&(a<<=1)&&(a^=285);for(let a=255;a<512;a++)d[a]=d[a-255]}(),c.log=function(a){if(a<1)throw Error("log("+a+")");return e[a]},c.exp=function(a){return d[a]},c.mul=function(a,b){return 0===a||0===b?0:d[e[a]+e[b]]}},56633,(a,b,c)=>{let d=a.r(64864);c.mul=function(a,b){let c=new Uint8Array(a.length+b.length-1);for(let e=0;e<a.length;e++)for(let f=0;f<b.length;f++)c[e+f]^=d.mul(a[e],b[f]);return c},c.mod=function(a,b){let c=new Uint8Array(a);for(;c.length-b.length>=0;){let a=c[0];for(let e=0;e<b.length;e++)c[e]^=d.mul(b[e],a);let e=0;for(;e<c.length&&0===c[e];)e++;c=c.slice(e)}return c},c.generateECPolynomial=function(a){let b=new Uint8Array([1]);for(let e=0;e<a;e++)b=c.mul(b,new Uint8Array([1,d.exp(e)]));return b}},29881,(a,b,c)=>{let d=a.r(56633);function e(a){this.genPoly=void 0,this.degree=a,this.degree&&this.initialize(this.degree)}e.prototype.initialize=function(a){this.degree=a,this.genPoly=d.generateECPolynomial(this.degree)},e.prototype.encode=function(a){if(!this.genPoly)throw Error("Encoder not initialized");let b=new Uint8Array(a.length+this.degree);b.set(a);let c=d.mod(b,this.genPoly),e=this.degree-c.length;if(e>0){let a=new Uint8Array(this.degree);return a.set(c,e),a}return c},b.exports=e},20087,(a,b,c)=>{c.isValid=function(a){return!isNaN(a)&&a>=1&&a<=40}},77787,(a,b,c)=>{let d="[0-9]+",e="(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+",f="(?:(?![A-Z0-9 $%*+\\-./:]|"+(e=e.replace(/u/g,"\\u"))+")(?:.|[\r\n]))+";c.KANJI=RegExp(e,"g"),c.BYTE_KANJI=RegExp("[^A-Z0-9 $%*+\\-./:]+","g"),c.BYTE=RegExp(f,"g"),c.NUMERIC=RegExp(d,"g"),c.ALPHANUMERIC=RegExp("[A-Z $%*+\\-./:]+","g");let g=RegExp("^"+e+"$"),h=RegExp("^"+d+"$"),i=RegExp("^[A-Z0-9 $%*+\\-./:]+$");c.testKanji=function(a){return g.test(a)},c.testNumeric=function(a){return h.test(a)},c.testAlphanumeric=function(a){return i.test(a)}},74319,(a,b,c)=>{let d=a.r(20087),e=a.r(77787);c.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]},c.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]},c.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]},c.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]},c.MIXED={bit:-1},c.getCharCountIndicator=function(a,b){if(!a.ccBits)throw Error("Invalid mode: "+a);if(!d.isValid(b))throw Error("Invalid version: "+b);return b>=1&&b<10?a.ccBits[0]:b<27?a.ccBits[1]:a.ccBits[2]},c.getBestModeForData=function(a){return e.testNumeric(a)?c.NUMERIC:e.testAlphanumeric(a)?c.ALPHANUMERIC:e.testKanji(a)?c.KANJI:c.BYTE},c.toString=function(a){if(a&&a.id)return a.id;throw Error("Invalid mode")},c.isValid=function(a){return a&&a.bit&&a.ccBits},c.from=function(a,b){if(c.isValid(a))return a;try{if("string"!=typeof a)throw Error("Param is not a string");switch(a.toLowerCase()){case"numeric":return c.NUMERIC;case"alphanumeric":return c.ALPHANUMERIC;case"kanji":return c.KANJI;case"byte":return c.BYTE;default:throw Error("Unknown mode: "+a)}}catch(a){return b}}},43766,(a,b,c)=>{let d=a.r(24234),e=a.r(92501),f=a.r(94220),g=a.r(74319),h=a.r(20087),i=d.getBCHDigit(7973);function j(a,b){return g.getCharCountIndicator(a,b)+4}c.from=function(a,b){return h.isValid(a)?parseInt(a,10):b},c.getCapacity=function(a,b,c){if(!h.isValid(a))throw Error("Invalid QR Code version");void 0===c&&(c=g.BYTE);let f=(d.getSymbolTotalCodewords(a)-e.getTotalCodewordsCount(a,b))*8;if(c===g.MIXED)return f;let i=f-j(c,a);switch(c){case g.NUMERIC:return Math.floor(i/10*3);case g.ALPHANUMERIC:return Math.floor(i/11*2);case g.KANJI:return Math.floor(i/13);case g.BYTE:default:return Math.floor(i/8)}},c.getBestVersionForData=function(a,b){let d,e=f.from(b,f.M);if(Array.isArray(a)){if(a.length>1){for(let b=1;b<=40;b++)if(function(a,b){let c=0;return a.forEach(function(a){let d=j(a.mode,b);c+=d+a.getBitsLength()}),c}(a,b)<=c.getCapacity(b,e,g.MIXED))return b;return}if(0===a.length)return 1;d=a[0]}else d=a;return function(a,b,d){for(let e=1;e<=40;e++)if(b<=c.getCapacity(e,d,a))return e}(d.mode,d.getLength(),e)},c.getEncodedBits=function(a){if(!h.isValid(a)||a<7)throw Error("Invalid QR Code version");let b=a<<12;for(;d.getBCHDigit(b)-i>=0;)b^=7973<<d.getBCHDigit(b)-i;return a<<12|b}},11319,(a,b,c)=>{let d=a.r(24234),e=d.getBCHDigit(1335);c.getEncodedBits=function(a,b){let c=a.bit<<3|b,f=c<<10;for(;d.getBCHDigit(f)-e>=0;)f^=1335<<d.getBCHDigit(f)-e;return(c<<10|f)^21522}},58947,(a,b,c)=>{let d=a.r(74319);function e(a){this.mode=d.NUMERIC,this.data=a.toString()}e.getBitsLength=function(a){return 10*Math.floor(a/3)+(a%3?a%3*3+1:0)},e.prototype.getLength=function(){return this.data.length},e.prototype.getBitsLength=function(){return e.getBitsLength(this.data.length)},e.prototype.write=function(a){let b,c;for(b=0;b+3<=this.data.length;b+=3)c=parseInt(this.data.substr(b,3),10),a.put(c,10);let d=this.data.length-b;d>0&&(c=parseInt(this.data.substr(b),10),a.put(c,3*d+1))},b.exports=e},86494,(a,b,c)=>{let d=a.r(74319),e=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function f(a){this.mode=d.ALPHANUMERIC,this.data=a}f.getBitsLength=function(a){return 11*Math.floor(a/2)+a%2*6},f.prototype.getLength=function(){return this.data.length},f.prototype.getBitsLength=function(){return f.getBitsLength(this.data.length)},f.prototype.write=function(a){let b;for(b=0;b+2<=this.data.length;b+=2){let c=45*e.indexOf(this.data[b]);c+=e.indexOf(this.data[b+1]),a.put(c,11)}this.data.length%2&&a.put(e.indexOf(this.data[b]),6)},b.exports=f},23958,(a,b,c)=>{let d=a.r(74319);function e(a){this.mode=d.BYTE,"string"==typeof a?this.data=new TextEncoder().encode(a):this.data=new Uint8Array(a)}e.getBitsLength=function(a){return 8*a},e.prototype.getLength=function(){return this.data.length},e.prototype.getBitsLength=function(){return e.getBitsLength(this.data.length)},e.prototype.write=function(a){for(let b=0,c=this.data.length;b<c;b++)a.put(this.data[b],8)},b.exports=e},94393,(a,b,c)=>{let d=a.r(74319),e=a.r(24234);function f(a){this.mode=d.KANJI,this.data=a}f.getBitsLength=function(a){return 13*a},f.prototype.getLength=function(){return this.data.length},f.prototype.getBitsLength=function(){return f.getBitsLength(this.data.length)},f.prototype.write=function(a){let b;for(b=0;b<this.data.length;b++){let c=e.toSJIS(this.data[b]);if(c>=33088&&c<=40956)c-=33088;else if(c>=57408&&c<=60351)c-=49472;else throw Error("Invalid SJIS character: "+this.data[b]+"\nMake sure your charset is UTF-8");c=(c>>>8&255)*192+(255&c),a.put(c,13)}},b.exports=f},34540,(a,b,c)=>{"use strict";var d={single_source_shortest_paths:function(a,b,c){var e,f,g,h,i,j,k,l={},m={};m[b]=0;var n=d.PriorityQueue.make();for(n.push(b,0);!n.empty();)for(g in f=(e=n.pop()).value,h=e.cost,i=a[f]||{})i.hasOwnProperty(g)&&(j=h+i[g],k=m[g],(void 0===m[g]||k>j)&&(m[g]=j,n.push(g,j),l[g]=f));if(void 0!==c&&void 0===m[c])throw Error("Could not find a path from "+b+" to "+c+".");return l},extract_shortest_path_from_predecessor_list:function(a,b){for(var c=[],d=b;d;)c.push(d),a[d],d=a[d];return c.reverse(),c},find_path:function(a,b,c){var e=d.single_source_shortest_paths(a,b,c);return d.extract_shortest_path_from_predecessor_list(e,c)},PriorityQueue:{make:function(a){var b,c=d.PriorityQueue,e={};for(b in a=a||{},c)c.hasOwnProperty(b)&&(e[b]=c[b]);return e.queue=[],e.sorter=a.sorter||c.default_sorter,e},default_sorter:function(a,b){return a.cost-b.cost},push:function(a,b){this.queue.push({value:a,cost:b}),this.queue.sort(this.sorter)},pop:function(){return this.queue.shift()},empty:function(){return 0===this.queue.length}}};b.exports=d},76620,(a,b,c)=>{let d=a.r(74319),e=a.r(58947),f=a.r(86494),g=a.r(23958),h=a.r(94393),i=a.r(77787),j=a.r(24234),k=a.r(34540);function l(a){return unescape(encodeURIComponent(a)).length}function m(a,b,c){let d,e=[];for(;null!==(d=a.exec(c));)e.push({data:d[0],index:d.index,mode:b,length:d[0].length});return e}function n(a){let b,c,e=m(i.NUMERIC,d.NUMERIC,a),f=m(i.ALPHANUMERIC,d.ALPHANUMERIC,a);return j.isKanjiModeEnabled()?(b=m(i.BYTE,d.BYTE,a),c=m(i.KANJI,d.KANJI,a)):(b=m(i.BYTE_KANJI,d.BYTE,a),c=[]),e.concat(f,b,c).sort(function(a,b){return a.index-b.index}).map(function(a){return{data:a.data,mode:a.mode,length:a.length}})}function o(a,b){switch(b){case d.NUMERIC:return e.getBitsLength(a);case d.ALPHANUMERIC:return f.getBitsLength(a);case d.KANJI:return h.getBitsLength(a);case d.BYTE:return g.getBitsLength(a)}}function p(a,b){let c,i=d.getBestModeForData(a);if((c=d.from(b,i))!==d.BYTE&&c.bit<i.bit)throw Error('"'+a+'" cannot be encoded with mode '+d.toString(c)+".\n Suggested mode is: "+d.toString(i));switch(c===d.KANJI&&!j.isKanjiModeEnabled()&&(c=d.BYTE),c){case d.NUMERIC:return new e(a);case d.ALPHANUMERIC:return new f(a);case d.KANJI:return new h(a);case d.BYTE:return new g(a)}}c.fromArray=function(a){return a.reduce(function(a,b){return"string"==typeof b?a.push(p(b,null)):b.data&&a.push(p(b.data,b.mode)),a},[])},c.fromString=function(a,b){let e=function(a,b){let c={},e={start:{}},f=["start"];for(let g=0;g<a.length;g++){let h=a[g],i=[];for(let a=0;a<h.length;a++){let j=h[a],k=""+g+a;i.push(k),c[k]={node:j,lastCount:0},e[k]={};for(let a=0;a<f.length;a++){let g=f[a];c[g]&&c[g].node.mode===j.mode?(e[g][k]=o(c[g].lastCount+j.length,j.mode)-o(c[g].lastCount,j.mode),c[g].lastCount+=j.length):(c[g]&&(c[g].lastCount=j.length),e[g][k]=o(j.length,j.mode)+4+d.getCharCountIndicator(j.mode,b))}}f=i}for(let a=0;a<f.length;a++)e[f[a]].end=0;return{map:e,table:c}}(function(a){let b=[];for(let c=0;c<a.length;c++){let e=a[c];switch(e.mode){case d.NUMERIC:b.push([e,{data:e.data,mode:d.ALPHANUMERIC,length:e.length},{data:e.data,mode:d.BYTE,length:e.length}]);break;case d.ALPHANUMERIC:b.push([e,{data:e.data,mode:d.BYTE,length:e.length}]);break;case d.KANJI:b.push([e,{data:e.data,mode:d.BYTE,length:l(e.data)}]);break;case d.BYTE:b.push([{data:e.data,mode:d.BYTE,length:l(e.data)}])}}return b}(n(a,j.isKanjiModeEnabled())),b),f=k.find_path(e.map,"start","end"),g=[];for(let a=1;a<f.length-1;a++)g.push(e.table[f[a]].node);return c.fromArray(g.reduce(function(a,b){let c=a.length-1>=0?a[a.length-1]:null;return c&&c.mode===b.mode?a[a.length-1].data+=b.data:a.push(b),a},[]))},c.rawSplit=function(a){return c.fromArray(n(a,j.isKanjiModeEnabled()))}},77260,(a,b,c)=>{let d=a.r(24234),e=a.r(94220),f=a.r(679),g=a.r(293),h=a.r(76829),i=a.r(73118),j=a.r(68837),k=a.r(92501),l=a.r(29881),m=a.r(43766),n=a.r(11319),o=a.r(74319),p=a.r(76620);function q(a,b,c){let d,e,f=a.size,g=n.getEncodedBits(b,c);for(d=0;d<15;d++)e=(g>>d&1)==1,d<6?a.set(d,8,e,!0):d<8?a.set(d+1,8,e,!0):a.set(f-15+d,8,e,!0),d<8?a.set(8,f-d-1,e,!0):d<9?a.set(8,15-d-1+1,e,!0):a.set(8,15-d-1,e,!0);a.set(f-8,8,1,!0)}c.create=function(a,b){let c,n;if(void 0===a||""===a)throw Error("No input text");let r=e.M;return void 0!==b&&(r=e.from(b.errorCorrectionLevel,e.M),c=m.from(b.version),n=j.from(b.maskPattern),b.toSJISFunc&&d.setToSJISFunction(b.toSJISFunc)),function(a,b,c,e){let n;if(Array.isArray(a))n=p.fromArray(a);else if("string"==typeof a){let d=b;if(!d){let b=p.rawSplit(a);d=m.getBestVersionForData(b,c)}n=p.fromString(a,d||40)}else throw Error("Invalid data");let r=m.getBestVersionForData(n,c);if(!r)throw Error("The amount of data is too big to be stored in a QR Code");if(b){if(b<r)throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: "+r+".\n")}else b=r;let s=function(a,b,c){let e=new f;c.forEach(function(b){e.put(b.mode.bit,4),e.put(b.getLength(),o.getCharCountIndicator(b.mode,a)),b.write(e)});let g=(d.getSymbolTotalCodewords(a)-k.getTotalCodewordsCount(a,b))*8;for(e.getLengthInBits()+4<=g&&e.put(0,4);e.getLengthInBits()%8!=0;)e.putBit(0);let h=(g-e.getLengthInBits())/8;for(let a=0;a<h;a++)e.put(a%2?17:236,8);return function(a,b,c){let e,f,g=d.getSymbolTotalCodewords(b),h=g-k.getTotalCodewordsCount(b,c),i=k.getBlocksCount(b,c),j=g%i,m=i-j,n=Math.floor(g/i),o=Math.floor(h/i),p=o+1,q=n-o,r=new l(q),s=0,t=Array(i),u=Array(i),v=0,w=new Uint8Array(a.buffer);for(let a=0;a<i;a++){let b=a<m?o:p;t[a]=w.slice(s,s+b),u[a]=r.encode(t[a]),s+=b,v=Math.max(v,b)}let x=new Uint8Array(g),y=0;for(e=0;e<v;e++)for(f=0;f<i;f++)e<t[f].length&&(x[y++]=t[f][e]);for(e=0;e<q;e++)for(f=0;f<i;f++)x[y++]=u[f][e];return x}(e,a,b)}(b,c,n),t=new g(d.getSymbolSize(b));!function(a,b){let c=a.size,d=i.getPositions(b);for(let b=0;b<d.length;b++){let e=d[b][0],f=d[b][1];for(let b=-1;b<=7;b++)if(!(e+b<=-1)&&!(c<=e+b))for(let d=-1;d<=7;d++)f+d<=-1||c<=f+d||(b>=0&&b<=6&&(0===d||6===d)||d>=0&&d<=6&&(0===b||6===b)||b>=2&&b<=4&&d>=2&&d<=4?a.set(e+b,f+d,!0,!0):a.set(e+b,f+d,!1,!0))}}(t,b);let u=t.size;for(let a=8;a<u-8;a++){let b=a%2==0;t.set(a,6,b,!0),t.set(6,a,b,!0)}return!function(a,b){let c=h.getPositions(b);for(let b=0;b<c.length;b++){let d=c[b][0],e=c[b][1];for(let b=-2;b<=2;b++)for(let c=-2;c<=2;c++)-2===b||2===b||-2===c||2===c||0===b&&0===c?a.set(d+b,e+c,!0,!0):a.set(d+b,e+c,!1,!0)}}(t,b),q(t,c,0),b>=7&&function(a,b){let c,d,e,f=a.size,g=m.getEncodedBits(b);for(let b=0;b<18;b++)c=Math.floor(b/3),d=b%3+f-8-3,e=(g>>b&1)==1,a.set(c,d,e,!0),a.set(d,c,e,!0)}(t,b),!function(a,b){let c=a.size,d=-1,e=c-1,f=7,g=0;for(let h=c-1;h>0;h-=2)for(6===h&&h--;;){for(let c=0;c<2;c++)if(!a.isReserved(e,h-c)){let d=!1;g<b.length&&(d=(b[g]>>>f&1)==1),a.set(e,h-c,d),-1==--f&&(g++,f=7)}if((e+=d)<0||c<=e){e-=d,d=-d;break}}}(t,s),isNaN(e)&&(e=j.getBestMask(t,q.bind(null,t,c))),j.applyMask(e,t),q(t,c,e),{modules:t,version:b,errorCorrectionLevel:c,maskPattern:e,segments:n}}(a,c,r,n)}},30370,(a,b,c)=>{function d(a){if("number"==typeof a&&(a=a.toString()),"string"!=typeof a)throw Error("Color should be defined as hex string");let b=a.slice().replace("#","").split("");if(b.length<3||5===b.length||b.length>8)throw Error("Invalid hex color: "+a);(3===b.length||4===b.length)&&(b=Array.prototype.concat.apply([],b.map(function(a){return[a,a]}))),6===b.length&&b.push("F","F");let c=parseInt(b.join(""),16);return{r:c>>24&255,g:c>>16&255,b:c>>8&255,a:255&c,hex:"#"+b.slice(0,6).join("")}}c.getOptions=function(a){a||(a={}),a.color||(a.color={});let b=void 0===a.margin||null===a.margin||a.margin<0?4:a.margin,c=a.width&&a.width>=21?a.width:void 0,e=a.scale||4;return{width:c,scale:c?4:e,margin:b,color:{dark:d(a.color.dark||"#000000ff"),light:d(a.color.light||"#ffffffff")},type:a.type,rendererOpts:a.rendererOpts||{}}},c.getScale=function(a,b){return b.width&&b.width>=a+2*b.margin?b.width/(a+2*b.margin):b.scale},c.getImageWidth=function(a,b){let d=c.getScale(a,b);return Math.floor((a+2*b.margin)*d)},c.qrToImageData=function(a,b,d){let e=b.modules.size,f=b.modules.data,g=c.getScale(e,d),h=Math.floor((e+2*d.margin)*g),i=d.margin*g,j=[d.color.light,d.color.dark];for(let b=0;b<h;b++)for(let c=0;c<h;c++){let k=(b*h+c)*4,l=d.color.light;b>=i&&c>=i&&b<h-i&&c<h-i&&(l=j[+!!f[Math.floor((b-i)/g)*e+Math.floor((c-i)/g)]]),a[k++]=l.r,a[k++]=l.g,a[k++]=l.b,a[k]=l.a}}},35611,(a,b,c)=>{let d=a.r(30370);c.render=function(a,b,c){var e;let f=c,g=b;void 0!==f||b&&b.getContext||(f=b,b=void 0),b||(g=function(){try{return document.createElement("canvas")}catch(a){throw Error("You need to specify a canvas element")}}()),f=d.getOptions(f);let h=d.getImageWidth(a.modules.size,f),i=g.getContext("2d"),j=i.createImageData(h,h);return d.qrToImageData(j.data,a,f),e=g,i.clearRect(0,0,e.width,e.height),e.style||(e.style={}),e.height=h,e.width=h,e.style.height=h+"px",e.style.width=h+"px",i.putImageData(j,0,0),g},c.renderToDataURL=function(a,b,d){let e=d;void 0!==e||b&&b.getContext||(e=b,b=void 0),e||(e={});let f=c.render(a,b,e),g=e.type||"image/png",h=e.rendererOpts||{};return f.toDataURL(g,h.quality)}},866,(a,b,c)=>{let d=a.r(30370);function e(a,b){let c=a.a/255,d=b+'="'+a.hex+'"';return c<1?d+" "+b+'-opacity="'+c.toFixed(2).slice(1)+'"':d}function f(a,b,c){let d=a+b;return void 0!==c&&(d+=" "+c),d}c.render=function(a,b,c){let g=d.getOptions(b),h=a.modules.size,i=a.modules.data,j=h+2*g.margin,k=g.color.light.a?"<path "+e(g.color.light,"fill")+' d="M0 0h'+j+"v"+j+'H0z"/>':"",l="<path "+e(g.color.dark,"stroke")+' d="'+function(a,b,c){let d="",e=0,g=!1,h=0;for(let i=0;i<a.length;i++){let j=Math.floor(i%b),k=Math.floor(i/b);j||g||(g=!0),a[i]?(h++,i>0&&j>0&&a[i-1]||(d+=g?f("M",j+c,.5+k+c):f("m",e,0),e=0,g=!1),j+1<b&&a[i+1]||(d+=f("h",h),h=0)):e++}return d}(i,h,g.margin)+'"/>',m='<svg xmlns="http://www.w3.org/2000/svg" '+(g.width?'width="'+g.width+'" height="'+g.width+'" ':"")+('viewBox="0 0 '+j+" ")+j+'" shape-rendering="crispEdges">'+k+l+"</svg>\n";return"function"==typeof c&&c(null,m),m}},82436,(a,b,c)=>{let d=a.r(3897),e=a.r(77260),f=a.r(35611),g=a.r(866);function h(a,b,c,f,g){let h=[].slice.call(arguments,1),i=h.length,j="function"==typeof h[i-1];if(!j&&!d())throw Error("Callback required as last argument");if(j){if(i<2)throw Error("Too few arguments provided");2===i?(g=c,c=b,b=f=void 0):3===i&&(b.getContext&&void 0===g?(g=f,f=void 0):(g=f,f=c,c=b,b=void 0))}else{if(i<1)throw Error("Too few arguments provided");return 1===i?(c=b,b=f=void 0):2!==i||b.getContext||(f=c,c=b,b=void 0),new Promise(function(d,g){try{let g=e.create(c,f);d(a(g,b,f))}catch(a){g(a)}})}try{let d=e.create(c,f);g(null,a(d,b,f))}catch(a){g(a)}}c.create=e.create,c.toCanvas=h.bind(null,f.render),c.toDataURL=h.bind(null,f.renderToDataURL),c.toString=h.bind(null,function(a,b,c){return g.render(a,c)})},61415,(a,b,c)=>{"use strict";let d=a.r(24361),e=a.r(88947),f=b.exports=function(){e.call(this),this._buffers=[],this._buffered=0,this._reads=[],this._paused=!1,this._encoding="utf8",this.writable=!0};d.inherits(f,e),f.prototype.read=function(a,b){this._reads.push({length:Math.abs(a),allowLess:a<0,func:b}),process.nextTick((function(){this._process(),this._paused&&this._reads&&this._reads.length>0&&(this._paused=!1,this.emit("drain"))}).bind(this))},f.prototype.write=function(a,b){let c;return this.writable?(c=Buffer.isBuffer(a)?a:Buffer.from(a,b||this._encoding),this._buffers.push(c),this._buffered+=c.length,this._process(),this._reads&&0===this._reads.length&&(this._paused=!0),this.writable&&!this._paused):(this.emit("error",Error("Stream not writable")),!1)},f.prototype.end=function(a,b){a&&this.write(a,b),this.writable=!1,this._buffers&&(0===this._buffers.length?this._end():(this._buffers.push(null),this._process()))},f.prototype.destroySoon=f.prototype.end,f.prototype._end=function(){this._reads.length>0&&this.emit("error",Error("Unexpected end of input")),this.destroy()},f.prototype.destroy=function(){this._buffers&&(this.writable=!1,this._reads=null,this._buffers=null,this.emit("close"))},f.prototype._processReadAllowingLess=function(a){this._reads.shift();let b=this._buffers[0];b.length>a.length?(this._buffered-=a.length,this._buffers[0]=b.slice(a.length),a.func.call(this,b.slice(0,a.length))):(this._buffered-=b.length,this._buffers.shift(),a.func.call(this,b))},f.prototype._processRead=function(a){this._reads.shift();let b=0,c=0,d=Buffer.alloc(a.length);for(;b<a.length;){let e=this._buffers[c++],f=Math.min(e.length,a.length-b);e.copy(d,b,0,f),b+=f,f!==e.length&&(this._buffers[--c]=e.slice(f))}c>0&&this._buffers.splice(0,c),this._buffered-=a.length,a.func.call(this,d)},f.prototype._process=function(){try{for(;this._buffered>0&&this._reads&&this._reads.length>0;){let a=this._reads[0];if(a.allowLess)this._processReadAllowingLess(a);else if(this._buffered>=a.length)this._processRead(a);else break}this._buffers&&!this.writable&&this._end()}catch(a){this.emit("error",a)}}},97852,(a,b,c)=>{"use strict";let d=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];c.getImagePasses=function(a,b){let c=[],e=a%8,f=b%8,g=(a-e)/8,h=(b-f)/8;for(let a=0;a<d.length;a++){let b=d[a],i=g*b.x.length,j=h*b.y.length;for(let a=0;a<b.x.length;a++)if(b.x[a]<e)i++;else break;for(let a=0;a<b.y.length;a++)if(b.y[a]<f)j++;else break;i>0&&j>0&&c.push({width:i,height:j,index:a})}return c},c.getInterlaceIterator=function(a){return function(b,c,e){let f=b%d[e].x.length,g=(b-f)/d[e].x.length*8+d[e].x[f],h=c%d[e].y.length;return 4*g+((c-h)/d[e].y.length*8+d[e].y[h])*a*4}}},4327,(a,b,c)=>{"use strict";b.exports=function(a,b,c){let d=a+b-c,e=Math.abs(d-a),f=Math.abs(d-b),g=Math.abs(d-c);return e<=f&&e<=g?a:f<=g?b:c}},39768,(a,b,c)=>{"use strict";let d=a.r(97852),e=a.r(4327);function f(a,b,c){let d=a*b;return 8!==c&&(d=Math.ceil(d/(8/c))),d}let g=b.exports=function(a,b){let c=a.width,e=a.height,g=a.interlace,h=a.bpp,i=a.depth;if(this.read=b.read,this.write=b.write,this.complete=b.complete,this._imageIndex=0,this._images=[],g){let a=d.getImagePasses(c,e);for(let b=0;b<a.length;b++)this._images.push({byteWidth:f(a[b].width,h,i),height:a[b].height,lineIndex:0})}else this._images.push({byteWidth:f(c,h,i),height:e,lineIndex:0});8===i?this._xComparison=h:16===i?this._xComparison=2*h:this._xComparison=1};g.prototype.start=function(){this.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this))},g.prototype._unFilterType1=function(a,b,c){let d=this._xComparison,e=d-1;for(let f=0;f<c;f++){let c=a[1+f],g=f>e?b[f-d]:0;b[f]=c+g}},g.prototype._unFilterType2=function(a,b,c){let d=this._lastLine;for(let e=0;e<c;e++){let c=a[1+e],f=d?d[e]:0;b[e]=c+f}},g.prototype._unFilterType3=function(a,b,c){let d=this._xComparison,e=d-1,f=this._lastLine;for(let g=0;g<c;g++){let c=a[1+g],h=f?f[g]:0,i=Math.floor(((g>e?b[g-d]:0)+h)/2);b[g]=c+i}},g.prototype._unFilterType4=function(a,b,c){let d=this._xComparison,f=d-1,g=this._lastLine;for(let h=0;h<c;h++){let c=a[1+h],i=g?g[h]:0,j=e(h>f?b[h-d]:0,i,h>f&&g?g[h-d]:0);b[h]=c+j}},g.prototype._reverseFilterLine=function(a){let b,c=a[0],d=this._images[this._imageIndex],e=d.byteWidth;if(0===c)b=a.slice(1,e+1);else switch(b=Buffer.alloc(e),c){case 1:this._unFilterType1(a,b,e);break;case 2:this._unFilterType2(a,b,e);break;case 3:this._unFilterType3(a,b,e);break;case 4:this._unFilterType4(a,b,e);break;default:throw Error("Unrecognised filter type - "+c)}this.write(b),d.lineIndex++,d.lineIndex>=d.height?(this._lastLine=null,this._imageIndex++,d=this._images[this._imageIndex]):this._lastLine=b,d?this.read(d.byteWidth+1,this._reverseFilterLine.bind(this)):(this._lastLine=null,this.complete())}},11281,(a,b,c)=>{"use strict";let d=a.r(24361),e=a.r(61415),f=a.r(39768),g=b.exports=function(a){e.call(this);let b=[],c=this;this._filter=new f(a,{read:this.read.bind(this),write:function(a){b.push(a)},complete:function(){c.emit("complete",Buffer.concat(b))}}),this._filter.start()};d.inherits(g,e)},46529,(a,b,c)=>{"use strict";b.exports={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:0x49484452,TYPE_IEND:0x49454e44,TYPE_IDAT:0x49444154,TYPE_PLTE:0x504c5445,TYPE_tRNS:0x74524e53,TYPE_gAMA:0x67414d41,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5}},66298,(a,b,c)=>{"use strict";let d=[];!function(){for(let a=0;a<256;a++){let b=a;for(let a=0;a<8;a++)1&b?b=0xedb88320^b>>>1:b>>>=1;d[a]=b}}();let e=b.exports=function(){this._crc=-1};e.prototype.write=function(a){for(let b=0;b<a.length;b++)this._crc=d[(this._crc^a[b])&255]^this._crc>>>8;return!0},e.prototype.crc32=function(){return -1^this._crc},e.crc32=function(a){let b=-1;for(let c=0;c<a.length;c++)b=d[(b^a[c])&255]^b>>>8;return -1^b}},38513,(a,b,c)=>{"use strict";let d=a.r(46529),e=a.r(66298),f=b.exports=function(a,b){this._options=a,a.checkCRC=!1!==a.checkCRC,this._hasIHDR=!1,this._hasIEND=!1,this._emittedHeadersFinished=!1,this._palette=[],this._colorType=0,this._chunks={},this._chunks[d.TYPE_IHDR]=this._handleIHDR.bind(this),this._chunks[d.TYPE_IEND]=this._handleIEND.bind(this),this._chunks[d.TYPE_IDAT]=this._handleIDAT.bind(this),this._chunks[d.TYPE_PLTE]=this._handlePLTE.bind(this),this._chunks[d.TYPE_tRNS]=this._handleTRNS.bind(this),this._chunks[d.TYPE_gAMA]=this._handleGAMA.bind(this),this.read=b.read,this.error=b.error,this.metadata=b.metadata,this.gamma=b.gamma,this.transColor=b.transColor,this.palette=b.palette,this.parsed=b.parsed,this.inflateData=b.inflateData,this.finished=b.finished,this.simpleTransparency=b.simpleTransparency,this.headersFinished=b.headersFinished||function(){}};f.prototype.start=function(){this.read(d.PNG_SIGNATURE.length,this._parseSignature.bind(this))},f.prototype._parseSignature=function(a){let b=d.PNG_SIGNATURE;for(let c=0;c<b.length;c++)if(a[c]!==b[c])return void this.error(Error("Invalid file signature"));this.read(8,this._parseChunkBegin.bind(this))},f.prototype._parseChunkBegin=function(a){let b=a.readUInt32BE(0),c=a.readUInt32BE(4),f="";for(let b=4;b<8;b++)f+=String.fromCharCode(a[b]);let g=!!(32&a[4]);return this._hasIHDR||c===d.TYPE_IHDR?(this._crc=new e,this._crc.write(Buffer.from(f)),this._chunks[c])?this._chunks[c](b):g?void this.read(b+4,this._skipChunk.bind(this)):void this.error(Error("Unsupported critical chunk type "+f)):void this.error(Error("Expected IHDR on beggining"))},f.prototype._skipChunk=function(){this.read(8,this._parseChunkBegin.bind(this))},f.prototype._handleChunkEnd=function(){this.read(4,this._parseChunkEnd.bind(this))},f.prototype._parseChunkEnd=function(a){let b=a.readInt32BE(0),c=this._crc.crc32();if(this._options.checkCRC&&c!==b)return void this.error(Error("Crc error - "+b+" - "+c));this._hasIEND||this.read(8,this._parseChunkBegin.bind(this))},f.prototype._handleIHDR=function(a){this.read(a,this._parseIHDR.bind(this))},f.prototype._parseIHDR=function(a){this._crc.write(a);let b=a.readUInt32BE(0),c=a.readUInt32BE(4),e=a[8],f=a[9],g=a[10],h=a[11],i=a[12];if(8!==e&&4!==e&&2!==e&&1!==e&&16!==e)return void this.error(Error("Unsupported bit depth "+e));if(!(f in d.COLORTYPE_TO_BPP_MAP))return void this.error(Error("Unsupported color type"));if(0!==g)return void this.error(Error("Unsupported compression method"));if(0!==h)return void this.error(Error("Unsupported filter method"));if(0!==i&&1!==i)return void this.error(Error("Unsupported interlace method"));this._colorType=f;let j=d.COLORTYPE_TO_BPP_MAP[this._colorType];this._hasIHDR=!0,this.metadata({width:b,height:c,depth:e,interlace:!!i,palette:!!(f&d.COLORTYPE_PALETTE),color:!!(f&d.COLORTYPE_COLOR),alpha:!!(f&d.COLORTYPE_ALPHA),bpp:j,colorType:f}),this._handleChunkEnd()},f.prototype._handlePLTE=function(a){this.read(a,this._parsePLTE.bind(this))},f.prototype._parsePLTE=function(a){this._crc.write(a);let b=Math.floor(a.length/3);for(let c=0;c<b;c++)this._palette.push([a[3*c],a[3*c+1],a[3*c+2],255]);this.palette(this._palette),this._handleChunkEnd()},f.prototype._handleTRNS=function(a){this.simpleTransparency(),this.read(a,this._parseTRNS.bind(this))},f.prototype._parseTRNS=function(a){if(this._crc.write(a),this._colorType===d.COLORTYPE_PALETTE_COLOR){if(0===this._palette.length)return void this.error(Error("Transparency chunk must be after palette"));if(a.length>this._palette.length)return void this.error(Error("More transparent colors than palette size"));for(let b=0;b<a.length;b++)this._palette[b][3]=a[b];this.palette(this._palette)}this._colorType===d.COLORTYPE_GRAYSCALE&&this.transColor([a.readUInt16BE(0)]),this._colorType===d.COLORTYPE_COLOR&&this.transColor([a.readUInt16BE(0),a.readUInt16BE(2),a.readUInt16BE(4)]),this._handleChunkEnd()},f.prototype._handleGAMA=function(a){this.read(a,this._parseGAMA.bind(this))},f.prototype._parseGAMA=function(a){this._crc.write(a),this.gamma(a.readUInt32BE(0)/d.GAMMA_DIVISION),this._handleChunkEnd()},f.prototype._handleIDAT=function(a){this._emittedHeadersFinished||(this._emittedHeadersFinished=!0,this.headersFinished()),this.read(-a,this._parseIDAT.bind(this,a))},f.prototype._parseIDAT=function(a,b){if(this._crc.write(b),this._colorType===d.COLORTYPE_PALETTE_COLOR&&0===this._palette.length)throw Error("Expected palette not found");this.inflateData(b);let c=a-b.length;c>0?this._handleIDAT(c):this._handleChunkEnd()},f.prototype._handleIEND=function(a){this.read(a,this._parseIEND.bind(this))},f.prototype._parseIEND=function(a){this._crc.write(a),this._hasIEND=!0,this._handleChunkEnd(),this.finished&&this.finished()}},44705,(a,b,c)=>{"use strict";let d=a.r(97852),e=[function(){},function(a,b,c,d){if(d===b.length)throw Error("Ran out of data");let e=b[d];a[c]=e,a[c+1]=e,a[c+2]=e,a[c+3]=255},function(a,b,c,d){if(d+1>=b.length)throw Error("Ran out of data");let e=b[d];a[c]=e,a[c+1]=e,a[c+2]=e,a[c+3]=b[d+1]},function(a,b,c,d){if(d+2>=b.length)throw Error("Ran out of data");a[c]=b[d],a[c+1]=b[d+1],a[c+2]=b[d+2],a[c+3]=255},function(a,b,c,d){if(d+3>=b.length)throw Error("Ran out of data");a[c]=b[d],a[c+1]=b[d+1],a[c+2]=b[d+2],a[c+3]=b[d+3]}],f=[function(){},function(a,b,c,d){let e=b[0];a[c]=e,a[c+1]=e,a[c+2]=e,a[c+3]=d},function(a,b,c){let d=b[0];a[c]=d,a[c+1]=d,a[c+2]=d,a[c+3]=b[1]},function(a,b,c,d){a[c]=b[0],a[c+1]=b[1],a[c+2]=b[2],a[c+3]=d},function(a,b,c){a[c]=b[0],a[c+1]=b[1],a[c+2]=b[2],a[c+3]=b[3]}];c.dataToBitMap=function(a,b){let c,g,h,i,j,k,l=b.width,m=b.height,n=b.depth,o=b.bpp,p=b.interlace;8!==n&&(c=[],g=0,h={get:function(b){for(;c.length<b;)!function(){let b,d,e,f;if(g===a.length)throw Error("Ran out of data");let h=a[g];switch(g++,n){default:throw Error("unrecognised depth");case 16:e=a[g],g++,c.push((h<<8)+e);break;case 4:e=15&h,f=h>>4,c.push(f,e);break;case 2:b=3&h,d=h>>2&3,e=h>>4&3,f=h>>6&3,c.push(f,e,d,b);break;case 1:b=h>>4&1,d=h>>5&1,e=h>>6&1,f=h>>7&1,c.push(f,e,d,b,h>>3&1,h>>2&1,h>>1&1,1&h)}}();let d=c.slice(0,b);return c=c.slice(b),d},resetAfterLine:function(){c.length=0},end:function(){if(g!==a.length)throw Error("extra data found")}}),i=n<=8?Buffer.alloc(l*m*4):new Uint16Array(l*m*4);let q=Math.pow(2,n)-1,r=0;if(p)j=d.getImagePasses(l,m),k=d.getInterlaceIterator(l,m);else{let a=0;k=function(){let b=a;return a+=4,b},j=[{width:l,height:m}]}for(let b=0;b<j.length;b++)8===n?r=function(a,b,c,d,f,g){let h=a.width,i=a.height,j=a.index;for(let a=0;a<i;a++)for(let i=0;i<h;i++){let h=c(i,a,j);e[d](b,f,h,g),g+=d}return g}(j[b],i,k,o,a,r):function(a,b,c,d,e,g){let h=a.width,i=a.height,j=a.index;for(let a=0;a<i;a++){for(let i=0;i<h;i++){let h=e.get(d),k=c(i,a,j);f[d](b,h,k,g)}e.resetAfterLine()}}(j[b],i,k,o,h,q);if(8===n){if(r!==a.length)throw Error("extra data found")}else h.end();return i}},50013,(a,b,c)=>{"use strict";b.exports=function(a,b){let c=b.depth,d=b.width,e=b.height,f=b.colorType,g=b.transColor,h=b.palette,i=a;return 3===f?!function(a,b,c,d,e){let f=0;for(let g=0;g<d;g++)for(let d=0;d<c;d++){let c=e[a[f]];if(!c)throw Error("index "+a[f]+" not in palette");for(let a=0;a<4;a++)b[f+a]=c[a];f+=4}}(a,i,d,e,h):(g&&function(a,b,c,d,e){let f=0;for(let g=0;g<d;g++)for(let d=0;d<c;d++){let c=!1;if(1===e.length?e[0]===a[f]&&(c=!0):e[0]===a[f]&&e[1]===a[f+1]&&e[2]===a[f+2]&&(c=!0),c)for(let a=0;a<4;a++)b[f+a]=0;f+=4}}(a,i,d,e,g),8!==c&&(16===c&&(i=Buffer.alloc(d*e*4)),!function(a,b,c,d,e){let f=Math.pow(2,e)-1,g=0;for(let e=0;e<d;e++)for(let d=0;d<c;d++){for(let c=0;c<4;c++)b[g+c]=Math.floor(255*a[g+c]/f+.5);g+=4}}(a,i,d,e,c))),i}},13185,(a,b,c)=>{"use strict";let d=a.r(24361),e=a.r(6461),f=a.r(61415),g=a.r(11281),h=a.r(38513),i=a.r(44705),j=a.r(50013),k=b.exports=function(a){f.call(this),this._parser=new h(a,{read:this.read.bind(this),error:this._handleError.bind(this),metadata:this._handleMetaData.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this._handlePalette.bind(this),transColor:this._handleTransColor.bind(this),finished:this._finished.bind(this),inflateData:this._inflateData.bind(this),simpleTransparency:this._simpleTransparency.bind(this),headersFinished:this._headersFinished.bind(this)}),this._options=a,this.writable=!0,this._parser.start()};d.inherits(k,f),k.prototype._handleError=function(a){this.emit("error",a),this.writable=!1,this.destroy(),this._inflate&&this._inflate.destroy&&this._inflate.destroy(),this._filter&&(this._filter.destroy(),this._filter.on("error",function(){})),this.errord=!0},k.prototype._inflateData=function(a){if(!this._inflate)if(this._bitmapInfo.interlace)this._inflate=e.createInflate(),this._inflate.on("error",this.emit.bind(this,"error")),this._filter.on("complete",this._complete.bind(this)),this._inflate.pipe(this._filter);else{let a=((this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3)+1)*this._bitmapInfo.height,b=Math.max(a,e.Z_MIN_CHUNK);this._inflate=e.createInflate({chunkSize:b});let c=a,d=this.emit.bind(this,"error");this._inflate.on("error",function(a){c&&d(a)}),this._filter.on("complete",this._complete.bind(this));let f=this._filter.write.bind(this._filter);this._inflate.on("data",function(a){c&&(a.length>c&&(a=a.slice(0,c)),c-=a.length,f(a))}),this._inflate.on("end",this._filter.end.bind(this._filter))}this._inflate.write(a)},k.prototype._handleMetaData=function(a){this._metaData=a,this._bitmapInfo=Object.create(a),this._filter=new g(this._bitmapInfo)},k.prototype._handleTransColor=function(a){this._bitmapInfo.transColor=a},k.prototype._handlePalette=function(a){this._bitmapInfo.palette=a},k.prototype._simpleTransparency=function(){this._metaData.alpha=!0},k.prototype._headersFinished=function(){this.emit("metadata",this._metaData)},k.prototype._finished=function(){this.errord||(this._inflate?this._inflate.end():this.emit("error","No Inflate block"))},k.prototype._complete=function(a){let b;if(!this.errord){try{let c=i.dataToBitMap(a,this._bitmapInfo);b=j(c,this._bitmapInfo),c=null}catch(a){this._handleError(a);return}this.emit("parsed",b)}}},58580,(a,b,c)=>{"use strict";let d=a.r(46529);b.exports=function(a,b,c,e){let f=-1!==[d.COLORTYPE_COLOR_ALPHA,d.COLORTYPE_ALPHA].indexOf(e.colorType);if(e.colorType===e.inputColorType){let b,c=(new DataView(b=new ArrayBuffer(2)).setInt16(0,256,!0),256!==new Int16Array(b)[0]);if(8===e.bitDepth||16===e.bitDepth&&c)return a}let g=16!==e.bitDepth?a:new Uint16Array(a.buffer),h=255,i=d.COLORTYPE_TO_BPP_MAP[e.inputColorType];4!==i||e.inputHasAlpha||(i=3);let j=d.COLORTYPE_TO_BPP_MAP[e.colorType];16===e.bitDepth&&(h=65535,j*=2);let k=Buffer.alloc(b*c*j),l=0,m=0,n=e.bgColor||{};void 0===n.red&&(n.red=h),void 0===n.green&&(n.green=h),void 0===n.blue&&(n.blue=h);for(let a=0;a<c;a++)for(let a=0;a<b;a++){let a=function(){let a,b,c,i=h;switch(e.inputColorType){case d.COLORTYPE_COLOR_ALPHA:i=g[l+3],a=g[l],b=g[l+1],c=g[l+2];break;case d.COLORTYPE_COLOR:a=g[l],b=g[l+1],c=g[l+2];break;case d.COLORTYPE_ALPHA:i=g[l+1],b=a=g[l],c=a;break;case d.COLORTYPE_GRAYSCALE:b=a=g[l],c=a;break;default:throw Error("input color type:"+e.inputColorType+" is not supported at present")}return e.inputHasAlpha&&!f&&(i/=h,a=Math.min(Math.max(Math.round((1-i)*n.red+i*a),0),h),b=Math.min(Math.max(Math.round((1-i)*n.green+i*b),0),h),c=Math.min(Math.max(Math.round((1-i)*n.blue+i*c),0),h)),{red:a,green:b,blue:c,alpha:i}}(g,l);switch(e.colorType){case d.COLORTYPE_COLOR_ALPHA:case d.COLORTYPE_COLOR:8===e.bitDepth?(k[m]=a.red,k[m+1]=a.green,k[m+2]=a.blue,f&&(k[m+3]=a.alpha)):(k.writeUInt16BE(a.red,m),k.writeUInt16BE(a.green,m+2),k.writeUInt16BE(a.blue,m+4),f&&k.writeUInt16BE(a.alpha,m+6));break;case d.COLORTYPE_ALPHA:case d.COLORTYPE_GRAYSCALE:{let b=(a.red+a.green+a.blue)/3;8===e.bitDepth?(k[m]=b,f&&(k[m+1]=a.alpha)):(k.writeUInt16BE(b,m),f&&k.writeUInt16BE(a.alpha,m+2));break}default:throw Error("unrecognised color Type "+e.colorType)}l+=i,m+=j}return k}},79221,(a,b,c)=>{"use strict";let d=a.r(4327),e={0:function(a,b,c,d,e){for(let f=0;f<c;f++)d[e+f]=a[b+f]},1:function(a,b,c,d,e,f){for(let g=0;g<c;g++){let c=g>=f?a[b+g-f]:0,h=a[b+g]-c;d[e+g]=h}},2:function(a,b,c,d,e){for(let f=0;f<c;f++){let g=b>0?a[b+f-c]:0,h=a[b+f]-g;d[e+f]=h}},3:function(a,b,c,d,e,f){for(let g=0;g<c;g++){let h=g>=f?a[b+g-f]:0,i=b>0?a[b+g-c]:0,j=a[b+g]-(h+i>>1);d[e+g]=j}},4:function(a,b,c,e,f,g){for(let h=0;h<c;h++){let i=h>=g?a[b+h-g]:0,j=b>0?a[b+h-c]:0,k=b>0&&h>=g?a[b+h-(c+g)]:0,l=a[b+h]-d(i,j,k);e[f+h]=l}}},f={0:function(a,b,c){let d=0,e=b+c;for(let c=b;c<e;c++)d+=Math.abs(a[c]);return d},1:function(a,b,c,d){let e=0;for(let f=0;f<c;f++){let c=f>=d?a[b+f-d]:0;e+=Math.abs(a[b+f]-c)}return e},2:function(a,b,c){let d=0,e=b+c;for(let f=b;f<e;f++){let e=b>0?a[f-c]:0;d+=Math.abs(a[f]-e)}return d},3:function(a,b,c,d){let e=0;for(let f=0;f<c;f++){let g=f>=d?a[b+f-d]:0,h=b>0?a[b+f-c]:0;e+=Math.abs(a[b+f]-(g+h>>1))}return e},4:function(a,b,c,e){let f=0;for(let g=0;g<c;g++){let h=g>=e?a[b+g-e]:0,i=b>0?a[b+g-c]:0,j=b>0&&g>=e?a[b+g-(c+e)]:0;f+=Math.abs(a[b+g]-d(h,i,j))}return f}};b.exports=function(a,b,c,d,g){let h;if("filterType"in d&&-1!==d.filterType)if("number"==typeof d.filterType)h=[d.filterType];else throw Error("unrecognised filter types");else h=[0,1,2,3,4];16===d.bitDepth&&(g*=2);let i=b*g,j=0,k=0,l=Buffer.alloc((i+1)*c),m=h[0];for(let b=0;b<c;b++){if(h.length>1){let b=1/0;for(let c=0;c<h.length;c++){let d=f[h[c]](a,k,i,g);d<b&&(m=h[c],b=d)}}l[j]=m,j++,e[m](a,k,i,l,j,g),j+=i,k+=i}return l}},77040,(a,b,c)=>{"use strict";let d=a.r(46529),e=a.r(66298),f=a.r(58580),g=a.r(79221),h=a.r(6461),i=b.exports=function(a){if(this._options=a,a.deflateChunkSize=a.deflateChunkSize||32768,a.deflateLevel=null!=a.deflateLevel?a.deflateLevel:9,a.deflateStrategy=null!=a.deflateStrategy?a.deflateStrategy:3,a.inputHasAlpha=null==a.inputHasAlpha||a.inputHasAlpha,a.deflateFactory=a.deflateFactory||h.createDeflate,a.bitDepth=a.bitDepth||8,a.colorType="number"==typeof a.colorType?a.colorType:d.COLORTYPE_COLOR_ALPHA,a.inputColorType="number"==typeof a.inputColorType?a.inputColorType:d.COLORTYPE_COLOR_ALPHA,-1===[d.COLORTYPE_GRAYSCALE,d.COLORTYPE_COLOR,d.COLORTYPE_COLOR_ALPHA,d.COLORTYPE_ALPHA].indexOf(a.colorType))throw Error("option color type:"+a.colorType+" is not supported at present");if(-1===[d.COLORTYPE_GRAYSCALE,d.COLORTYPE_COLOR,d.COLORTYPE_COLOR_ALPHA,d.COLORTYPE_ALPHA].indexOf(a.inputColorType))throw Error("option input color type:"+a.inputColorType+" is not supported at present");if(8!==a.bitDepth&&16!==a.bitDepth)throw Error("option bit depth:"+a.bitDepth+" is not supported at present")};i.prototype.getDeflateOptions=function(){return{chunkSize:this._options.deflateChunkSize,level:this._options.deflateLevel,strategy:this._options.deflateStrategy}},i.prototype.createDeflate=function(){return this._options.deflateFactory(this.getDeflateOptions())},i.prototype.filterData=function(a,b,c){let e=f(a,b,c,this._options),h=d.COLORTYPE_TO_BPP_MAP[this._options.colorType];return g(e,b,c,this._options,h)},i.prototype._packChunk=function(a,b){let c=b?b.length:0,d=Buffer.alloc(c+12);return d.writeUInt32BE(c,0),d.writeUInt32BE(a,4),b&&b.copy(d,8),d.writeInt32BE(e.crc32(d.slice(4,d.length-4)),d.length-4),d},i.prototype.packGAMA=function(a){let b=Buffer.alloc(4);return b.writeUInt32BE(Math.floor(a*d.GAMMA_DIVISION),0),this._packChunk(d.TYPE_gAMA,b)},i.prototype.packIHDR=function(a,b){let c=Buffer.alloc(13);return c.writeUInt32BE(a,0),c.writeUInt32BE(b,4),c[8]=this._options.bitDepth,c[9]=this._options.colorType,c[10]=0,c[11]=0,c[12]=0,this._packChunk(d.TYPE_IHDR,c)},i.prototype.packIDAT=function(a){return this._packChunk(d.TYPE_IDAT,a)},i.prototype.packIEND=function(){return this._packChunk(d.TYPE_IEND,null)}},74413,(a,b,c)=>{"use strict";let d=a.r(24361),e=a.r(88947),f=a.r(46529),g=a.r(77040),h=b.exports=function(a){e.call(this),this._packer=new g(a||{}),this._deflate=this._packer.createDeflate(),this.readable=!0};d.inherits(h,e),h.prototype.pack=function(a,b,c,d){this.emit("data",Buffer.from(f.PNG_SIGNATURE)),this.emit("data",this._packer.packIHDR(b,c)),d&&this.emit("data",this._packer.packGAMA(d));let e=this._packer.filterData(a,b,c);this._deflate.on("error",this.emit.bind(this,"error")),this._deflate.on("data",(function(a){this.emit("data",this._packer.packIDAT(a))}).bind(this)),this._deflate.on("end",(function(){this.emit("data",this._packer.packIEND()),this.emit("end")}).bind(this)),this._deflate.end(e)}},49719,(a,b,c)=>{b.exports=a.x("assert",()=>require("assert"))},874,(a,b,c)=>{b.exports=a.x("buffer",()=>require("buffer"))},62185,(a,b,c)=>{"use strict";let d=a.r(49719).ok,e=a.r(6461),f=a.r(24361),g=a.r(874).kMaxLength;function h(a){if(!(this instanceof h))return new h(a);a&&a.chunkSize<e.Z_MIN_CHUNK&&(a.chunkSize=e.Z_MIN_CHUNK),e.Inflate.call(this,a),this._offset=void 0===this._offset?this._outOffset:this._offset,this._buffer=this._buffer||this._outBuffer,a&&null!=a.maxLength&&(this._maxLength=a.maxLength)}function i(a,b){b&&process.nextTick(b),a._handle&&(a._handle.close(),a._handle=null)}function j(a,b){var c=new h(b),d=a;if("string"==typeof d&&(d=Buffer.from(d)),!(d instanceof Buffer))throw TypeError("Not a string or buffer");let f=c._finishFlushFlag;return null==f&&(f=e.Z_FINISH),c._processChunk(d,f)}h.prototype._processChunk=function(a,b,c){let f,h;if("function"==typeof c)return e.Inflate._processChunk.call(this,a,b,c);let j=this,k=a&&a.length,l=this._chunkSize-this._offset,m=this._maxLength,n=0,o=[],p=0;this.on("error",function(a){f=a}),d(this._handle,"zlib binding closed");do h=(h=this._handle.writeSync(b,a,n,k,this._buffer,this._offset,l))||this._writeState;while(!this._hadError&&function(a,b){if(j._hadError)return;let c=l-b;if(d(c>=0,"have should not go down"),c>0){let a=j._buffer.slice(j._offset,j._offset+c);if(j._offset+=c,a.length>m&&(a=a.slice(0,m)),o.push(a),p+=a.length,0==(m-=a.length))return!1}return(0===b||j._offset>=j._chunkSize)&&(l=j._chunkSize,j._offset=0,j._buffer=Buffer.allocUnsafe(j._chunkSize)),0===b&&(n+=k-a,k=a,!0)}(h[0],h[1]))if(this._hadError)throw f;if(p>=g)throw i(this),RangeError("Cannot create final Buffer. It would be larger than 0x"+g.toString(16)+" bytes");let q=Buffer.concat(o,p);return i(this),q},f.inherits(h,e.Inflate),b.exports=c=j,c.Inflate=h,c.createInflate=function(a){return new h(a)},c.inflateSync=j},18065,(a,b,c)=>{"use strict";let d=b.exports=function(a){this._buffer=a,this._reads=[]};d.prototype.read=function(a,b){this._reads.push({length:Math.abs(a),allowLess:a<0,func:b})},d.prototype.process=function(){for(;this._reads.length>0&&this._buffer.length;){let a=this._reads[0];if(this._buffer.length&&(this._buffer.length>=a.length||a.allowLess)){this._reads.shift();let b=this._buffer;this._buffer=b.slice(a.length),a.func.call(this,b.slice(0,a.length))}else break}return this._reads.length>0?Error("There are some read requests waitng on finished stream"):this._buffer.length>0?Error("unrecognised content at end of stream"):void 0}},90504,(a,b,c)=>{"use strict";let d=a.r(18065),e=a.r(39768);c.process=function(a,b){let c=[],f=new d(a);return new e(b,{read:f.read.bind(f),write:function(a){c.push(a)},complete:function(){}}).start(),f.process(),Buffer.concat(c)}},86635,(a,b,c)=>{"use strict";let d=!0,e=a.r(6461),f=a.r(62185);e.deflateSync||(d=!1);let g=a.r(18065),h=a.r(90504),i=a.r(38513),j=a.r(44705),k=a.r(50013);b.exports=function(a,b){let c,l,m,n;if(!d)throw Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");let o=[],p=new g(a);if(new i(b,{read:p.read.bind(p),error:function(a){c=a},metadata:function(a){l=a},gamma:function(a){m=a},palette:function(a){l.palette=a},transColor:function(a){l.transColor=a},inflateData:function(a){o.push(a)},simpleTransparency:function(){l.alpha=!0}}).start(),p.process(),c)throw c;let q=Buffer.concat(o);if(o.length=0,l.interlace)n=e.inflateSync(q);else{let a=((l.width*l.bpp*l.depth+7>>3)+1)*l.height;n=f(q,{chunkSize:a,maxLength:a})}if(q=null,!n||!n.length)throw Error("bad png - invalid inflate data response");let r=h.process(n,l);q=null;let s=j.dataToBitMap(r,l);r=null;let t=k(s,l);return l.data=t,l.gamma=m||0,l}},30388,(a,b,c)=>{"use strict";let d=!0,e=a.r(6461);e.deflateSync||(d=!1);let f=a.r(46529),g=a.r(77040);b.exports=function(a,b){if(!d)throw Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");let c=new g(b||{}),h=[];h.push(Buffer.from(f.PNG_SIGNATURE)),h.push(c.packIHDR(a.width,a.height)),a.gamma&&h.push(c.packGAMA(a.gamma));let i=c.filterData(a.data,a.width,a.height),j=e.deflateSync(i,c.getDeflateOptions());if(i=null,!j||!j.length)throw Error("bad png - invalid compressed data response");return h.push(c.packIDAT(j)),h.push(c.packIEND()),Buffer.concat(h)}},22575,(a,b,c)=>{"use strict";let d=a.r(86635),e=a.r(30388);c.read=function(a,b){return d(a,b||{})},c.write=function(a,b){return e(a,b)}},38295,(a,b,c)=>{"use strict";let d=a.r(24361),e=a.r(88947),f=a.r(13185),g=a.r(74413),h=a.r(22575),i=c.PNG=function(a){e.call(this),a=a||{},this.width=0|a.width,this.height=0|a.height,this.data=this.width>0&&this.height>0?Buffer.alloc(4*this.width*this.height):null,a.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this._parser=new f(a),this._parser.on("error",this.emit.bind(this,"error")),this._parser.on("close",this._handleClose.bind(this)),this._parser.on("metadata",this._metadata.bind(this)),this._parser.on("gamma",this._gamma.bind(this)),this._parser.on("parsed",(function(a){this.data=a,this.emit("parsed",a)}).bind(this)),this._packer=new g(a),this._packer.on("data",this.emit.bind(this,"data")),this._packer.on("end",this.emit.bind(this,"end")),this._parser.on("close",this._handleClose.bind(this)),this._packer.on("error",this.emit.bind(this,"error"))};d.inherits(i,e),i.sync=h,i.prototype.pack=function(){return this.data&&this.data.length?process.nextTick((function(){this._packer.pack(this.data,this.width,this.height,this.gamma)}).bind(this)):this.emit("error","No data provided"),this},i.prototype.parse=function(a,b){if(b){let a,c;a=(function(a){this.removeListener("error",c),this.data=a,b(null,this)}).bind(this),c=(function(c){this.removeListener("parsed",a),b(c,null)}).bind(this),this.once("parsed",a),this.once("error",c)}return this.end(a),this},i.prototype.write=function(a){return this._parser.write(a),!0},i.prototype.end=function(a){this._parser.end(a)},i.prototype._metadata=function(a){this.width=a.width,this.height=a.height,this.emit("metadata",a)},i.prototype._gamma=function(a){this.gamma=a},i.prototype._handleClose=function(){this._parser.writable||this._packer.readable||this.emit("close")},i.bitblt=function(a,b,c,d,e,f,g,h){if(d|=0,e|=0,f|=0,g|=0,h|=0,(c|=0)>a.width||d>a.height||c+e>a.width||d+f>a.height)throw Error("bitblt reading outside image");if(g>b.width||h>b.height||g+e>b.width||h+f>b.height)throw Error("bitblt writing outside image");for(let i=0;i<f;i++)a.data.copy(b.data,(h+i)*b.width+g<<2,(d+i)*a.width+c<<2,(d+i)*a.width+c+e<<2)},i.prototype.bitblt=function(a,b,c,d,e,f,g){return i.bitblt(this,a,b,c,d,e,f,g),this},i.adjustGamma=function(a){if(a.gamma){for(let b=0;b<a.height;b++)for(let c=0;c<a.width;c++){let d=a.width*b+c<<2;for(let b=0;b<3;b++){let c=a.data[d+b]/255;c=Math.pow(c,1/2.2/a.gamma),a.data[d+b]=Math.round(255*c)}}a.gamma=0}},i.prototype.adjustGamma=function(){i.adjustGamma(this)}},73202,(a,b,c)=>{let d=a.r(22734),e=a.r(38295).PNG,f=a.r(30370);c.render=function(a,b){let c=f.getOptions(b),d=c.rendererOpts,g=f.getImageWidth(a.modules.size,c);d.width=g,d.height=g;let h=new e(d);return f.qrToImageData(h.data,a,c),h},c.renderToDataURL=function(a,b,d){void 0===d&&(d=b,b=void 0),c.renderToBuffer(a,b,function(a,b){a&&d(a);let c="data:image/png;base64,";c+=b.toString("base64"),d(null,c)})},c.renderToBuffer=function(a,b,d){void 0===d&&(d=b,b=void 0);let e=c.render(a,b),f=[];e.on("error",d),e.on("data",function(a){f.push(a)}),e.on("end",function(){d(null,Buffer.concat(f))}),e.pack()},c.renderToFile=function(a,b,e,f){void 0===f&&(f=e,e=void 0);let g=!1,h=(...a)=>{g||(g=!0,f.apply(null,a))},i=d.createWriteStream(a);i.on("error",h),i.on("close",h),c.renderToFileStream(i,b,e)},c.renderToFileStream=function(a,b,d){c.render(b,d).pack().pipe(a)}},44925,(a,b,c)=>{let d=a.r(30370),e={WW:" ",WB:"▄",BB:"█",BW:"▀"},f={BB:" ",BW:"▄",WW:"█",WB:"▀"};c.render=function(a,b,c){let g=d.getOptions(b),h=e;("#ffffff"===g.color.dark.hex||"#000000"===g.color.light.hex)&&(h=f);let i=a.modules.size,j=a.modules.data,k="",l=Array(i+2*g.margin+1).join(h.WW);l=Array(g.margin/2+1).join(l+"\n");let m=Array(g.margin+1).join(h.WW);k+=l;for(let a=0;a<i;a+=2){k+=m;for(let b=0;b<i;b++){var n;let c=j[a*i+b],d=j[(a+1)*i+b];k+=(n=h,c&&d?n.BB:c&&!d?n.BW:!c&&d?n.WB:n.WW)}k+=m+"\n"}return k+=l.slice(0,-1),"function"==typeof c&&c(null,k),k},c.renderToFile=function(b,d,e,f){void 0===f&&(f=e,e=void 0);let g=a.r(22734),h=c.render(d,e);g.writeFile(b,h,f)}},28022,(a,b,c)=>{c.render=function(a,b,c){let d=a.modules.size,e=a.modules.data,f="\x1b[47m  \x1b[0m",g="",h=Array(d+3).join(f),i=[,,].join(f);g+=h+"\n";for(let a=0;a<d;++a){g+=f;for(let b=0;b<d;b++)g+=e[a*d+b]?"\x1b[40m  \x1b[0m":f;g+=i+"\n"}return g+=h+"\n","function"==typeof c&&c(null,g),g}},33707,(a,b,c)=>{let d="\x1b[37m",e="\x1b[30m",f="\x1b[0m",g="\x1b[47m"+e,h="\x1b[40m"+d,i=function(a,b,c,d){let e=b+1;return c>=e||d>=e||d<-1||c<-1?"0":c>=b||d>=b||d<0||c<0?"1":a[d*b+c]?"2":"1"},j=function(a,b,c,d){return i(a,b,c,d)+i(a,b,c,d+1)};c.render=function(a,b,c){var i,k;let l=a.modules.size,m=a.modules.data,n=!!(b&&b.inverse),o=b&&b.inverse?h:g,p={"00":f+" "+o,"01":f+(i=n?e:d)+"▄"+o,"02":f+(k=n?d:e)+"▄"+o,10:f+i+"▀"+o,11:" ",12:"▄",20:f+k+"▀"+o,21:"▀",22:"█"},q=f+"\n"+o,r=o;for(let a=-1;a<l+1;a+=2){for(let b=-1;b<l;b++)r+=p[j(m,l,b,a)];r+=p[j(m,l,l,a)]+q}return r+=f,"function"==typeof c&&c(null,r),r}},42949,(a,b,c)=>{let d=a.r(28022),e=a.r(33707);c.render=function(a,b,c){return b&&b.small?e.render(a,b,c):d.render(a,b,c)}},82969,(a,b,c)=>{c.render=a.r(866).render,c.renderToFile=function(b,d,e,f){void 0===f&&(f=e,e=void 0);let g=a.r(22734),h=c.render(d,e);g.writeFile(b,'<?xml version="1.0" encoding="utf-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">'+h,f)}},75584,(a,b,c)=>{let d=a.r(3897),e=a.r(77260),f=a.r(73202),g=a.r(44925),h=a.r(42949),i=a.r(82969);function j(a,b,c){if(void 0===a)throw Error("String required as first argument");if(void 0===c&&(c=b,b={}),"function"!=typeof c)if(d())b=c||{},c=null;else throw Error("Callback required as last argument");return{opts:b,cb:c}}function k(a){switch(a){case"svg":return i;case"txt":case"utf8":return g;default:return f}}function l(a,b,c){if(!c.cb)return new Promise(function(d,f){try{let g=e.create(b,c.opts);return a(g,c.opts,function(a,b){return a?f(a):d(b)})}catch(a){f(a)}});try{let d=e.create(b,c.opts);return a(d,c.opts,c.cb)}catch(a){c.cb(a)}}c.create=e.create,c.toCanvas=a.r(82436).toCanvas,c.toString=function(a,b,c){let d=j(a,b,c);return l(function(a){switch(a){case"svg":return i;case"terminal":return h;default:return g}}(d.opts?d.opts.type:void 0).render,a,d)},c.toDataURL=function(a,b,c){let d=j(a,b,c);return l(k(d.opts.type).renderToDataURL,a,d)},c.toBuffer=function(a,b,c){let d=j(a,b,c);return l(k(d.opts.type).renderToBuffer,a,d)},c.toFile=function(a,b,c,e){if("string"!=typeof a||"string"!=typeof b&&"object"!=typeof b)throw Error("Invalid argument");if(arguments.length<3&&!d())throw Error("Too few arguments provided");let f=j(b,c,e);return l(k(f.opts.type||a.slice((a.lastIndexOf(".")-1>>>0)+2).toLowerCase()).renderToFile.bind(null,a),b,f)},c.toFileStream=function(a,b,c){if(arguments.length<2)throw Error("Too few arguments provided");let d=j(b,c,a.emit.bind(a,"error"));l(k("png").renderToFileStream.bind(null,a),b,d)}},73763,(a,b,c)=>{b.exports=a.r(75584)},97390,a=>{"use strict";a.s(["buildQrPayload",()=>c,"makeQrPng",()=>d]);var b=a.i(73763);function c(a){let b=a.origin??"https://example.org";return{v:1,url:`${b}/v/${a.qrid}`}}async function d(a){return b.default.toDataURL(JSON.stringify(a),{errorCorrectionLevel:"M",margin:1,scale:6})}},17965,a=>{"use strict";function b(){if("undefined"!=typeof crypto){let a=crypto;if("function"==typeof a.randomUUID)return a.randomUUID();if("function"==typeof a.getRandomValues){let b=new Uint8Array(16);a.getRandomValues(b);let c=b[6]??0;b[6]=15&c|64;let d=b[8]??0;b[8]=63&d|128;let e=Array.from(b,a=>a.toString(16).padStart(2,"0")).join("");return`${e.slice(0,8)}-${e.slice(8,12)}-${e.slice(12,16)}-${e.slice(16,20)}-${e.slice(20)}`}}return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,a=>{let b=16*Math.random()|0;return("x"===a?b:3&b|8).toString(16)})}a.s(["uuidv4",()=>b])},39152,a=>{"use strict";a.s(["default",()=>e],39152);var b=a.i(62255);function c(a){return a.trim().toLowerCase().replace(/\b[\p{L}\p{M}]+/gu,a=>(a[0]?.toUpperCase()??"")+a.slice(1))}function d(a){return a.normalize("NFD").replace(/\p{Diacritic}/gu,"").toUpperCase().replace(/\s+/g," ").trim()}function e({register:a,setValue:e,errors:g}){return(0,b.jsxs)("div",{className:"grid gap-4 sm:grid-cols-3",children:[(0,b.jsx)(f,{label:"Given name",err:g.givenName?.message,children:(0,b.jsx)("input",{...a("givenName"),className:"mt-1 w-full rounded border border-slate-300 p-2",onBlur:a=>{let b=c(a.target.value);e("givenName",b,{shouldValidate:!0}),e("givenNameKey",d(b))}})}),(0,b.jsx)(f,{label:"Middle (optional)",err:g.middleName?.message,children:(0,b.jsx)("input",{...a("middleName"),className:"mt-1 w-full rounded border border-slate-300 p-2",onBlur:a=>{e("middleName",c(a.target.value))}})}),(0,b.jsx)(f,{label:"Surname",err:g.surname?.message,children:(0,b.jsx)("input",{...a("surname"),className:"mt-1 w-full rounded border border-slate-300 p-2",onBlur:a=>{let b=c(a.target.value);e("surname",b,{shouldValidate:!0}),e("surnameKey",d(b))}})})]})}function f({label:a,err:c,children:d}){return(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:a}),d,c&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:c})]})}},99766,a=>{"use strict";a.s(["default",()=>e]);var b=a.i(62255),c=a.i(39059),d=a.i(68894);function e({register:a,setValue:e,watch:f,errors:g}){let[h,i]=(0,c.useState)(""),j=f("phoneCountry");return(0,b.jsxs)("div",{className:"grid gap-3 sm:grid-cols-[8rem_1fr]",children:[(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Country"}),(0,b.jsxs)("select",{...a("phoneCountry"),defaultValue:"CA",className:"mt-1 w-full rounded border border-slate-300 p-2",children:[(0,b.jsx)("option",{value:"CA",children:"Canada (+1)"}),(0,b.jsx)("option",{value:"US",children:"United States (+1)"})]})]}),(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Phone"}),(0,b.jsx)("input",{...a("phone"),value:h,onChange:a=>{let b=a.target.value;i((0,d.formatPhoneForDisplay)(b,j??"CA")),e("phone",b,{shouldValidate:!1})},onBlur:a=>{let b=(0,d.toE164)(a.target.value,j??"CA");b&&(i(b),e("phone",b,{shouldValidate:!0}))},inputMode:"tel",className:"mt-1 w-full rounded border border-slate-300 p-2",placeholder:"+1 204 555 1234"}),g.phone?.message&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:g.phone.message})]})]})}},25001,a=>{"use strict";a.s(["default",()=>d]);var b=a.i(62255),c=a.i(40674);function d({register:a,setValue:d,errors:e}){return(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Postal/ZIP"}),(0,b.jsx)("input",{...a("postal"),className:"mt-1 w-full rounded border border-slate-300 p-2",placeholder:"A1A 1A1 or 90210",onInput:a=>{let b=a.target,c=b.value.toUpperCase();if(c=c.replace(/[^A-Z0-9\s-]/g,""),/^[ABCEGHJ-NPRSTVXY]\d[A-Z]/.test(c.replace(/\s/g,""))){let a=c.replace(/\s+/g,"").slice(0,6);b.value=a.length>3?`${a.slice(0,3)} ${a.slice(3)}`:a}},onBlur:a=>{let b=a.target.value,e=(0,c.detectCA)(b);if(e.ok){e.normalized&&d("postal",e.normalized),d("country","CA"),e.province&&d("region",e.province);return}(0,c.isUSZip)(b)&&d("country","US")}}),e.postal?.message&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:e.postal.message})]})}},69188,a=>{"use strict";a.s(["default",()=>d]);var b=a.i(62255),c=a.i(74572);function d({register:a,setValue:d,watch:e,errors:f}){let g=e("jurisdiction");return(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Licence number"}),(0,b.jsx)("input",{...a("licenseNo"),className:"mt-1 w-full rounded border border-slate-300 p-2 font-mono",placeholder:function(a){switch(a){case"CA-ON":return"A####-#####-#####";case"CA-BC":return"####### or ########";case"CA-AB":return"######-### or 5–9 digits";case"CA-SK":return"########";case"CA-QC":return"A############";case"CA-NL":return"A#########";default:return"Up to 15 letters/digits"}}(g),onInput:a=>{let b=a.target,e=(0,c.formatLicence)(g,b.value);b.value=e,d("licenseNo",e,{shouldValidate:!1})}}),f.licenseNo?.message&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:f.licenseNo.message}),(0,b.jsx)("p",{className:"mt-1 text-xs text-slate-500",children:"Type letters/numbers only—formatting is automatic."})]})}},75321,a=>{"use strict";a.s(["default",()=>d]);var b=a.i(62255),c=a.i(39059);function d({register:a,watch:d,setValue:f,errors:g}){let h=d("citizenship")||"CA",i=d("residencyCA");(0,c.useEffect)(()=>{"CA"===h&&(f("residencyCA","Citizen"),f("permitType",void 0),f("permitExpiry",void 0),f("passportCountry",void 0),f("passportNumber",void 0),f("passportExpiry",void 0),f("uci",void 0))},[h,f]);let j="CA"===h?["Citizen"]:["PR","Work Permit","Study Permit","Visitor"],k=["Work Permit","Study Permit"].includes(i);return(0,b.jsxs)("section",{className:"space-y-3",children:[(0,b.jsx)("h2",{className:"text-lg font-medium",children:"Status & Eligibility"}),(0,b.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,b.jsx)(e,{label:"Citizenship",children:(0,b.jsxs)("select",{...a("citizenship"),className:"mt-1 w-full rounded border border-slate-300 p-2",defaultValue:"CA",children:[(0,b.jsx)("option",{value:"CA",children:"Canada"}),(0,b.jsx)("option",{value:"US",children:"United States"}),(0,b.jsx)("option",{value:"Other",children:"Other"})]})}),(0,b.jsx)(e,{label:"Residency in Canada",children:(0,b.jsxs)("select",{...a("residencyCA"),className:"mt-1 w-full rounded border border-slate-300 p-2",value:i||("CA"===h?"Citizen":""),onChange:a=>f("residencyCA",a.target.value),children:[(0,b.jsx)("option",{value:"",disabled:!0,children:"Select"}),j.map(a=>(0,b.jsx)("option",{children:a},a))]})})]}),k&&(0,b.jsxs)("div",{className:"grid gap-4 sm:grid-cols-3",children:[(0,b.jsx)(e,{label:"Permit type",err:g.permitType?.message,children:(0,b.jsx)("input",{...a("permitType"),className:"mt-1 w-full rounded border border-slate-300 p-2",placeholder:"e.g., LMIA, PGWP"})}),(0,b.jsx)(e,{label:"Permit expiry",err:g.permitExpiry?.message,children:(0,b.jsx)("input",{type:"date",...a("permitExpiry"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,b.jsx)(e,{label:"UCI (Client ID)",err:g.uci?.message,children:(0,b.jsx)("input",{...a("uci"),className:"mt-1 w-full rounded border border-slate-300 p-2 font-mono",placeholder:"0000-0000 or 00-0000-0000"})})]})]})}function e({label:a,err:c,children:d}){return(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:a}),d,c&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:c})]})}},7267,a=>{"use strict";a.s(["default",()=>e]);var b=a.i(62255),c=a.i(50725);let d={"CA-ON":"Air brake (Z)","CA-MB":"Air brake (A)","CA-AB":"Air brake (Q/endorsement)","CA-SK":"Air brake","CA-BC":"Air brake","CA-QC":"Air brake (F endorsement)","CA-NB":"Air brake","CA-NL":"Air brake","CA-NS":"Air brake","CA-PE":"Air brake"};function e({register:a,setValue:e,watch:f,errors:g}){let h=f("jurisdiction"),i=h?(0,c.classesFor)(h):[],j=d[h??""]??"Air brake";return(0,b.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,b.jsxs)("label",{className:"block",children:[(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Licence class"}),(0,b.jsxs)("select",{...a("licenseClass"),disabled:!h,onChange:a=>e("licenseClass",a.target.value),className:"mt-1 w-full rounded border border-slate-300 p-2",children:[!h&&(0,b.jsx)("option",{value:"",children:"Select jurisdiction first"}),h&&0===i.length&&(0,b.jsx)("option",{value:"",children:"No classes found"}),i.map(a=>(0,b.jsx)("option",{value:a,children:a},a))]}),g?.licenseClass?.message&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:String(g.licenseClass.message)})]}),(0,b.jsxs)("label",{className:"mt-6 inline-flex items-center gap-2",children:[(0,b.jsx)("input",{type:"checkbox",...a("airBrake"),className:"h-4 w-4"}),(0,b.jsx)("span",{className:"text-sm text-slate-700",children:j})]})]})}},94372,a=>{"use strict";a.s(["default",()=>e]);var b=a.i(62255),c=a.i(39059);let d=(0,a.i(58032).allCountries)();function e({name:a,label:e="Country",register:f,setValue:g,errors:h,defaultCode:i}){let[j,k]=(0,c.useState)(""),l=(0,c.useMemo)(()=>{let a=j.trim().toLowerCase();return a?d.filter(b=>b.name.toLowerCase().includes(a)||b.code.toLowerCase().includes(a)):d},[j]);function m(){let b=h?.[a],c=b?.message;return"string"==typeof c?c:void 0}return(0,b.jsxs)("div",{className:"space-y-1",children:[(0,b.jsx)("label",{className:"block",children:(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:e})}),(0,b.jsxs)("div",{className:"grid gap-2 sm:grid-cols-[1fr_18rem]",children:[(0,b.jsx)("input",{value:j,onChange:a=>k(a.target.value),className:"rounded border border-slate-300 p-2",placeholder:"Search country…"}),(0,b.jsxs)("select",{...f(a),defaultValue:i??"",onChange:b=>g(a,b.target.value,{shouldValidate:!0,shouldDirty:!0}),className:"rounded border border-slate-300 p-2",children:[(0,b.jsx)("option",{value:"",disabled:!0,children:"Select country"}),l.map(a=>(0,b.jsx)("option",{value:a.code,children:a.name},a.code))]})]}),m()&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:m()})]})}},57683,a=>{"use strict";a.s(["default",()=>e]);var b=a.i(62255),c=a.i(39059),d=a.i(9274);function e({countryCode:a,register:e,setValue:f,errors:g}){let[h,i]=(0,c.useState)(""),j=(0,c.useMemo)(()=>(0,d.passportPatternFor)(a),[a]),k=(0,c.useRef)(null);return(0,c.useEffect)(()=>{if(k.current&&j.maxLen&&h.length>j.maxLen){let a=h.slice(0,j.maxLen);i(a),f("passportNumber",a,{shouldValidate:!0})}},[a]),(0,b.jsxs)("div",{className:"space-y-1",children:[(0,b.jsx)("label",{className:"block",children:(0,b.jsx)("span",{className:"block text-sm text-slate-700",children:"Passport number"})}),(0,b.jsx)("input",{...e("passportNumber"),ref:a=>{let b=e("passportNumber");"function"==typeof b.ref?b.ref(a):b.ref&&(b.ref.current=a),k.current=a},value:h,onChange:a=>{let b=a.target.value.toUpperCase().replace(/[^A-Z0-9]/g,"");j.maxLen&&(b=b.slice(0,j.maxLen)),i(b),f("passportNumber",b,{shouldValidate:!1})},onBlur:a=>{let b=(0,d.normalizePassport)(a.target.value);i(b),f("passportNumber",b,{shouldValidate:!0})},inputMode:"text",autoCapitalize:"characters",className:"mt-1 w-full rounded border border-slate-300 p-2 font-mono",placeholder:j.hint,"aria-describedby":"passport-hint"}),(0,b.jsxs)("p",{id:"passport-hint",className:"text-xs text-slate-500",children:["Format: ",j.hint]}),g?.passportNumber?.message&&(0,b.jsx)("p",{className:"text-xs text-rose-600",children:String(g.passportNumber.message)})]})}},73640,(a,b,c)=>{b.exports={aa:{name:"Afar",nativeName:"Afaraf"},ab:{name:"Abkhaz",nativeName:"аҧсуа бызшәа"},ae:{name:"Avestan",nativeName:"avesta"},af:{name:"Afrikaans",nativeName:"Afrikaans"},ak:{name:"Akan",nativeName:"Akan"},am:{name:"Amharic",nativeName:"አማርኛ"},an:{name:"Aragonese",nativeName:"aragonés"},ar:{name:"Arabic",nativeName:"العربية"},as:{name:"Assamese",nativeName:"অসমীয়া"},av:{name:"Avaric",nativeName:"авар мацӀ"},ay:{name:"Aymara",nativeName:"aymar aru"},az:{name:"Azerbaijani",nativeName:"azərbaycan dili"},ba:{name:"Bashkir",nativeName:"башҡорт теле"},be:{name:"Belarusian",nativeName:"беларуская мова"},bg:{name:"Bulgarian",nativeName:"български език"},bi:{name:"Bislama",nativeName:"Bislama"},bm:{name:"Bambara",nativeName:"bamanankan"},bn:{name:"Bengali",nativeName:"বাংলা"},bo:{name:"Tibetan",nativeName:"བོད་ཡིག"},br:{name:"Breton",nativeName:"brezhoneg"},bs:{name:"Bosnian",nativeName:"bosanski jezik"},ca:{name:"Catalan",nativeName:"Català"},ce:{name:"Chechen",nativeName:"нохчийн мотт"},ch:{name:"Chamorro",nativeName:"Chamoru"},co:{name:"Corsican",nativeName:"corsu"},cr:{name:"Cree",nativeName:"ᓀᐦᐃᔭᐍᐏᐣ"},cs:{name:"Czech",nativeName:"Čeština"},cu:{name:"Old Church Slavonic",nativeName:"ѩзыкъ словѣньскъ"},cv:{name:"Chuvash",nativeName:"чӑваш чӗлхи"},cy:{name:"Welsh",nativeName:"Cymraeg"},da:{name:"Danish",nativeName:"Dansk"},de:{name:"German",nativeName:"Deutsch"},dv:{name:"Divehi",nativeName:"ދިވެހި"},dz:{name:"Dzongkha",nativeName:"རྫོང་ཁ"},ee:{name:"Ewe",nativeName:"Eʋegbe"},el:{name:"Greek",nativeName:"Ελληνικά"},en:{name:"English",nativeName:"English"},eo:{name:"Esperanto",nativeName:"Esperanto"},es:{name:"Spanish",nativeName:"Español"},et:{name:"Estonian",nativeName:"eesti"},eu:{name:"Basque",nativeName:"euskara"},fa:{name:"Persian",nativeName:"فارسی"},ff:{name:"Fula",nativeName:"Fulfulde"},fi:{name:"Finnish",nativeName:"suomi"},fj:{name:"Fijian",nativeName:"vosa Vakaviti"},fo:{name:"Faroese",nativeName:"Føroyskt"},fr:{name:"French",nativeName:"Français"},fy:{name:"Western Frisian",nativeName:"Frysk"},ga:{name:"Irish",nativeName:"Gaeilge"},gd:{name:"Scottish Gaelic",nativeName:"Gàidhlig"},gl:{name:"Galician",nativeName:"galego"},gn:{name:"Guaraní",nativeName:"Avañe'ẽ"},gu:{name:"Gujarati",nativeName:"ગુજરાતી"},gv:{name:"Manx",nativeName:"Gaelg"},ha:{name:"Hausa",nativeName:"هَوُسَ"},he:{name:"Hebrew",nativeName:"עברית"},hi:{name:"Hindi",nativeName:"हिन्दी"},ho:{name:"Hiri Motu",nativeName:"Hiri Motu"},hr:{name:"Croatian",nativeName:"Hrvatski"},ht:{name:"Haitian",nativeName:"Kreyòl ayisyen"},hu:{name:"Hungarian",nativeName:"magyar"},hy:{name:"Armenian",nativeName:"Հայերեն"},hz:{name:"Herero",nativeName:"Otjiherero"},ia:{name:"Interlingua",nativeName:"Interlingua"},id:{name:"Indonesian",nativeName:"Bahasa Indonesia"},ie:{name:"Interlingue",nativeName:"Interlingue"},ig:{name:"Igbo",nativeName:"Asụsụ Igbo"},ii:{name:"Nuosu",nativeName:"ꆈꌠ꒿ Nuosuhxop"},ik:{name:"Inupiaq",nativeName:"Iñupiaq"},io:{name:"Ido",nativeName:"Ido"},is:{name:"Icelandic",nativeName:"Íslenska"},it:{name:"Italian",nativeName:"Italiano"},iu:{name:"Inuktitut",nativeName:"ᐃᓄᒃᑎᑐᑦ"},ja:{name:"Japanese",nativeName:"日本語"},jv:{name:"Javanese",nativeName:"basa Jawa"},ka:{name:"Georgian",nativeName:"ქართული"},kg:{name:"Kongo",nativeName:"Kikongo"},ki:{name:"Kikuyu",nativeName:"Gĩkũyũ"},kj:{name:"Kwanyama",nativeName:"Kuanyama"},kk:{name:"Kazakh",nativeName:"қазақ тілі"},kl:{name:"Kalaallisut",nativeName:"kalaallisut"},km:{name:"Khmer",nativeName:"ខេមរភាសា"},kn:{name:"Kannada",nativeName:"ಕನ್ನಡ"},ko:{name:"Korean",nativeName:"한국어"},kr:{name:"Kanuri",nativeName:"Kanuri"},ks:{name:"Kashmiri",nativeName:"कश्मीरी"},ku:{name:"Kurdish",nativeName:"Kurdî"},kv:{name:"Komi",nativeName:"коми кыв"},kw:{name:"Cornish",nativeName:"Kernewek"},ky:{name:"Kyrgyz",nativeName:"Кыргызча"},la:{name:"Latin",nativeName:"latine"},lb:{name:"Luxembourgish",nativeName:"Lëtzebuergesch"},lg:{name:"Ganda",nativeName:"Luganda"},li:{name:"Limburgish",nativeName:"Limburgs"},ln:{name:"Lingala",nativeName:"Lingála"},lo:{name:"Lao",nativeName:"ພາສາລາວ"},lt:{name:"Lithuanian",nativeName:"lietuvių kalba"},lu:{name:"Luba-Katanga",nativeName:"Kiluba"},lv:{name:"Latvian",nativeName:"latviešu valoda"},mg:{name:"Malagasy",nativeName:"fiteny malagasy"},mh:{name:"Marshallese",nativeName:"Kajin M̧ajeļ"},mi:{name:"Māori",nativeName:"te reo Māori"},mk:{name:"Macedonian",nativeName:"македонски јазик"},ml:{name:"Malayalam",nativeName:"മലയാളം"},mn:{name:"Mongolian",nativeName:"Монгол хэл"},mr:{name:"Marathi",nativeName:"मराठी"},ms:{name:"Malay",nativeName:"Bahasa Melayu"},mt:{name:"Maltese",nativeName:"Malti"},my:{name:"Burmese",nativeName:"ဗမာစာ"},na:{name:"Nauru",nativeName:"Dorerin Naoero"},nb:{name:"Norwegian Bokmål",nativeName:"Norsk bokmål"},nd:{name:"Northern Ndebele",nativeName:"isiNdebele"},ne:{name:"Nepali",nativeName:"नेपाली"},ng:{name:"Ndonga",nativeName:"Owambo"},nl:{name:"Dutch",nativeName:"Nederlands"},nn:{name:"Norwegian Nynorsk",nativeName:"Norsk nynorsk"},no:{name:"Norwegian",nativeName:"Norsk"},nr:{name:"Southern Ndebele",nativeName:"isiNdebele"},nv:{name:"Navajo",nativeName:"Diné bizaad"},ny:{name:"Chichewa",nativeName:"chiCheŵa"},oc:{name:"Occitan",nativeName:"occitan"},oj:{name:"Ojibwe",nativeName:"ᐊᓂᔑᓈᐯᒧᐎᓐ"},om:{name:"Oromo",nativeName:"Afaan Oromoo"},or:{name:"Oriya",nativeName:"ଓଡ଼ିଆ"},os:{name:"Ossetian",nativeName:"ирон æвзаг"},pa:{name:"Panjabi",nativeName:"ਪੰਜਾਬੀ"},pi:{name:"Pāli",nativeName:"पाऴि"},pl:{name:"Polish",nativeName:"Polski"},ps:{name:"Pashto",nativeName:"پښتو"},pt:{name:"Portuguese",nativeName:"Português"},qu:{name:"Quechua",nativeName:"Runa Simi"},rm:{name:"Romansh",nativeName:"rumantsch grischun"},rn:{name:"Kirundi",nativeName:"Ikirundi"},ro:{name:"Romanian",nativeName:"Română"},ru:{name:"Russian",nativeName:"Русский"},rw:{name:"Kinyarwanda",nativeName:"Ikinyarwanda"},sa:{name:"Sanskrit",nativeName:"संस्कृतम्"},sc:{name:"Sardinian",nativeName:"sardu"},sd:{name:"Sindhi",nativeName:"सिन्धी"},se:{name:"Northern Sami",nativeName:"Davvisámegiella"},sg:{name:"Sango",nativeName:"yângâ tî sängö"},si:{name:"Sinhala",nativeName:"සිංහල"},sk:{name:"Slovak",nativeName:"Slovenčina"},sl:{name:"Slovenian",nativeName:"slovenščina"},sm:{name:"Samoan",nativeName:"gagana fa'a Samoa"},sn:{name:"Shona",nativeName:"chiShona"},so:{name:"Somali",nativeName:"Soomaaliga"},sq:{name:"Albanian",nativeName:"Shqip"},sr:{name:"Serbian",nativeName:"српски језик"},ss:{name:"Swati",nativeName:"SiSwati"},st:{name:"Southern Sotho",nativeName:"Sesotho"},su:{name:"Sundanese",nativeName:"Basa Sunda"},sv:{name:"Swedish",nativeName:"Svenska"},sw:{name:"Swahili",nativeName:"Kiswahili"},ta:{name:"Tamil",nativeName:"தமிழ்"},te:{name:"Telugu",nativeName:"తెలుగు"},tg:{name:"Tajik",nativeName:"тоҷикӣ"},th:{name:"Thai",nativeName:"ไทย"},ti:{name:"Tigrinya",nativeName:"ትግርኛ"},tk:{name:"Turkmen",nativeName:"Türkmençe"},tl:{name:"Tagalog",nativeName:"Wikang Tagalog"},tn:{name:"Tswana",nativeName:"Setswana"},to:{name:"Tonga",nativeName:"faka Tonga"},tr:{name:"Turkish",nativeName:"Türkçe"},ts:{name:"Tsonga",nativeName:"Xitsonga"},tt:{name:"Tatar",nativeName:"татар теле"},tw:{name:"Twi",nativeName:"Twi"},ty:{name:"Tahitian",nativeName:"Reo Tahiti"},ug:{name:"Uyghur",nativeName:"ئۇيغۇرچە‎"},uk:{name:"Ukrainian",nativeName:"Українська"},ur:{name:"Urdu",nativeName:"اردو"},uz:{name:"Uzbek",nativeName:"Ўзбек"},ve:{name:"Venda",nativeName:"Tshivenḓa"},vi:{name:"Vietnamese",nativeName:"Tiếng Việt"},vo:{name:"Volapük",nativeName:"Volapük"},wa:{name:"Walloon",nativeName:"walon"},wo:{name:"Wolof",nativeName:"Wollof"},xh:{name:"Xhosa",nativeName:"isiXhosa"},yi:{name:"Yiddish",nativeName:"ייִדיש"},yo:{name:"Yoruba",nativeName:"Yorùbá"},za:{name:"Zhuang",nativeName:"Saɯ cueŋƅ"},zh:{name:"Chinese",nativeName:"中文"},zu:{name:"Zulu",nativeName:"isiZulu"}}},9319,(a,b,c)=>{let d=a.r(73640),e={},f={},g=[],h=[],i=[];for(let a in d){let{name:b,nativeName:c}=d[a];e[a]=f[b.toLowerCase()]=f[c.toLowerCase()]={code:a,name:b,nativeName:c},g.push(a),h.push(b),i.push(c)}b.exports=class a{static getLanguages(b=[]){return b.map(b=>a.validate(b)?Object.assign({},e[b]):{code:b,name:"",nativeName:""})}static getName(b){return a.validate(b)?d[b].name:""}static getAllNames(){return h.slice()}static getNativeName(b){return a.validate(b)?d[b].nativeName:""}static getAllNativeNames(){return i.slice()}static getCode(a){return a=a.toLowerCase(),f.hasOwnProperty(a)?f[a].code:""}static getAllCodes(){return g.slice()}static validate(a){return d.hasOwnProperty(a)}}},84130,a=>{"use strict";a.s(["default",()=>e],84130);var b=a.i(62255),c=a.i(39059),d=a.i(9319);function e({value:a,onChange:e}){let f=(0,c.useMemo)(()=>d.default.getAllCodes().map(a=>({code:a,name:d.default.getName(a)})).filter(a=>!!a.name).sort((a,b)=>a.name.localeCompare(b.name)),[]),[g,h]=(0,c.useState)(""),[i,j]=(0,c.useState)("Conversational"),k=(0,c.useMemo)(()=>{let a=g.trim().toLowerCase();return a?f.filter(b=>b.name.toLowerCase().includes(a)||b.code.toLowerCase().includes(a)).slice(0,100):f.slice(0,100)},[g,f]);return(0,b.jsxs)("div",{className:"space-y-2",children:[(0,b.jsxs)("div",{className:"grid gap-2 sm:grid-cols-[1fr_14rem]",children:[(0,b.jsx)("input",{value:g,onChange:a=>h(a.target.value),className:"rounded border border-slate-300 p-2",placeholder:"Type to search language…"}),(0,b.jsxs)("div",{className:"flex gap-2",children:[(0,b.jsxs)("select",{value:i,onChange:a=>j(a.target.value),className:"rounded border border-slate-300 p-2",children:[(0,b.jsx)("option",{children:"Basic"}),(0,b.jsx)("option",{children:"Conversational"}),(0,b.jsx)("option",{children:"Fluent"}),(0,b.jsx)("option",{children:"Native"})]}),(0,b.jsx)("button",{type:"button",className:"rounded bg-slate-900 px-3 py-2 text-white hover:bg-slate-800",onClick:()=>{var b;(b=2===g.toLowerCase().length?g.toLowerCase():k[0]?.code??"")&&(a.some(a=>a.lang===b)||(e([...a,{lang:b,level:i}]),h("")))},children:"Add"})]})]}),(0,b.jsxs)("div",{className:"flex flex-wrap gap-2",children:[a.map(c=>(0,b.jsxs)("div",{className:"flex items-center gap-2 rounded-full border border-slate-300 px-3 py-1",children:[(0,b.jsx)("span",{className:"font-medium",children:c.lang.toUpperCase()}),(0,b.jsxs)("select",{value:c.level,onChange:b=>{var d,f;return d=c.lang,f=b.target.value,void e(a.map(a=>a.lang===d?{...a,level:f}:a))},className:"text-xs",children:[(0,b.jsx)("option",{children:"Basic"}),(0,b.jsx)("option",{children:"Conversational"}),(0,b.jsx)("option",{children:"Fluent"}),(0,b.jsx)("option",{children:"Native"})]}),(0,b.jsx)("button",{type:"button",onClick:()=>{var b;return b=c.lang,void e(a.filter(a=>a.lang!==b))},className:"text-xs text-slate-600 hover:underline",children:"Remove"})]},c.lang)),0===a.length&&(0,b.jsx)("p",{className:"text-sm text-slate-500",children:"No additional languages added."})]})]})}},85097,a=>a.a(async(b,c)=>{try{a.s(["default",()=>z]);var d=a.i(62255),e=a.i(39059),f=a.i(39457),g=a.i(65749),h=a.i(40254),i=a.i(31615),j=a.i(78477),k=a.i(97390),l=a.i(20267),m=a.i(70715),n=a.i(65108),o=a.i(17965),p=a.i(39152),q=a.i(99766),r=a.i(25001),s=a.i(69188),t=a.i(75321),u=a.i(7267),v=a.i(94372),w=a.i(57683),x=a.i(84130),y=b([j,l]);function z(){let{register:a,handleSubmit:b,control:c,formState:{errors:y},watch:z,setValue:B}=(0,f.useForm)({resolver:(0,g.zodResolver)(h.RegisterSchema),defaultValues:{englishLevel:"Conversational",phoneCountry:"CA",citizenship:"CA",residencyCA:"Citizen",consentDate:new Date().toISOString().slice(0,10),certifyAccurate:!1}}),{fields:C,append:D,remove:E}=(0,f.useFieldArray)({control:c,name:"work"}),[F,G]=(0,e.useState)(!1),[H,I]=(0,e.useState)(null),[J,K]=(0,e.useState)(null),[L,M]=(0,e.useState)(null),[N,O]=(0,e.useState)(null),[P,Q]=(0,e.useState)(null),R=z("citizenship"),S=z("residencyCA"),T=z("passportCountry"),U="CA"!==R,V=[z("givenName")||"",z("middleName")||"",z("surname")||""].filter(Boolean).join(" ");async function W(a){G(!0);try{O(null),Q(null);let b=(0,h.normalizeForStorage)(a),c=(0,o.uuidv4)();M(c);let e=(0,k.buildQrPayload)({qrid:c,origin:window.location.origin}),f=await (0,k.makeQrPng)(e);I(f);let g={qrid:c,name:[b.givenName,b.middleName,b.surname].filter(Boolean).join(" "),jurisdiction:b.jurisdiction,licenseNo:b.licenseNo,licenseClass:b.licenseClass,licenseExpiry:b.licenseExpiry,issuedAt:new Date().toISOString()};await (0,n.saveSnapshotRemote)(g);let i=(0,d.jsx)(j.default,{name:g.name,qrPng:f}),m=await (0,l.pdf)(i).toBlob(),p=URL.createObjectURL(m);K(p)}catch(b){let a=b instanceof Error?b.message:String(b);O(a)}finally{G(!1)}}function X(a,b){B(a,b??void 0,{shouldValidate:!0})}return(0,d.jsxs)("main",{className:"mx-auto max-w-3xl px-4 py-8",children:[(0,d.jsx)("div",{className:"mb-6 rounded border border-emerald-200 bg-emerald-50 px-3 py-2 text-sm text-emerald-900",children:"Secure submission • QR contains only a random ID • Snapshot stored temporarily for verification demo"}),(0,d.jsx)("h1",{className:"mb-4 text-2xl font-semibold text-slate-900",children:"Driver Registration"}),N&&(0,d.jsx)("div",{className:"mb-4 rounded border border-amber-300 bg-amber-50 px-3 py-2 text-sm text-amber-900",children:N}),P&&(0,d.jsxs)("div",{className:"mb-4 rounded border border-rose-300 bg-rose-50 px-3 py-2 text-sm text-rose-900",children:[(0,d.jsx)("p",{className:"font-medium",children:"Please fix the following:"}),(0,d.jsx)("ul",{className:"list-inside list-disc",children:P.slice(0,6).map((a,b)=>(0,d.jsx)("li",{children:a},b))})]}),(0,d.jsxs)("form",{onSubmit:b(W,function(a){let b=[],c=a=>{a&&"string"==typeof a&&b.push(a)},d=["givenName","surname","jurisdiction","licenseNo","licenseClass","licenseExpiry","dob","email","phone","postal","citizenship","residencyCA","prNumber","prExpiry","permitType","permitExpiry","uci","passportCountry","passportNumber","passportExpiry","docLicenseFront","docPR","docPassport","docPermit","consentName","consentDate","consentAbstract","certifyAccurate"];for(let b of d){let d=a[b]?.message;d&&c(d)}Q(b.length?b:["Please review the highlighted fields."]);let e=d.find(b=>!!a[b]);if(e){let a=document.querySelector(`[name="${String(e)}"]`);a&&"function"==typeof a.scrollIntoView&&a.scrollIntoView({behavior:"smooth",block:"center"}),a&&"function"==typeof a.focus&&a.focus()}}),className:"space-y-10",children:[(0,d.jsxs)("section",{className:"space-y-4",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Identity & Licence"}),(0,d.jsx)(p.default,{register:a,setValue:B,errors:y}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,d.jsx)(A,{label:"Issuing jurisdiction",err:y.jurisdiction?.message,children:(0,d.jsxs)("select",{...a("jurisdiction"),className:"mt-1 w-full rounded border border-slate-300 p-2",children:[(0,d.jsx)("option",{value:"",children:"Select"}),(0,d.jsx)("option",{children:"CA-MB"}),(0,d.jsx)("option",{children:"CA-ON"}),(0,d.jsx)("option",{children:"CA-AB"}),(0,d.jsx)("option",{children:"CA-BC"}),(0,d.jsx)("option",{children:"CA-SK"}),(0,d.jsx)("option",{children:"CA-QC"}),(0,d.jsx)("option",{children:"CA-NB"}),(0,d.jsx)("option",{children:"CA-NL"}),(0,d.jsx)("option",{children:"CA-NS"}),(0,d.jsx)("option",{children:"CA-PE"})]})}),(0,d.jsx)(u.default,{register:a,setValue:B,watch:z,errors:y}),(0,d.jsx)(A,{label:"Licence expiry",err:y.licenseExpiry?.message,children:(0,d.jsx)("input",{type:"date",...a("licenseExpiry"),className:"mt-1 w-full rounded border border-slate-300 p-2",min:new Date().toISOString().slice(0,10),max:"2099-12-31"})}),(0,d.jsx)(A,{label:"Date of birth",err:y.dob?.message,children:(0,d.jsx)("input",{type:"date",...a("dob"),className:"mt-1 w-full rounded border border-slate-300 p-2",max:new Date(new Date().setFullYear(new Date().getFullYear()-16)).toISOString().slice(0,10)})})]}),(0,d.jsx)(s.default,{register:a,setValue:B,watch:z,errors:y})]}),(0,d.jsxs)("section",{className:"space-y-4",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Contact"}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,d.jsx)(A,{label:"Email",err:y.email?.message,children:(0,d.jsx)("input",{type:"email",...a("email"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,d.jsx)(q.default,{register:a,setValue:B,watch:z,errors:y})]})]}),(0,d.jsxs)("section",{className:"space-y-4",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Address"}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,d.jsx)(r.default,{register:a,setValue:B,errors:y}),(0,d.jsx)(A,{label:"Region/Province/State (auto for CA)",children:(0,d.jsx)("input",{...a("region"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,d.jsx)(A,{label:"Country code (auto for CA/US)",children:(0,d.jsx)("input",{...a("country"),className:"mt-1 w-full rounded border border-slate-300 p-2",placeholder:"CA or US"})}),(0,d.jsx)(A,{label:"City",children:(0,d.jsx)("input",{...a("city"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,d.jsx)(A,{label:"Address line 1",children:(0,d.jsx)("input",{...a("address1"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,d.jsx)(A,{label:"Address line 2",children:(0,d.jsx)("input",{...a("address2"),className:"mt-1 w-full rounded border border-slate-300 p-2"})})]})]}),(0,d.jsx)(t.default,{register:a,watch:z,setValue:B,errors:y}),U&&(0,d.jsxs)("section",{className:"space-y-3",children:[(0,d.jsx)("h3",{className:"font-medium",children:"Passport"}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-3",children:[(0,d.jsx)(v.default,{name:"passportCountry",label:"Passport country",register:a,setValue:B,errors:y}),(0,d.jsx)(w.default,{countryCode:T,register:a,setValue:B,errors:y}),(0,d.jsx)(A,{label:"Passport expiry",err:y.passportExpiry?.message,children:(0,d.jsx)("input",{type:"date",...a("passportExpiry"),className:"mt-1 w-full rounded border border-slate-300 p-2"})})]})]}),(0,d.jsxs)("section",{className:"space-y-3",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Languages"}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-2",children:[(0,d.jsx)(A,{label:"English level",children:(0,d.jsxs)("select",{...a("englishLevel"),className:"mt-1 w-full rounded border border-slate-300 p-2",children:[(0,d.jsx)("option",{children:"Basic"}),(0,d.jsx)("option",{children:"Conversational"}),(0,d.jsx)("option",{children:"Fluent"}),(0,d.jsx)("option",{children:"Native"})]})}),(0,d.jsxs)("div",{children:[(0,d.jsx)("span",{className:"block text-sm text-slate-700",children:"Other languages"}),(0,d.jsx)(x.default,{value:z("otherLanguages")||[],onChange:a=>B("otherLanguages",a,{shouldValidate:!0})})]})]})]}),(0,d.jsxs)("section",{className:"space-y-3",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Work Experience (last 3 years)"}),(0,d.jsxs)("div",{className:"flex items-center justify-between",children:[(0,d.jsx)("span",{className:"text-sm text-slate-700",children:"Add up to 10 entries"}),(0,d.jsx)("button",{type:"button",onClick:()=>D({}),className:"text-sm underline",children:"Add"})]}),C.map((b,c)=>(0,d.jsxs)("div",{className:"grid gap-2 sm:grid-cols-4",children:[(0,d.jsx)("input",{...a(`work.${c}.company`),placeholder:"Company",className:"rounded border border-slate-300 p-2"}),(0,d.jsx)("input",{...a(`work.${c}.role`),placeholder:"Role",className:"rounded border border-slate-300 p-2"}),(0,d.jsx)("input",{type:"date",...a(`work.${c}.start`),className:"rounded border border-slate-300 p-2"}),(0,d.jsxs)("div",{className:"flex items-center gap-2",children:[(0,d.jsx)("input",{type:"date",...a(`work.${c}.end`),className:"w-full rounded border border-slate-300 p-2"}),(0,d.jsx)("button",{type:"button",className:"text-sm underline",onClick:()=>E(c),children:"Remove"})]})]},b.id))]}),(0,d.jsxs)("section",{className:"space-y-4",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Documents"}),(0,d.jsx)(i.default,{label:"Licence - front",required:!0,value:z("docLicenseFront")??null,onChange:a=>X("docLicenseFront",a)}),"PR"===S&&(0,d.jsx)(i.default,{label:"PR Card",required:!0,value:z("docPR")??null,onChange:a=>X("docPR",a)}),U&&(0,d.jsx)(i.default,{label:"Passport",required:!0,value:z("docPassport")??null,onChange:a=>X("docPassport",a)}),("Work Permit"===S||"Study Permit"===S)&&(0,d.jsx)(i.default,{label:"Work/Study Permit",required:!0,value:z("docPermit")??null,onChange:a=>X("docPermit",a)}),(0,d.jsx)("p",{className:"text-xs text-slate-500",children:"Accepted: JPG/PNG • Max 4 MB each."})]}),(0,d.jsxs)("section",{className:"space-y-2",children:[(0,d.jsx)("h2",{className:"text-lg font-medium",children:"Consent"}),(0,d.jsxs)("label",{className:"flex items-start gap-2 text-sm text-slate-800",children:[(0,d.jsx)("input",{type:"checkbox",...a("consentAbstract"),className:"mt-1"}),"I authorise [ORG] to request my driver abstract from the issuing authority."]}),(0,d.jsxs)("div",{className:"grid gap-4 sm:grid-cols-3",children:[(0,d.jsx)(A,{label:"Type your name to sign",err:y.consentName?.message,children:(0,d.jsx)("input",{...a("consentName"),className:"mt-1 w-full rounded border border-slate-300 p-2"})}),(0,d.jsx)(A,{label:"Date",err:y.consentDate?.message,children:(0,d.jsx)("input",{type:"date",...a("consentDate"),defaultValue:new Date().toISOString().slice(0,10),className:"mt-1 w-full rounded border border-slate-300 p-2"})})]}),(0,d.jsxs)("label",{className:"flex items-start gap-2 text-sm text-slate-800",children:[(0,d.jsx)("input",{type:"checkbox",...a("certifyAccurate"),className:"mt-1"}),"I certify the information provided is accurate."]}),y.consentAbstract?.message&&(0,d.jsx)("p",{className:"text-xs text-rose-600",children:String(y.consentAbstract.message)}),y.certifyAccurate?.message&&(0,d.jsx)("p",{className:"text-xs text-rose-600",children:String(y.certifyAccurate.message)})]}),(0,d.jsxs)("div",{className:"flex items-center gap-3 pt-2",children:[(0,d.jsx)("button",{type:"submit",className:"rounded bg-emerald-600 px-4 py-2 text-white hover:bg-emerald-700 disabled:opacity-50",disabled:F,children:F?"Generating…":"Submit & Generate QR"}),(0,d.jsx)("span",{className:"text-sm text-slate-500",children:"Data stays on your device for this demo. No upload occurs."})]})]}),H&&J&&(0,d.jsxs)("section",{className:"mt-10 rounded border border-slate-200 p-4",children:[(0,d.jsx)("h3",{className:"mb-2 text-base font-medium",children:"Your QR & Card"}),(0,d.jsxs)("div",{className:"flex items-center gap-6",children:[(0,d.jsx)(m.default,{src:H,alt:"QR code",width:160,height:160,className:"h-40 w-40 border border-slate-200"}),(0,d.jsxs)("div",{className:"space-y-2",children:[(0,d.jsx)("a",{href:J,download:`driver-card-${(V||(L?.slice(0,8)??"card")).replace(/[^a-z0-9-_]+/gi,"_").slice(0,40)||"card"}.pdf`,className:"inline-flex rounded bg-slate-900 px-4 py-2 text-white hover:bg-slate-800",children:"Download Card (PDF)"}),(0,d.jsx)("p",{className:"text-sm text-slate-600",children:"Card shows only your name and this QR. The QR contains only a random ID (no personal data)."})]})]})]})]})}function A({label:a,err:b,children:c}){return(0,d.jsxs)("label",{className:"block",children:[(0,d.jsx)("span",{className:"block text-sm text-slate-700",children:a}),c,b&&(0,d.jsx)("p",{className:"text-xs text-rose-600",children:b})]})}[j,l]=y.then?(await y)():y,c()}catch(a){c(a)}},!1)];

//# sourceMappingURL=%5Broot-of-the-server%5D__e17a7d6b._.js.map