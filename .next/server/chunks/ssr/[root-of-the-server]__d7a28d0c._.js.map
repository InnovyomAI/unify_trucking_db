{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/license-rules.ts"],"sourcesContent":["// Patterns derived from Microsoft Purview (2024-08-19) + ICBC 8-digit update.\n// https://learn.microsoft.com/en-us/purview/sit-defn-canada-drivers-license-number\n// https://www.icbc.com/about-icbc/newsroom/2023-feb06-DLnumbers\ntype Rule = {\n  // Replace typed letters/digits with mask (we add hyphens/spaces)\n  format: (raw: string) => string;\n  // Acceptable normalized pattern (strip hyphens/spaces before testing)\n  test: (normalized: string) => boolean;\n};\n\nfunction onlyAZ09(s: string) {\n  return s.toUpperCase().replace(/[^A-Z0-9]/g, \"\");\n}\nfunction stripSep(s: string) {\n  return s.replace(/[\\s-]/g, \"\");\n}\n// chunk helper was used in previous rules; removed after MB rule update\n\nexport const caRules: Record<string, Rule> = {\n  // Alberta: 6 digits - 3 digits OR 5-9 digits (Purview). We'll normalize to 9 digits or 6-3 display.\n  \"CA-AB\": {\n    format: (raw) => {\n      const s = raw.replace(/\\D/g, \"\").slice(0, 9);\n      return s.length > 6 ? `${s.slice(0, 6)}-${s.slice(6)}` : s;\n    },\n    test: (n) => /^\\d{9}$/.test(n) || /^\\d{5,9}$/.test(n),\n  },\n  // BC: historically 7 digits; since 2023, 8 digits permitted.\n  \"CA-BC\": {\n    format: (raw) => raw.replace(/\\D/g, \"\").slice(0, 8),\n    test: (n) => /^\\d{7,8}$/.test(n),\n  },\n  // CA-MB: display as 2-2-2-6 (e.g., DA-GG-UV-S057NT), store alnum only (12 chars typical).\n  \"CA-MB\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw).slice(0, 12);\n      // group 2-2-2-6\n      if (!s) return \"\";\n      const a = s.slice(0, 2),\n        b = s.slice(2, 4),\n        c = s.slice(4, 6),\n        d = s.slice(6);\n      return [a, b, c, d].filter(Boolean).join(\"-\");\n    },\n    // Canonical 12 alphanumerics\n    test: (n) => /^[A-Z0-9]{12}$/.test(n),\n  },\n  // New Brunswick: 5–7 digits\n  \"CA-NB\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 7), test: (n) => /^\\d{5,7}$/.test(n) },\n  // Newfoundland & Labrador: 1 letter + 9 digits\n  \"CA-NL\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw);\n      return (s.slice(0, 1) + s.slice(1, 10)).toUpperCase();\n    },\n    test: (n) => /^[A-Z]\\d{9}$/.test(n),\n  },\n  // Nova Scotia: Purview shows letter-heavy pattern; accept 14-char mixed alnum.\n  \"CA-NS\": {\n    format: (raw) => onlyAZ09(raw).slice(0, 14),\n    test: (n) => /^[A-Z0-9]{6,14}$/.test(n),\n  },\n  // Ontario: letter + 4 digits + 5 digits + 5 digits (display with hyphens)\n  \"CA-ON\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw).slice(0, 14); // A#### ##### #####\n      const a = s.slice(0, 1),\n        b = s.slice(1, 5),\n        c = s.slice(5, 10),\n        d = s.slice(10, 15);\n      return [a + b, c, d].filter(Boolean).join(\"-\");\n    },\n    test: (n) => /^[A-Z]\\d{14}$/.test(n),\n  },\n  // Prince Edward Island: 5–6 digits\n  \"CA-PE\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 6), test: (n) => /^\\d{5,6}$/.test(n) },\n  // Quebec: 1 letter + 12 digits\n  \"CA-QC\": {\n    format: (raw) => {\n      const s = onlyAZ09(raw);\n      return (s.slice(0, 1) + s.slice(1, 13)).toUpperCase();\n    },\n    test: (n) => /^[A-Z]\\d{12}$/.test(n),\n  },\n  // Saskatchewan: 8 digits\n  \"CA-SK\": { format: (r) => r.replace(/\\D/g, \"\").slice(0, 8), test: (n) => /^\\d{8}$/.test(n) },\n  // Territories & others (fallback): allow 5–15 alphanumerics\n  \"CA-DEFAULT\": { format: (r) => onlyAZ09(r).slice(0, 15), test: (n) => /^[A-Z0-9]{5,15}$/.test(n) },\n};\n\nexport function formatLicence(jurisdiction: string, input: string) {\n  const fallback = caRules[\"CA-DEFAULT\"] as Rule;\n  const rule = (caRules[jurisdiction] ?? fallback) as Rule;\n  return rule.format(input);\n}\nexport function isValidLicence(jurisdiction: string, input: string) {\n  const fallback = caRules[\"CA-DEFAULT\"] as Rule;\n  const rule = (caRules[jurisdiction] ?? fallback) as Rule;\n  return rule.test(stripSep(input.toUpperCase()));\n}\nexport function normalizedLicence(input: string) {\n  return stripSep(input.toUpperCase());\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/postal.ts"],"sourcesContent":["export function detectCA(postalRaw: string): { ok: boolean; normalized?: string; province?: string } {\n  const s = postalRaw.toUpperCase().replace(/\\s+/g, \"\");\n  const re = /^[ABCEGHJ-NPRSTVXY]\\d[A-Z]\\d[A-Z]\\d$/; // Canada Post\n  if (!re.test(s)) return { ok: false };\n  const norm = `${s.slice(0, 3)} ${s.slice(3)}`;\n  const first = s.charAt(0);\n  const PROV: Record<string, string> = {\n    A: \"NL\",\n    B: \"NS\",\n    C: \"PE\",\n    E: \"NB\",\n    G: \"QC\",\n    H: \"QC\",\n    J: \"QC\",\n    K: \"ON\",\n    L: \"ON\",\n    M: \"ON\",\n    N: \"ON\",\n    P: \"ON\",\n    R: \"MB\",\n    S: \"SK\",\n    T: \"AB\",\n    V: \"BC\",\n    Y: \"YT\",\n    X: \"NT\", // Note: NU also uses X\n  };\n  const province = PROV[first] ?? undefined;\n  return { ok: true, normalized: norm, province };\n}\n\nexport function isUSZip(raw: string) {\n  return /^\\d{5}(-\\d{4})?$/.test(raw.trim());\n}\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,SAAS,SAAiB;IACxC,MAAM,IAAI,UAAU,WAAW,GAAG,OAAO,CAAC,QAAQ;IAClD,MAAM,KAAK,wCAAwC,cAAc;IACjE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO;QAAE,IAAI;IAAM;IACpC,MAAM,OAAO,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI;IAC7C,MAAM,QAAQ,EAAE,MAAM,CAAC;IACvB,MAAM,OAA+B;QACnC,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACL;IACA,MAAM,WAAW,IAAI,CAAC,MAAM,IAAI;IAChC,OAAO;QAAE,IAAI;QAAM,YAAY;QAAM;IAAS;AAChD;AAEO,SAAS,QAAQ,GAAW;IACjC,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI;AACzC","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/license-classes.ts"],"sourcesContent":["export const CA_CLASSES: Record<string, string[]> = {\n  \"CA-MB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-ON\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"M\"],\n  \"CA-BC\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\n  \"CA-AB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-SK\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-QC\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-NB\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-NL\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  \"CA-NS\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n  \"CA-PE\": [\"1\", \"2\", \"3\", \"4\", \"5\"],\n};\n\nexport function classesFor(jurisdiction: string): string[] {\n  return CA_CLASSES[jurisdiction] ?? [];\n}\n\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,aAAuC;IAClD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACjD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACjD,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IACvC,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC5C,SAAS;QAAC;QAAK;QAAK;QAAK;QAAK;KAAI;AACpC;AAEO,SAAS,WAAW,YAAoB;IAC7C,OAAO,UAAU,CAAC,aAAa,IAAI,EAAE;AACvC","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/passport/patterns.ts"],"sourcesContent":["export type PassportPattern = {\n  re: RegExp;\n  maxLen?: number;\n  minLen?: number;\n  hint: string;\n};\n\n// Canonical normalizer: uppercase and strip spaces/hyphens/dots\nexport function canon(s: string): string {\n  return (s || \"\").toUpperCase().replace(/[\\s\\-.]/g, \"\");\n}\n\n// Country-specific patterns (initial coverage + expand as needed)\nexport const PASSPORT: Record<string, PassportPattern> = {\n  CA: { re: /^[A-Z]{2}\\d{6}$/, minLen: 8, maxLen: 8, hint: \"AA123456\" },\n  US: { re: /^([A-Z]\\d{8}|\\d{9})$/, minLen: 9, maxLen: 9, hint: \"A12345678 or 123456789\" },\n  IN: { re: /^[A-Z]\\d{7}$/, minLen: 8, maxLen: 8, hint: \"A1234567\" },\n  PH: { re: /^([A-Z]\\d{6}|[A-Z]{2}\\d{6,7}|[A-Z]\\d{7}[A-Z])$/, minLen: 7, maxLen: 9, hint: \"P1234567 / AB123456 / AB1234567\" },\n  GB: { re: /^\\d{9}$/, minLen: 9, maxLen: 9, hint: \"123456789\" },\n  PK: { re: /^[A-Z]{2}\\d{7}$/, minLen: 9, maxLen: 9, hint: \"AB1234567\" },\n  BD: { re: /^[A-Z]\\d{7}$/, minLen: 8, maxLen: 8, hint: \"A1234567\" },\n  NG: { re: /^[A-Z]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"A12345678\" },\n  CN: { re: /^[EGDSP]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"E12345678\" },\n  MX: { re: /^[A-Z]\\d{8}$/, minLen: 9, maxLen: 9, hint: \"A12345678\" },\n};\n\n// Fallback for countries without a specific rule: 6–10 alphanumerics\nexport const FALLBACK: PassportPattern = {\n  re: /^[A-Z0-9]{6,10}$/,\n  minLen: 6,\n  maxLen: 10,\n  hint: \"6–10 letters/digits\",\n};\n\n"],"names":[],"mappings":";;;;;;;;AAQO,SAAS,MAAM,CAAS;IAC7B,OAAO,CAAC,KAAK,EAAE,EAAE,WAAW,GAAG,OAAO,CAAC,YAAY;AACrD;AAGO,MAAM,WAA4C;IACvD,IAAI;QAAE,IAAI;QAAmB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACpE,IAAI;QAAE,IAAI;QAAwB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAyB;IACvF,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACjE,IAAI;QAAE,IAAI;QAAkD,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAkC;IAC1H,IAAI;QAAE,IAAI;QAAW,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IAC7D,IAAI;QAAE,IAAI;QAAmB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IACrE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAW;IACjE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IAClE,IAAI;QAAE,IAAI;QAAkB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;IACpE,IAAI;QAAE,IAAI;QAAgB,QAAQ;QAAG,QAAQ;QAAG,MAAM;IAAY;AACpE;AAGO,MAAM,WAA4B;IACvC,IAAI;IACJ,QAAQ;IACR,QAAQ;IACR,MAAM;AACR","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/countries.ts"],"sourcesContent":["import countries from \"i18n-iso-countries\";\nimport en from \"i18n-iso-countries/langs/en.json\";\n\n// Workaround: i18n-iso-countries expects a locale object shape\ntype LocaleData = { locale: string; countries: Record<string, string> };\ncountries.registerLocale(en as unknown as LocaleData);\n\nexport type Country = { code: string; name: string };\n\n/**\n * Return all countries with ISO alpha-2 code and English official name.\n * Sorted alphabetically by name.\n */\nexport function allCountries(): Country[] {\n  const names = countries.getNames(\"en\", { select: \"official\" }) as Record<\n    string,\n    string\n  >;\n\n  return Object.entries(names)\n    .map(([code, name]) => ({\n      code: code.toUpperCase(),\n      name,\n    }))\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n\n/**\n * Check if a given code is a valid ISO alpha-2 country code.\n */\nexport function isCountry(code?: string): boolean {\n  if (!code) return false;\n  const c = code.toUpperCase();\n  try {\n    return Boolean(countries.alpha2ToNumeric(c));\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAIA,0OAAS,CAAC,cAAc,CAAC,gNAAE;AAQpB,SAAS;IACd,MAAM,QAAQ,0OAAS,CAAC,QAAQ,CAAC,MAAM;QAAE,QAAQ;IAAW;IAK5D,OAAO,OAAO,OAAO,CAAC,OACnB,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,GAAK,CAAC;YACtB,MAAM,KAAK,WAAW;YACtB;QACF,CAAC,GACA,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;AAC/C;AAKO,SAAS,UAAU,IAAa;IACrC,IAAI,CAAC,MAAM,OAAO;IAClB,MAAM,IAAI,KAAK,WAAW;IAC1B,IAAI;QACF,OAAO,QAAQ,0OAAS,CAAC,eAAe,CAAC;IAC3C,EAAE,OAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/passport/validate.ts"],"sourcesContent":["import { canon, PASSPORT, FALLBACK, type PassportPattern } from \"./patterns\";\nimport { isCountry } from \"@/lib/countries\";\n\n/**\n * Return the passport pattern metadata for a given ISO2 country code.\n * Falls back to a sensible generic pattern (6–10 alnum) if unknown.\n */\nexport function passportPatternFor(country?: string): PassportPattern {\n  const code = (country || \"\").toUpperCase();\n  if (!isCountry(code)) return FALLBACK;\n  return PASSPORT[code] ?? FALLBACK;\n}\n\n/**\n * Validate a passport number against a country's known pattern.\n * Uses canonicalized (uppercase, alnum-only) value.\n */\nexport function isValidPassport(country: string | undefined, value: string): boolean {\n  const pat = passportPatternFor(country);\n  return pat.re.test(canon(value));\n}\n\n/**\n * Normalize a passport number for storage/compare:\n * - Uppercase\n * - Strip all non A–Z / 0–9\n */\nexport function normalizePassport(value: string): string {\n  return canon(value);\n}\n\n/**\n * Sanitize user input for a given country while typing:\n * - Uppercase alnum only\n * - Clip to country-specific maxLen when provided\n */\nexport function sanitizePassportInput(value: string, country?: string): string {\n  const pat = passportPatternFor(country);\n  let v = canon(value);\n  if (typeof pat.maxLen === \"number\" && pat.maxLen > 0) {\n    v = v.slice(0, pat.maxLen);\n  }\n  return v;\n}\n\n/**\n * Convenience: get a friendly hint string for the given country.\n * Falls back to generic text.\n */\nexport function passportHint(country?: string): string {\n  const pat = passportPatternFor(country);\n  return pat.hint || \"6–10 letters/digits\";\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,mBAAmB,OAAgB;IACjD,MAAM,OAAO,CAAC,WAAW,EAAE,EAAE,WAAW;IACxC,IAAI,CAAC,IAAA,6HAAS,EAAC,OAAO,OAAO,uIAAQ;IACrC,OAAO,uIAAQ,CAAC,KAAK,IAAI,uIAAQ;AACnC;AAMO,SAAS,gBAAgB,OAA2B,EAAE,KAAa;IACxE,MAAM,MAAM,mBAAmB;IAC/B,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,IAAA,oIAAK,EAAC;AAC3B;AAOO,SAAS,kBAAkB,KAAa;IAC7C,OAAO,IAAA,oIAAK,EAAC;AACf;AAOO,SAAS,sBAAsB,KAAa,EAAE,OAAgB;IACnE,MAAM,MAAM,mBAAmB;IAC/B,IAAI,IAAI,IAAA,oIAAK,EAAC;IACd,IAAI,OAAO,IAAI,MAAM,KAAK,YAAY,IAAI,MAAM,GAAG,GAAG;QACpD,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,MAAM;IAC3B;IACA,OAAO;AACT;AAMO,SAAS,aAAa,OAAgB;IAC3C,MAAM,MAAM,mBAAmB;IAC/B,OAAO,IAAI,IAAI,IAAI;AACrB","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/register-schemas.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { isValidLicence, normalizedLicence } from \"@/lib/license-rules\";\nimport { detectCA, isUSZip } from \"@/lib/postal\";\nimport { classesFor } from \"@/lib/license-classes\";\nimport {\n  passportPatternFor,\n  isValidPassport,\n  normalizePassport,\n} from \"@/lib/passport/validate\";\nimport { isCountry } from \"@/lib/countries\";\n\n/** yyyy-mm-dd string */\nconst dateISO = z\n  .string()\n  .regex(/^\\d{4}-\\d{2}-\\d{2}$/, \"Use YYYY-MM-DD\");\n\nconst NAME = z\n  .string()\n  .trim()\n  .min(2, \"Enter at least 2 characters\")\n  .max(60, \"Too long\")\n  .regex(/^[A-Za-zÀ-ÖØ-öø-ÿ' -]+$/, \"Letters, spaces, hyphens, apostrophes only\");\n\nconst JURISDICTION = z.enum(\n  [\n    \"CA-AB\",\n    \"CA-BC\",\n    \"CA-MB\",\n    \"CA-NB\",\n    \"CA-NL\",\n    \"CA-NS\",\n    \"CA-ON\",\n    \"CA-PE\",\n    \"CA-QC\",\n    \"CA-SK\",\n    \"CA-YT\",\n    \"CA-NT\",\n    \"CA-NU\",\n  ],\n  { message: \"Select issuing authority\" },\n);\n\nconst EMAIL = z.string().email(\"Enter a valid email\");\n\n/** Digits-only (no +1 here). We keep UI to CA only. */\nconst PHONE_COUNTRY = z.enum([\"CA\"]).default(\"CA\");\nconst PHONE_DIGITS = z\n  .string()\n  .regex(/^\\d{10}$/, \"Enter a 10-digit Canadian phone number\");\n\nconst LICENSE_NO = z\n  .string()\n  .trim()\n  .min(3, \"Enter licence number\")\n  .max(20, \"Too long\")\n  .regex(/^[A-Za-z0-9-]+$/, \"Letters/numbers only\");\n\nconst ENGLISH_LEVEL = z.enum([\"Basic\", \"Conversational\", \"Fluent\", \"Native\"]);\n\nconst PASSPORT_NUMBER_GENERIC = z\n  .string()\n  .trim()\n  .toUpperCase()\n  .regex(/^[A-Z0-9]{6,10}$/, \"6–10 letters/digits\");\n\nconst PR_CARD_NUMBER = z\n  .string()\n  .trim()\n  .toUpperCase()\n  .regex(/^[A-Z]{2}\\d{8}$/, \"Format like AB12345678\");\n\nconst FILE_REQUIRED = z.instanceof(File, { message: \"File required\" });\n\nexport const RegisterSchema = z\n  .object({\n    // Names\n    givenName: NAME,\n    surname: NAME,\n    middleName: z.string().trim().max(60).optional().or(z.literal(\"\")),\n    givenNameKey: z.string().optional(),\n    surnameKey: z.string().optional(),\n\n    // Licence & jurisdiction\n    jurisdiction: JURISDICTION,\n    licenseNo: LICENSE_NO,\n    licenseClass: z.string().min(1, \"Select class\").max(5),\n    airBrake: z.boolean().optional(),\n    licenseExpiry: dateISO,\n    dob: dateISO,\n    gender: z\n      .enum([\"Male\", \"Female\", \"Non-binary\", \"Prefer not to say\"])\n      .optional(),\n\n    // Contact\n    email: EMAIL,\n    phone: PHONE_DIGITS, // text field holds digits only\n    phoneCountry: PHONE_COUNTRY,\n\n    // Address\n    address1: z.string().trim().max(100).optional().or(z.literal(\"\")),\n    address2: z.string().trim().max(100).optional().or(z.literal(\"\")),\n    city: z.string().trim().max(60).optional().or(z.literal(\"\")),\n    region: z.string().trim().max(40).optional().or(z.literal(\"\")),\n    postal: z.string().trim().min(3, \"Enter postal/ZIP\"),\n    country: z.string().trim().length(2, \"Use ISO2 (e.g., CA)\").optional(),\n\n    // Status wizard (updated)\n    citizenship: z.enum([\"Canadian Citizen\", \"Non-Citizen\"]).default(\"Canadian Citizen\"),\n    residencyCA: z\n      .enum([\"Citizen\", \"Permanent Resident\", \"Work Permit\", \"Study Permit\"])\n      .default(\"Citizen\"),\n    prNumber: z.string().optional(), // PR card number (Document No.)\n    permitType: z.string().optional(),\n    permitExpiry: dateISO.optional(),\n    uci: z.string().optional(),\n\n    // Passport (no expiry anymore)\n    passportCountry: z.string().optional(),\n    passportNumber: z.string().optional(),\n\n    // Languages\n    englishLevel: ENGLISH_LEVEL,\n    otherLanguages: z\n      .array(\n        z.object({\n          language: z.string().min(1, \"Choose a language\"),\n          level: ENGLISH_LEVEL,\n        }),\n      )\n      .max(20)\n      .optional(),\n\n    // Work experience\n    work: z\n      .array(\n        z\n          .object({\n            company: z.string().trim().min(2, \"Enter company\"),\n            role: z.string().trim().min(2, \"Enter role\"),\n            start: dateISO,\n            end: dateISO,\n          })\n          .refine(\n            (w) => new Date(w.start) <= new Date(w.end),\n            { message: \"From must be before To\", path: [\"end\"] },\n          ),\n      )\n      .max(10)\n      .optional(),\n\n    // Consent\n    consentAbstract: z.boolean().refine((v) => v === true, {\n      message: \"Consent is required\",\n    }),\n    consentName: NAME,\n    consentDate: dateISO,\n    certifyAccurate: z.boolean().refine((v) => v === true, {\n      message: \"You must certify accuracy\",\n    }),\n\n    // Documents\n    docLicenseFront: FILE_REQUIRED,\n    docLicenseBack: FILE_REQUIRED,\n    docHealthCard: FILE_REQUIRED,\n    docPassport: z.instanceof(File).optional(),\n    docPR: z.instanceof(File).optional(),\n    docPermit: z.instanceof(File).optional(),\n  })\n  .superRefine((v, ctx) => {\n    // Dates: age >= 16; licence expiry in future\n    const today = new Date();\n    const yyyy = today.getFullYear();\n    const mm = today.getMonth();\n    const dd = today.getDate();\n    const minDob = new Date(yyyy - 16, mm, dd);\n    const dob = new Date(v.dob);\n    const exp = new Date(v.licenseExpiry);\n    if (isNaN(dob.getTime()) || dob > minDob) {\n      ctx.addIssue({\n        code: \"custom\",\n        path: [\"dob\"],\n        message: \"Driver must be at least 16 years old\",\n      });\n    }\n    if (isNaN(exp.getTime()) || exp < new Date(yyyy, mm, dd)) {\n      ctx.addIssue({\n        code: \"custom\",\n        path: [\"licenseExpiry\"],\n        message: \"Expiry must be in the future\",\n      });\n    }\n\n    // Licence number & class checks\n    if (!isValidLicence(v.jurisdiction, v.licenseNo)) {\n      ctx.addIssue({\n        code: \"custom\",\n        path: [\"licenseNo\"],\n        message: \"Number doesn’t match jurisdiction format\",\n      });\n    }\n    const allowed = classesFor(v.jurisdiction);\n    if (allowed.length > 0 && !allowed.includes(v.licenseClass)) {\n      ctx.addIssue({\n        code: \"custom\",\n        path: [\"licenseClass\"],\n        message: `Select a valid class for ${v.jurisdiction}`,\n      });\n    }\n\n    // Postal: CA or US ZIP (fallback)\n    const ca = detectCA(v.postal);\n    if (!ca.ok && !isUSZip(v.postal)) {\n      ctx.addIssue({\n        code: \"custom\",\n        path: [\"postal\"],\n        message: \"Enter a valid Canadian postal code or US ZIP\",\n      });\n    }\n\n    // Status logic\n    if (v.citizenship === \"Canadian Citizen\") {\n      if (v.residencyCA !== \"Citizen\") {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"residencyCA\"],\n          message: \"Canadian citizens must select Citizen\",\n        });\n      }\n    } else {\n      // Non-Canadian → passport is required (country + number + document)\n      if (!v.passportCountry || !isCountry(v.passportCountry)) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"passportCountry\"],\n          message: \"Select a valid country\",\n        });\n      }\n      if (!v.passportNumber || !v.passportNumber.trim()) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"passportNumber\"],\n          message: \"Enter passport number\",\n        });\n      } else if (v.passportCountry) {\n        // Prefer country-specific validation if available\n        const ok =\n          isValidPassport(v.passportCountry, v.passportNumber) ||\n          PASSPORT_NUMBER_GENERIC.safeParse(v.passportNumber).success;\n        if (!ok) {\n          const pat = passportPatternFor(v.passportCountry);\n          ctx.addIssue({\n            code: \"custom\",\n            path: [\"passportNumber\"],\n            message: `Format doesn’t match (${pat.hint || \"6–10 letters/digits\"})`,\n          });\n        }\n      }\n      if (!v.docPassport) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"docPassport\"],\n          message: \"Upload passport image\",\n        });\n      }\n    }\n\n    // PR holders → PR card number required (AB12345678)\n    if (v.residencyCA === \"Permanent Resident\") {\n      if (!v.prNumber || !PR_CARD_NUMBER.safeParse(v.prNumber).success) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"prNumber\"],\n          message: \"PR card number must look like AB12345678\",\n        });\n      }\n      if (!v.docPR) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"docPR\"],\n          message: \"Upload PR card image\",\n        });\n      }\n    }\n\n    // Permits → document required; permitType only for Work Permit (UI handles hiding for Study)\n    if (v.residencyCA === \"Work Permit\" || v.residencyCA === \"Study Permit\") {\n      if (!v.docPermit) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"docPermit\"],\n          message: \"Upload permit document image\",\n        });\n      }\n      // Do not force permitType for Study Permit\n      if (v.residencyCA === \"Work Permit\" && !v.permitType?.trim()) {\n        ctx.addIssue({\n          code: \"custom\",\n          path: [\"permitType\"],\n          message: \"Select permit type\",\n        });\n      }\n    }\n\n    // Files: type/size guard (client-side types exist)\n    ([\n      [\"docLicenseFront\", v.docLicenseFront],\n      [\"docLicenseBack\", v.docLicenseBack],\n      [\"docHealthCard\", v.docHealthCard],\n      [\"docPassport\", v.docPassport],\n      [\"docPR\", v.docPR],\n      [\"docPermit\", v.docPermit],\n    ] as const).forEach(([path, f]) => {\n      const file = f as File | undefined;\n      if (file) {\n        const okType = [\"image/jpeg\", \"image/png\"].includes(file.type);\n        const okSize = file.size <= 4 * 1024 * 1024;\n        if (!okType || !okSize) {\n          ctx.addIssue({\n            code: \"custom\",\n            path: [path],\n            message: \"Upload JPG/PNG ≤ 4MB\",\n          });\n        }\n      }\n    });\n  });\n\nexport type RegisterValues = z.infer<typeof RegisterSchema>;\n\n/** Normalize before storage (keeps UI constraints intact) */\nexport function normalizeForStorage<T extends {\n  licenseNo: string;\n  phone: string;\n  phoneCountry: \"CA\";\n  passportCountry?: string;\n  passportNumber?: string;\n  prNumber?: string;\n  uci?: string;\n}>(values: T): T {\n  const out = { ...values };\n  // Licence\n  out.licenseNo = normalizedLicence(out.licenseNo);\n  // Phone: combine to E.164 (+1 + 10 digits)\n  if (out.phoneCountry === \"CA\" && /^\\d{10}$/.test(out.phone)) {\n    (out as any).phone = `+1${out.phone}`;\n  }\n  // Passport\n  if (out.passportCountry && out.passportNumber) {\n    (out as any).passportNumber = normalizePassport(out.passportNumber);\n  } else {\n    (out as any).passportNumber = undefined;\n  }\n  // PR card number normalized uppercase\n  if (out.prNumber) (out as any).prNumber = out.prNumber.toUpperCase();\n  // UCI digits only (if provided)\n  if (out.uci) (out as any).uci = out.uci.replace(/\\D/g, \"\");\n  return out;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/driver/DocUploadField.tsx"],"sourcesContent":["\"use client\";\n\nimport { useId, useState } from \"react\";\n\nconst ACCEPT = [\"image/jpeg\", \"image/png\"]; // JPG/PNG only\nconst MAX = 4 * 1024 * 1024; // 4 MB\n\nexport default function DocUploadField({\n  label,\n  hint,\n  value,\n  onChange,\n  id,\n  required = false,\n}: {\n  label: string;\n  hint?: string;\n  value?: File | null;\n  onChange: (f: File | null) => void;\n  id?: string;\n  required?: boolean;\n}) {\n  const generatedId = useId();\n  const inputId = id ?? generatedId;\n  const [err, setErr] = useState<string | null>(null);\n\n  function handle(e: React.ChangeEvent<HTMLInputElement>) {\n    const f = e.target.files?.[0] ?? null;\n    if (!f) {\n      if (required) setErr(`${label} is required`);\n      return;\n    }\n    if (!ACCEPT.includes(f.type)) {\n      setErr(\"Only JPG or PNG accepted\");\n      return;\n    }\n    if (f.size > MAX) {\n      setErr(\"File must be ≤ 4 MB\");\n      return;\n    }\n    setErr(null);\n    onChange(f);\n  }\n\n  function clear() {\n    onChange(null);\n    setErr(required ? `${label} is required` : null);\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <label\n        htmlFor={inputId}\n        className=\"block text-sm font-medium text-slate-700\"\n      >\n        {label} {required && <span className=\"text-rose-600\">*</span>}\n      </label>\n      <div className=\"flex items-center gap-3\">\n        <input\n          id={inputId}\n          type=\"file\"\n          accept={ACCEPT.join(\",\")}\n          className=\"block w-full text-sm file:mr-4 file:rounded file:border-0 file:bg-slate-900 file:px-3 file:py-2 file:text-white hover:file:bg-slate-800\"\n          onChange={handle}\n        />\n      </div>\n      {hint && <p className=\"text-xs text-slate-500\">{hint}</p>}\n      {err && (\n        <p className=\"text-xs text-rose-600\" aria-live=\"polite\">\n          {err}\n        </p>\n      )}\n      {value && (\n        <div className=\"flex items-center gap-3 rounded border border-slate-200 p-2 text-xs text-slate-600\">\n          {value.name} • {(value.size / 1024 / 1024).toFixed(1)} MB\n          <button\n            type=\"button\"\n            className=\"ml-auto text-xs underline\"\n            onClick={clear}\n          >\n            Remove\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,SAAS;IAAC;IAAc;CAAY,EAAE,eAAe;AAC3D,MAAM,MAAM,IAAI,OAAO,MAAM,OAAO;AAErB,SAAS,eAAe,EACrC,KAAK,EACL,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,EAAE,EACF,WAAW,KAAK,EAQjB;IACC,MAAM,cAAc,IAAA,6UAAK;IACzB,MAAM,UAAU,MAAM;IACtB,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,gVAAQ,EAAgB;IAE9C,SAAS,OAAO,CAAsC;QACpD,MAAM,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI;QACjC,IAAI,CAAC,GAAG;YACN,IAAI,UAAU,OAAO,GAAG,MAAM,YAAY,CAAC;YAC3C;QACF;QACA,IAAI,CAAC,OAAO,QAAQ,CAAC,EAAE,IAAI,GAAG;YAC5B,OAAO;YACP;QACF;QACA,IAAI,EAAE,IAAI,GAAG,KAAK;YAChB,OAAO;YACP;QACF;QACA,OAAO;QACP,SAAS;IACX;IAEA,SAAS;QACP,SAAS;QACT,OAAO,WAAW,GAAG,MAAM,YAAY,CAAC,GAAG;IAC7C;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBACC,SAAS;gBACT,WAAU;;oBAET;oBAAM;oBAAE,0BAAY,6WAAC;wBAAK,WAAU;kCAAgB;;;;;;;;;;;;0BAEvD,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBACC,IAAI;oBACJ,MAAK;oBACL,QAAQ,OAAO,IAAI,CAAC;oBACpB,WAAU;oBACV,UAAU;;;;;;;;;;;YAGb,sBAAQ,6WAAC;gBAAE,WAAU;0BAA0B;;;;;;YAC/C,qBACC,6WAAC;gBAAE,WAAU;gBAAwB,aAAU;0BAC5C;;;;;;YAGJ,uBACC,6WAAC;gBAAI,WAAU;;oBACZ,MAAM,IAAI;oBAAC;oBAAI,CAAC,MAAM,IAAI,GAAG,OAAO,IAAI,EAAE,OAAO,CAAC;oBAAG;kCACtD,6WAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;kCACV;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/pdf/DriverCardPDF.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\n\"use client\";\nimport { Document, Page, View, Text, Image, StyleSheet } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  page: { padding: 20, fontSize: 10, color: \"#0A0F1F\" },\n  card: { borderWidth: 1, borderColor: \"#e5e7eb\", padding: 12, borderRadius: 6 },\n  row: { flexDirection: \"row\", gap: 10 },\n  col: { flexGrow: 1 },\n  title: { fontSize: 14, marginBottom: 6 },\n  label: { color: \"#6b7280\" },\n});\n\nexport default function DriverCardPDF({\n  name,\n  qrPng,\n}: {\n  name: string;\n  qrPng: string;\n}) {\n  return (\n    <Document>\n      <Page size=\"A6\" style={styles.page}>\n        <View style={styles.card}>\n          <Text style={styles.title}>Driver Identity Card</Text>\n          <View style={styles.row}>\n            <View style={styles.col}>\n              <Text>\n                <Text style={styles.label}>Name: </Text>{name}\n              </Text>\n            </View>\n            <Image src={qrPng} style={{ width: 120, height: 120 }} />\n          </View>\n          <Text style={{ marginTop: 8, color: \"#6b7280\" }}>\n            Scan for live verification. QR encodes only a random ID; no personal details.\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n}\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAEpC;;;;;AADA;;;AAGA,MAAM,SAAS,kKAAU,CAAC,MAAM,CAAC;IAC/B,MAAM;QAAE,SAAS;QAAI,UAAU;QAAI,OAAO;IAAU;IACpD,MAAM;QAAE,aAAa;QAAG,aAAa;QAAW,SAAS;QAAI,cAAc;IAAE;IAC7E,KAAK;QAAE,eAAe;QAAO,KAAK;IAAG;IACrC,KAAK;QAAE,UAAU;IAAE;IACnB,OAAO;QAAE,UAAU;QAAI,cAAc;IAAE;IACvC,OAAO;QAAE,OAAO;IAAU;AAC5B;AAEe,SAAS,cAAc,EACpC,IAAI,EACJ,KAAK,EAIN;IACC,qBACE,6WAAC,gKAAQ;kBACP,cAAA,6WAAC,4JAAI;YAAC,MAAK;YAAK,OAAO,OAAO,IAAI;sBAChC,cAAA,6WAAC,4JAAI;gBAAC,OAAO,OAAO,IAAI;;kCACtB,6WAAC,4JAAI;wBAAC,OAAO,OAAO,KAAK;kCAAE;;;;;;kCAC3B,6WAAC,4JAAI;wBAAC,OAAO,OAAO,GAAG;;0CACrB,6WAAC,4JAAI;gCAAC,OAAO,OAAO,GAAG;0CACrB,cAAA,6WAAC,4JAAI;;sDACH,6WAAC,4JAAI;4CAAC,OAAO,OAAO,KAAK;sDAAE;;;;;;wCAAc;;;;;;;;;;;;0CAG7C,6WAAC,6JAAK;gCAAC,KAAK;gCAAO,OAAO;oCAAE,OAAO;oCAAK,QAAQ;gCAAI;;;;;;;;;;;;kCAEtD,6WAAC,4JAAI;wBAAC,OAAO;4BAAE,WAAW;4BAAG,OAAO;wBAAU;kCAAG;;;;;;;;;;;;;;;;;;;;;;AAO3D","debugId":null}},
    {"offset": {"line": 1112, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/qr.ts"],"sourcesContent":["import QRCode from \"qrcode\";\n\n// Now the QR encodes only a version + a URL with a random qrid.\n// No licence, no jurisdiction, no PII.\nexport function buildQrPayload(input: { qrid: string; origin?: string }) {\n  const origin =\n    input.origin ?? (typeof window !== \"undefined\" ? window.location.origin : \"https://example.org\");\n  return {\n    v: 1,\n    url: `${origin}/v/${input.qrid}`,\n  };\n}\n\nexport async function makeQrPng(payload: object) {\n  return QRCode.toDataURL(JSON.stringify(payload), {\n    errorCorrectionLevel: \"M\",\n    margin: 1,\n    scale: 6,\n  });\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAIO,SAAS,eAAe,KAAwC;IACrE,MAAM,SACJ,MAAM,MAAM,IAAI,CAAC,sCAAgC,0BAAyB,qBAAqB;IACjG,OAAO;QACL,GAAG;QACH,KAAK,GAAG,OAAO,GAAG,EAAE,MAAM,IAAI,EAAE;IAClC;AACF;AAEO,eAAe,UAAU,OAAe;IAC7C,OAAO,oMAAM,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC,UAAU;QAC/C,sBAAsB;QACtB,QAAQ;QACR,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/demo-store-remote.ts"],"sourcesContent":["// lib/demo-store-remote.ts (DriverSnapshot type)\nexport interface DriverSnapshot {\n  qrid: string;\n  pinHash: string; // hashed PIN for unlock\n\n  // Basic\n  name: string;\n  dob: string;\n  citizenship: string;\n  residencyCA: string;\n\n  // Licence\n  jurisdiction: string;\n  licenseNo: string;\n  licenseClass: string;\n  licenseExpiry: string;\n\n  // Contact\n  email: string;\n  phone: string;\n\n  // Address\n  postal: string;\n  country: string;\n  region: string;\n  city: string;\n  address1: string;\n  address2?: string;\n\n  // Immigration/Residency\n  prNumber?: string;\n  permitType?: string;\n  uci?: string;\n  permitExpiry?: string;\n\n  // Passport\n  passportCountry?: string;\n  passportNumber?: string;\n\n  // Languages\n  englishLevel: string;\n  otherLanguages: Array<{ language: string; level: string }>;\n\n  // Metadata\n  issuedAt: string;\n}\n\n\nexport async function saveSnapshotRemote(s: DriverSnapshot): Promise<void> {\n  const res = await fetch(\"/api/demo/snapshots\", {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(s),\n    cache: \"no-store\",\n  });\n  if (!res.ok) {\n    const j: unknown = await res.json().catch(() => null as unknown);\n    const msg = getErrorMessage(j) ?? `Failed to save snapshot (${res.status})`;\n    throw new Error(msg);\n  }\n}\n\nexport async function loadSnapshotRemote(qrid: string): Promise<DriverSnapshot | null> {\n  const res = await fetch(`/api/demo/snapshots/${encodeURIComponent(qrid)}`, {\n    method: \"GET\",\n    cache: \"no-store\",\n  });\n  if (res.status === 404) return null;\n  if (!res.ok) throw new Error(`Fetch failed (${res.status})`);\n  return (await res.json()) as DriverSnapshot;\n}\n\nfunction getErrorMessage(x: unknown): string | null {\n  if (!x || typeof x !== \"object\") return null;\n  const rec = x as Record<string, unknown>;\n  const e = rec[\"error\"];\n  return typeof e === \"string\" ? e : null;\n}\n"],"names":[],"mappings":"AAAA,iDAAiD;;;;;;;AAgD1C,eAAe,mBAAmB,CAAiB;IACxD,MAAM,MAAM,MAAM,MAAM,uBAAuB;QAC7C,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;QACrB,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAa,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAChD,MAAM,MAAM,gBAAgB,MAAM,CAAC,yBAAyB,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;QAC3E,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,mBAAmB,IAAY;IACnD,MAAM,MAAM,MAAM,MAAM,CAAC,oBAAoB,EAAE,mBAAmB,OAAO,EAAE;QACzE,QAAQ;QACR,OAAO;IACT;IACA,IAAI,IAAI,MAAM,KAAK,KAAK,OAAO;IAC/B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;IAC3D,OAAQ,MAAM,IAAI,IAAI;AACxB;AAEA,SAAS,gBAAgB,CAAU;IACjC,IAAI,CAAC,KAAK,OAAO,MAAM,UAAU,OAAO;IACxC,MAAM,MAAM;IACZ,MAAM,IAAI,GAAG,CAAC,QAAQ;IACtB,OAAO,OAAO,MAAM,WAAW,IAAI;AACrC","debugId":null}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/uuid.ts"],"sourcesContent":["// RFC4122 v4 UUID with fallbacks for older browsers / non-secure contexts.\nexport function uuidv4(): string {\n  // Modern browsers with Crypto.randomUUID\n  if (typeof crypto !== \"undefined\") {\n    const c = crypto as Crypto & { randomUUID?: () => string };\n    if (typeof c.randomUUID === \"function\") {\n      return c.randomUUID();\n    }\n    // Web Crypto fallback\n    if (typeof c.getRandomValues === \"function\") {\n      const bytes = new Uint8Array(16);\n      c.getRandomValues(bytes);\n      // Per RFC4122 section 4.4\n      const b6 = bytes[6] ?? 0;\n      bytes[6] = (b6 & 0x0f) | 0x40; // version 4\n      const b8 = bytes[8] ?? 0;\n      bytes[8] = (b8 & 0x3f) | 0x80; // variant 10\n      const hex = Array.from(bytes, (b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n      return `${hex.slice(0, 8)}-${hex.slice(8, 12)}-${hex.slice(12, 16)}-${hex.slice(16, 20)}-${hex.slice(20)}`;\n    }\n  }\n  // Last-resort (not cryptographically strong)\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;;AACpE,SAAS;IACd,yCAAyC;IACzC,IAAI,OAAO,WAAW,aAAa;QACjC,MAAM,IAAI;QACV,IAAI,OAAO,EAAE,UAAU,KAAK,YAAY;YACtC,OAAO,EAAE,UAAU;QACrB;QACA,sBAAsB;QACtB,IAAI,OAAO,EAAE,eAAe,KAAK,YAAY;YAC3C,MAAM,QAAQ,IAAI,WAAW;YAC7B,EAAE,eAAe,CAAC;YAClB,0BAA0B;YAC1B,MAAM,KAAK,KAAK,CAAC,EAAE,IAAI;YACvB,KAAK,CAAC,EAAE,GAAG,AAAC,KAAK,OAAQ,MAAM,YAAY;YAC3C,MAAM,KAAK,KAAK,CAAC,EAAE,IAAI;YACvB,KAAK,CAAC,EAAE,GAAG,AAAC,KAAK,OAAQ,MAAM,aAAa;YAC5C,MAAM,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC;YAC3E,OAAO,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK;QAC5G;IACF;IACA,6CAA6C;IAC7C,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF","debugId":null}},
    {"offset": {"line": 1215, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/names.ts"],"sourcesContent":["export function titleCaseName(s: string) {\n  return s\n    .trim()\n    .toLowerCase()\n    .replace(/\\b[\\p{L}\\p{M}]+/gu, (w) => (w[0]?.toUpperCase() ?? \"\") + w.slice(1));\n}\nexport function canonicalKey(s: string) {\n  // Uppercase, strip diacritics, collapse spaces\n  return s\n    .normalize(\"NFD\")\n    .replace(/\\p{Diacritic}/gu, \"\")\n    .toUpperCase()\n    .replace(/\\s+/g, \" \")\n    .trim();\n}\n\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,cAAc,CAAS;IACrC,OAAO,EACJ,IAAI,GACJ,WAAW,GACX,OAAO,CAAC,qBAAqB,CAAC,IAAM,CAAC,CAAC,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,KAAK,CAAC;AAC/E;AACO,SAAS,aAAa,CAAS;IACpC,+CAA+C;IAC/C,OAAO,EACJ,SAAS,CAAC,OACV,OAAO,CAAC,mBAAmB,IAC3B,WAAW,GACX,OAAO,CAAC,QAAQ,KAChB,IAAI;AACT","debugId":null}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/NameFields.tsx"],"sourcesContent":["\"use client\";\n\nimport { titleCaseName, canonicalKey } from \"@/lib/names\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nconst NAME_ALLOWED = /[A-Za-zÀ-ÖØ-öø-ÿ' -]/; // single char test\nconst SANITIZE = /[^A-Za-zÀ-ÖØ-öø-ÿ' -]+/g; // strip anything not allowed\nconst MAX_LEN = 60;\n\nexport default function NameFields({\n  register,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  function onChangeField(\n    e: React.ChangeEvent<HTMLInputElement>,\n    field: \"givenName\" | \"middleName\" | \"surname\",\n  ) {\n    // live sanitize: keep allowed chars, cap length\n    let v = e.target.value.replace(SANITIZE, \"\");\n    if (v.length > MAX_LEN) v = v.slice(0, MAX_LEN);\n    setValue(field, v, { shouldValidate: true });\n  }\n\n  function onBlurFormat(\n    e: React.FocusEvent<HTMLInputElement>,\n    field: \"givenName\" | \"middleName\" | \"surname\",\n    withKey?: \"givenNameKey\" | \"surnameKey\",\n  ) {\n    const t = titleCaseName(e.target.value);\n    setValue(field, t, { shouldValidate: true });\n    if (withKey) setValue(withKey, canonicalKey(t));\n  }\n\n  function blockInvalidKey(e: React.KeyboardEvent<HTMLInputElement>) {\n    // allow control keys\n    if (\n      e.key === \"Backspace\" ||\n      e.key === \"Delete\" ||\n      e.key === \"ArrowLeft\" ||\n      e.key === \"ArrowRight\" ||\n      e.key === \"Tab\" ||\n      e.metaKey ||\n      e.ctrlKey\n    ) {\n      return;\n    }\n    if (!NAME_ALLOWED.test(e.key)) {\n      e.preventDefault();\n    }\n  }\n\n  return (\n    <div className=\"grid gap-4 sm:grid-cols-3\">\n      <Field\n        label=\"Given name\"\n        err={errors.givenName?.message as string | undefined}\n      >\n        <input\n          {...register(\"givenName\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          maxLength={MAX_LEN}\n          onKeyDown={blockInvalidKey}\n          onChange={(e) => onChangeField(e, \"givenName\")}\n          onBlur={(e) => onBlurFormat(e, \"givenName\", \"givenNameKey\")}\n          autoComplete=\"given-name\"\n        />\n      </Field>\n\n      <Field\n        label=\"Middle (optional)\"\n        err={errors.middleName?.message as string | undefined}\n      >\n        <input\n          {...register(\"middleName\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          maxLength={MAX_LEN}\n          onKeyDown={blockInvalidKey}\n          onChange={(e) => onChangeField(e, \"middleName\")}\n          onBlur={(e) => onBlurFormat(e, \"middleName\")}\n          autoComplete=\"additional-name\"\n        />\n      </Field>\n\n      <Field\n        label=\"Surname\"\n        err={errors.surname?.message as string | undefined}\n      >\n        <input\n          {...register(\"surname\")}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          maxLength={MAX_LEN}\n          onKeyDown={blockInvalidKey}\n          onChange={(e) => onChangeField(e, \"surname\")}\n          onBlur={(e) => onBlurFormat(e, \"surname\", \"surnameKey\")}\n          autoComplete=\"family-name\"\n        />\n      </Field>\n    </div>\n  );\n}\n\nfunction Field({\n  label,\n  err,\n  children,\n}: {\n  label: string;\n  err?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      {children}\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAUA,MAAM,eAAe,wBAAwB,mBAAmB;AAChE,MAAM,WAAW,2BAA2B,6BAA6B;AACzE,MAAM,UAAU;AAED,SAAS,WAAW,EACjC,QAAQ,EACR,QAAQ,EACR,MAAM,EAKP;IACC,SAAS,cACP,CAAsC,EACtC,KAA6C;QAE7C,gDAAgD;QAChD,IAAI,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU;QACzC,IAAI,EAAE,MAAM,GAAG,SAAS,IAAI,EAAE,KAAK,CAAC,GAAG;QACvC,SAAS,OAAO,GAAG;YAAE,gBAAgB;QAAK;IAC5C;IAEA,SAAS,aACP,CAAqC,EACrC,KAA6C,EAC7C,OAAuC;QAEvC,MAAM,IAAI,IAAA,6HAAa,EAAC,EAAE,MAAM,CAAC,KAAK;QACtC,SAAS,OAAO,GAAG;YAAE,gBAAgB;QAAK;QAC1C,IAAI,SAAS,SAAS,SAAS,IAAA,4HAAY,EAAC;IAC9C;IAEA,SAAS,gBAAgB,CAAwC;QAC/D,qBAAqB;QACrB,IACE,EAAE,GAAG,KAAK,eACV,EAAE,GAAG,KAAK,YACV,EAAE,GAAG,KAAK,eACV,EAAE,GAAG,KAAK,gBACV,EAAE,GAAG,KAAK,SACV,EAAE,OAAO,IACT,EAAE,OAAO,EACT;YACA;QACF;QACA,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE,GAAG,GAAG;YAC7B,EAAE,cAAc;QAClB;IACF;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBACC,OAAM;gBACN,KAAK,OAAO,SAAS,EAAE;0BAEvB,cAAA,6WAAC;oBACE,GAAG,SAAS,YAAY;oBACzB,WAAU;oBACV,WAAW;oBACX,WAAW;oBACX,UAAU,CAAC,IAAM,cAAc,GAAG;oBAClC,QAAQ,CAAC,IAAM,aAAa,GAAG,aAAa;oBAC5C,cAAa;;;;;;;;;;;0BAIjB,6WAAC;gBACC,OAAM;gBACN,KAAK,OAAO,UAAU,EAAE;0BAExB,cAAA,6WAAC;oBACE,GAAG,SAAS,aAAa;oBAC1B,WAAU;oBACV,WAAW;oBACX,WAAW;oBACX,UAAU,CAAC,IAAM,cAAc,GAAG;oBAClC,QAAQ,CAAC,IAAM,aAAa,GAAG;oBAC/B,cAAa;;;;;;;;;;;0BAIjB,6WAAC;gBACC,OAAM;gBACN,KAAK,OAAO,OAAO,EAAE;0BAErB,cAAA,6WAAC;oBACE,GAAG,SAAS,UAAU;oBACvB,WAAU;oBACV,WAAW;oBACX,WAAW;oBACX,UAAU,CAAC,IAAM,cAAc,GAAG;oBAClC,QAAQ,CAAC,IAAM,aAAa,GAAG,WAAW;oBAC1C,cAAa;;;;;;;;;;;;;;;;;AAKvB;AAEA,SAAS,MAAM,EACb,KAAK,EACL,GAAG,EACH,QAAQ,EAKT;IACC,qBACE,6WAAC;QAAM,WAAU;;0BACf,6WAAC;gBAAK,WAAU;0BAAgC;;;;;;YAC/C;YACA,qBAAO,6WAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAGpD","debugId":null}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PhoneInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PhoneInput({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const [display, setDisplay] = useState(\"\");\n  const phoneCountry = watch(\"phoneCountry\") as \"CA\" | \"US\" | undefined;\n\n  return (\n    <div className=\"grid gap-3 sm:grid-cols-[8rem_1fr]\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Country</span>\n        <select\n          {...register(\"phoneCountry\")}\n          defaultValue=\"CA\"\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        >\n          <option value=\"CA\">Canada (+1)</option>\n          {/* United States intentionally removed as per requirement */}\n        </select>\n      </label>\n\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Phone</span>\n        <input\n          {...register(\"phone\")}\n          value={display}\n          onChange={(e) => {\n            // Keep only digits\n            const digits = e.target.value.replace(/\\D/g, \"\");\n            // Max length: 10 digits for Canadian numbers\n            const truncated = digits.slice(0, 10);\n            setDisplay(truncated);\n            setValue(\"phone\", truncated, { shouldValidate: true });\n          }}\n          inputMode=\"numeric\"\n          pattern=\"\\d{10}\"\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          placeholder=\"2045551234\"\n        />\n        {errors.phone?.message && (\n          <p className=\"text-xs text-rose-600\">\n            {errors.phone.message as string}\n          </p>\n        )}\n      </label>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAWe,SAAS,WAAW,EACjC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,gVAAQ,EAAC;IACvC,MAAM,eAAe,MAAM;IAE3B,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAM,WAAU;;kCACf,6WAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,6WAAC;wBACE,GAAG,SAAS,eAAe;wBAC5B,cAAa;wBACb,WAAU;kCAEV,cAAA,6WAAC;4BAAO,OAAM;sCAAK;;;;;;;;;;;;;;;;;0BAKvB,6WAAC;gBAAM,WAAU;;kCACf,6WAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,6WAAC;wBACE,GAAG,SAAS,QAAQ;wBACrB,OAAO;wBACP,UAAU,CAAC;4BACT,mBAAmB;4BACnB,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;4BAC7C,6CAA6C;4BAC7C,MAAM,YAAY,OAAO,KAAK,CAAC,GAAG;4BAClC,WAAW;4BACX,SAAS,SAAS,WAAW;gCAAE,gBAAgB;4BAAK;wBACtD;wBACA,WAAU;wBACV,SAAQ;wBACR,WAAU;wBACV,aAAY;;;;;;oBAEb,OAAO,KAAK,EAAE,yBACb,6WAAC;wBAAE,WAAU;kCACV,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;;;;;;;AAMjC","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PostalInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { detectCA, isUSZip } from \"@/lib/postal\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PostalInput({\n  register,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  function formatCA(v: string): string {\n    const s = v.replace(/\\s+/g, \"\").slice(0, 6); // only first 6 chars\n    return s.length > 3 ? `${s.slice(0, 3)} ${s.slice(3)}` : s;\n  }\n\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">Postal/ZIP</span>\n      <input\n        {...register(\"postal\")}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        placeholder=\"A1A 1A1 or 90210\"\n        maxLength={7} // A1A 1A1 pattern\n        onInput={(e) => {\n          const t = e.target as HTMLInputElement;\n          let v = t.value.toUpperCase().replace(/[^A-Z0-9\\s-]/g, \"\");\n\n          // Canadian pattern: first letter must be valid\n          if (/^[ABCEGHJ-NPRSTVXY]\\d[A-Z]?/i.test(v.replace(/\\s/g, \"\"))) {\n            t.value = formatCA(v);\n          } else {\n            // For non-CA, keep only digits (ZIP code)\n            if (/^\\d/.test(v)) {\n              t.value = v.replace(/\\D/g, \"\").slice(0, 10); // allow ZIP+4\n            }\n          }\n        }}\n        onBlur={(e) => {\n          const raw = (e.target as HTMLInputElement).value.trim();\n          const ca = detectCA(raw);\n          if (ca.ok) {\n            if (ca.normalized) setValue(\"postal\", ca.normalized);\n            setValue(\"country\", \"CA\");\n            if (ca.province) setValue(\"region\", ca.province);\n            return;\n          }\n          if (isUSZip(raw)) {\n            setValue(\"country\", \"US\");\n          }\n        }}\n      />\n      {errors.postal?.message && (\n        <p className=\"text-xs text-rose-600\">\n          {errors.postal.message as string}\n        </p>\n      )}\n    </label>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAUe,SAAS,YAAY,EAClC,QAAQ,EACR,QAAQ,EACR,MAAM,EAKP;IACC,SAAS,SAAS,CAAS;QACzB,MAAM,IAAI,EAAE,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,qBAAqB;QAClE,OAAO,EAAE,MAAM,GAAG,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,GAAG;IAC3D;IAEA,qBACE,6WAAC;QAAM,WAAU;;0BACf,6WAAC;gBAAK,WAAU;0BAA+B;;;;;;0BAC/C,6WAAC;gBACE,GAAG,SAAS,SAAS;gBACtB,WAAU;gBACV,aAAY;gBACZ,WAAW;gBACX,SAAS,CAAC;oBACR,MAAM,IAAI,EAAE,MAAM;oBAClB,IAAI,IAAI,EAAE,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,iBAAiB;oBAEvD,+CAA+C;oBAC/C,IAAI,+BAA+B,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,MAAM;wBAC7D,EAAE,KAAK,GAAG,SAAS;oBACrB,OAAO;wBACL,0CAA0C;wBAC1C,IAAI,MAAM,IAAI,CAAC,IAAI;4BACjB,EAAE,KAAK,GAAG,EAAE,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,cAAc;wBAC7D;oBACF;gBACF;gBACA,QAAQ,CAAC;oBACP,MAAM,MAAM,AAAC,EAAE,MAAM,CAAsB,KAAK,CAAC,IAAI;oBACrD,MAAM,KAAK,IAAA,yHAAQ,EAAC;oBACpB,IAAI,GAAG,EAAE,EAAE;wBACT,IAAI,GAAG,UAAU,EAAE,SAAS,UAAU,GAAG,UAAU;wBACnD,SAAS,WAAW;wBACpB,IAAI,GAAG,QAAQ,EAAE,SAAS,UAAU,GAAG,QAAQ;wBAC/C;oBACF;oBACA,IAAI,IAAA,wHAAO,EAAC,MAAM;wBAChB,SAAS,WAAW;oBACtB;gBACF;;;;;;YAED,OAAO,MAAM,EAAE,yBACd,6WAAC;gBAAE,WAAU;0BACV,OAAO,MAAM,CAAC,OAAO;;;;;;;;;;;;AAKhC","debugId":null}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/LicenceInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { formatLicence } from \"@/lib/license-rules\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function LicenceInput({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const jurisdiction = watch(\"jurisdiction\") as string;\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    const t = e.target as HTMLInputElement;\n    // Clean: uppercase, strip invalids\n    let v = t.value.toUpperCase().replace(/[^A-Z0-9-]/g, \"\");\n    // Apply jurisdiction-specific formatting\n    v = formatLicence(jurisdiction, v);\n    t.value = v;\n    setValue(\"licenseNo\", v, { shouldValidate: true });\n  }\n\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">Licence number</span>\n      <input\n        {...register(\"licenseNo\")}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2 font-mono tracking-wider\"\n        placeholder={maskHint(jurisdiction)}\n        onInput={handleInput}\n        maxLength={20}\n        autoComplete=\"off\"\n      />\n      {errors.licenseNo?.message && (\n        <p className=\"text-xs text-rose-600\">\n          {errors.licenseNo.message as string}\n        </p>\n      )}\n      <p className=\"mt-1 text-xs text-slate-500\">\n        Enter only letters/numbers (formatting applied automatically).\n      </p>\n    </label>\n  );\n}\n\nfunction maskHint(j: string): string {\n  switch (j) {\n    case \"CA-ON\":\n      return \"A####-#####-#####\";\n    case \"CA-BC\":\n      return \"####### or ########\";\n    case \"CA-AB\":\n      return \"######-### or 5–9 digits\";\n    case \"CA-SK\":\n      return \"########\";\n    case \"CA-QC\":\n      return \"A############\";\n    case \"CA-NL\":\n      return \"A#########\";\n    case \"CA-MB\":\n      return \"####### (7 digits)\";\n    case \"CA-NB\":\n    case \"CA-NS\":\n    case \"CA-PE\":\n      return \"Up to 8 digits\";\n    default:\n      return \"Up to 15 letters/digits\";\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAWe,SAAS,aAAa,EACnC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP;IACC,MAAM,eAAe,MAAM;IAE3B,SAAS,YAAY,CAAsC;QACzD,MAAM,IAAI,EAAE,MAAM;QAClB,mCAAmC;QACnC,IAAI,IAAI,EAAE,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,eAAe;QACrD,yCAAyC;QACzC,IAAI,IAAA,wIAAa,EAAC,cAAc;QAChC,EAAE,KAAK,GAAG;QACV,SAAS,aAAa,GAAG;YAAE,gBAAgB;QAAK;IAClD;IAEA,qBACE,6WAAC;QAAM,WAAU;;0BACf,6WAAC;gBAAK,WAAU;0BAA+B;;;;;;0BAC/C,6WAAC;gBACE,GAAG,SAAS,YAAY;gBACzB,WAAU;gBACV,aAAa,SAAS;gBACtB,SAAS;gBACT,WAAW;gBACX,cAAa;;;;;;YAEd,OAAO,SAAS,EAAE,yBACjB,6WAAC;gBAAE,WAAU;0BACV,OAAO,SAAS,CAAC,OAAO;;;;;;0BAG7B,6WAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAKjD;AAEA,SAAS,SAAS,CAAS;IACzB,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 1657, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/StatusWizard.tsx"],"sourcesContent":["\"use client\";\n\nimport type {\n  FieldErrors,\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function StatusWizard({\n  register,\n  watch,\n  setValue,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const citizenship = (watch(\"citizenship\") ?? \"CA\") as RegisterValues[\"citizenship\"];\n  const residency = (watch(\"residencyCA\") ?? \"Citizen\") as RegisterValues[\"residencyCA\"];\n  const showPermitType = residency === \"Work Permit\"; // hidden for Study Permit\n\n  // Reset dependent fields on category changes to avoid stale values\n  function onCitizenshipChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const val = e.target.value as RegisterValues[\"citizenship\"];\n    setValue(\"citizenship\", val, { shouldValidate: true });\n    if (val === \"Canadian Citizen\") {\n      setValue(\"passportCountry\", undefined, { shouldValidate: true });\n      setValue(\"passportNumber\", undefined, { shouldValidate: true });\n      setValue(\"docPassport\", undefined, { shouldValidate: true });\n    }\n  }\n\n  function onResidencyChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const val = e.target.value as RegisterValues[\"residencyCA\"];\n    setValue(\"residencyCA\", val, { shouldValidate: true });\n\n    // Clear PR/Permit-specific fields when switching\n    if (val !== \"Permanent Resident\") setValue(\"prNumber\", undefined, { shouldValidate: true });\n    if (val !== \"Work Permit\" && val !== \"Study Permit\") {\n      setValue(\"permitType\", undefined, { shouldValidate: true });\n      setValue(\"docPermit\", undefined, { shouldValidate: true });\n    }\n  }\n\n  return (\n    <section className=\"space-y-4\">\n      <h2 className=\"text-lg font-medium\">Status in Canada</h2>\n      <div className=\"grid gap-4 sm:grid-cols-3\">\n        {/* Citizenship */}\n        <label className=\"block\">\n          <span className=\"block text-sm text-slate-700\">Citizenship</span>\n          <select\n            {...register(\"citizenship\")}\n            defaultValue={citizenship}\n            onChange={onCitizenshipChange}\n            className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n          >\n            <option value=\"Canadian Citizen\">Canadian Citizen</option>\n            {/* United States intentionally removed */}\n            <option value=\"Non-Citizen\">Non-Citizen</option>\n          </select>\n          {errors.citizenship?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.citizenship.message)}</p>\n          )}\n        </label>\n\n        {/* Residency in Canada */}\n        <label className=\"block\">\n          <span className=\"block text-sm text-slate-700\">Residency</span>\n          {watch(\"citizenship\") === \"Canadian Citizen\" ? (\n            <input\n              type=\"text\"\n              value=\"Citizen\"\n              readOnly\n              className=\"mt-1 w-full rounded border border-slate-300 bg-slate-100 p-2 text-slate-600\"\n            />\n          ) : (\n            <select\n              {...register(\"residencyCA\")}\n              className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled>Select residency</option>\n              <option value=\"Permanent Resident\">Permanent Resident</option>\n              <option value=\"Work Permit\">Work Permit</option>\n              <option value=\"Study Permit\">Study Permit</option>\n            </select>\n          )}\n          {errors.residencyCA?.message && (\n            <p className=\"text-xs text-rose-600\">{errors.residencyCA.message as string}</p>\n          )}\n        </label>\n\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAUe,SAAS,aAAa,EACnC,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,MAAM,EAMP;IACC,MAAM,cAAe,MAAM,kBAAkB;IAC7C,MAAM,YAAa,MAAM,kBAAkB;IAC3C,MAAM,iBAAiB,cAAc,eAAe,0BAA0B;IAE9E,mEAAmE;IACnE,SAAS,oBAAoB,CAAuC;QAClE,MAAM,MAAM,EAAE,MAAM,CAAC,KAAK;QAC1B,SAAS,eAAe,KAAK;YAAE,gBAAgB;QAAK;QACpD,IAAI,QAAQ,oBAAoB;YAC9B,SAAS,mBAAmB,WAAW;gBAAE,gBAAgB;YAAK;YAC9D,SAAS,kBAAkB,WAAW;gBAAE,gBAAgB;YAAK;YAC7D,SAAS,eAAe,WAAW;gBAAE,gBAAgB;YAAK;QAC5D;IACF;IAEA,SAAS,kBAAkB,CAAuC;QAChE,MAAM,MAAM,EAAE,MAAM,CAAC,KAAK;QAC1B,SAAS,eAAe,KAAK;YAAE,gBAAgB;QAAK;QAEpD,iDAAiD;QACjD,IAAI,QAAQ,sBAAsB,SAAS,YAAY,WAAW;YAAE,gBAAgB;QAAK;QACzF,IAAI,QAAQ,iBAAiB,QAAQ,gBAAgB;YACnD,SAAS,cAAc,WAAW;gBAAE,gBAAgB;YAAK;YACzD,SAAS,aAAa,WAAW;gBAAE,gBAAgB;YAAK;QAC1D;IACF;IAEA,qBACE,6WAAC;QAAQ,WAAU;;0BACjB,6WAAC;gBAAG,WAAU;0BAAsB;;;;;;0BACpC,6WAAC;gBAAI,WAAU;;kCAEb,6WAAC;wBAAM,WAAU;;0CACf,6WAAC;gCAAK,WAAU;0CAA+B;;;;;;0CAC/C,6WAAC;gCACE,GAAG,SAAS,cAAc;gCAC3B,cAAc;gCACd,UAAU;gCACV,WAAU;;kDAEV,6WAAC;wCAAO,OAAM;kDAAmB;;;;;;kDAEjC,6WAAC;wCAAO,OAAM;kDAAc;;;;;;;;;;;;4BAE7B,OAAO,WAAW,EAAE,yBACnB,6WAAC;gCAAE,WAAU;0CAAyB,OAAO,OAAO,WAAW,CAAC,OAAO;;;;;;;;;;;;kCAK3E,6WAAC;wBAAM,WAAU;;0CACf,6WAAC;gCAAK,WAAU;0CAA+B;;;;;;4BAC9C,MAAM,mBAAmB,mCACxB,6WAAC;gCACC,MAAK;gCACL,OAAM;gCACN,QAAQ;gCACR,WAAU;;;;;qDAGZ,6WAAC;gCACE,GAAG,SAAS,cAAc;gCAC3B,WAAU;gCACV,cAAa;;kDAEb,6WAAC;wCAAO,OAAM;wCAAG,QAAQ;kDAAC;;;;;;kDAC1B,6WAAC;wCAAO,OAAM;kDAAqB;;;;;;kDACnC,6WAAC;wCAAO,OAAM;kDAAc;;;;;;kDAC5B,6WAAC;wCAAO,OAAM;kDAAe;;;;;;;;;;;;4BAGhC,OAAO,WAAW,EAAE,yBACnB,6WAAC;gCAAE,WAAU;0CAAyB,OAAO,WAAW,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;AAO5E","debugId":null}},
    {"offset": {"line": 1866, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/LicenseClassSelect.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { classesFor } from \"@/lib/license-classes\";\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nconst AIR_BRAKE_LABEL: Record<string, string> = {\n  \"CA-ON\": \"Air brake (Z)\",\n  \"CA-MB\": \"Air brake (A)\",\n  \"CA-AB\": \"Air brake (Q/endorsement)\",\n  \"CA-SK\": \"Air brake\",\n  \"CA-BC\": \"Air brake\",\n  \"CA-QC\": \"Air brake (F endorsement)\",\n  \"CA-NB\": \"Air brake\",\n  \"CA-NL\": \"Air brake\",\n  \"CA-NS\": \"Air brake\",\n  \"CA-PE\": \"Air brake\",\n  // Territories (generic label)\n  \"CA-YT\": \"Air brake\",\n  \"CA-NT\": \"Air brake\",\n  \"CA-NU\": \"Air brake\",\n};\n\nexport default function LicenseClassSelect({\n  register,\n  setValue,\n  watch,\n  errors,\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n}) {\n  const jurisdiction = watch(\"jurisdiction\") as string | undefined;\n  const currentClass = watch(\"licenseClass\") as string | undefined;\n  const allowed = jurisdiction ? classesFor(jurisdiction) : [];\n  const label = AIR_BRAKE_LABEL[jurisdiction ?? \"\"] ?? \"Air brake\";\n\n  // Reset class when jurisdiction changes to avoid stale / invalid selections\n  useEffect(() => {\n    setValue(\"licenseClass\", \"\", { shouldValidate: true });\n  }, [jurisdiction, setValue]);\n\n  return (\n    <div className=\"grid gap-4 sm:grid-cols-2\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Licence class</span>\n        <select\n          {...register(\"licenseClass\")}\n          disabled={!jurisdiction}\n          value={currentClass ?? \"\"}\n          onChange={(e) => setValue(\"licenseClass\", e.target.value, { shouldValidate: true })}\n          className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        >\n          <option value=\"\" disabled>\n            {jurisdiction ? \"Select class\" : \"Select jurisdiction first\"}\n          </option>\n          {jurisdiction && allowed.length === 0 && (\n            <option value=\"\" disabled>\n              No classes found\n            </option>\n          )}\n          {allowed.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n        {errors?.licenseClass?.message && (\n          <p className=\"text-xs text-rose-600\">\n            {String(errors.licenseClass.message)}\n          </p>\n        )}\n      </label>\n\n      <label className=\"mt-6 inline-flex items-center gap-2\">\n        <input type=\"checkbox\" {...register(\"airBrake\")} className=\"h-4 w-4\" />\n        <span className=\"text-sm text-slate-700\">{label}</span>\n      </label>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,kBAA0C;IAC9C,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,SAAS;IACT,8BAA8B;IAC9B,SAAS;IACT,SAAS;IACT,SAAS;AACX;AAEe,SAAS,mBAAmB,EACzC,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EAMP;IACC,MAAM,eAAe,MAAM;IAC3B,MAAM,eAAe,MAAM;IAC3B,MAAM,UAAU,eAAe,IAAA,uIAAU,EAAC,gBAAgB,EAAE;IAC5D,MAAM,QAAQ,eAAe,CAAC,gBAAgB,GAAG,IAAI;IAErD,4EAA4E;IAC5E,IAAA,iVAAS,EAAC;QACR,SAAS,gBAAgB,IAAI;YAAE,gBAAgB;QAAK;IACtD,GAAG;QAAC;QAAc;KAAS;IAE3B,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAM,WAAU;;kCACf,6WAAC;wBAAK,WAAU;kCAA+B;;;;;;kCAC/C,6WAAC;wBACE,GAAG,SAAS,eAAe;wBAC5B,UAAU,CAAC;wBACX,OAAO,gBAAgB;wBACvB,UAAU,CAAC,IAAM,SAAS,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE;gCAAE,gBAAgB;4BAAK;wBACjF,WAAU;;0CAEV,6WAAC;gCAAO,OAAM;gCAAG,QAAQ;0CACtB,eAAe,iBAAiB;;;;;;4BAElC,gBAAgB,QAAQ,MAAM,KAAK,mBAClC,6WAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAI3B,QAAQ,GAAG,CAAC,CAAC,kBACZ,6WAAC;oCAAe,OAAO;8CACpB;mCADU;;;;;;;;;;;oBAKhB,QAAQ,cAAc,yBACrB,6WAAC;wBAAE,WAAU;kCACV,OAAO,OAAO,YAAY,CAAC,OAAO;;;;;;;;;;;;0BAKzC,6WAAC;gBAAM,WAAU;;kCACf,6WAAC;wBAAM,MAAK;wBAAY,GAAG,SAAS,WAAW;wBAAE,WAAU;;;;;;kCAC3D,6WAAC;wBAAK,WAAU;kCAA0B;;;;;;;;;;;;;;;;;;AAIlD","debugId":null}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/CountrySelect.tsx"],"sourcesContent":["\"use client\";\nimport { useMemo, useState } from \"react\";\nimport { allCountries } from \"@/lib/countries\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors, Path } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\ntype Props = {\n  name: Path<RegisterValues>;\n  label?: string;\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors?: FieldErrors<RegisterValues>;\n  defaultCode?: string;\n  searchable?: boolean;   // 👈 NEW prop\n};\n\nconst COUNTRIES = allCountries();\n\nexport default function CountrySelect({\n  name,\n  label = \"Country\",\n  register,\n  setValue,\n  errors,\n  defaultCode,\n  searchable = true,  // 👈 default keeps old behavior\n}: Props) {\n  const [q, setQ] = useState(\"\");\n\n  const filtered = useMemo(() => {\n    if (!searchable) return COUNTRIES; // 👈 skip filtering if not searchable\n    const s = q.trim().toLowerCase();\n    if (!s) return COUNTRIES;\n    return COUNTRIES.filter(\n      (c) => c.name.toLowerCase().includes(s) || c.code.toLowerCase().includes(s)\n    );\n  }, [q, searchable]);\n\n  function errorOf() {\n    const e = errors?.[name as keyof typeof errors];\n    const msg = (e as unknown as { message?: string } | undefined)?.message;\n    return typeof msg === \"string\" ? msg : undefined;\n  }\n\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">{label}</span>\n      </label>\n\n      <div\n        className={\n          searchable\n            ? \"grid gap-2 sm:grid-cols-[1fr_18rem]\"\n            : \"w-full\"\n        }\n      >\n        {searchable && (\n          <input\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n            className=\"rounded border border-slate-300 p-2\"\n            placeholder=\"Search country…\"\n          />\n        )}\n\n        <select\n          {...register(name)}\n          defaultValue={defaultCode ?? \"\"}\n          onChange={(e) =>\n            setValue(name, e.target.value, { shouldValidate: true, shouldDirty: true })\n          }\n          className=\"rounded border border-slate-300 p-2 w-full\"\n        >\n          <option value=\"\" disabled>\n            Select country\n          </option>\n          {filtered.map((c) => (\n            <option key={c.code} value={c.code}>\n              {c.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {errorOf() && <p className=\"text-xs text-rose-600\">{errorOf()}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAgBA,MAAM,YAAY,IAAA,gIAAY;AAEf,SAAS,cAAc,EACpC,IAAI,EACJ,QAAQ,SAAS,EACjB,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,WAAW,EACX,aAAa,IAAI,EACX;IACN,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,gVAAQ,EAAC;IAE3B,MAAM,WAAW,IAAA,+UAAO,EAAC;QACvB,IAAI,CAAC,YAAY,OAAO,WAAW,sCAAsC;QACzE,MAAM,IAAI,EAAE,IAAI,GAAG,WAAW;QAC9B,IAAI,CAAC,GAAG,OAAO;QACf,OAAO,UAAU,MAAM,CACrB,CAAC,IAAM,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAE7E,GAAG;QAAC;QAAG;KAAW;IAElB,SAAS;QACP,MAAM,IAAI,QAAQ,CAAC,KAA4B;QAC/C,MAAM,MAAO,GAAmD;QAChE,OAAO,OAAO,QAAQ,WAAW,MAAM;IACzC;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAM,WAAU;0BACf,cAAA,6WAAC;oBAAK,WAAU;8BAAgC;;;;;;;;;;;0BAGlD,6WAAC;gBACC,WACE,aACI,wCACA;;oBAGL,4BACC,6WAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,KAAK,EAAE,MAAM,CAAC,KAAK;wBACpC,WAAU;wBACV,aAAY;;;;;;kCAIhB,6WAAC;wBACE,GAAG,SAAS,KAAK;wBAClB,cAAc,eAAe;wBAC7B,UAAU,CAAC,IACT,SAAS,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE;gCAAE,gBAAgB;gCAAM,aAAa;4BAAK;wBAE3E,WAAU;;0CAEV,6WAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,SAAS,GAAG,CAAC,CAAC,kBACb,6WAAC;oCAAoB,OAAO,EAAE,IAAI;8CAC/B,EAAE,IAAI;mCADI,EAAE,IAAI;;;;;;;;;;;;;;;;;YAOxB,2BAAa,6WAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAG1D","debugId":null}},
    {"offset": {"line": 2129, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/PassportInput.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { passportPatternFor, normalizePassport } from \"@/lib/passport/validate\";\nimport type { UseFormRegister, UseFormSetValue, FieldErrors } from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function PassportInput({\n  countryCode,\n  register,\n  setValue,\n  errors,\n}: {\n  countryCode?: string;\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  errors?: FieldErrors<RegisterValues>;\n}) {\n  const [v, setV] = useState(\"\");\n  const pat = useMemo(() => passportPatternFor(countryCode), [countryCode]);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // When country changes, clip to max length and re-validate\n  useEffect(() => {\n    if (!inputRef.current) return;\n    if (pat.maxLen && v.length > pat.maxLen) {\n      const clipped = v.slice(0, pat.maxLen);\n      setV(clipped);\n      setValue(\"passportNumber\", clipped, { shouldValidate: true });\n    } else {\n      // trigger validation when country changes even if length is ok\n      setValue(\"passportNumber\", v, { shouldValidate: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [countryCode]);\n\n  return (\n    <div className=\"space-y-1\">\n      <label className=\"block\">\n        <span className=\"block text-sm text-slate-700\">Passport number</span>\n      </label>\n      <input\n        {...(() => {\n          const r = register(\"passportNumber\");\n          return r;\n        })()}\n        ref={(el) => {\n          const r = register(\"passportNumber\");\n          if (typeof r.ref === \"function\") r.ref(el);\n          else if (r.ref) (r.ref as React.MutableRefObject<HTMLInputElement | null>).current = el;\n          (inputRef as React.MutableRefObject<HTMLInputElement | null>).current = el;\n        }}\n        value={v}\n        onChange={(e) => {\n          // Uppercase A–Z, digits only; hard limit by country pattern\n          let s = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, \"\");\n          if (pat.maxLen) s = s.slice(0, pat.maxLen);\n          setV(s);\n          setValue(\"passportNumber\", s, { shouldValidate: true });\n        }}\n        onBlur={(e) => {\n          const canon = normalizePassport(e.target.value);\n          setV(canon);\n          setValue(\"passportNumber\", canon, { shouldValidate: true });\n        }}\n        inputMode=\"text\"\n        autoCapitalize=\"characters\"\n        className=\"mt-1 w-full rounded border border-slate-300 p-2 font-mono tracking-wider\"\n        placeholder={pat.hint || \"e.g., K1234567\"}\n        aria-describedby=\"passport-hint\"\n      />\n      <p id=\"passport-hint\" className=\"text-xs text-slate-500\">\n        {countryCode ? `Expected format for ${countryCode.toUpperCase()}: ` : \"Expected format: \"}\n        {pat.hint || \"6–10 letters/digits\"}\n      </p>\n      {errors?.passportNumber?.message && (\n        <p className=\"text-xs text-rose-600\">{String(errors.passportNumber.message)}</p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAOe,SAAS,cAAc,EACpC,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,MAAM,EAMP;IACC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,gVAAQ,EAAC;IAC3B,MAAM,MAAM,IAAA,+UAAO,EAAC,IAAM,IAAA,iJAAkB,EAAC,cAAc;QAAC;KAAY;IACxE,MAAM,WAAW,IAAA,8UAAM,EAAmB;IAE1C,2DAA2D;IAC3D,IAAA,iVAAS,EAAC;QACR,IAAI,CAAC,SAAS,OAAO,EAAE;QACvB,IAAI,IAAI,MAAM,IAAI,EAAE,MAAM,GAAG,IAAI,MAAM,EAAE;YACvC,MAAM,UAAU,EAAE,KAAK,CAAC,GAAG,IAAI,MAAM;YACrC,KAAK;YACL,SAAS,kBAAkB,SAAS;gBAAE,gBAAgB;YAAK;QAC7D,OAAO;YACL,+DAA+D;YAC/D,SAAS,kBAAkB,GAAG;gBAAE,gBAAgB;YAAK;QACvD;IACA,uDAAuD;IACzD,GAAG;QAAC;KAAY;IAEhB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAM,WAAU;0BACf,cAAA,6WAAC;oBAAK,WAAU;8BAA+B;;;;;;;;;;;0BAEjD,6WAAC;gBACE,GAAG,CAAC;oBACH,MAAM,IAAI,SAAS;oBACnB,OAAO;gBACT,CAAC,GAAG;gBACJ,KAAK,CAAC;oBACJ,MAAM,IAAI,SAAS;oBACnB,IAAI,OAAO,EAAE,GAAG,KAAK,YAAY,EAAE,GAAG,CAAC;yBAClC,IAAI,EAAE,GAAG,EAAE,AAAC,EAAE,GAAG,CAAqD,OAAO,GAAG;oBACpF,SAA6D,OAAO,GAAG;gBAC1E;gBACA,OAAO;gBACP,UAAU,CAAC;oBACT,4DAA4D;oBAC5D,IAAI,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,cAAc;oBAC3D,IAAI,IAAI,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,MAAM;oBACzC,KAAK;oBACL,SAAS,kBAAkB,GAAG;wBAAE,gBAAgB;oBAAK;gBACvD;gBACA,QAAQ,CAAC;oBACP,MAAM,QAAQ,IAAA,gJAAiB,EAAC,EAAE,MAAM,CAAC,KAAK;oBAC9C,KAAK;oBACL,SAAS,kBAAkB,OAAO;wBAAE,gBAAgB;oBAAK;gBAC3D;gBACA,WAAU;gBACV,gBAAe;gBACf,WAAU;gBACV,aAAa,IAAI,IAAI,IAAI;gBACzB,oBAAiB;;;;;;0BAEnB,6WAAC;gBAAE,IAAG;gBAAgB,WAAU;;oBAC7B,cAAc,CAAC,oBAAoB,EAAE,YAAY,WAAW,GAAG,EAAE,CAAC,GAAG;oBACrE,IAAI,IAAI,IAAI;;;;;;;YAEd,QAAQ,gBAAgB,yBACvB,6WAAC;gBAAE,WAAU;0BAAyB,OAAO,OAAO,cAAc,CAAC,OAAO;;;;;;;;;;;;AAIlF","debugId":null}},
    {"offset": {"line": 2252, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/AddressCountrySelect.tsx"],"sourcesContent":["\"use client\";\n\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nexport default function AddressCountrySelect({\n  register,\n  setValue,\n  watch,\n  errors,\n  label = \"Country\",\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n  label?: string;\n}) {\n  const country = (watch(\"country\") || \"\") as RegisterValues[\"country\"];\n  const err = errors.country?.message as string | undefined;\n\n  function onChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const val = e.target.value as RegisterValues[\"country\"];\n    setValue(\"country\", val, { shouldValidate: true });\n    // clear region when country changes\n    setValue(\"region\", \"\", { shouldValidate: true });\n  }\n\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      <select\n        {...register(\"country\")}\n        value={country ?? \"\"}\n        onChange={onChange}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n      >\n        <option value=\"\" disabled>\n          Select country\n        </option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"US\">United States</option>\n      </select>\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAUe,SAAS,qBAAqB,EAC3C,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EACN,QAAQ,SAAS,EAOlB;IACC,MAAM,UAAW,MAAM,cAAc;IACrC,MAAM,MAAM,OAAO,OAAO,EAAE;IAE5B,SAAS,SAAS,CAAuC;QACvD,MAAM,MAAM,EAAE,MAAM,CAAC,KAAK;QAC1B,SAAS,WAAW,KAAK;YAAE,gBAAgB;QAAK;QAChD,oCAAoC;QACpC,SAAS,UAAU,IAAI;YAAE,gBAAgB;QAAK;IAChD;IAEA,qBACE,6WAAC;QAAM,WAAU;;0BACf,6WAAC;gBAAK,WAAU;0BAAgC;;;;;;0BAChD,6WAAC;gBACE,GAAG,SAAS,UAAU;gBACvB,OAAO,WAAW;gBAClB,UAAU;gBACV,WAAU;;kCAEV,6WAAC;wBAAO,OAAM;wBAAG,QAAQ;kCAAC;;;;;;kCAG1B,6WAAC;wBAAO,OAAM;kCAAK;;;;;;kCACnB,6WAAC;wBAAO,OAAM;kCAAK;;;;;;;;;;;;YAEpB,qBAAO,6WAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAGpD","debugId":null}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/components/inputs/RegionSelect.tsx"],"sourcesContent":["\"use client\";\n\nimport type {\n  UseFormRegister,\n  UseFormSetValue,\n  UseFormWatch,\n  FieldErrors,\n} from \"react-hook-form\";\nimport type { RegisterValues } from \"@/lib/register-schemas\";\n\nconst CA_PROVINCES = [\n  [\"AB\", \"Alberta\"],\n  [\"BC\", \"British Columbia\"],\n  [\"MB\", \"Manitoba\"],\n  [\"NB\", \"New Brunswick\"],\n  [\"NL\", \"Newfoundland and Labrador\"],\n  [\"NS\", \"Nova Scotia\"],\n  [\"NT\", \"Northwest Territories\"],\n  [\"NU\", \"Nunavut\"],\n  [\"ON\", \"Ontario\"],\n  [\"PE\", \"Prince Edward Island\"],\n  [\"QC\", \"Quebec\"],\n  [\"SK\", \"Saskatchewan\"],\n  [\"YT\", \"Yukon\"],\n] as const;\n\nconst US_STATES = [\n  [\"AL\", \"Alabama\"], [\"AK\", \"Alaska\"], [\"AZ\", \"Arizona\"], [\"AR\", \"Arkansas\"],\n  [\"CA\", \"California\"], [\"CO\", \"Colorado\"], [\"CT\", \"Connecticut\"], [\"DE\", \"Delaware\"],\n  [\"FL\", \"Florida\"], [\"GA\", \"Georgia\"], [\"HI\", \"Hawaii\"], [\"ID\", \"Idaho\"],\n  [\"IL\", \"Illinois\"], [\"IN\", \"Indiana\"], [\"IA\", \"Iowa\"], [\"KS\", \"Kansas\"],\n  [\"KY\", \"Kentucky\"], [\"LA\", \"Louisiana\"], [\"ME\", \"Maine\"], [\"MD\", \"Maryland\"],\n  [\"MA\", \"Massachusetts\"], [\"MI\", \"Michigan\"], [\"MN\", \"Minnesota\"], [\"MS\", \"Mississippi\"],\n  [\"MO\", \"Missouri\"], [\"MT\", \"Montana\"], [\"NE\", \"Nebraska\"], [\"NV\", \"Nevada\"],\n  [\"NH\", \"New Hampshire\"], [\"NJ\", \"New Jersey\"], [\"NM\", \"New Mexico\"], [\"NY\", \"New York\"],\n  [\"NC\", \"North Carolina\"], [\"ND\", \"North Dakota\"], [\"OH\", \"Ohio\"], [\"OK\", \"Oklahoma\"],\n  [\"OR\", \"Oregon\"], [\"PA\", \"Pennsylvania\"], [\"RI\", \"Rhode Island\"], [\"SC\", \"South Carolina\"],\n  [\"SD\", \"South Dakota\"], [\"TN\", \"Tennessee\"], [\"TX\", \"Texas\"], [\"UT\", \"Utah\"],\n  [\"VT\", \"Vermont\"], [\"VA\", \"Virginia\"], [\"WA\", \"Washington\"], [\"WV\", \"West Virginia\"],\n  [\"WI\", \"Wisconsin\"], [\"WY\", \"Wyoming\"], [\"DC\", \"District of Columbia\"],\n] as const;\n\nexport default function RegionSelect({\n  register,\n  setValue,\n  watch,\n  errors,\n  label = \"Region/Province/State\",\n}: {\n  register: UseFormRegister<RegisterValues>;\n  setValue: UseFormSetValue<RegisterValues>;\n  watch: UseFormWatch<RegisterValues>;\n  errors: FieldErrors<RegisterValues>;\n  label?: string;\n}) {\n  const country = (watch(\"country\") || \"\") as RegisterValues[\"country\"];\n  const region = watch(\"region\") as string | undefined;\n  const err = errors.region?.message as string | undefined;\n\n  const options =\n    country === \"CA\" ? CA_PROVINCES : country === \"US\" ? US_STATES : null;\n\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      <select\n        {...register(\"region\")}\n        value={region ?? \"\"}\n        onChange={(e) => setValue(\"region\", e.target.value, { shouldValidate: true })}\n        className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n        disabled={!options}\n      >\n        <option value=\"\" disabled>\n          {country === \"CA\"\n            ? \"Select province/territory\"\n            : country === \"US\"\n            ? \"Select state\"\n            : \"Select a country first\"}\n        </option>\n        {options?.map(([code, name]) => (\n          <option key={code} value={code}>\n            {name}\n          </option>\n        ))}\n      </select>\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 2678, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/app/driver/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm, useFieldArray, type Resolver } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport {\n  RegisterSchema,\n  type RegisterValues,\n  normalizeForStorage,\n} from \"@/lib/register-schemas\";\nimport DocUploadField from \"@/components/driver/DocUploadField\";\nimport DriverCardPDF from \"@/components/pdf/DriverCardPDF\";\nimport { buildQrPayload, makeQrPng } from \"@/lib/qr\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport Image from \"next/image\";\nimport {\n  saveSnapshotRemote,\n  type DriverSnapshot,\n} from \"@/lib/demo-store-remote\";\nimport { uuidv4 } from \"@/lib/uuid\";\nimport NameFields from \"@/components/inputs/NameFields\";\nimport PhoneInput from \"@/components/inputs/PhoneInput\";\nimport PostalInput from \"@/components/inputs/PostalInput\";\nimport LicenceInput from \"@/components/inputs/LicenceInput\";\nimport StatusWizard from \"@/components/inputs/StatusWizard\";\nimport LicenseClassSelect from \"@/components/inputs/LicenseClassSelect\";\nimport CountrySelect from \"@/components/inputs/CountrySelect\";\nimport PassportInput from \"@/components/inputs/PassportInput\";\nimport AddressCountrySelect from \"@/components/inputs/AddressCountrySelect\";\nimport RegionSelect from \"@/components/inputs/RegionSelect\";\nimport { hashPin } from \"@/lib/security\"; // simple bcrypt/sha256 helper\n\nexport default function RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    watch,\n    setValue,\n  } = useForm<RegisterValues>({\n    resolver: zodResolver(RegisterSchema) as unknown as Resolver<RegisterValues>,\n    defaultValues: {\n      englishLevel: \"Conversational\",\n      phoneCountry: \"CA\",\n      citizenship: \"Canadian Citizen\",\n      residencyCA: \"Citizen\",\n      consentDate: new Date().toISOString().slice(0, 10),\n      certifyAccurate: false,\n      otherLanguages: [],\n    },\n  });\n\n  const { fields: work, append: addWork, remove: removeWork } = useFieldArray({\n    control,\n    name: \"work\",\n  });\n\n  const [submitting, setSubmitting] = useState(false);\n  const [qrPng, setQrPng] = useState<string | null>(null);\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n  const [qrid, setQrid] = useState<string | null>(null);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [errorSummary, setErrorSummary] = useState<string[] | null>(null);\n  const citizenship = watch(\"citizenship\");\n  const residency = watch(\"residencyCA\");\n  const passportCountry = watch(\"passportCountry\");\n  const needPassport = citizenship !== \"Canadian Citizen\";\n  const needPermit = residency === \"Work Permit\" || residency === \"Study Permit\";\n  const needPR = residency === \"Permanent Resident\";\n\n  const fullName = [watch(\"givenName\") || \"\", watch(\"middleName\") || \"\", watch(\"surname\") || \"\"]\n    .filter(Boolean)\n    .join(\" \");\n\n  async function onSubmit(values: RegisterValues) {\n    setSubmitting(true);\n    try {\n      setSubmitError(null);\n      setErrorSummary(null);\n      const storeReady = normalizeForStorage(values);\n\n      const id = uuidv4();\n      setQrid(id);\n\n      const payload = buildQrPayload({ qrid: id, origin: window.location.origin });\n      const png = await makeQrPng(payload);\n      setQrPng(png);\n\n      const snap: DriverSnapshot = {\n          qrid: id,\n          pinHash: hashPin(values.personalPin), // securely store\n\n          name: [storeReady.givenName, storeReady.middleName, storeReady.surname]\n            .filter(Boolean)\n            .join(\" \"),\n          dob: storeReady.dob,\n          citizenship: storeReady.citizenship,\n          residencyCA: storeReady.residencyCA,\n\n          jurisdiction: storeReady.jurisdiction,\n          licenseNo: storeReady.licenseNo,\n          licenseClass: storeReady.licenseClass,\n          licenseExpiry: storeReady.licenseExpiry,\n\n          email: storeReady.email,\n          phone: storeReady.phone,\n\n          postal: storeReady.postal,\n          country: storeReady.addressCountry,\n          region: storeReady.region,\n          city: storeReady.city,\n          address1: storeReady.address1,\n          address2: storeReady.address2,\n\n          prNumber: storeReady.prNumber,\n          permitType: storeReady.permitType,\n          uci: storeReady.uci,\n          permitExpiry: storeReady.permitExpiry,\n\n          passportCountry: storeReady.passportCountry,\n          passportNumber: storeReady.passportNumber,\n\n          englishLevel: storeReady.englishLevel,\n          otherLanguages: storeReady.otherLanguages,\n\n          issuedAt: new Date().toISOString(),\n        };\n\n        await saveSnapshotRemote(snap);\n\n      const doc = <DriverCardPDF name={snap.name} qrPng={png} />;\n      const blob = await pdf(doc).toBlob();\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    } catch (e) {\n      const msg = e instanceof Error ? e.message : String(e);\n      setSubmitError(msg);\n      if (typeof window !== \"undefined\")\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  function onInvalid(errs: import(\"react-hook-form\").FieldErrors<RegisterValues>) {\n    const msgs: string[] = [];\n    const pushMsg = (v: unknown) => {\n      if (!v) return;\n      if (typeof v === \"string\") msgs.push(v);\n    };\n    const order: Array<keyof RegisterValues> = [\n      \"givenName\",\"surname\",\"jurisdiction\",\"licenseNo\",\"licenseClass\",\"licenseExpiry\",\"dob\",\"email\",\"phone\",\"postal\",\"citizenship\",\"residencyCA\",\"prNumber\",\"permitType\",\"uci\",\"passportCountry\",\"passportNumber\",\"docLicenseFront\",\"docLicenseBack\",\"docHealthCard\",\"docPR\",\"docPassport\",\"docPermit\",\"consentName\",\"consentDate\",\"consentAbstract\",\"certifyAccurate\",\n    ];\n    for (const k of order) {\n      const issue = (errs as Record<string, any>)[k]?.message as string | undefined;\n      if (issue) pushMsg(issue);\n    }\n    setErrorSummary(msgs.length ? msgs : [\"Please review the highlighted fields.\"]);\n    const firstKey = order.find((k) => Boolean((errs as Record<string, unknown>)[k]));\n    if (firstKey) {\n      const el = document.querySelector(`[name=\"${String(firstKey)}\"]`) as HTMLElement | null;\n      if (el && typeof el.scrollIntoView === \"function\")\n        el.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      if (el && typeof el.focus === \"function\") el.focus();\n    }\n  }\n\n  function safeFileName(base: string) {\n    return base.replace(/[^a-z0-9-_]+/gi, \"_\").slice(0, 40) || \"card\";\n  }\n\n  type FileKeys =\n  | \"docLicenseFront\"\n  | \"docLicenseBack\"\n  | \"docHealthCard\"\n  | \"docPassport\"\n  | \"docPR\"\n  | \"docPermit\";\n\n  // helper to set File fields without tripping RHF generics\n  function setFile(key: FileKeys, f: File | null) {\n    setValue(key as any, (f ?? undefined) as any, { shouldValidate: true });\n  }\n\n  return (\n    <main className=\"mx-auto max-w-3xl px-4 py-8\">\n      <div className=\"mb-6 rounded border border-emerald-200 bg-emerald-50 px-3 py-2 text-sm text-emerald-900\">\n        Secure submission • QR contains only a random ID • Minimal non-PII metadata is stored temporarily for the verification demo\n      </div>\n\n      <h1 className=\"mb-4 text-2xl font-semibold text-slate-900\">Driver Registration</h1>\n\n      {submitError && (\n        <div className=\"mb-4 rounded border border-amber-300 bg-amber-50 px-3 py-2 text-sm text-amber-900\">\n          {submitError}\n        </div>\n      )}\n      {errorSummary && (\n        <div className=\"mb-4 rounded border border-rose-300 bg-rose-50 px-3 py-2 text-sm text-rose-900\">\n          <p className=\"font-medium\">Please fix the following:</p>\n          <ul className=\"list-inside list-disc\">\n            {errorSummary.slice(0, 6).map((m, i) => (\n              <li key={i}>{m}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <form onSubmit={handleSubmit(onSubmit, onInvalid)} className=\"space-y-10\">\n        {/* Identity & Licence */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Identity & Licence</h2>\n          <NameFields register={register} setValue={setValue} errors={errors} />\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Field label=\"Issuing jurisdiction\" err={errors.jurisdiction?.message}>\n              <select\n                {...register(\"jurisdiction\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              >\n                <option value=\"\">Select</option>\n                <option>CA-MB</option>\n                <option>CA-ON</option>\n                <option>CA-AB</option>\n                <option>CA-BC</option>\n                <option>CA-SK</option>\n                <option>CA-QC</option>\n                <option>CA-NB</option>\n                <option>CA-NL</option>\n                <option>CA-NS</option>\n                <option>CA-PE</option>\n                <option>CA-YT</option>\n                <option>CA-NT</option>\n                <option>CA-NU</option>\n              </select>\n            </Field>\n            <LicenseClassSelect\n              register={register}\n              setValue={setValue}\n              watch={watch}\n              errors={errors}\n            />\n            <Field label=\"Licence expiry\" err={errors.licenseExpiry?.message}>\n              <input\n                type=\"date\"\n                {...register(\"licenseExpiry\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                min={new Date().toISOString().slice(0, 10)}\n                max=\"2099-12-31\"\n              />\n            </Field>\n            <Field label=\"Date of birth\" err={errors.dob?.message}>\n              <input\n                type=\"date\"\n                {...register(\"dob\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                max={new Date(new Date().setFullYear(new Date().getFullYear() - 16))\n                  .toISOString()\n                  .slice(0, 10)}\n              />\n            </Field>\n          </div>\n          <LicenceInput\n            register={register}\n            setValue={setValue}\n            watch={watch}\n            errors={errors}\n          />\n        </section>\n\n        {/* Contact */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Contact</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Field label=\"Email\" err={errors.email?.message}>\n              <input\n                type=\"email\"\n                {...register(\"email\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n            <PhoneInput\n              register={register}\n              setValue={setValue}\n              watch={watch}\n              errors={errors}\n            />\n          </div>\n        </section>\n\n        {/* Address */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Address</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <PostalInput register={register} setValue={setValue} errors={errors} />\n            {/* Country (CA/US only) */}\n            <AddressCountrySelect\n              register={register}\n              setValue={setValue}\n              watch={watch}\n              errors={errors}\n              label=\"Country\"\n            />\n            {/* Region/Province/State (driven by country) */}\n            <RegionSelect register={register} setValue={setValue} watch={watch} errors={errors} />\n\n            <Field label=\"City\">\n              <input {...register(\"city\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n            <Field label=\"Address line 1\">\n              <input {...register(\"address1\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n            <Field label=\"Address line 2\">\n              <input {...register(\"address2\")} className=\"mt-1 w-full rounded border border-slate-300 p-2\" />\n            </Field>\n          </div>\n        </section>\n        <StatusWizard\n          register={register}\n          watch={watch}\n          setValue={setValue}\n          errors={errors}\n        />\n\n        {/* Permit details (shown for Work/Study permits) */}\n        {needPermit && (\n          <section className=\"space-y-3\">\n            <h3 className=\"font-medium\">Permit details</h3>\n            <div className=\"grid gap-4 sm:grid-cols-3\">\n              {/* Permit type — only for Work Permit */}\n              {residency === \"Work Permit\" && (\n                <Field label=\"Permit type\" err={errors.permitType?.message}>\n                  <select\n                    {...register(\"permitType\")}\n                    className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                    defaultValue=\"\"\n                  >\n                    <option value=\"\" disabled>\n                      Select type\n                    </option>\n                    <option value=\"Closed (employer-specific)\">Closed (employer-specific)</option>\n                    <option value=\"Open work permit\">Open work permit</option>\n                    <option value=\"PGWP\">Post-Graduation Work Permit (PGWP)</option>\n                    <option value=\"IEC\">IEC (Working Holiday, YP, Co-op)</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </Field>\n              )}\n\n              {/* UCI number */}\n              <Field label=\"UCI number\" err={errors.uci?.message}>\n                <input\n                  {...register(\"uci\")}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2 font-mono tracking-wider\"\n                  placeholder=\"0000-0000 or 0000-0000-00\"\n                  inputMode=\"numeric\"\n                  onChange={(e) => {\n                    const digits = e.target.value.replace(/\\D/g, \"\").slice(0, 10);\n                    let pretty = digits;\n                    if (digits.length > 8) {\n                      pretty = `${digits.slice(0, 4)}-${digits.slice(4, 8)}-${digits.slice(8)}`;\n                    } else if (digits.length > 4) {\n                      pretty = `${digits.slice(0, 4)}-${digits.slice(4)}`;\n                    }\n                    e.target.value = pretty;\n                    setValue(\"uci\", pretty, { shouldValidate: true });\n                  }}\n                />\n                <p className=\"text-xs text-slate-500\">\n                  8 or 10 digits (hyphens allowed). Example: 1234-5678 or 1234-5678-90\n                </p>\n              </Field>\n\n              {/* Permit expiry */}\n              <Field label=\"Permit expiry\" err={errors.permitExpiry?.message}>\n                <input\n                  type=\"date\"\n                  {...register(\"permitExpiry\")}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                  min={new Date().toISOString().slice(0, 10)}\n                  max=\"2099-12-31\"\n                />\n              </Field>\n            </div>\n          </section>\n        )}\n\n        {/* PR card number */}\n        {needPR && (\n          <section className=\"space-y-3\">\n            <h3 className=\"font-medium\">Permanent Resident</h3>\n            <div className=\"grid gap-4 sm:grid-cols-2\">\n              <Field\n                label=\"PR card number (Document No.)\"\n                err={errors.prNumber?.message}\n              >\n                <input\n                  {...register(\"prNumber\")}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2 tracking-wider\"\n                  placeholder=\"AB12345678\"\n                />\n              </Field>\n            </div>\n          </section>\n        )}\n\n        {/* Passport (non-CA citizens) */}\n        {needPassport && (\n          <section className=\"space-y-3\">\n            <h3 className=\"font-medium\">Passport</h3>\n            <div className=\"grid gap-4 sm:grid-cols-3\">\n              <CountrySelect\n                name=\"passportCountry\"\n                label=\"Passport country\"\n                register={register}\n                setValue={setValue}\n                errors={errors}\n                searchable={false}\n              />\n              <PassportInput\n                countryCode={passportCountry}\n                register={register}\n                setValue={setValue}\n                errors={errors}\n              />\n              {/* Uncomment if you later decide to keep expiry */}\n              {/* <Field label=\"Passport expiry\" err={errors.passportExpiry?.message}>\n                <input\n                  type=\"date\"\n                  {...register(\"passportExpiry\")}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                />\n              </Field> */}\n            </div>\n          </section>\n        )}\n\n        {/* Languages */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Languages</h2>\n          <div className=\"grid gap-4 sm:grid-cols-2 items-end\">\n            <div>\n              <span className=\"block text-sm text-slate-700\">English</span>\n              <input\n                value=\"English\"\n                readOnly\n                className=\"mt-1 w-full rounded border border-slate-200 bg-slate-50 p-2 text-slate-700\"\n              />\n            </div>\n            <Field label=\"Level (required)\" err={errors.englishLevel?.message}>\n              <select\n                {...register(\"englishLevel\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                defaultValue=\"\"\n              >\n                <option>Basic</option>\n                <option>Conversational</option>\n                <option>Fluent</option>\n                <option>Native</option>\n              </select>\n            </Field>\n          </div>\n          <OtherLanguagesRows\n            value={watch(\"otherLanguages\") || []}\n            onChange={(rows) =>\n              setValue(\"otherLanguages\", rows as any, { shouldValidate: true })\n            }\n          />\n        </section>\n\n        {/* Work Experience */}\n        <section className=\"space-y-3\">\n          <h2 className=\"text-lg font-medium\">Work Experience (last 3 years)</h2>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-slate-700\">Add up to 10 entries</span>\n            <button\n              type=\"button\"\n              onClick={() => addWork({ company: \"\", role: \"\", start: \"\", end: \"\" })}\n              className=\"text-sm underline\"\n            >\n              Add\n            </button>\n          </div>\n          {work.map((w, idx) => (\n            <div key={w.id} className=\"grid gap-3 sm:grid-cols-5 items-end\">\n              <Field label=\"Company\" err={(errors.work?.[idx] as any)?.company?.message}>\n                <input\n                  {...register(`work.${idx}.company` as const)}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                />\n              </Field>\n\n              <Field label=\"Role\" err={(errors.work?.[idx] as any)?.role?.message}>\n                <input\n                  {...register(`work.${idx}.role` as const)}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                />\n              </Field>\n\n              <Field label=\"From\" err={(errors.work?.[idx] as any)?.start?.message}>\n                <input\n                  type=\"date\"\n                  {...register(`work.${idx}.start` as const)}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                />\n              </Field>\n\n              <Field label=\"To\" err={(errors.work?.[idx] as any)?.end?.message}>\n                <input\n                  type=\"date\"\n                  {...register(`work.${idx}.end` as const)}\n                  className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n                />\n              </Field>\n\n              <div className=\"flex items-end\">\n                <button\n                  type=\"button\"\n                  className=\"ml-auto rounded border px-3 py-2 text-sm hover:bg-slate-50\"\n                  onClick={() => removeWork(idx)}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </section>\n\n        {/* Documents */}\n        <section className=\"space-y-4\">\n          <h2 className=\"text-lg font-medium\">Documents</h2>\n\n          {/* Licence always required */}\n          <DocUploadField\n            label=\"Licence - front\"\n            required\n            value={(watch(\"docLicenseFront\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docLicenseFront\", f)}\n          />\n          <DocUploadField\n            label=\"Licence - back\"\n            required\n            value={(watch(\"docLicenseBack\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docLicenseBack\", f)}\n          />\n\n          {/* Health card always required */}\n          <DocUploadField\n            label=\"Health card\"\n            required\n            value={(watch(\"docHealthCard\") as File | undefined) ?? null}\n            onChange={(f) => setFile(\"docHealthCard\", f)}\n          />\n\n          {/* PR Card — only if residency is PR */}\n          {needPR && (\n            <DocUploadField\n              label=\"PR Card\"\n              required\n              value={(watch(\"docPR\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPR\", f)}\n            />\n          )}\n\n          {/* Passport — required if citizenship is Canadian Citizen OR Non-Citizen */}\n          {(citizenship === \"Canadian Citizen\" || needPassport) && (\n            <DocUploadField\n              label=\"Passport\"\n              required\n              value={(watch(\"docPassport\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPassport\", f)}\n            />\n          )}\n\n          {/* Work/Study Permit */}\n          {needPermit && (\n            <DocUploadField\n              label=\"Work/Study Permit\"\n              required\n              value={(watch(\"docPermit\") as File | undefined) ?? null}\n              onChange={(f) => setFile(\"docPermit\", f)}\n            />\n          )}\n\n          <p className=\"text-xs text-slate-500\">\n            Accepted: JPG/PNG • Max 4 MB each.\n          </p>\n        </section>\n\n        {/* Consent */}\n        <section className=\"space-y-2\">\n          <h2 className=\"text-lg font-medium\">Consent</h2>\n          <label className=\"flex items-start gap-2 text-sm text-slate-800\">\n            <input type=\"checkbox\" {...register(\"consentAbstract\")} className=\"mt-1\" />\n            I authorise [ORG] to request my driver abstract from the issuing authority.\n          </label>\n          <div className=\"grid gap-4 sm:grid-cols-3\">\n            <Field label=\"Type your name to sign\" err={errors.consentName?.message}>\n              <input\n                {...register(\"consentName\")}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n            <Field label=\"Date\" err={errors.consentDate?.message}>\n              <input\n                type=\"date\"\n                {...register(\"consentDate\")}\n                defaultValue={new Date().toISOString().slice(0, 10)}\n                className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n              />\n            </Field>\n          </div>\n          <label className=\"flex items-start gap-2 text-sm text-slate-800\">\n            <input type=\"checkbox\" {...register(\"certifyAccurate\")} className=\"mt-1\" />\n            I certify the information provided is accurate.\n          </label>\n          {errors.consentAbstract?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.consentAbstract.message)}</p>\n          )}\n          {errors.certifyAccurate?.message && (\n            <p className=\"text-xs text-rose-600\">{String(errors.certifyAccurate.message)}</p>\n          )}\n        </section>\n\n        {/* Submit */}\n        <div className=\"flex items-center gap-3 pt-2\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-emerald-600 px-4 py-2 text-white hover:bg-emerald-700 disabled:opacity-50\"\n            disabled={submitting}\n          >\n            {submitting ? \"Generating…\" : \"Submit & Generate QR\"}\n          </button>\n          <span className=\"text-sm text-slate-500\">\n            Data stays on your device for this demo. No upload occurs.\n          </span>\n        </div>\n      </form>\n\n      {/* Result */}\n      {qrPng && pdfUrl && (\n        <section className=\"mt-10 rounded border border-slate-200 p-4\">\n          <h3 className=\"mb-2 text-base font-medium\">Your QR & Card</h3>\n          <div className=\"flex items-center gap-6\">\n            <Image\n              src={qrPng}\n              alt=\"QR code\"\n              width={160}\n              height={160}\n              className=\"h-40 w-40 border border-slate-200\"\n            />\n            <div className=\"space-y-2\">\n              <a\n                href={pdfUrl}\n                download={`driver-card-${safeFileName(fullName || (qrid?.slice(0, 8) ?? \"card\"))}.pdf`}\n                className=\"inline-flex rounded bg-slate-900 px-4 py-2 text-white hover:bg-slate-800\"\n              >\n                Download Card (PDF)\n              </a>\n              <p className=\"text-sm text-slate-600\">\n                Card shows only your name and this QR. The QR contains only a random ID (no personal data). \n                A minimal non-PII snapshot is stored temporarily to enable verification.\n              </p>\n            </div>\n          </div>\n        </section>\n      )}\n    </main>\n  );\n}\n\nfunction Field({ label, err, children }: { label: string; err?: string; children: React.ReactNode }) {\n  return (\n    <label className=\"block\">\n      <span className=\"block text-sm text-slate-700\">{label}</span>\n      {children}\n      {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n    </label>\n  );\n}\n\ntype LangLevel = \"Basic\" | \"Conversational\" | \"Fluent\" | \"Native\";\ntype Row = { language: string; level: LangLevel };\n\nfunction OtherLanguagesRows({\n  value,\n  onChange,\n}: {\n  value: Row[];\n  onChange: (rows: Row[]) => void;\n}) {\n  const rows: Row[] = value ?? [];\n\n  function add() {\n    onChange([...(rows || []), { language: \"\", level: \"Conversational\" }]);\n  }\n\n  function remove(idx: number) {\n    const next = [...rows] as Row[];\n    next.splice(idx, 1);\n    onChange(next);\n  }\n\n  function setRow(idx: number, patch: Partial<Row>) {\n    const next = [...rows] as Row[];\n    next[idx] = { ...next[idx], ...patch } as Row;\n    onChange(next);\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      {rows.map((row, idx) => (\n        <div key={idx} className=\"grid gap-3 sm:grid-cols-3 items-end\">\n          <Field label=\"Other language\">\n            <select\n              value={row.language}\n              onChange={(e) => setRow(idx, { language: e.target.value })}\n              className=\"mt-1 w-full rounded border border-slate-200 bg-slate-50 p-2 text-slate-700\"\n            >\n              <option value=\"\">Select language</option>\n              {[\n                \"Arabic\",\"Bengali\",\"Chinese (Cantonese)\",\"Chinese (Mandarin)\",\"Dutch\",\"English\",\"Farsi\",\"French\",\"German\",\n                \"Gujarati\",\"Hebrew\",\"Hindi\",\"Italian\",\"Japanese\",\"Korean\",\"Malay\",\"Marathi\",\"Panjabi (Punjabi)\",\"Polish\",\n                \"Portuguese\",\"Punjabi\",\"Russian\",\"Spanish\",\"Tagalog\",\"Tamil\",\"Telugu\",\"Thai\",\"Turkish\",\"Ukrainian\",\"Urdu\",\"Vietnamese\",\n              ].map((l) => (\n                <option key={l} value={l}>\n                  {l}\n                </option>\n              ))}\n            </select>\n          </Field>\n          <Field label=\"Level\">\n            <select\n              value={row.level}\n              onChange={(e) =>\n                setRow(idx, { level: e.target.value as LangLevel })\n              }\n              className=\"mt-1 w-full rounded border border-slate-300 p-2\"\n            >\n              <option>Basic</option>\n              <option>Conversational</option>\n              <option>Fluent</option>\n              <option>Native</option>\n            </select>\n          </Field>\n          <div className=\"flex items-end\">\n            <button\n              type=\"button\"\n              onClick={() => remove(idx)}\n              className=\"ml-auto rounded border px-3 py-2 text-sm hover:bg-slate-50\"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"flex\">\n        <button\n          type=\"button\"\n          onClick={add}\n          className=\"ml-auto inline-flex items-center gap-2 rounded bg-slate-900 px-3 py-2 text-sm text-white hover:bg-slate-800\"\n          title=\"Add another language\"\n        >\n          <span>+ Add language</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}