{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/demo-store-remote.ts"],"sourcesContent":["// lib/demo-store-remote.ts (DriverSnapshot type)\n// lib/demo-store-remote.ts\n\nexport type DriverSnapshot = {\n  qrid: string;\n  pinHash: string;\n\n  // Identity\n  name: string;\n  dob: string;\n  gender?: string;\n  citizenship: string;\n  residencyCA: string;\n\n  // Licence\n  jurisdiction: string;\n  licenseNo: string;\n  licenseClass: string;\n  licenseExpiry: string;\n\n  // Contact\n  email: string;\n  phone: string;\n\n  // Address\n  postal?: string;\n  country?: string;\n  region?: string;\n  city?: string;\n  address1?: string;\n  address2?: string;\n\n  // Status\n  prNumber?: string;\n  permitType?: string;\n  uci?: string;\n  permitExpiry?: string;\n\n  // Passport\n  passportCountry?: string;\n  passportNumber?: string;\n\n  // Languages\n  englishLevel: string;\n  otherLanguages?: { language: string; level: string }[];\n\n  // Work experience\n  work?: { company: string; role: string; start: string; end: string }[];\n\n  // Consents\n  consentName: string;\n  consentDate: string;\n  consentAbstract: boolean;\n  certifyAccurate: boolean;\n\n  // Metadata\n  issuedAt: string;\n};\n\n\n\nexport async function saveSnapshotRemote(s: DriverSnapshot): Promise<void> {\n  const res = await fetch(\"/api/demo/snapshots\", {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(s),\n    cache: \"no-store\",\n  });\n  if (!res.ok) {\n    const j: unknown = await res.json().catch(() => null as unknown);\n    const msg = getErrorMessage(j) ?? `Failed to save snapshot (${res.status})`;\n    throw new Error(msg);\n  }\n}\n\nexport async function loadSnapshotRemote(qrid: string): Promise<DriverSnapshot | null> {\n  const res = await fetch(`/api/demo/snapshots/${encodeURIComponent(qrid)}`, {\n    method: \"GET\",\n    cache: \"no-store\",\n  });\n  if (res.status === 404) return null;\n  if (!res.ok) throw new Error(`Fetch failed (${res.status})`);\n  return (await res.json()) as DriverSnapshot;\n}\n\nfunction getErrorMessage(x: unknown): string | null {\n  if (!x || typeof x !== \"object\") return null;\n  const rec = x as Record<string, unknown>;\n  const e = rec[\"error\"];\n  return typeof e === \"string\" ? e : null;\n}\n"],"names":[],"mappings":"AAAA,iDAAiD;AACjD,2BAA2B;;;;;;;AA4DpB,eAAe,mBAAmB,CAAiB;IACxD,MAAM,MAAM,MAAM,MAAM,uBAAuB;QAC7C,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;QACrB,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAa,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAChD,MAAM,MAAM,gBAAgB,MAAM,CAAC,yBAAyB,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;QAC3E,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,mBAAmB,IAAY;IACnD,MAAM,MAAM,MAAM,MAAM,CAAC,oBAAoB,EAAE,mBAAmB,OAAO,EAAE;QACzE,QAAQ;QACR,OAAO;IACT;IACA,IAAI,IAAI,MAAM,KAAK,KAAK,OAAO;IAC/B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;IAC3D,OAAQ,MAAM,IAAI,IAAI;AACxB;AAEA,SAAS,gBAAgB,CAAU;IACjC,IAAI,CAAC,KAAK,OAAO,MAAM,UAAU,OAAO;IACxC,MAAM,MAAM;IACZ,MAAM,IAAI,GAAG,CAAC,QAAQ;IACtB,OAAO,OAAO,MAAM,WAAW,IAAI;AACrC","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/lib/security.ts"],"sourcesContent":["// lib/security.ts\nimport { createHash } from \"crypto\";\n\n/**\n * Hashes a PIN securely using SHA-256.\n * (For real production, use bcrypt or argon2 with salt.)\n */\nexport function hashPin(pin: string): string {\n  if (!pin) return \"\";\n  return createHash(\"sha256\").update(pin).digest(\"hex\");\n}\n\n/**\n * Verify a PIN against stored hash.\n */\nexport function verifyPin(pin: string, hash: string): boolean {\n  return hashPin(pin) === hash;\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;AAClB;;AAMO,SAAS,QAAQ,GAAW;IACjC,IAAI,CAAC,KAAK,OAAO;IACjB,OAAO,IAAA,mHAAU,EAAC,UAAU,MAAM,CAAC,KAAK,MAAM,CAAC;AACjD;AAKO,SAAS,UAAU,GAAW,EAAE,IAAY;IACjD,OAAO,QAAQ,SAAS;AAC1B","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/dvskrishna/Business/innovyom/Unify_Trucking_DB/unify_trucking_db/app/v/%5Bqrid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { loadSnapshotRemote } from \"@/lib/demo-store-remote\";\nimport { verifyPin } from \"@/lib/security\"; // compares plain pin to hashed\n\ntype Stage = \"auth\" | \"view\" | \"expired\" | \"full\";\n\nexport default function VerifyPage({ params }: { params: { qrid: string } }) {\n  const qrid = params.qrid;\n  const [stage, setStage] = useState<Stage>(\"auth\");\n  const [orgId, setOrgId] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [err, setErr] = useState<string | null>(null);\n  const [snap, setSnap] = useState<Awaited<ReturnType<typeof loadSnapshotRemote>> | null>(null);\n  const [seconds, setSeconds] = useState(90);\n  const [driverPin, setDriverPin] = useState(\"\");\n  const [driverErr, setDriverErr] = useState<string | null>(null);\n\n  function verifyCreds(id: string, p: string) {\n    return id.trim().toLowerCase() === \"demo\" && p.trim() === \"demo\";\n  }\n\n  async function handleAuth(e: React.FormEvent) {\n    e.preventDefault();\n    setErr(null);\n    if (!verifyCreds(orgId, pass)) {\n      setErr(\"Invalid credentials. (Use demo/demo for this MVP.)\");\n      return;\n    }\n    const s = await loadSnapshotRemote(qrid);\n    if (!s) {\n      setErr(\"No record found for this QR in the demo store.\");\n      return;\n    }\n    setSnap(s);\n    setStage(\"view\");\n    setSeconds(90);\n  }\n\n  // 90-second timer\n  useEffect(() => {\n    if (stage !== \"view\" && stage !== \"full\") return;\n    const t = setInterval(() => {\n      setSeconds((s) => {\n        if (s <= 1) {\n          clearInterval(t);\n          setStage(\"expired\");\n          return 0;\n        }\n        return s - 1;\n      });\n    }, 1000);\n    return () => clearInterval(t);\n  }, [stage]);\n\n  const mmss = useMemo(() => {\n    const m = Math.floor(seconds / 60).toString().padStart(2, \"0\");\n    const s = (seconds % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  }, [seconds]);\n\n  return (\n    <main className=\"mx-auto max-w-xl px-4 py-8 select-none\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-2xl font-semibold text-slate-900\">Verifier Portal</h1>\n        <p className=\"text-slate-600\">\n          Scanned QR: <span className=\"font-mono\">{qrid.slice(0, 8)}â€¦</span>\n        </p>\n      </header>\n\n      {/* --- Organisation Auth --- */}\n      {stage === \"auth\" && (\n        <form onSubmit={handleAuth} className=\"space-y-4 rounded border border-slate-200 p-4\">\n          <p className=\"text-sm text-slate-600\">\n            Enter organisation credentials. <b>Demo:</b> ID <code>demo</code>, pass <code>demo</code>.\n          </p>\n          <label className=\"block\">\n            <span className=\"block text-sm\">Organisation ID</span>\n            <input value={orgId} onChange={(e) => setOrgId(e.target.value)} className=\"mt-1 w-full rounded border p-2\" />\n          </label>\n          <label className=\"block\">\n            <span className=\"block text-sm\">Password</span>\n            <input type=\"password\" value={pass} onChange={(e) => setPass(e.target.value)} className=\"mt-1 w-full rounded border p-2\" />\n          </label>\n          {err && <p className=\"text-xs text-rose-600\">{err}</p>}\n          <button className=\"rounded bg-slate-900 px-4 py-2 text-white\">Authenticate</button>\n        </form>\n      )}\n\n      {/* --- Basic View --- */}\n      {stage === \"view\" && snap && (\n        <div className=\"rounded border p-4 bg-white shadow\">\n          <div className=\"mb-3 flex justify-between\">\n            <h2 className=\"text-lg font-semibold\">Driver snapshot</h2>\n            <span className=\"text-sm text-emerald-700\">Expires in {mmss}</span>\n          </div>\n          <dl className=\"grid grid-cols-1 gap-3 sm:grid-cols-2\">\n            <KV k=\"Name\" v={snap.name} />\n            <KV k=\"Jurisdiction\" v={snap.jurisdiction} />\n            <KV k=\"Licence #\" v={snap.licenseNo} />\n            <KV k=\"Class\" v={snap.licenseClass} />\n            <KV k=\"Expiry\" v={snap.licenseExpiry} />\n            <KV k=\"QR Issued\" v={new Date(snap.issuedAt).toLocaleString()} />\n          </dl>\n\n          {/* Button to reveal full details */}\n          <div className=\"mt-4\">\n            <button\n              onClick={() => setStage(\"full\")}\n              className=\"rounded bg-emerald-600 px-4 py-2 text-white hover:bg-emerald-700\"\n            >\n              View Full Details\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* --- Full Details (with driver PIN) --- */}\n      {stage === \"full\" && snap && (\n        <div className=\"rounded border p-4 bg-white shadow\">\n          <h2 className=\"text-lg font-semibold mb-3\">Enter Driver Passcode</h2>\n          <input\n            value={driverPin}\n            onChange={(e) => setDriverPin(e.target.value.toUpperCase())}\n            className=\"mt-1 w-full rounded border p-2 font-mono text-lg tracking-widest\"\n            placeholder=\"XXXX\"\n            maxLength={4}\n          />\n          {driverErr && <p className=\"text-xs text-rose-600\">{driverErr}</p>}\n          <button\n            className=\"mt-3 rounded bg-slate-900 px-4 py-2 text-white\"\n            onClick={() => {\n              if (!verifyPin(driverPin, snap.pinHash)) {\n                setDriverErr(\"Invalid driver passcode.\");\n                return;\n              }\n              setDriverErr(null);\n              setStage(\"expired\"); // auto-expire when leaving full\n              alert(JSON.stringify(snap, null, 2)); // ðŸ”¥ replace this with a proper full detail render\n            }}\n          >\n            Verify & Show Details\n          </button>\n        </div>\n      )}\n\n      {stage === \"expired\" && (\n        <div className=\"rounded border p-4\">\n          <h2 className=\"text-lg font-semibold\">View expired</h2>\n          <p className=\"text-sm\">This snapshot is no longer available. Ask driver to re-present QR.</p>\n        </div>\n      )}\n    </main>\n  );\n}\n\nfunction KV({ k, v }: { k: string; v?: string }) {\n  return (\n    <div className=\"rounded border p-2\">\n      <div className=\"text-xs uppercase text-slate-500\">{k}</div>\n      <div className=\"font-medium text-slate-900\">{v || \"â€”\"}</div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}